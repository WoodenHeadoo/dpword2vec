singleton appropri hold singleton pattern alway anti pattern think
mvc seo php program around zillion php framework bill follow mvc pattern welcom overcom os commerc code style process logic heavili intermix sql html certain simpler easier follow approach get maintain applic design origin mvc concept target gui applic gtk python seem feasibl follow accord php web app oper live view gui element persist control runtim quit certain misnom describ use code directori group class name mvc seem use like buzzword php framework actual seen one two matur php framework admit redefin phrase anyway match interna general snake oil better terminolog use sensibl concept maintain php propag elabor reason suspect php implement follow real mvc pattern model theori model fat contain busi logic control thin handler input output realiti php framework advoc shallow model ci symfoni exampl equat model orm even http input handl control treat model view workaround ajax discount view web page php framework still pump page interfac still effect follow ordinari http model advantag non mvc applic last none widespread php framework factual output gui view instead html seen php librari oper gtk consol web framework control unsur control probabl need long run persist activ mvc model php framework context howev most request handler realli someth get argument feel slight buzzwordish would better descriptor seen acronym like pmvc hmvc thrown around though descript get ambig mayb would describ current web framework less hokey
anyon els feel iter syntax sugar must modern languag work c profession write code like time one day write bit vb6 j script end write much boilerpl get thing done anyon thought
would effect use subject observ pattern better way tbh never use observ pattern look pretti use situat develop simpl strategi game involv two combat simultan bludgeon short period time winner combat health remain end lot configur strategi combat differ piec equip chang often attack etc also plan includ outsid factor like weather affect combat could creat fight object subject keep track time notifi observ everi tick clock observ two instanc combat object one weather object seem like good idea pitfal actual type think one problem observ probabl ignor other paramet must anyon use effect design pattern someth like
logic consist way creat method form affect b common scenario object logic affect anoth object b like make note b mark b disabl usual user object system b kind busi object like custom appoint past method affect object like read well appear backward opposit read better someth put finger seem right option static intermediari domain object end becom like dt os prefer domain model approach make sens question make sens option consid actual own oper like edit second option action object system user usual end becom huge user system one pretti much affect everyth
would use mvc web form recent architect describ compani offer roll royc solut mvc need toyota web form curious find think web form vs mvc architectur choic
python mvc framework desktop applic use program python gtk use pygtk librari feel like program well separ accord mvc model think follow framework would help design better desktop applic like know python mvc framework desktop app use
notif center pattern encourag good bad program design sometim come across messag hub style ap exampl cocoa ns notif center usual ap provid global access point subscrib broadcast messag event think problem encourag flat unstructur program architectur depend explicit api hidden sourc code forc think object ownership hierarchi rather make object program result code anywher call mayb good thing pattern general encourag good bad program design make code harder easier test forgiv question vagu broad tri wrap head around potenti consequ extens use api like differ way could use edit guess biggest issu pattern api lie depend object coupl illustr exampl
orm domain design pitfal pattern seem sensibl design object orient domain translat nice onto relat databas schema standard pattern use instead
mvc applic issu manag program design program style assign find solut write reusabl code though program team follow rule would rather use mvc perform well structur program style found blueprint next work requir bunch expert thing wors part use general mvc platform need help suggest way write document mvc use design java repres much work need connect model view control part togeth
much busi logic allow exist control layer sometim busi logic repres control code applic usual logic differenti method call model argument pass anoth exampl set util function exist control may work format sanit data return model accord set busi rule work wonder flirt disast busi logic share control model two layer longer separ someon inherit code may confus uneven locat busi logic relat code question much busi logic allow control circumst
scenario implement object manag group omg data distribut servic best suit alway big fan asynchron messag pub sub implement come java background familiar use jms base messag system j boss mq hornet q activ mq open mq etc also loos follow discuss amqp recent becam awar data distribut servic specif object manag group found coupl open sourc implement open splice open dds sound like stuff focus kind high volum scenario one tend associ financi trade exchang current interest along line notif relat activ stream process think twitter facebook wonder dds server worth look could anyon practic experi technolog deep understand comment use scenario best suit stack tradit jms server amqp even stomp open wire etc edit fwiw found inform stack overflow thread complet answer anybodi els find question might also find thread use henc ad link
default object vb type singleton default object support keyword vb net kind singleton differ default object featur someth use yes implement languag like c
mvc way write php hey xmas eve someth bug yes work mind even holiday vast amount framework avail php use mvc even asp net mvc modul see attract mvc realli use frequent downsid see fire whole system execut page request depend task littl wast question profession environ way use php nowaday design method altern benefit
best practic except handl n tier applic best practic except handl n tier applic applic fat client base mvvm pattern net framework
differ static method appli singleton pattern make databas store inform user websit use stuts2 henc java ee technolog databas make db manag appli singleton pattern rather make method static use db manag basic thing like ad delet updat user profil along use queri purpos instanc find whether usernam alreadi exist get user administr purpos stuff like question benefit singleton pattern thing apt static method singleton pattern pleas compar p databas bigger talk tabl use store user inform
exampl differ architectur methodolog resourc site illustr build applic desktop web use sever differ contrast architectur mvp versus mvvm versus mvc etc would help see look side side use real world code instead compar written theori written theori often found someth describ well book go implement subtleti weak theori becom readili appar
unobtrus java script regard asp net mvc3 clear unobtrus java script avoid inject inlin java script html make html smaller less clutter make easier swap custom java script librari realli realli tri go deeper articl one explain simpler word
singleton pattern possibl duplic singleton appropri new programm month first job recent taken interest design pattern one use recent singleton howev look comment thread bad feedback somebodi explain found use place howev could probabl achiev without use static class
recommend integr di io c contain exist applic face integr invers control io c contain exist applic look recommend easili accomplish ultim goal reduc coupl therebi increas testabl although general classifi class god object mani respons hidden depend static singleton lack interfac bit background challeng need face depend inject infrequ use static method abound factori helper method singleton fair preval interfac use granular object often pull unneed depend base class intent next time need make chang particular area tri teas depend actual exist hidden behind global singleton static suppos make io c contain secondari introduct depend inject would expect set practic recommend could follow consid help us break depend
use mvvm architectur larg applic current work lob applic base mvvm architectur go answer question ask seem like mani peopl build larg complex applic mvvm hope number built anim found mvvm scale
say boss want use global variabl current month internship review code boss like kept specif object local number method across separ class within one assembl like creat new object time instead told creat singl object access anywher therefor creat static object within static class simpli refer want use would deal program profession month
mvc pattern view model locat convers work asp net mvc around year creat applic follow way x web mvc applic contain control view x lib contain data access repositori servic allow us drop lib applic requir moment use entiti framework convers entiti specif model done control set mean servic method return entiti control convers data pass view interest know move convers servic app entiti object pass around
singleton bad lot discuss late problem use overus singleton one peopl earlier career see problem yet still mani case see nice altern mani anti singleton discuss realli provid one real exampl major recent project involv applic thick client mani separ screen compon use huge amount data server state updat often data basic cach singleton manag object dread global state idea one place app keep data store sync new screen open queri need without make repetit request various support data server constant request server would take much bandwidth talk thousand dollar extra internet bill per week unaccept approach could appropri basic kind global data manag cach object object offici singleton cours conceptu make sens one nice clean altern
file extens use templat view file php build model view control framework come time decid creat use view templat layout framework use special extens file cake php use ctp heard seen tpl file though never use inc extens feel right cours could stick plaon ol php matter awesom use templat file benefit use special file extens file partial certain extens nostalgia convent alon typic project alreadi directori assum must reason differenti extens project like cake php
gradual approach depend inject work make class unit testabl use depend inject class lot client readi refactor start pass depend yet tri gradual keep default depend allow overridden test one approach conisd move new call method e g unit test subclass class overrid creat function creat fake object instead good approach disadvantag general okay hard code depend long replac test know prefer approach explicit requir constructor like get eventu wonder good first step one disadvantag occur real subclass need test reus test subclass wrote parent class creat test subclass real subclass overrid creat function
inject test object real object creat dynam want make class testabl use depend inject class creat multipl object runtim pass differ valu constructor simplifi exampl mani subclass valid best way chang inject fake object instead valid error creat abstract valid error factori inject factori instead would work seem like end creat ton littl factori factori interfac everi depend sort better way
enumer vs return read enumer modul rubi contain method follow pattern say seem return iter chain noth otherwis reason behind take approach instead return sequenc ask general reason approach necessarili use rubi
creat scalabl rapid prototyp web server design go creat web server focus scalabl rapid prototyp use java script server script languag much like node js use model view control design pattern web applic support concurr user ad hardwar redesign softwar basic aim produc framework allow fast easi develop cloud applic without need write lot boiler plate code got question hard put sql cloud could go implement make result product free write engin modifi exist one watch make scalabl need adjust one server hundr server creat requir server load balanc balanc base work load per server would need gateway handl incom request right idea server check gateway updat status server run gateway gateway die incom request ignor think server maintain list least could rebuild list server establish new gateway worth backup gateway could switch let user choos pick server handl databas handl page serv spread databas queri preform multipl server would theoret improv perform server would need mirror databas least server goe databas corrupt bring write anoth question broadcast sql queri server take bit work load way queri clog network queri preform altern final free solut alreadi might need littl modif suit need
sell io c contain pleas seen sever recommend use io c contain code motiv simpl take follow depend inject code hypothet c exampl cours agre simplifi interfac class remov depend constructor paramet think cure wors diseas coupl reason first big one make program depend extern configur file need singl binari deploy simpli cannot use kind contain second issu api weak wors string type evid hypothet exampl string argument io c contain cast result benefit use kind contain disagre recommend contain
view model one repositori bad work project mvvm view model one repositori view model one repositori bad pleas provid good bad
model control code reus blog user post comment creat comment various thing happen creat comment object associ persist send notif email post author given prefer send notif moder given prefer updat fulltext databas search could put control want reus code e g would like provid api post comment could also put model wonder lose flexibl would accept model layer would
way handl asynchron receiv call implement primit messag pass system current design receiv function async call implement async receiv function without use callback function
mvc individu element model common base class admit experi use mvc pattern limit might argu realli separ v c though keep separ vc extent manag consid scenario applic model includ number element common base class exampl enemi charact video game shape type vector graphic app view want render element cours differ subclass call differ render problem element part model render conceptu part view render depend paramet attribut state element paramet model user set paramet view support multipl platform view mode differ view may use prefer way deal put render code model class pass view paramet put render code view use switch similar select right render model element type intermedi class model view interfac model creat object demand view render someth els
explain model view control experi develop dynam websit limit most java servlet use tomcat develop various java servlet hesit say reason profici technolog well client side html css javascript front end think dynam websit think user request url queri string server receiv queri proceed output html dynam order respond queri often involv communic databas order fetch request data display basic idea behind get method java http servlet day hear newer framework django rubi rail take advantag model view control architectur read various articl explain mvc troubl realli understand benefit understand general idea separ busi logic ui logic fail see anyth realli differ normal web program web program natur forc separ busi logic back end server side program ui program client side html javascript two exist entir differ sphere program question mvc offer someth like java servlet import exact mvc differ would normal develop dynam websit use tradit approach java servlet even someth older like cgi possibl explain mvc pleas provid exampl illustr mvc appli web develop process benefici
observ mvc model instanti view control write experiment phone app learn mvc paradigm instanti model class view control class stupid ask store id model class use work initi refer later respons interfac action crash seem pointer address model class instanc chang code question
design applic around model view control mvc toolbox lot great explan model view control design pattern troubl find good resourc show use practic start new applic matter toolbox exampl suggest use uml collabor diagram use design applic around mvc although certain exact might case toolbox mvc
architectur pattern interact beyond mvc know vener model view control pattern use design interact most human user de facto standard oop environ architectur pattern interact worth mention non oop function logic etc approach welcom
anem domain model busi logic data mapper php implement rudimentari orm layer base data mapper want use full blown orm like propel doctrin anyth beyond simpl fetch save op prefer access data direct layer use sql abstract layer follow data mapper pattern endeavour keep persist oper mapper includ locat relat entiti entiti access mapper although tri call mapper logic entiti interfac although would simpl enough result read articl regard concept anem domain model e model contain busi logic demonstr sort busi logic ideal suit domain model howev acquir relat data item common exampl therefor want ask question persist logic appropri domain model object rather logic goe entiti class persist relat handl push mapper
could singleton type replac static method class possibl duplic differ static method appli singleton pattern c static method long serv purpos allow us call without instanti class later year becam awar problem use static method class use interfac use inherit hard test make mock stub better way obvious need abl access librari method without instanti class time otherwis code would becom pretti clutter one possibl solut use new keyword old concept singleton singleton global instanc class sinc instanc use would normal class order make use nice practic need syntact sugar howev say math class would type singleton instead actual class actual class contain default method math singleton default math implement interfac math singleton would declar want substitut class math oper could make new class math inherit default math could inherit interfac math creat whole new class make class activ math class simpl assign voil next time call math floor call method note normal singleton write someth like math instanc floor compil elimin need instanc properti anoth idea would abl defin singleton lazi get instanti first call like think would better solut static method class problem approach addendum point rais one main benefit static method method stateless thus side effect free extent concurr point view wholeheart agre valid point howev mix two differ issu problem one make method invok global access without explicit creat instanc method stateless second problem could solv method someth like stateless keyword similarili static prevent call perhap even enforc side effec singleton rather static class someth like stateless class method think follow pro con pro static method class framework class could easili design overrid class would easier test use instanc instead static class mean design pattern work better thing like factori limit inherit polymorph contrast static con perhap slight wors perform bad programm everyth singleton global access instead use depend inject perhap abl access singleton method properti field avoid global variabl perhap math bad exampl imagin net string method ineffici could easili replac use method third parti class singleton method want alter slight could inherit alter method
mvc wcf ef linq thing get complic seem need know lot stuff proper develop ms web app day bad old day know better databas tabl asp net ado net construct web app use relat simpl concept day seem lot framework around help right convinc make easier better got feel pretti small minor sentiment anyon els think thing gone bit mad
abstract reduc code readabl good develop work told recent difficulti implement featur code inherit said problem code difficult follow look deeper product realis difficult see code path use mani interfac abstract layer tri understand thing began end quit difficult got think time look past project awar clean code principl found extrem difficult get around project main code navig tool would alway land interfac would take lot extra effort find concret implement someth wire plugin type architectur know develop strict turn depend inject contain reason confus path softwar much difficulti code navig exponenti increas question framework pattern introduc much overhead like worth symptom poor implement pattern guess develop look bigger pictur abstract bring project help get frustrat usual though difficult make see big pictur know fail sell need ioc di tdd develop use tool cramp code readabl far much
question regard link list java read book scjp came across follow paragraph link list order index posit like array list except element doubli link one anoth linkag give new method beyond get list interfac ad remov begin end make easi choic implement stack queue keep mind link list may iter slowli array list good choic need fast insert delet make link list iter slowli array list
piec logic need share two control keep set singl purpos function need two separ control right duplic code want get rid code part control belong servic layer would put
would choos uniti autofac look start new applic want use depend inject lot microsoft way go guy shop cours uniti way want go howev lean toward autfac speed modul featur found speed result page use autofac uniti give solid reason use uniti use autofac uniti point good direct research bring back next meet
could depend inject integr languag think bit depend inject could better integr direct c like languag come potenti solut like hear opinion use mani depend inject framework might someth overlook anyway idea abl declar properti inject use keyword object instanti properti initi constructor object initi request instanc properti type global servic similar regist handler differ type servic instanti inject properti type upsid use kind architectur imo fair flexibl easi use downsid might overhead callout singleton time initi class inject issu class get instanti frequent high perform solut much issu perhap could use kind factori instanc thought issu question better idea code
usag repositori pattern use repositori pattern applic right consol base batch process tool essenti need repositori abl random access data troubl data need read flat file access random repositori written handl code use guard claus see record access yet read simpl exampl question would bastard repositori pattern modul ran rest program read data repositori anoth modul ran afterward write data repositori anti pattern better pattern suit situat thank
cross stream databas access object independ data tier n tier architectur ad function websit perform long run process asynchron use msmq ansynch howev mean need notifi user request complet use command pattern creat interfac call notifi compos messag class messag process class simpli call give notic messag notifi object first implement email notifi difficult expect surpris discov mail messag serializ got go work new concret notifi db notifi call sp sort updat status main transact databas trip would like reus dal architectur alreadi creat notifi member model project fundament dal hierarchi look like common model dal bal detail particular n tier bear mind inherit look suggest improv wonder break rule common respons util function use mani place applic thing like access configur set pars string non busi relat function model repositori busi object folk call data transfer object collect getter setter ad smart layer busi rule intern object item name must begin alphanumer charact dal data access layer theori happen model object move databas bal busi layer encapsul busi rule govern interact object e form must least two item notifi interfac defin abstract allow method notif vari independ e email txt twitter etc messag process creat model tier independ dal tier reus code without creat circular depend anyon els dealt busi object whose purpos interact databas situat n tier architectur tell use linq sql great thank technic question design question think answer depend inject ever use
import unit test test depend understand valu autom test use wherev problem well specifi enough come good test case notic though peopl stack overflow emphas test unit depend fail see benefit mock stub avoid test depend add complex test add artifici flexibl decoupl requir product code support mock disagre anyon say promot good design write extra code introduc thing like depend inject framework otherwis ad complex codebas make thing flexibl pluggabl extens decoupl without real use case overengin good design second test depend mean critic low level code use everywher get test input whoever wrote test explicit thought found plenti bug low level function run unit test high level function without mock low level function depend ideal would found unit test low level function miss case alway happen side realli import unit test also test depend edit understand valu mock extern depend like databas network web servic etc thank anna lear motiv clarifi refer intern depend e class static function etc direct extern depend
better inject io c contain use servic locat pattern io c contain want specif one look similar uniti work want integr applic overal goal exercis transform horrend code wrote someth much testabl creat io c contain regist type understand fundament suppos accomplish goal question inject contain object need object need look use servic locat pattern realist see refer contain two three layer applic
common correct use mvvm expect multipl view correspond view model particular model consid somewhat contriv model goe someth like expect visual game known head display hud display thing like health ammo wherea avatar show weapon anim base physic state assum hud view player view draw hud player respect correct within confin mvvm view model player model ever intend expos subset inform model expect model split two well anyth miss someon point provid concret exampl correct solut even think correct might solidifi understand
evolut mvc design new ui complex desktop instrument applic mvc current version applic thus view control common code base class view react direct event sent model control messag queue link user action model notabl messag queue common two control two version ui logic simpl main react button pass paramet control next version workflow task ui get complex also want initi version still function put complex add anoth messag loop belong control view put state workflow build intellig view
output librari test benchmark data web framework write mvc framework folder full librari class self contain could rip framework use problem librari benchmark unit test display html report result wonder display html view file hard code class use view file modul longer abl use requir print view method found anoth class hard code html librari class howev class becom difficult read well make harder modifi design aspect report suggest thought
altern pattern web develop non mvc recent read blog post regard mvc fit web learn altern pattern like rmr architectur curious pattern peopl use web besid mvc also framework implement pattern pleas post link
use visitor pattern possibl engin develop small applic net think use xml save object model first thought separ model generat xml use visitor pattern class would walk object hierarchi creat xml thought extrem program method gonna need yagni principl envisag need creat anoth visitor output data way simpl app want use human readabl format save applic data use visitor pattern engin solut
pragmat basic ui pattern follow silverlight wpf context app consum exist standard web servic app ui intens ui updat frequent lot data display develop team experi level averag develop team experi silverlight amp wpf want simpl want avoid complet rewrit near futur must tri take correct path begin know use pattern easiest fastest way go implement mtvt phantasm net architect budget need pragmat solut easi implement easi understand work brows internet mvvm light well posit microsoft propos implement becom standard like asp net mvc
static class singleton mani take becom code smell project use quit lot static class usual class natur seem fit singl instanc type thing mani time use static class recent start use singleton mani take becom code smell instanc recent project lot static class authent librari asp net use static class helper class fix asp net error code use like authent class static class static singleton class bad use wrong project definit littl per instanc state associ per instanc state store http context current item like
show someon power model view control design pattern work friend project taken realiz big problem implement model view control design pattern due way project set project current split follow three section proj file visual studio model class control class busi layer logic view class visual studio let creat cyclic refer quit understandbl two three sub project mean control class relationship view class view class relationship control class result soon control display view rest control logic go view class propos merg three sub project togeth avoid cyclic refer visual studio mean creat relationship three type class model view control design paradigm requir ultim place control logic right place control take view class problem hard time convinc friend think separ boundari sub project mean safeti ever thing like put control view code model model sub project current ever refer refer control view wonder anyon could come way could realli get point across import design pattern limit would go continu put control logic view class mani thank
implement communic packag java make project packag packag communic send messag central messag queue main packag messag queue take care messag cfr provid imag packag would client publish subscrib messag queue would topic implement messag queue k topic imag packag alreadi subscrib messag packag also publish messag publish messag ad messag queue insid messag queue given time execut messag messag queue must make sure messag queue process messag correct order way could look like howev believ great design sometim refer busi wait could approach better way without use standard ap ofcours
one control per page mani page one control want advic regard mvc way thing use codeignit wonder better one control per page websit one control page let say simpl websit visit homepag login creat account contact admin would better control frontend index login account contact one control call frontend whatev action login creat account contact know better use one control situat
benefit get good methodolog one friend work near year ask need learn new thing unit test mvc multi tier architectur creat tier applic design like tier object orient program etc work decad without unit test use code behind structur program work deliv product custom high incom benefit see methodolog
mvc put action method view share directori websit built use mvc net framework c use share view partial view order display view proper bit code must resid control current logic duplic control exampl would view take error id pull record databas format view differ base error type small amount work need done data control display view share directori would control go better design creat new control tri choos design prevent control creep prior project updat current learn mvc use razor learn html action extens method go go back rewrit project would put method share control use html action format data display ever screen need
mvc fulli popul model partial fill model one haunt long mvc program think better program practic one use fulli popul model partial fill one especi know particular task go need field model object other sometim seem crimin fill list model object valu databas know go need cours partial model mean write one method dao apart one fetch everyth mean code maintain hand pull everyth db fulli popul model mean one method serv obvious go give perform overhead see orm hibern activ record rail favor trend mvc program databas like googl big tabl full model accept trend still use good old jdbc hardwar cheap develop cost realli true even app need scale hundr thousand request per hour
current evid support adopt contextu canon data model canon idea pervas softwar pattern like canon model canon schema canon data model seem come develop like mani develop often follow uncrit convent wisdom need canon model otherwis face combinatori explos mapper translat least use coupl year ago first read somewhat infam ef vote confid hypothes support pursuit canon data model includ factor would discov idea put practic found year trial error use separ model individu context canon data model might use least complex approach least cost approach one lead greater maintain extens applic endpoint use contextu model approach encourag softwar entropi canon model essay present evid kind support claim make question cdm approach long enough tri altern result softwar explod liter figur mean whole lot isol could lucki wonder serious research done practic long term effect canon model vs contextu model softwar system architectur earli ask develop architect written person experi switch cdm independ contextu model vice versa practic effect thing like product complex reliabl differ differ level e use model across singl applic vs use across system applic entir enterpris fact pleas war stori welcom specul
servic anem draw line deleg encapsul busi logic seem deleg anem becom howev deleg also promot reus dri princip appropri deleg remain domain model take follow concern exampl author domain object respons maintain access control rule edit properti deleg anoth compon servic sole respons manag access e g author servic edit object combin two perhap domain object edit properti deleg intern author servic perform actual work valid discuss relat valid maintain rule respons evalu one hand state object belong object valid state want rewrit code use evalu rule everi domain object could use inherit case object creation factori class versus factori method versus new instanc use separ factori class abl isol encapsul creation logic expens open object state factori manag domain layer separ assembl expos intern constructor use factori becom problem multipl creation pattern factori call right constructor point factori factori method class elimin issu open object intern state sinc static abl break depend inject factori interfac like separ factori class persist one could argu domain object go expos edit deleg respons perform author check anoth parti author servic save method domain object thing would allow us evalu intern state object determin oper perform without break encapsul cours requir inject repositori instanc domain object smell bit rais domain event instead allow handler perform persist oper see go rockford lhotka great discuss reason go class charg rout csla framework bit histori framework see idea busi object parallel domain object mani way tri becom adher good ddd ideal wonder collabor becom much end author servic valid factori repositori aggreg root left publish method chang state object draft publish enough consid class non anem domain object thought
depend inject method signatur use yadif yet anoth depend inject framework php zend app work handl depend achiev notabl benefit term test decoupl class howev one thing strike despit sleight hand perform use techniqu method name impart degre coupl probabl best exampl method distinct say pear mailer method name subtl form coupl could write seri proxi wrapper hide method thus promot decoupl seem bit excess balanc puriti pragmat far would go hide depend class
invers control promot anem domain model use io c contain last project end anem entiti busi logic stateless servic seen project written develop util invers control alway anem sinc anem domain model anti pattern possibl use io c rich domain good exampl open sourc project
best practic develop visual compon flex hero best practic develop visual compon flex hero like consid compon part declar part visual sub compon defin skin mxml code part event handler defin action script class load skin ctor action script class also defin skin part state bind event handler part ad function argument defin compon pure mxml listen script tag mayb attach skin skin loos mayb reus come net mayb bias code behind pattern wonder experi adob intent best practic usual implement visual compon
determin applic requir mvvm develop mobil applic window phone applic call web servic occasion send respons via web servic recent start look mvvm notic although suggest develop applic wp7 alot develop say use necessari along said applic small enough simpl enough probabl worth time henc question use mvvm possibl build larger scale applic without
organ mvc framework support modul plugin two main codebas structur seen come mvc framework problem seem organis bug goe standard mvc problem separ relat compon forum blog user etc modular mvc pick modul base system leav problem long name forum model forum forum model forum php like zend file system search use file find folder forum model like kohana mvc structur work well tri separ differ modul benefit structur miss
experienc rubi rail develop use scaffold rubi rail tutori read someth suggest experienc develop use scaffold sinc tend like write code connect mvc differ place read good idea use scaffold help stick convent other look interact code understand pretti new rubi rail mvc web applic general tri hard stick scaffold convent let guid
use good rule thumb repetit oper becom code smell read articl charl petzold suggest wonder peopl thought
correct approach pass data sever model servic account model page user upload file would like happen user upload file page control someth like follow quick attempt written question illustr question approach bad practic sinc make control depend exist th account model becom huge program next year realli want maxim qualiti framework
use control view mvc problem convinc team mate use direct refer control view develop compon spirit mvc invok decoupl natur intuit still argument get say defens normal compromis argument convinc right practic use control view could affect project long run
develop mvc web applic view model creat first build new applic scratch want implement use mvc3 tri follow general best practic close possibl howev develop one man armi make creat view first mockup screen build model control way around
system analysi begin project want develop new applic first go design uml specifi project detail definit start develop process determin chang part idea order becom popular softwar easier logic step user simpler process anyth els chang code redesign part uml start continu develop process one time sure time perfect project definit uml time take longer determin chang someth get back chang uml sometim continu project without chang uml process happen becom tire find almost best state project time limit problem question design perfect uml begin project describ best state ever swear god never ever chang uml project definit even better one write current state end anoth question chang part new idea even analyz hand best analyz world inevit order find best state mean fulli simul user experi see action
use mvc build site php sql backend current use type framework use model view control
mvc framework seem suggest creat possibl hundr aspx cshtml page avoid play around mvc3 correct wrong base exampl seen suggest pretti much page everi model action control exampl creat pretti basic manag portal aspnetdb databas model user model role model action creat user action delet user action chang user action creat role action delet role action updat role action assign user role action assign user role action assign user role action assign user role action delet user role action etc page creat user aspx cshtml delet user aspx cshtml chang user aspx cshtml creat role aspx cshtml delet role aspx cshtml updat role aspx cshtml assign user role aspx cshtml assign user role aspx cshtml assign user role aspx cshtml assign user role aspx cshtml delet user role aspx cshtml
differ factori pattern abstract factori final begun serious tri learn basic pattern late career differ stori tri get head around differ factori pattern abstract factori key differ two pattern understand factori method creat object inherit abstract factori object composit practic point view still troubl visualis exact work
use depend inject data object learn depend inject stuck someth depend inject recommend send depend class constructor wonder necessari data object sinc unit testabl one main benefit di would data object store data procedur ever unit test make di unnecessari layer complex still help show depend even data object
custom configur depend inject design small applic infrastructur librari aim simplifi develop asp net mvc base applic main goal enforc convent configur hovew still want make part configur developp lean toward follow design servic class configur part clear depend servic class overus di
soa suitabl develop busi manag peopl let suppos lead team develop need build big inform system erp human resourc softwar whatev system compos multipl busi modul system must deliv quick scalabl good evolut mainten capabl team experi soa technolog also develop standard mvc ajax applic asp net spring ext js smartclient whatev mix framework also good project manag team stakehold baffl mani technolog chang industri care thing use long function non function requir satisfi would use soa practic govern servic repositori servic identif discoveri soa infra structur element esb bpel engin wsdl base web servic would use agil disciplin develop process favorit trustworthi framework provid res tful servic simpl integr point extern system someth els
rule coupl view model view mvvm pattern given separ concern coupl view view model exampl want visibl control view databound databind flag view model first hunch would use boolean valu control visibl return true fals howev view visibl set enum choic chang properti enum use convert convert bool visibl enum proper approach tri follow idiomat mvvm
multi mvc process vs singl mvc process work fair extens mvc framework cakephp howev find would rather page driven multipl mvc one mvc reason primarili maintain dri principl cake php mvc call url call singl mvc call layout want call url process layout call multipl mvc per compon block html page compar java script compon ajax server side html render seem consist method build page block compon html view way view block could situat either server client technic disagr mvc model outsid imho mvc rock question rad framework follow principl mvc driven rather view side mvc look django rubi rail yet seem control driven lift scala appear somewhat good fit interest see other exist
model match tabl structur viewmodel match data need display databas tabl mani column want display sever page similar turbo tax style inform collect form item per page right creat model view model certain properti per view model section want creat workflow
name control method current use one control per action one problem sort encount name method control one use generic method name like get encapsul control one name method action e g index action user list action
build websit better approach mvp mvc look feedback mvp mvc pattern use framework build websit use certain degre success failur furthermor work place miser implement mvp across web desktop servic layer also seen terribl mvc implement one thing notic mvp stuff appear terribl mainten ad new featur compar mvc debacl mvp model view present view hold refer present present also react event trigger view awar view associ present updat view base request action perform model view model awar mvvm pattern design support wpf silverlight similar mvp concept view know model howev mvp
use mvp creat view anoth view link model object background use model view present design pattern along abstract factori pattern signal slot pattern applic fullfil main requir enhanc testabl lightweight gui everi action simul unit test make view total independ rest chang actual view implement without chang anyth els order code divid layer core hold model present manag interact view interfac see bellow core view interfac defin signal slot view implement view actual implement view present creat deal view use abstract factori know view interfac signal slot bind view interfac care actual implement view layer concret factori deal implement signal slot mechan implement use custom framework built upon boost function realli someth like everyth work fine problem howev problem know solv let take exampl simpl drag drop exampl two contain view contain view1 contain view2 contain view1 item view1 drag item view1 contain view1 contain view2 contain view2 must creat item view2 differ type point model object item view1 contain view2 get callback call drop action item view1 paramet call contain present b pass item view b case deal view mvp pv view suppos know anyth present model right creat item view2 item view1 know model object item view1 repres thought ad item id everi view id id core object view repres pseudo code contain presenter2 would someth like item view2 abstract widget factori creat item view2 add item view2 item view1 get core object id get much detail work problem item id like pointer pointer dangl imagin mistak delet item view1 delet core object1 item view2 core object id repres invalid core object eleg bulletproof solut even though never object c mac osx program help notic framework similar cocoa framework deal kind problem find depth inform googl someon could shed light hope question confus
mvvm pattern adopt wide real world silverlight project mvvm pattern hot word recent plan learn refactor exist project pattern experi foresight potenti risk guy realli get lot benefit mvvm pattern real world project worth refactor exist non mvvm main use code behind file mvvm pattern
use singleton correct jtree default tree model basic one tree view use singl default tree model okay use singleton tree extend j tree anoth singleton tree model extend default tree model reason avoid use singleton object
test interfac implement interfac code base would like abl mock unit test write test implement allow individu test abl overrid specif method concern rather implement everi method run quandari test implement behav test fail overrid method use method test return non valu null test implement throw unsupport oper except explicit fail test
cqrs applic command need block ui work app would dear love transit fair tradit layer architectur cqrs number reason least fo robust event log make ad coupl featur request see barrel toward trivial accomod conceptu problem around command user initi three user need sure success complet ui let anyth els everyth els fit submit request queri success later model except three command handl cqrs land separ three block command effect third servic command queri block command two stage event processor request block first stage get use block command exist three command mean whole idea appli cqrs invalid pretend block poll success ui sure must come project usual handl
mvc pattern use industri lot hype student hope move softwar industri soon seem lot hype mvc softwar pattern notic php framework often mvc non web languag master dissert c chose mvc pattern nice separ logic user interfac industri use lot main reason compet popular design
django form violat mvc start work django come year spring mvc form implement strike slight crazi familiar django form start form model class defin field spring similar start form back object spring provid taglib bind form element back object within jsp django form widget tie direct model default widget add style attribut field appli css defin complet custom widget new class goe python code seem nut first put inform view direct model second bind model specif view miss someth edit exampl code request django spring mvc
function paradigm diverg under hardwar general effici inspir question long debat fp numer advantag disadvantag like narrow scope princip effici fp modern hardwar thesi function paradigm impli immut stateless hardwar run function program state finit automata translat pure function program state hardwar represent leav littl control programm bring overhead limit use hardwar capabl right wrong question statement proven fp impli princip perform penalti modern general purpos comput architectur edit alreadi state respons comment question implement perform detail presenc absenc princip overhead run fp state automata may bring
help choos appropri pattern last one week search suitabl architectur new web applic honest web develop year back last four year work c sudden assign task search best architectur new web applic search cam across follow option model view control model view present tier archi present layer lt bll lt dal go develop target toward develop social web applic like facebook twitter etc launch web version move toward mobil edit applic use use asp net c framework post question honest experi either web develop mobil applic develop major purpos post question get hep experienc develop architect question look architectur first allow start web version allow provid mobil edit less effort less effort mean say want develop two ui layer two time one web one mobil want busi logic data access layer remain ui layer pleas help choss appropri pattern applic far read architectur pattern detail basic understand three still unabl choos appropri pattern second find pattern pleas share name
net cqrs framework n cqrs vs lokad cqrs last coupl week read watch resourc find cqrs realli like concept keen start delv deeper found major net framework cqrs tri evalu differ look implement cqrs sql db like raven db lokad seem focus window azur sure support raven extens document lot activ communiti n cqrs lot activeti support raven wonder anyon experi work two framework major differ
spring framework use start brand new project java consid use spring consid spring lot peopl tell use spring serious time tri get peopl explain exact spring never give straight answer check intro spring sourc site either realli complic realli tutori focus none give good idea use make life easier sometim peopl throw around term depend inject confus even think differ understand term mean anyway littl background app develop java back end web develop yes ton unit test facilit typic make least two version method one use instanc variabl one use variabl pass method one use instanc variabl call one suppli instanc variabl come time unit test use mockito mock object make call method use instanc variabl alway understood depend inject app pretti simpl cs perspect small project develop start most crud type oper bunch search thrown basic bunch res tful web servic plus web front end eventu mobil client think front end straight html css js j queri real plan use jsp use hibern orm jersey implement webservic alreadi start code realli eager get demo shop around see anyon want invest obvious time essenc understand spring quit learn curv plus look like necessit whole bunch xml configur typic tri avoid like plagu make life easier especi make make develop test faster will bite bullet learn spring pleas educ use spring
multi sourc search wpf app use mvvm pattern one wpf applic project requir search function differ sourc say client account case would best way go one search view search result shown list view dynam could result client account case base search view model specif view model client account case somehow set datacontext search view tri build grid dynam code behind search somehow get data back view model without search view know view model clarif search separ need combin would everi return result client account case
explain ask implement mvc project resum use mvc architectur java jsp sql henc interview posit requir experi mvc architectur face question like explain project exact interview expect know want know implement mvc exact detail tell short time span minut key featur part suppos explain someon experienc give idea project leav manag system
complet decoupl model view control java swing collect common agre upon design guidelin separ model class view control class java swing app concern view control know noth model way around like design model knowledg anyth javax swing ideal simpl api enabl driven someth primit cli loos speak engin communic gui event model hard action perform call model api model make state chang need reflect back gui listen even listen entir passiv requir model know ad listen particular problem got think involv queue file gui side default list model behind j list gui stuff choos file file system add j list model side want pull file bottom queue caus disappear j list process way fact model code alreadi written current maintain array list lt file gt expos public add file method loss get model work view control without heavi swing specif modif model new java gui program alway done batch back end program henc interest maintain strict divis model ui possibl taught
mvvm mvc want use set class wpf asp net newbi term design pattern start learn mvc hear new buzz mvvm want learn insight redesign old inventori invoic applic develop client want write window base wpf applic web base version want use set class possibl least littl modif read coupl articl follow architectur high level concept net amp discuss want move step step design realli need real life project easi step step refer mvvm mvvm super set sub set mvc pattern modern one choos window amp web version applic certain class rare need connect view case design class mvvm way prove ad labor
understand dip di io c theori month read everyth find topic yet sure got depend invers principl mean alway reli interfac implement class depend class bad depend second class detail class depend interfac absolut ok sinc kind depend mean class need someth abstract someth specif realli care way sinc p dip stand principl probabl defin way depend invers principl principl requir code entiti depend detail realli need detail realli need mean interfac simplest case also use word entiti emphas dip also applic procedur whatev els class depend inject applic di enabl entiti di enabl entiti entiti open configur behavior without chang intern basic kind inject talk class constructor inject pass requir abstract detail object moment construct setter inject clarifi requir aspect object alreadi creat definit probabl like follow depend inject process pass abstract detail entiti realli need detail realli need detail mean interfac simplest case word entiti alway use emphas di also applic procedur whatev els invers control often defin differ librari framework write program either way procedur program forth confus thing believ main idea initi action either someth whenev want procedur way wait someon ask io c way definit io c properti program execut flow anyth ask sound exact hollywood principl believ hollywood principl io c absolut idea understand
unit test primari object mvc pattern recent interview one question use mvc answer much closer mani real world system explain benefit come maintain scalabl etc convinc final told mvc use main enabl easi unit test know valid point still doubt major reason even decid write unit testcas mvc probabl choic ii mani gui system unit testcas follow mvc question unit test primari object mvc pattern edit assum might mention eas test driven develop write n unit testcas canwrit testcas model provid view exact reflect model state chang pleas correct wrong
includ html markup json respons e commerc site ad item cart like show popup window option choos imagin order pod shuffl choos color text engrav like window modal use lightbox popul ajax call two option option send data generat html markup use java script nice trim ajax request bear minimum mix data markup great need use java script render instead templat engin server side might abl clean approach bit use client side templat solut option send html markup good server side templat engin use rest render task django render lightbox java script use insert html fragment page clear leav render render engin make sens feel comfort mix data markup ajax call reason sure make feel uneasi mean way everi web page serv data plus markup right
web design know server side code implement cms base asp net mvc design abl provid theme cms write theme need abl modifi generat html thus concept view word capabl either modifi current view creat new view scratch fit requir howev sure take right path web design html css java script photoshop realli know server side platform like razor php classic asp anyth els
real benefit dao layer first start use hibern heard joy use dao layer initi made sens problem go experi hibern later experi sql xml experi made sens time go farther want say current dao layer true dao layer bunch data object back interfac control generat new object queri clean applic exit though pick spring dao layer start make less less sens sql neat realli start question worth even sure data fit sql work quit well relat databas horribl xml storag seem like hurdl cross later besid huge code would need support storag option custom control zillion spring interfac implement stuff miss prevent though rip merg core hibern dao modul project dao layer real one spring hibern mean interfac abstract class complex two framework sinc start spring hibern world hesit go other littl experi question advantag miss dao layer would project dao layer use one databas
condit use mvvm appropri model view view model develop microsoft target ui develop platform support event driven program specif window present foundat wpf silverlight net platform use xaml net languag year sinc mani javascript framework angular knockout ext js adopt pattern like softwar pattern mvvm appropri use abus condit use mvvm appropri ill advis
mvc model handl valid tri architect web applic develop use mvc pattern sure valid handl model exampl set one model like first question wonder save method call valid function new data assum data alreadi valid also offer valid think model code defin data type would look like second question everi child class object would run regist properti column databas specif object sure good way third question valid handl model return error messag error code view use code display appropri messag
get know compani post job list get helper recruit call today kept say mvc entiti framework sound shock said project use data set linq2sql win form asp net web form look option autom websit test come upon began get agit folk know use present layer make asp net thin tool like n unit asp help person know friend appar know want know know make feel insecur littl sad effort past year get time realiz great benefit linq2sql uniti contain noth good fill gap appar age move model view presenet win form gu happi reason ask long time separ thing could thick client web client share common logic common code base yet stuggl follow know zillion peopl wrong smarter mass need help see mvc evolut web form wpf evolut win form entiti framework evolut linq2sql matter deprec dataset suspect stem date lack obtain test fahrvergn gen thus ask hear answer gain use mvc web applic know gain addit sourc code artifact new dsl learn els would happen use wpf object without mvvm pattern would hurt chanc get job somewher els matter win form realli broken visual studio notic visual lag dual core ghz machin gig ram like snappi want end user experi snappi time without fail dataset old way seem quick effici succinct mani small medium size problem solv yet even silverlight feel like big pile complex plate spread around make go away intrins amount complex need confront head mayb softwar engin becom like electr engin mechan engin brain surgeri
silverlight mvvm realli need framework best way rapid develop read watch video mvvm silverlight pretti new silverlight new net interest use mvvm wpf app without know mvvm creat easili bindabl class serv layer data xaml project start done silverlight wcf back end project rather larg sever modul screen ideal would like load demand ui straight forward data entri stuff tri see architectur benefit us futur think got far mvvm also check caliburn micro understood see reactiv ui mvvm light honest like extern librari depend also realli care use name convent satisfli extern framework perfect ok bind xaml sinc good command support xaml debug sl5 think need extern framework think view model bind via xaml minim view relat code code behind perfect fine dilemma use ria servic ui bind perfect ria generat stuff convert cours bad architectur everyth bind direct complex view use model view use ria servic think yes generat code especi plain data entri stuff keep client code sync server side see model view manual code correct project probabl go wast effort want multipl xap file load demand use kind framework think keep one file may get big thank
keep mvc model loos coupl db like keep code testabl decid go depend inject strategi current mvc framework definit proven great way ensur loos coupl code testabl modular far master design pattern hard time figur good way keep model loos coupl databas connector class possibl done provid physic code along question would realli appreci logic code exampl info could point direct understand describ issu
web site set use mvc pattern without ms asp net mvc use contractor creat initi version site use mvc pattern code generat creat asp net c site custom turn us two year ago work sinc environ come littl practic mvc experi thus need grok mvc general seem everi articl tutori book find either extrem general natur specif ms asp net mvc someon help exampl tutori walk set basic site use mvc pattern without use microsoft asp net mvc better understand concept see appli real life
mvvm light communic work larg mvvm applic use mvvm light toolkit applic like web browser back forward button main view user control laid back forward button main view user control main view turn user control user control chang back forward button click main view model keep track current user control load next one depend button click user control load depend select id made first step let say main view search screen select custom next screen would address bill request etc screen share data data custom good practic store custom id main view user control load event bound command would request address bill info move button back forward button user control instead main view pass custom id messag would load next view better
domain driven design extern depend entiti problem like start domain driven design sever problem like solv start let imagin group user user want join group call group servic add user group group user method ddd group join user user look pretti good problem appear valid rule ad user extern task need start user ad group task lead entiti extern depend exampl could restrict user particip group max requir db call insid group join user method valid fact entiti depend extern servic class seem good natur proper way deal ddd
need deal situat privat method call reflect creat librari must ensur privat method must work expect call method class anoth librari reflect exampl privat method privat someth int number expect number posit non zero integ privat variabl string abc null empti string complet ugli fail two condit match must handl failur even know method class alway assign non empti valu abc call someth pass posit non zero integ method word code protect unsaf call reflect consid low qualiti code belong caller use reflect ensur call break anyth note question cover standard set librari cover code must high secur e somebodi may interest use reflect order make behav unexpect crash class correct document enough unit test sure develop break method etc
call non mvc pattern finish project thesi explain use mvc pattern build websit state advantag design way howev use mvc built websit scratch function data process display page would call term architectur exampl would one php file code function need would call standard websit architectur
rail control vs model handl file manipul post jami buck keep rail control skinni alway stuck app zip file consist xml file imag upload use creat model most xml file point imag code deal extract file zip move appropri place go control model thank
usag di io c remov occurr new keyword usag depend inject invers control contain remov occurr new keyword code word everi object depend matter simpl short live regist within io c contain inject method class need use draw line depend object get regist io c contain versus get creat line concret refer via new keyword
draw line model librari webapp increas size complex order keep class amp file structur easi access start get confus clear defin data object applic order invoic product exampl entiti object handl enforc valu pure busi logic along model handl storag object persist storag choic databas ok everyth clear separ far logic heavi object like user user log chang password everyth mean hash encrypt forth whole lot interact databas session right use authent class librari carri mention action lot job kind unclear put model librari
make model set get data valid ask question develop small custom cms solut framework develop idea model easili substitut ms eas task valid get set data that need recent got order complex custom client manag solut research bit proceed found idea new that read mvc approach model handl busi logic find hard plan approach model handl busi logic class complet type work gotten use pleas help explain idea point exampl articl etc
disadvantag use writ net custom membership provid recent post follow question may notic end answer question state look like writ implement custom membership provid way go liter minut later stumbl across question tri answer get comment back net membership provid terribl mani level admit first time use membership provid sure look slick seen anyth back terribl claim implement someth terribl hope get feedback communiti
model view control client side concurr respons web applic signific ajax compon best place client side concurr respons lie tri use mvc server applic lamp stack client applic ajax most j queri unobtrus js server side model throw except find concurr conflict solv essenti model track revis number date user creation updat object save date older revis data store attempt merg fail control handl except initi kind resolut workflow issu client applic sinc ajax run request asynchron model necessarili latest version data control would know respons handl queue poll origin idea pass updat fetch server direct javascript model handl concurr problem lack except javascript limit us make flow control decis model way bad idea move merg model conflict resolut javascript control better way handl without control get far model land flow page user load page ajax applic initi model model numer mani attribut page poll server updat everi second auto save get updat user user edit model conflict aris initi entri resolv user click save button bottom page
domain model includ domain entiti project current read grail love order get hand experi grail decid creat web applic manag system ya guess plenti entiti goe domain model web applic novic web develop thought creat homepag first come problem sat hour drawn domain model homepag alon doubt whether enter entiti e whole web app entiti like user profil task relationship etc domain model first start code draw domain model page web app last connect domain model well wrong first project ever start life thank advic
data servic method name work orm implement unit work pattern n hibern session entiti framework object context etc two type data servic method save commit chang modifi model properti time becom difficult support mess call method sure whether save chang need outer method solv problem idea special name exampl add custom save method fill add custom non save method idea
use mvc pattern seem everyon web applic nowaday want use mvc everyth find hard convinc use pattern howev understand general idea separ backend logic frontend repres program general seem view alway depend control extent end depend model see advantag ad control get read lot hype way applic design mayb still understand suppos go whenev talk other mvc seem everyon differ idea belong categori use mvc gain use mvc separ frontend backend logic advantag see pattern gain separ interfac implement fail explain purpos separ control
inject depend method paramet instead constructor paramet use orm allow inject depend constructor let say use ddd busi logic mvc pattern ui one domain object need access extern servic oppos servic locat anti pattern touch ten foot pole see leav follow somehow get feel clean domain object buri deep model graph extern servic pass way best practic altern
object orient thought process studi oop conjunct zend mvc implement past month pretti new program general feel strong learn thing right way mean make sure understand thing done way e found learn someth anyth say music best way learn someth know done way first place anyway struggl hard understand develop busi model e mvc decid understand oop general studi sever month think concept difficult grasp find exampl studi intuit actual problem think lie process translat problem object orient solut exampl book read far obvious process translat problem object difficult think might miss high level abstract process kind list step question everi object orient solut must answer highest level describ process five step would effect process translat problem object orient solut
best way scale cqrs system previous month ask lot question concern architectur applic work thank answer architectur design chang fact realli simplifi shown follow graph intern two servic wcf follow cqs principl mean queri servic simpli return databas view command servic full domain model contain busi logic repositori access databas event mechan complex pattern servic use databas servic class librari wcf servic use intern need overhead wcf distribut object martin fowler first law intern oper use asp net mvc site partner servic partner servic wcf servic expos function would like expos partner ever need scale high traffic could add web server migrat part full cqrs system contract alreadi design anyon see problem one thing see queri command servic chang impact web site partner servic direct deploy chang know issu feedback appreci thank
java instanceof oper consid reflect defin reflect discuss cowork today whether usag use java oper instanceof kind reflect discuss quick evolv actual defin reflect definit reflect usag instanceof consid use reflect addit instanceof consid reflect polymorph also use reflect differ
list collect mvvm approach take current work silverlight app use caliburn micro present view eg peopl view view model eg peopl view model equat page applic peopl view might contain list box peopl bound observ collect person object item templat assign denot person object display howev one colleagu begun implement list anoth way person view model ie person view model associ person view determin person view model display list box latter seem mvvm least mention v vm sure whether particular larg advantag one way valid either better
pattern help compos nest view runtim design pattern compos view within parent view runtim say compos view workflow tab view tabcontrol depend countri store type condit mvp wpf prism applic
say peopl ask question possibl duplic give help less experienc programm current find lot day taken peopl ask domain knowledg system question impact person product develop learn say ensur get ask less question product develop help stuff get document often easier ask quick question handl sort scenario
pattern ajax heavi web applic great fan mvc pattern develop web applic web develop most php kohana code ignit framework rubi ro r applic becom heavier ajax side singl page app etc notic help betray basic concept mvc javascript work call control ask view js json code seem wrong strive keep rout job control fundament split javascript framework po v part view ask json mvc subvers look even obvious js code request control framework control mere act proxi model data actual ask look think pure javascript applic instanc backbon js document base json spit databas couch db backend love relat databas anoth option would follow make rout model php rubi go whatnot analys request call db give back json approach look interest lack substanti document academ analysi littl afraid leap idea
workflow plugin assign start new project php plugin websit grab addit data c url get content etc tabul excel local project basic script like limit ui iv e use codeignit great framework websit even twitter applic use think need mvc necessarili small project also want go bare would typic workflow kind weekend assign creat local someth script like case ad function websit someth light weight mvc framework blank page
observ pattern http tcp ip server client server mani client around client connect server base web applic cours base http protocol turn use tcp ip correct wrong caus realli good network problem develop alert mechan somebodi submit form danger valu manag also connect via web applic receiv alert pop screen almost real time instant howev sinc http protocol stateless littl puzzl know implement one solut could use java script alongsid set interv function pull data second server seem littl dirti unprofession guy idea implement anoth solut
case reason replac singleton design pattern possibl duplic singleton appropri seen mani explan singleton evil realli case singleton beauti solut
architectur interact mode paint tool 3d paint program develop qt base applic navig paint volum treat 3d pixel graphic layout app consist three orthogon slice view user may paint stuff like dot circl etc also eras alreadi paint pixel think 3d gimp ms paint would design architectur differ interact mode e paint tool idea use mvc pattern separ control everi interact mode instal event filter three slice view collect incom user interact event mous keyboard redirect event current activ interact control would appreci critic comment idea
modular php framework realli improv applic one goal modular framework like kohana alloy make easi add remov compon e plugin modul howev larger project ever work system often becom depend modul built build wonder concept build distinct separ section web applic independ modul even good idea begin exampl may build general user forum blog modul project differ usual involv build mani layer abstract add new featur edit file direct custom use modul multipl project word longer plug play add site confus proper class design ensur un coupl mvc librari logic wonder mmvc superflu effort appli proper class design concept applic design well mani migrat system databas librari like doctrin requir relat spell model day one therebi link entiti one thing sound like good idea project start eventu shown useless featur modul place system like wordpress framework obvious build someth custom
new php project best architect alreadi done php project number thing pretti wrong page script php mix html also use framework like cakephp realli use object sort test suit time around want get right term good practic approach ok use suggest tip
command handler ddd asp net mvc applic use queri servic get data command servic send command question command part request come command servic use command dispatch rout command design command handler command handler valid comand first everyth accept execut command concret exampl add comment articl command handler receiv add comment articl command articl id comment text email address first valid occur like check articl exist check articl close check comment text fill charact check email address fill valid format wonder put valid command handler cannot reus command handler domain entiti domain entiti know repositori servic cannot need valid cannot check whether articl exist hand entiti contain logic becom simpl data contain follow ddd principl command handler use valid valid reus command handler mechan look chain respons particular exampl object entiti repositori play role idea would implement start command handler repositori
control vs model put process user input new mvc use framework go design new web applic use mvc user input receiv control suppos form data action insert delet updat must process action control model must languag agnost exampl mvc way
handl chat messag asynchron work program part work chat differ peopl tri figur best way send receiv messag print writer someth similar work process stop read method wait messag sent like check see new messag continu execut seen stuff jms done enough research determin job jms best option better way
memori problem singleton test suit memori leak run test suit due singleton object creat clear test case singleton object hold refer heavi object know better solut clear singleton object tear method test class think
often use di contain asp net mvc applic read book came across di depend injector subsequ di contain tool previous develop applic follow tutori asp net websit never use tool question sum follow two concern often use di contain requir make edit exampl without di contain written code understand better approach without di contain di contain ninject use exampl honest feel write first code easier seem natur view count learn mvc
hook busi layer repositori use unit work pattern question similar one stack overflow correct way use unit work repositori within busi layer scenario net solut repositori use retriev object db unit work use allow transact across multipl repositori make sens implement someth along line work fine want introduc busi logic layer troubl organis three element bll unit work repositori mind understand repositori data retriev manipul unit work persist bll logic relev busi real world dislik term consid asp net mvc front end bll look like mvc control use look like refer wonder perhap unit work repositori implement might under caus confus public class repositori lt gt privat object set lt gt obj set public repositori lt gt unit work uow obj set uow creat object set lt gt public queryabl lt gt add entiti obj set add entiti etc etc delet attach getal feel like bll pass unit work use creat repositori instanc need bll separ dll front end know implement repositori build
obtain best world mvc web form rather ask general question web form vs mvc asp net v asp net mvc specif quesiton appear main differ two approach web form event driven use pre built compon mvc built layer web form model mvc control separ folder view web form control code behind one could easili add folder web form project call model store busi logic use code behind decoupl two main argument web form easi write busi logic code behind could easili add busi logic mvc control complet violat separ concern question case could write web form project way busi logic separ control code behind would benefit mvc separ concern keep benefit web form rich control event driven like event
integr domain model applic resourc guidanc struggl find guidanc integr various applic usual base domain model architectur applic often expos consum other wcf servic tend done rather hap hazard way quit certain domain access anoth applic servic consum ui applic layer data layer read soa seem contain theoret inform make servic noth actual implement code need return queri join two entiti two system mani resourc suggest denormalis data call system updat use messag messag wcf combin system read enterpris applic integr still leav mani question good resourc code sampl integr domain model system
manag view control game build simpl os game requir fanci open gl like stick core graphic amp core anim like make fullscreen game question view control hierarchi manag seem though two type view control basic v cs navig menu screen ie set main menu level select etc gameplay v cs manag ui view ca layer good way manag best practic one hierarchi v cs like tradit ui navig control base app cover nav bar display game view control instead remov view control stack enter game mode set window root view control properti altern downsid continu reset window root view control gut tell latter better resourc perform advic direct would appreci
use form object get need data view object html work server side code request object handl request data valid filter view object use templat file generat html output templat file most html put one view object insid anoth view object order assembl page piec peic instanc might page layout view might put form view insid page layout view one featur request object automat build valid use html5 string contain form pars html string grab input type tag attribut determin html5 valid match valid server side get html string view object way matter design put view templat file automat get valid accord html5 attribut server side creat use view origin use generat page build valid request page submit back server would like get feedback idea pros con concern
handl categori databas schema model class tri develop ecommerc solut stuck categori manag issu know proceed see categori parent categori return also point anoth parent root categori reach tri design follow databas schema pleas tell right tutori categori parent categori help understand scenario better
multiten prioriti store site content databas multi tenant asp net mvc websit client specif text store resourc file everi time someon want chang text jump hoop fill form let someon els put product fine client look roll spend day make text chang anyon advic make life eaiser think cms may work far know cms idea multiten add addit independ site frequent roll new featur fear boat ad modul updat site prefer one site differ text help appreci
iter python rais except syntax iter java somewhat similar syntax c iter sequenc iter next system println next make sens equival syntax python thought except suppos use well except circumst python use except stop iter
exampl mvvm adopt outsid microsoft communiti mvvm get kind traction outsid microsoft communiti within silverlight non issu technolog like java script sure instanc knockout js great framework rest world seem backbon path concern mvvm framework like knockout go suffer lack network effect constrain microsoft ecosystem thus fall behind compar rest
present model design pattern includ one control research usag present model design pattern applic prepar build specif technolog use flex though doubt matter question general present model exampl run across pretti consist basic implement less follow martin fowler present model descript come three basic concept view model present model think understand howev seen exampl extend includ control event servic object addit three basic construct list exampl seen note use swiz di event handl cafe townsend swiz present model exampl understand reason servic layer may want need retriev data soap interfac one day rest interfac next share object third day servic layer interfac make easi swap retriev persist logic howev sure understand addit control advantag exampl link logic within present model dispatch handl within present model logic dispatch address within control guess logic view specif captur within present model support notion present model simpli abstract represent view suspect control use captur common busi logic event view specif perform servic layer e g persist support reus across applic help make applic testabl conclus right advantag miss disadvantag besid code know logic present model resid control
process soa di io c use simplifi local soa read soa exampl seem first lot attent interoper enabel distribut task use standard messag format transfer protocol web servic later crux achiev loos coupl find principl partit busi logic manag depend share data part correct descript relat di io c system low perform requir would simplif use di messag broker asynchron event pub sub break servic go across esb requir integr
tri learn use wcf servic wpf app use mvvm work major write legaci vb6 app wpf app written sever wcf servic meant use new wpf app want use mvvm design pattern experi order learn mvvm watch video window client call build data driven wpf applic use mvvm pattern great introduct refer lot situat quit give us enough exampl certain use dataset return wcf servic new wpf app use idea todd miranda introduc video referenc think suppos design class exact like class data return wcf servic wonder wcf servic alreadi class yet class wpf app least implement notifi properti chang interfac sure
one defin interfac code adapt whenev depend found given particular third parti class librari want make use simplest thing would hardcod api call applic hand possibl defin interfac generic dictat want follow adapt pattern bind interfac third parti class current feel inclin second option creat singl point chang ever want replac function provid similar way allow add provid without chang applic code permit follow name convent simpler method signatur etc thing experienc approach know complic inconveni get also like know common error follow pattern particular case want wrap either giantic librari e g gui small function also actual possibl chang provid futur yagni thank
valu convert troubl worth work wpf applic view requir numer valu convers initi philosophi inspir part live debat xaml discipl make view model strict support data requir view meant valu convers requir turn data thing like visibl brush size etc would handl valu convert multi valu convert conceptu seem quit eleg view model view would distinct purpos nice decoupl clear line would drawn data look well give strategi old colleg tri doubt whether want continu develop way actual strong consid dump valu convert place respons almost valu convers squar hand view model realiti use valu convert seem measur appar valu clean separ concern biggest issu valu convert tedious use creat new class implement valu convert multi valu convert cast valu valu object correct type test depend properti unset least multi valu convert write convers logic regist convert resourc dictionari see updat final hook convert use rather verbos xaml requir use magic string bind name convert see updat debug process picnic either error messag often cryptic especi visual studio design mode express blend say altern make view model respons valu convers improv could well matter grass greener side besid lose eleg separ concern write bunch deriv properti make sure conscienti call rais properti chang gt deriv properti set base properti could prove unpleas mainten issu follow initi list put togeth pros con allow view model handl convers logic away valu convert pros fewer total bind sinc multi convert elimin fewer magic string bind path convert resourc name regist convert plus maintain list less work write convert implement interfac cast requir easili inject depend help convers e g color tabl xaml markup less verbos easier read convert reus still possibl although plan requir mysteri issu depend properti unset problem notic multi valu convert strikethrough indic benefit disappear use markup extens see updat con stronger coupl view model view e g properti must deal concept like visibl brush total properti allow direct map everi bind view rais properti chang must call deriv properti see updat must still reli convert convers base properti ui element probabl tell heartburn issu hesit go road refactor realiz code process ineffici tedious whether use valu convert expos numer valu convers properti view model miss pros con tri mean valu convers find work better altern discipl mention someth type descriptor provid get handl talk insight would appreci updat found today possibl use someth call markup extens elimin need regist valu convert fact elimin need regist actual provid intellisens select convert type convert articl got start abil use markup extens chang balanc somewhat pros con list discuss see strikethrough result revel experi hybrid system use convert bool visibl call match visibl view model convers match visibl basic convert let check bound valu usual enum match one valu specifi xaml exampl basic check status either finish cancel visibl get set visibl otherwis get set hidden turn common scenario convert save properti view model plus associ rais properti chang statement note type convert vc match visibl show intellisens menu notic reduc chanc error make use valu convert less tedious rememb look name valu convert want case curious past code one import featur implement match visibl check see bound valu enum check make sure value1 value2 etc also enum type provid design time run time check whether enum valu mistyp improv compil time check use follow instead type hand pleas forgiv made mistak safer verbos worth might well use properti view model go anyway find design time check perfect adequ scenario tri far code match visibl code base valu convert enum extens method updat sinc post question come across open sourc project use il weav inject notifi properti chang code properti depend properti make implement josh smith vision view model valu convert steroid absolut breez use auto implement properti weaver rest exampl enter code get compil huge save amount code type read scroll past etc import though save figur depend add new properti get like full name without painstak go chain depend add rais properti chang call open sourc project call origin version call notifi properti weaver owner simon potter sinc creat platform call fodi host whole seri il weaver equival notifi properti weaver new platform call properti chang fodi fodi setup instruct replac virtuos properti chang properti chang fodi project site prefer go notifi properti weaver littl simpler instal necessarili updat futur beyond bug fix project site either way il weaver solut complet chang calculus debat view model steroid vs valu convert
store page specif javascript ajax driven site general question placement javascript code ajax driven web applic previous job tend throw everyth one monolith file maintain file becam difficult split multipl smaller file glu back togeth php loader pretti much bunch includ statement sinc page dynam load ajax cannot simpli differ file call separ per page obvious disadvantag method javascript load end user even requir first page load compound problem page get around start put page specif javascript templat page lt script gt tag bottom work intend javascript want load howev unsur whether practic taboo better strategi load javascript get feel mix templat script code recip disast
bad practic use reflect db insert data extern servic supplier webservic return address object field use linq reflect store return data straight databs loop attribut set valu object linq class fair new refect worri may bad practic save line code method afraid could introduc hard fix bug edit code target normal linq sql entiti input would webservic object
decoupl ui code applic sever event handler perform action respons user interfac event button click menu select code event handler look like exampl typic event handler code monolith event handler glue various piec togeth usual busi logic servic class ui refer event handler make call one perform desir task wonder still coupl want turn command line app extract bit piec ui code exampl compound action go think look like right code would applic control right abstract whenev need perform task ui handler alway one liner asid get data text box etc anyon pointer tutori realli cover program languag furthermor fact abstract compound action propag error messag within compound abstract back ui except hierarchi singl except error code updat look command pattern look promis updat end decid refactor code describ humbl dialog box paper accept answer understand model view present mvp type pattern specif passiv view refactor go smooth rough edg understand full applic pattern come thing like display messag box file open dialog deal event timer overal happier code tight coupl bother also found bundl pattern amp practic web client develop guidanc model view present mvp bundl sampl mvp code web project wherea current implement desktop guess beauti mvp part matter one thing got depend inject servic layer object present rather new ing insid present class
multipl zend applic code organis past year work seri applic base zend framework center complex busi logic applic must access even use easier multipl librari folder applic link togeth common center without go much detail project specif look input work project alon group code tri split way remov depend much possibl tri keep decoupl logic month time time anyon els come problem extend produc exampl structur note modul config layout zend extend folder duplic applic folder omit requir purpos librari contain univers code zend framework heart applic want busi logic zend framework independ model mapper interfac public refer zend db actual wrap around privat hope futur abl rewrit mapper dbtabl contain model db tabl abstract extend zend db tabl abstract order decoupl busi logic zend framework want move busi logic servic non zend framework environ mayb php framework use servic locat regist requir servic within bootstrap applic use differ version servic depend request applic access exampl extern applic servic auth extern implement servic auth interfac regist intern aplic servic auth intern implement servic auth interfac servic locat get servic auth concern may miss possibl problem one half think config ini file extern separ applic config ini overrid ad global extern config ini anyon suggest would great appreci use contextswitch ajax function within individu applic big chanc extern intern get web servic creat separ due author differ avail servic
definit tier system peopl often claim follow tier n tier architectur sometim claim switch domain model realli never understood mythic tier architectur seem formal definit wherea numer refer exampl around explain demonstr domain model pattern refer tier simpli suggest separ code ui busi logic data access layer seem say find particular strang domain model perfect embodi tier paradigm orm map file data access layer domain busi logic ui well ui peopl talk though someth new differ someth switch saw peopl implement domain model applic u access store procedur logic split across ui ps sometim assembl call ui bll dll usual mediat u ps leav place logic random spread across mythic tier architectur realli even exist exampl implement well
communic differ technolog distribut applic incorpor sever legaci applic servic network distribut applic exist servic applic written use differ languag technolog includ java c net c run ms window machin wonder communic mechan simpl standard way thank ps communic includ simpl messag send remot method invoc
best strategi depend inject work java project use depend inject framework built compani framework enforc follow name convent suppos class foo depend interfac call org compani bar framework search class call org compani implement bar creat new instanc class assign attribut foo bar framework allow custom though inject annot declar factori enforc convent everi time want use certain factori declar explicit annot attribut inject strategi howev make class tight coupl declar depend interfac alreadi commit given implement decid implement factori manual perform depend inject basic class instanti applic object wire togeth object scope singleton prototyp control factori think spring io c configur file written java instead xml colleagu approv decis argument factori creat mani respons instanti object must left framework need use anoth convent creat custom factori class describ definit accord one singl factori object instanti strong disagre argument factori one respons creat object graph need aris modifi graph one class chang may miss someth pros con strategi
packag organis mvc design pattern program quit lot still decid packag hierachi best word better appli mvc design pattern class packag reason choos one question languag agnost most java programm differ
divid work among develop team member websit project use mvc pattern work webapp project use flask framework sqlalchemi orm python first time work project like troubl divid work proper among teammat guy one handl design two front end backend backend flask follow mvc type pattern team divid work mvc pattern moreov confus divid work team mate backend one handl databas queri let one handl process return result need advis work divis web project
rfc extend mvc design pattern use mvc pattern applic year full separ control view implement sever hundr view repres littl model potenti contract time around like reduc develop time ui task also add addit featur view decor etc curious find anyon use even implement design one explain bellow pros con without get much detail go simpli elabor exampl api juggl head day along explan bit later goe exampl idea applic sever client although accept general usabl want brand l amp f base busi rule ie text field error background text field yellow red font want text black background yellow red border think event focus loss focus key type etc compon would basic invok control turn control reflect would invok valid valid pass control simpli updat model valid fail control updat model control would keep state view edit edit error etc would deleg decor would adjust l amp f compon base client demand would avoid ton els block direct singl control control valid decor know concret instanc load base client run applic way separ logic client reus share behavior decor overid paint xxx method simpli call set background c set border b setter method alreadi avail swing compon reason extend compon simpli add set model set control c method along framework logic need compon view mode usual paint border background stuff look like tradit web page edit mode look like swing compon design applic ui usual stick major compon j text field j text area j panel etc much work side start implement stuff yet know exist librari someth similar pleas point real issu time handl case compon depend exampl two text field int valu one field odd must also odd one even must even valid occur valid would need valu text field proper valid still iron part
model independ mvc effici way method call tldr model suppos applic depend total worthless start new applic suppos design model independ act stand alon class librari would make littl sens framework code ignit extend ci model obvious kohana project also read sever similar question point main point found answer use code ignit quit introduc mvc pattern even though took get paid read reflect inspir howev someth alway constant annoy proper put togeth valid effici work composit object consid three differ workarea mvc structur use control model librari yes said librari independ class inclus hard time decid whether model act independ class act structur applic call black box busi model fat model keep control skinni tri document read tri point sinc control applic specif independ way could take applic appli anoth total differ applic come confus model suppos act similar fashion simpli pair organ fat class tie main applic lose worth move total new project exact core problem realli need get crystal clear definit help understand mean give exampl make applic php moment model call user php within class method work user tabl model load framework call method control like way use call gt user gt verifi login let model simpli take post variabl figur chang would assum control input output go control virtual leav model actual fulli encapsul even author code show connect control model decid use independ librari say valid class made would implement stand alon class let pretend snippet applic use poor design valid class give except would put code control model best effect model would applic depend would make sens deleg call method librari class within model easili call model simplifi fashion save method everyth would taken care behind scene come wonder control suppos use main area connect dot place would call method everi class deleg model etc keep model outsid class clean reli sole sure model suppos applic depend would make littl sens would take model new project instead call messi procedur within encapsul class must apolog long explan struggl even use mvc pattern question mind extent serious consid let go move back hard pure php help would appreci also tip document class method would welcom bonus thank great deal
bad practic servic share databas soa recent read hohp woolf enterpris integr pattern thoma erl book soa watch various video podcast udi dahan et al cqrs event driven system system place work suffer high coupl although system theoret databas lot join practic mean one huge databas system use exampl one tabl custom data much read seem suggest denormalis data system use databas updat one system propag other use messag thought one way enforc boundari soa servic databas read suggest wrong thing segreg databas seem like good way decoupl system bit confus good rout take ever recommend segreg databas say soa servic ddd bound context applic etc
organis mvc app virtual model use extern api creat rail app follow constraint databas use web api store retriev data connect web api via custom gem gem basic function make web api call base paramet given differ kind object think may precis virtual model structur program incorpor method call within gem creat model put api relat call gem basic method ignor model put everyth control second method seem appropri method model would static would call method essenc without object
pros con mvvm architectur class today introduc mvvm architectur silverlight win phone wpf look nice big project thought mvvm pros con want get architectur know use
orm poc os replac domain entiti somewhat similar question broad general ms like ef support poc os make sens domain entiti object persist databas older ms like ef linq sql databas object auto generat tight coupl databas non trivial applic map robust intellig domain entiti put work idea newer ms build robust domain entiti data layer simpli provid map said domain entiti dbms write get feel alway goal readili easili possibl tool avail least net world
c model view present construct present use model view present mvp pattern describ humbl dialog box paper pdf mfc project sure issu gui toolkit thing bother concret view e dialog class creat present also servic present need normal view need know servic present need think depend inject present dialog class main control applic class deriv c win app construct servic present class inject dialog class although would depend inject present dialog class present need refer view class constructor present view view servic servic also main window spawn popup window detail window present servic get construct sinc c think interest kind di framework updat one idea construct present null view constructor inject present dialog class constructor dialog class call set view view view method present would dialog class deriv view seem littl kludgi keep servic construct dialog class null view seem littl danger altern would actual construct null view class empti method bodi pass present constructor
domain model educ domain model alreadi creat educ industri exampl prima ibc insur look someth along similar line
use messag pass share memori know littl use messag pass share memori still know choos one anoth tell trait implement
session implicit object exampl model mvc read model respons maintain state among http request exampl articl model respons maintain state http request basic data whether databas file store session cach insid apc must preserv request thus form part state applic time last request complet alway rememb model databas even data get web servic express model yes even atom feed framework rattl introduct model almost never explain upfront exacerb misunderstand use implicit session object say php jsp etc mean session model object
elimin depend vs elimin redund upon assign project discov mani messag class receiv kept intact pass around insid receiv applic messag chang code throughout entir applic chang sinc problem gotten habit convert messag new format upon recept howev feel like direct violat dri repeat near ident intern class creat extern messag line elimin depend elimin redund modul data format
ddd lite pattern languag depend inject stumbl upon greg young talk reason ddd project fail mention someth call ddd lite summar basic say use ddd pattern languag entiti repositori valu object servic etc without anyth els relat ddd postul domain model net ddd lite think ddd lite basic build languag around depend inject someth realli need say either ddd entir someth simpler otherwis claim person put forth work build good abstract without real benefit must admit know much ddd would like tri use yet also read eric evan book either much interest depend inject mani mani book blog subject use term refer concept eric evan ddd book expos ddd concept book read includ depend inject net microsoft net architect applic enterpris brownfield applic develop net one want depend inject simpler altern ddd lite sound like build good abstract quit use regardless one use concept ddd ddd lite way see mark seemann blog post interfac abstract toward better abstract hard time believ everyon depend inject happen also need full fledg ddd somehow misunderstood greg young argument ddd lite
multius system encrypt databas current develop host solut asp net use mvc3 entiti framework product made avail number client host solut data store client critic busi anticip mani insist data store encrypt form databas therefor design system mind recommend procedur would one go encrypt client data way even us root access databas cannot possibl access data believ built support ef encrypt data true would one encrypt decrypt data
depend inject singl instanc object want also decoupl applic class like product user usual one instanc take look exampl right say control depend product think could decoupl would singl instanc object like databas exampl howev ugli decoupl anyon done someth like excess
decoupl view control web put page like action pair view use code island control code top view code bottom problem approach mvc refer framework asp net mvc rubi rail impress v c actual ui layer
suggest set web applic paramet creat web applic gwt use mvp pattern activ place xml config file contain paramet use applic content xml file sent client use http request use singleton class hold inform xml file right applic get data user start applic home page work well sinc use activ place user bookmark page start applic page place come problem sinc use inform xml file set ui widget check xml config file read applic alreadi paramet check singleton class xml file read use http request got error caus applic need paramet initi ui widget paramet readi time think use synchron request fix problem seem complic recommend like hear suggest thank
write messag system vs util exist one tri startup middlewar applic glue small applic enterpris legaci system middl ware function proper need sort messag system make differ compon talk reliabl way altern use exist messag system 0mq j boss web sphere mq etc build messag system way see problem bias toward later option follow reason control final product avoid licens problem later learn messag write code invent someth new might cost us lot reus exist system would shoe
control navig mvvm applic exampl view display mvvm applic let use silverlight purpos discuss click button take new page exampl view anoth button click open detail view child window dialog know command object expos view model bound button method respond user click complet action even use call navig servic tell specif tradit view first model like url base navig scheme web sl built navig framework command object would know view display next seem cross line come separ concern promot pattern hand button wire command object behav like hyperlink navig rule could defin markup want view control applic flow navig anoth type busi logic say yes case other utopian implement mvvm pattern heard other profess would view model wire way applic run headless e view provid surfac area code base test make view true skin applic view model care display main window float panel child window accord apprach mechan runtim bind view display view model want share view multipl view model vice versa given need manag view view model relationship know display along need navig view includ display child window dialog truli accomplish mvvm pattern
j queri java script role mvc sure understand role j queri java script mvc found articl list apart clear anyth bridg communic view control someth els
cqrs without use other pattern would like explain cqrs team develop figur explain simplest way implement pattern rapid without other framework read lot resourc includ video articl find implement cqrs without use other pattern like servic bus event sourc pattern domain driven design know purpos pattern first step want think cqrs pattern must tie togeth first idea say cqrs separ read part write part read part compos ui project dal project write part compos typic multilay architectur ui bll dal cqrs say must also two datastor notion command reveal user intent also someth part cqrs ddd basic implement cqrs without use other pattern conced also clear mind use work ncqrs ddd event sourc servic bus person project
jsp model architectur depend inject write web applic use model architectur possibl use googl guic framework realli io c contain reason ask question everyth research di io c et cetera alway use spring hibern framework contain exampl use java class control jsp build applic find good document subject
end event sourc use x dd approach work tdd bdd manner unit test suppos drive design end event sourc use x dd techniqu see event sourc someth need adopt earli take full advantag let say start without event sourc releas later releas version realiz would great use event sourc point alread miss event version make much harder implement take kind backup db event sourc use base line add event sourc top
backward compat event sourc stay backward compat event sourc let say releas version one kind event let call x know handl event system extract event event sourc later releas make chang event x delet stay backward compat fulli function system need abl handl old event time need handl updat version delet event type stuck code handl legaci event head littl bit messi long run
facad pattern differ abstract layer read facad pattern found exampl client user comput invok start comput method call complex stuff sourc wikipedia see client class creat new facad call start comput method method instanti sever object invok method encapsul insid facad class glue togeth question exact differ layer abstract yesterday made login function web applic login usernam password encapsul complex lower layer method call updat login info user set session log instanti sever object etc job layer would also call anoth even lower level would deal crud like oper check activ status account exist thing like process string hash algorithm method model level look layer overview would return array either success key error messag key act boolean sort layer call understand known abstract layer hide complex procedur higher level architectur read facad pattern seem like use along question would approach abstract login mechan bad choic mvc architectur pleas give exampl taken consider easi decid end result goe html ajax etc wise choic avoid alot fs dealt control layer layer overview control layer model gt login post variabl model layer facad set session updat login inform databas etc call independ compon inform user id user gt get id session gt session exist independ class layer class layer independ littl coupl would layer job build applic lend api control question facad pattern use rout call sub class api like form perhap common mean object instanti object b lend method control object b method method instead
chang view mvc work thick client graph display manipul applic tri appli mvc pattern 3d visual compon model view control model graph metadata includ vertic edg attribut contain posit inform icon color anyth display relat view would common call scene graph includ 3d display inform textur inform color inform anyth els relat specif visual model control control take view display window use open gl could potenti 3d graphic packag applic various layout chang posit vertic display instanc one layout may arrang vertic circl common layout access chang view direct go control access view go control ask direct access view chang go control realiz bit differ standard mvc exampl finit number view case view chang infinit number way perhap shatter basic principl mvc thank advanc
control code ignit littl bit new code ignit framework first project framework chat stack overflow somebodi said need make control tini possibl current default control name home line code increas model name profunct line code increas control class function also model class thought codeignit handl larg control model well problem perform issu secur issu regard
good substitut asmx web servic method general handler best thing like asp net mvc direct call server method call action client conveni straightforward realli like implement model asp net web form howev asp net web form call server method client either use page method web servic use soap communic protocol though json also use also anoth substitut use generic handler problem howev separ generic handler written server method word generic handler work like simpl method anyway els imit mvc model asp net web form pleas note chang mvc platform right caus project hand big project requir resourc time chang platform seek simpl mvc model implement ajax call problem web servic known problem soap except interest creat custom soap exctens
mvc tri refactor applic mvc stuck part databas back app model implement app code right databas also model use databas simpl object store data db enterpris asset
pass depend control class look approach follow problem reusabl librari contain control class mvc sens let say call user administr control edit user class requir object implement user storag store data librari need know detail object work want write applic includ librari provid implement user storag instanti need pass depend like databas object thing applic know runtim would pass object applic librari instanti user administr control direct applic get creat librari hope make sens tri keep descript abstract specif particular framework languag
bind view model properti view model start project follow technic environ net entiti framework wpf mvvm architectur saw lot exampl net book environ exampl author idea viemodel instanc model class entiti framework entiti e g person bind wpf view control properti model author viemodel expos properti model bind wpf view control properti view model rather model direct good idea let view bind properti model rather viewmodel expos prefer
matur easi use cqrs framework azur specif outdat well adopt research net implement cqrs either everyth seen far azur specif outdat think well adopt problem scritchi well adopt ncqrs appear bit older also requir diy ish setup mean need creat sever project terribl though theoret demo product framework lokad cqrs most azur specif demo framework work new project host app harbor would like use cqrs approach would prefer use awesom framework rather write copi
use reflect new java studi read reflect use invok class method know method implement use reflect differ use reflect instanti object call method tradit way
use case node js c quit bit asp net work c mvc typic web develop rest architectur use crud repositori client lot advanc requir within applic look node js perform implic addict speed delv much wonder node js realist replac typic web develop c asp net mvc rewrit exist app work new one node js complement asp net mvc app ad async good exist architectur use case c node js edit love asp net mvc super excit go tri see special use case would favor node js
user role put queri user role two model class user role two manag da os user manag role manag plus method give user certain role list lt user gt get user role role manag method belong
java script mvc framework singl page app look sever java script mvc framework backbon js spine sprout core etc seem design act singl page applic exampl see index page act front control use style ur ls differ page handl entir render page sever project would like use tradit style ur ls structur java script handl complic part applic js mvc framework answer look someth differ
ddd orm busi logic go use mda model driven architectur tool past model via uml generat busi entiti domain model orm map etc amongst thing lot busi code servic work domain part model repositori return busi entiti would imposs switch anoth orm want howev start project want think term ddd far feel though put busi logic domain model via repositori would work orm ever chose howev want continu use mda tool orm part applic model creat would anem e contain busi logic similar use entiti framework net n hibern orm would anem model sure would put busi logic use n hibern correct think way word ddd busi logic domain use orm persist via repositori
mvc j son request architectur find build whole bunch json call applic basic action spread across various control consid creat json control keep json action one control instead would call might ramif consid anyon think compel reason
observ pattern know chang creat two abstract class subject observ defin classic observ pattern interfac deriv implement observ pattern observ might look like fine tell chang someth howev tell chang sometim ok go queri subject latest data time need know exact chang subject notic java notifi observ method notifi observ object arg method presum specifi detail chang case need know one coupl differ action happen subject particular action know integ number relat action question c way pass generic argument java observ even best pattern perhap kind event system updat found articl talk templat observ pattern implement subject observ pattern templat made wonder could templat argument found stack overflow question talk templat argument templat base subject observ pattern use static cast dynam cast howev op seem problem one answer thing could chang updat method take event arg object creat subclass event arg specif argument data guess cast back specif subclass within updat method updat also found articl creat asynchron messag base c framework part discuss subject communic detail chang serious consid use boost signal use observ pattern made sens simpl templat type argument start get complic may need thread safeti boost signals2 updat also found interest articl observ pattern general observ herb sutter implement observ pattern c part experi implement observ design pattern part experi implement observ design pattern part howev switch implement use boost signal possibl tad bloat purpos success work probabl concern bloat speed irrelev
domain object domain driven design suppos write read domain driven design almost two year cautious introduc concept daili work least make plan thing regular could done within domain driven design one conclus begin come especi respons read event sourc command queri respons segreg cqrs perhap domain object intend use write purpos clear seem peopl subt suggest much document read domain object respons domain centric oper calcul valid main provid road persist infrastructur provid within repositori implement although like fact may simplifi domain model great cut respons expos state inde correct domain object main use write object rais question hope somebodi could answer one perform unit test object setter method modifi state object provid outward public interfac read state properti getter c okay expos state sole purpos make object testabl one show user result calcul oper done domain without persist pull result persist store outsid context domain okay expos state sole purpos show result rule thumb properti getter get accessor one also writabl domain said differ readon properti thing avoid sinc read purpos thus play necessari role actual domain model relat materi tdd ddd encapsul
unit work pattern consid fast effici work orm work doctrin came across follow paragraph fact sinc doctrin awar manag entiti call theflush method calcul overal changeset execut effici queri queri possibl exampl persist total product object subsequ call flush doctrin creat singl prepar statement use insert pattern call unit work use fast effici speed relat databas orm theori wonder unit work pattern consid fast effici
pattern web applic develop web applic univers project professor want use multi tier architectur client web busi data tier ejb web busi chosen use mvc pattern anyway littl littl build tier way view jsp servlet alway forward request client control session bean check user see page send servlet right data taken entiti sinc mvc pattern provid interact model view think use view interact control ask name pattern use still mvc
sql server mongo use togeth larg news orient site high web traffic architectur often seen db repo layer servic layer asp net mvc problem see around read perform turn ddd domain object stuff great theori busi rule made life harder come optim read perform solut consid someth entir new us use sql like use sql databas data present websit get rid sql server least anytim soon seem practic step would use mongo queri databas new develop question whether possibl use sql server databas record mongo queri databas togeth one editor updat record data store sql server necessari much legaci code cannot written overnight viewer web site view articl list articl like take advantag perform mongo versus sql server order keep data somewhat current let say minut old less sql server data would need refresh mongo rdbms replic tool oper like wonder exist anyth sql server mongo lync server mayb
pattern user interact confirm suppos file writer class need valid eras file alreadi present one found would two function main concern eras file alreadi present first interfac actual interact via consol time later come second interfac one gui need user interact save way interact made logic pattern use duplic logic callback function perform check best approach format c c specif
date format take place mvc pattern suppos want show user list web applic handl custom date format depend current select interfac languag sever locat appli date format seem possibl one would use model exampl date format user birthdat date field suppos sql db control level exampl suppos use php view level exampl suppos use templat languag smarti similar relat question goe sumbit date e g user registr form date convers take place control process valid form call model model
entiti framework view model earlier ask question entiti framework layer seper found peopl use view model show data ui exampl got person tabl address tabl want show combin two tabl would creat view model let call person address show ui question regard save person address object databas sinc exist ef context want show person object would still creat ident view model object one ef creat without ef specif properti ofcours peopl use entiti state properti dosent becom useless interact view model
creat view model part mvvm design sometim plan creat program use architectur pattern got lot difficulti view model phase use waf framework develop architectur pattern still newbi start creat uml design use anoth tool help handl design view model
depend inject singleton two entir differ concept hear use depend inject singleton colleagu still make two orthogon pattern replac one anoth di method make singleton pattern testabl pleas take look follow code snippet singleton consum accept paramet type math face instead access singleton class intern singleton consum get singleton instanc pass caller good exampl consum singleton class via depend inject
need counter point counter argument use v p whip demo friday holiday weekend use model view present pattern passiv view version believ want show co worker week exampl architect web form applic move forward get maintain clean code current keep almost logic outsid data access routin code behind file know immedi one point rais faster easier use code behind rather creat separ class librari view present creat separ view per page least get hairi well hundr page although point talk futur develop retrofit rest code argument much faster get task done someth like counter argument use show benefit use mvp pattern specif way would improv speed effici get thing done say cleaner proper abstract code enough code qualiti never big issu speed mental bite us rear note new featur exist brownfield legaci applic new site would chose mvc brand new site new page interact applic whole radic chang old page like normal talk use mvp
organ present view model view present sever hundr aspx file could thousand actual count current use architectur logic data access code behind file move forward want push use model view present probabl supervis control version tri get clean separ would best approach logic lay file present librari aspx file organ thrown main directori group misgroup e g custom relat file folder call order tri group present view modul e g present view custom present custom correct approach seem hundr x present x view file thrown class librari
mvc realli serious programm answer question mvc mind mvc sort nebul topic mdash audienc learner free describ general term unlik controversi howev speak knowledg audienc especi interview hard time think direct take risk reaction well right differ real world experi truli met mvc implement pattern twice specif seem disagr regard strict compon definit separ part piec fit etc explain mvc way correct concis uncontroversi
defin class java script exist back end seem relat duplic defin model backend code front end rich internet applic port gui applic written web interfac grand nice thing like spine sprout core javascript mvc would defin model view implement specif control got well defin mvc pattern backend code make super easi port view app took python dict return python dict control could easi interfac model convert json back forth speak web front end would want recreat entir pattern front end good way work around say screw use someth like write bunch code export model json write java script code build model front end automat still defin would best approach
better way design class two busi class timesheet day time slot one timesheet day one time slot timesheet day time slot class depend object implement correspond timesheet day data time slot data interfac way write data class map object sql databas use anoth way store data futur inject object differ dataclass object creat object refus use new keyword want testabl complet isol exampl instanti timesheet day object like contain time slot object construct way problem lie get time slot object timesheet day contain timesheet day class creat object otherwis might write method return array time slot object someth like would requir method get time slot creat object would handl
design model layer without orm use php develop start code ignit design model easi seem like method defin model equival static method normal object orient environ tri fuel php built activ record style orm php activ record use code ignit found creat model easi orm taught best practic design model howev like tie specif orm implement got better sql thought ms bit heavi compar quick could retriev stuff sql tri design model scratch without orm lost orm system one class per tabl queri eager load make sens seem like worth perform hit use orm situat avoid use orm design model without use orm use sql direct
call php model class mvc control creat simpl mvc moment wonder correct abl call model class direct control get data send view follow folder structur also need model class within model folder moment tri play model model class php tri build part site alreadi start becom huge think might better complet cut think better approach use brief exampl control could might look first approach better complet miss point model control communic
use altern mvc framework new asp net mvc ef read open sourc implement mvc pattern like spring fubu mvc castl etc want know flexibl altern compar asp net mvc one wide use whose help easili avail net
mvvm report app approach data access layer tri follow mvvm pattern report statist applic make c wpf made mani model class hold properti start point model made encapsul differ statist present data cross refrenc think next step creat data access layer class method connect databas grab valu popul model think creat connect queri pass class class specif set data need model construct queri pass understand call data access layer method view model popul instanc model present view approach theori correct standard way approach problem suggest refer materi
design web base plugin system correct wast mani resourc mani cms system reli third parti much code often build plugin hook system make easi develop modifi codebas action without edit core file usual mean observ event design pattern howev look system like wordpress see everi page load kind bootstrap file plugin folder see plugin need run request poor design caus system like wordpress spend mani extra mb memori load pars unneed item page altern way look idea build exampl way load cach result system know lazi load plugin word system load configur file specifi event plugin wish tie save futur request also perform poor perhap special file structur could use make educ guess certain plugin unneed fullfil request idea anyon want exampl plugin concept find one
differ di io c possibl duplic differ depend inject di amp invers control ioc new invers control depend inject everyth relat stuff excus specif question magic piec code good explan link final distinguish concept realli think use depend inject alreadi mean use invers control way use invers control without use depend inject alreadi read martin fowler articl still find concept confus
use messag box use mvvm pattern implement ui applic use mvvm design pattern thing sometim detect someth wrong data input user like notifi somehow solut use far messag framework allow basic show messag list view integr within window howev sometim window get bit overload graphic element would like abl show messag messag box basic modal window view model suppos awar anyth ui cannot instanti window explicit ideal modal window would also use mvvm pattern henc would implement view model window would instanti within main window view model pass modal window data context would like simpl exampl thing approach ban mvvm applic edit would use uniti framework someth recommend
differ depend inject di invers control ioc see lot refer depend inject di amp invers control ioc realli know differ would like start use one littl confus differ
silverlight user control consid view far implement mvvm silverlight app pretti well one question user control made wonder place view folder seper folder call user control user control consid view
differ control dispatch mvc web framework mvc appli wsgi java ee servlet control dispatch think seen system diagram control dispatch differ could control control sql statement dispatch thank
problem understand seam word read depend inject net mark seemann fantast must author often use word seam understand mean exampl use word chapter explain compos object various concret framework asp net mvc wpf wcf framework support di equal well even among way differ lot framework difficult identifi seam enabl di framework howev seam found solut applica tion use particular framework chapter done work common net applic framework think catalog framework seam would grateful help understand word
effici way adapt data structur anoth c write interfac two configur model use differ structur know magic way translat structur type anoth wander might best practic effici effect way setup system think similar program may manag differ configur structur accross version simpl exampl let say structur type contain paramet second configur structur share paramet differ order let see structur b simpl program convert b would may seem fair simpl basic structur deal dozen structur one contain around paramet anybodi know good pattern follow problem
author creator repositori pattern pretti sure gang four feel newer pattern first publish mention
unit work principl caus problem mvc3 applic implement websit use mvc3 entiti framework repositoti pattern unit work principl face big problem implement develop static object context class class use across repositori unit work pattern follow e g custom product repositori use specif one repositori control inject use n inject sinc object context class static product custom parameteris constructor accept object context class two share object context instanc execut singl thread everyth goe fine multi thread get unhandl except one repositori close connect use think make object context class static solv problem test yet unit work observ pleas suggest solut
model view present mvp scheme use android separ view present android reaction user action present part mvp set activ show gui element view part mvp model view present martin fowler michael feather say logic ui separ class call present handl input user tell dumb view display cite till thought one main featur android smart activ take action react show result mvp scheme contradict android philosophi sens tri realiz android yes could done
creat control dynam code behind view model right work migrat app made entir use code behind mvvm question suppos creat control dynam basic web servic return item item button creat item assign data context far know set command view model well command properti also know call item web servic insid view model model right irrelev question part question creat button realli like idea creat button view model sinc well relat view correct creat insid view model pass back view via messag
handl error php use mvc use codeignit lot recent one thing get nerv handl error display user never good handl error without get messi main concern return error user good practic use except throw catch except rather return function use els handl error thus make easier inform user issu tend go away except java tutor univers year ago told except use product code debug get feel lie exampl code add user databas process thing could go wrong databas issu duplic entri server issu etc issu happen registr user need know best way handl error php keep mind use mvc framework
includ third parti model domain model current tri design littl applic use domain driven design afraid realli get concept yet let tri explain clear possibl interfac defin domain model use differ project call third parti implement version x interfac third parti defin domain model come third parti librari could creat class interfac domain model implement properti method interfac interfac third parti interfac method defin thus make difficult task implement logic way go miss someth
best way build factori use n inject pretti comfort depend inject use n inject mvc3 work mvc3 applic develop custom control creation factori use n inject control creat depend inject control factori start develop window applic want use applic wide depend inject e everi object must creat n inject eas unit test pleas guid ensur everi object creat must though n inject factori exampl window form button click event write test class depend say test must automat resolv know use find tedious everi time want creat object also forc develop creat object particular way made better central repositori object creation everi object creation automat use repositori
need suggest mutipl window applic design previous post stack overflow move use vs2008 mvvm wpf prism make mutipl window crm applic use mid winow main window want view model would abl make request main window creat add close mid child window child window wpf toolkit window window type view model get dialog result child window excut main window control open window type current approach made dictionari window type store main window class e custom inform view custom inform view model execut edit command use event aggreg tell main window open new child window custom inform view model notic view model generat guid help identifi child window main window dictionari sinc use view view model everi window custom inform view model get dialog result close event child window custom edit view model use guid tell main window close child window littl question problem good idea use guid use hash key child window main window contain window refer collect whenev window close get notifi remov collect close event window know associ guid remov search everi key valu pair compar still kind feel wrong associ view model guid child window would make sens child window id view model associ import better approach design improv better
php view file call someth php default file php touch usual suffix php univers understood apach nginx default php file setup expect php file end extens short php standard everyth php howev wonder perhap view file differ extens help differenti php file first come view found almost mvc framework use match view file name control method addit general also match model name thing caus problem ide editor exampl might user control user view user model result three file open call user php make bother move around click wrong tab second separ view fundament differ kind php file present type anoth argument chang extens view file someth php someth immedi tell brain type content belong third applic expos part php file webroot directori rather ad someth like lt php defin abc die allow would nice easi way forbid access view allow file like customari index php good bad reason think good idea chang file extens view file
notif pattern prefer work view model view present dialog export option user select option click export view model complet export call view model receiv notif curious better practic implement notif tradit event action callback get pass dialog open tradit event callback initi thought tradit event littl flexibl allow one subscrib notifi also allow zero subscrib notifi callback hand enforc particular way interact dialog callback must pass initi callback also simpler implement use though perhap less familiar event two notif pattern recommend
manag constant applic applic part web app run ror web servic run sinatra applic communic mobil devic use differ constant depend messag need send devic current use integ constant save modul eg applic grown around constant realiz bad way handl constant differ develop seem give differ constant clash occur also mismatch constant valu ror sinatra due develop mistak obvious pain free way handl constant messag identifi
control pass data view mvc pattern work asp net mvc web base mvc implement quit often someth never sure control view communic cours control choos view use mean control pass data view opinion view expect data control effect tie togeth control view pair instead usual view communic model independ control right approach case one correct answer answer chang work web versus environ answer chang concept strong type view like asp net mvc
follow data duplic option across shard recommend high perform mysql book suggest shard blog applic one may want put comment data across shard first shard person post comment shard post store rais question reliabl duplic data follow data duplic option across shard recommend option make separ insert php script pros logic applic layer con user held insert b logic need duplic everi client tri insert similar data conclus seem reason option form feder tabl use trigger handl insert duplic pros app layer need worri multipl insert con everi shard need feder connect everi shard b feder work machin lan differ site c connect feder server fail conclus seem like sound idea option messag rabbit mq pros differ client insert data one place subscrib consum insert con complex b may impos overhead order host messag server client c sure work look servic locat appropri shard conclus sure option suggest great appreci help
shard io c come across situat need shard databas oracl particular matter gist problem written larg scale system fair standard tdd style repositori servic hidden behind interfac depend inject use implement particular version servic repositori runtim function allow crazi client requir exampl migrat mssql oracl week would possibl architectur proper decoupl problem aris need shard larg portion data separ archiv system perform reason tabl structur remain due time constraint would like puriti architectur remain one section system knowledg inner work anoth system need switch one shard anoth dynam via user input input yet finalis two way think approach issu pass requir connect string creation repositori ideal mean servic layer wors ui need know under shard make design inflex futur requir thing like sit front cach layer write cach implement top servic updat method take connect string paramet seem wrong creat new connect provid subsect system abstract connect inform repositori would ideal repositori would remain self contain cannot think good way switch implement without specifi relev interfac paramet method call goe back servic layer specifi connect use anyon experi issu opinion prefer low labor yet still fair pure implement situat
mvc system databas persist code sit seen multipl configur persist inform databas general three type design seem common corner world control manag persist model manag persist third parti librari manag persist usual requir sort annot model wonder configur conceptu easiest use compat mvc architectur one list pleas give quick outlin overview part answer
use power mock mockito easi mock use mock object depend inject authent manag authent usernam password method get call method servic test authent manag inject servic unit test need authent method pretend work correct case noth test method expect work authent test elsewher accord unit test principl howev authent need call insid method think need servic use mock authent manag return noth els authent get call method power mock easi mock mockito part power mock anoth way tell spring use mock instead real deal injeet authent manag servic design wrong thank edit found solut would like hear comment found nice way inject mock without use setter packag level order servic like save method call authent mock mock noth leav free test actual work insid servic method actual call manag method point
typic way view depend anoth work program two view html ajax html transmit via json html view standard default ajax look howev ajax view also meant option configur client side compon page display troubl wrap head around make eleg way handl requir standard way handl relat view like
add function object alreadi exist interfac certain amount well defin function let say work well implement interfac instanc need add new function like perhap roll new method creat browni obvious naiv approach would extend interfac pretti big downsid add new function without modifi exist api like chang class use new interfac think use adapt add function instanti would net someth like seem like good solut problem wonder awaken old god adapt way go better pattern follow realli bite bullet extend origin interfac
organ mvc entiti communic follow situat imagin main window object layout two differ widget list widget display widget list widget popul data disk display widget show detail select user perform list widget plan follow main window follow object list widget list view list model list control list view initi pass list widget list view control initi pass view model happen display widget display widget display view display model display control initi display view widget initi model list control display model wrap list control get inform current select data display display view rusti mvc ui program sinc expect interact layout differ mvc triplet communic word mvc focus interact three object put interact whole larger context communic similar entiti mvc
opensourc showcas mvc java swing allreadi creat small desktop crud applic use java swing hindsight quit sure overal design applic good also done read mvc look differ swing tutori problem got theroat knowledg mvc hand swing resourc implement mvc pattern would like get hand dirti see mvc implement swing real world applic opensourc project could recommend would also interest one project see differ approach best fit would softwar use relat databas backend see overal design compar former applic
view model communic accord wikipedia page mvc architectur view free notifi model also free queri model current state howev accord paul hegarti cours os stanford lectur page interact must go control model view never suppos know clear hegarti statement must intend simplif cours tempt say intend design explain two opposit point view
rewrit procedur php app use framework app current got user userbas probabl grow next month go separ storag etc look sever tb data later year move cluster base host app also provid multipl languag stage project sometim need add addit featur rather quick whilst build app way busi decis time money short someth run fast need multipl develop work applic littl tough even though everyth templat document well opportun rewrit applic build one team simultan redo codebas whilst one team manag exist applic new version caught switch question use framework applic look symfoni code ignitor obvious latter easier smaller learn curv team hand architectur applic build framework class know need reinvent wheel alreadi hundr function written seamless talk databas seen comment like want app want make live use symfoni know work made live word press websit statement well help advic pleas develop resourc problem us particular like restrict symfoni impos term directori name etc guess matter get use thing thing make busi decis ultim like abl justifi team point point view major benefit hire new develop familiar framework learn curv smaller logic support symfoni enough qualifi opinion help
mvc differ control router mean thing attach ur ls action action ur ls differ miss exampl vs
architectur project common one name respons softwar project year java desktop applic most event driven start scratch begin project made strong choic architectur softwar architectur introduc modul class repres functionn part applic well defin respons thing modul expos world set communic handl type communic handl emitt lt gt emit messag type handler lt gt receiv messag type puller lt r q gt make queri repres messag type q receiv respons messag type r pull server lt r q gt receiv queri repres messag type q send back respons messag type r begin execut applic instanci modul compos applic set connect emitt link one mani handler pull server serv one mani puller type two endpoint must compat cours class use repres messag immut defin one subproject everi modul depend subproject noth make modul decoupl modul know noth modul input output outsid world clear also dynam aspect applic dataflow defin uniqu place main function also super easi test modul provid fake emitt pull server plug modul handler puller thought architectur first big softwar project work made design felt like right thing project work fine total modul work togeth one co worker join project recent ask common architectur name design answer sinc realli familiar real world softwar architectur seem design close concept actor find languag scala mayb erlang howev actor provid decoupl provid design actor addit capabl actor messag queue thread execut kind also think design somewhat relat depend inject pattern sens depend modul defin central place howev pattern deal interfac messag defin modul communic notif request respons question final know softwar project architectur similar mine name edit doc brown suggest design similar flow design cannot agre one one comparis two design modul thing functionn unit emitt handler output pin input pin except mine name design communic handl identifi type connect modul equival wire puller pull server similar depend relat howev say explicit depend caller calle design decoupl defin concept board interest think borrow idea defin concept configur need configur modul program defin configur handler modul solut synchron concept map join feel need well found doc
proprietari php mvc framework small list php mvc framework like zend cake php yii etc notic open sourc tri find proprietari framework research unsuccess proprietari php mvc framework
iter non destruct impli contract let say design custom data structur like stack queue exampl could arbitrari order collect logic equival push pop method ie destruct accessor method implement iter net specif enumer lt gt collect pop iter would break enumer lt gt impli contract enumer lt gt impli contract eg
appropri use depend inject pattern sinc learn love autom test found use depend inject pattern almost everi project alway appropri use pattern work autom test situat avoid use depend inject
packag convent mvc app either convent accept way structur packag j2ee app tri follow mvc pattern much possibl foo bar user foo bar user servlet foo bar user dao foo bar user entiti foo bar order foo bar order servlet foo bar order dao etc foo bar dao foo bar dao user foo bar dao order foo bar servlet foo bar servlet user foo bar servlet order
choos right technolog messag system work messag system two year system written long ago gone team involv email document process basic process receiv email pars save attach samba share notifi messag processor robust java applic well process messag involv get user data ldap call file process web servic differ platform system sort deliveri servic poll databas fail time messag differ state resend file process part ejb web servic basic run command line util problem lie orchestr solut base open esb almost dead bunch bpe ls call call remot ej bs ejb3 glassfish v2 biggest problem much logic done bpe ls say databas updat done bpe ls persist layer look like horrifi spaghetti ever seen mention make net bean use edit run realli slow point file edit simpl text editor xml moreov system number nasti bug would requir major refactor fix dread even think messag handl manual support stuff almost client impact would like real transact system anyway question will spend lot free time tri reach two goal build replac esb bpe ls learn new prefer trendi technolog would like keep code file process ej bs sinc run fine although think get rid soap remot interfac ask insight technolog ie would let creat robust messag solut would friend persist layer anyth realli complex dbs messag meta data take care balanc poll call file process web servic requir deal ton xml differ place order add new interfac method would scalabl run number machin would allow realtim monitor like view messag queue current load status etc hope let learn someth new mean j2ee stack basic open anyth except bpel open esb
proper implement os mvc pattern brows appl doc came across sampl mvc pattern use ns notif center without use kvo would diagram repres correct implement mvc pattern wrong correct improv app start left light set right one one light may time user press right switch send target action view control view control receiv messag send messag right light data model right light use ns notif center notifi control right light chang control receiv messag perform follow method bool right light right light data right light right light imag set imag imag left light switch set els right light imag set imag imag switch chang caus ui switch call method left switch chang control control receiv messag send messag left light data model left light use ns notif center notifi control left light chang control receiv messag perform method shown modifi right light addit system use switch instead use ui button display text turn turn would switch updat text call right switch chang would call right switch chang immedi wait view control chang text
scenario use keep mutabl properti cach domain object anyth els inform purpos usual domain model object object properti mutabl properti immut instanc instanc id name immut properti special properti depend relationship object vari lifetim object usual scenario multipl client access data store orm tool usual model column properti relationship list mutual understand mutabl properti might outdat client repres cach valu properti howev mani circumst one want oper might requir actual state mutabl properti otherwis oper might fail produc data corrupt case attempt lock row question row alreadi chang cancel abort case oper done client applic point ask question odd enough turn surpris hard guess question would scenario use keep mutabl properti cach domain object anyth els inform purpos relationship care say want travers neighbour object want real cach state would involv databas transact mean process atom mayb map reduc
place store basic data use php build fulli modular cms destin public peopl might view framework intend write set extens extens make cms p complet modular problem figur load extens practic need get list activ extens load insid base class load read file header contain depend field field decid order instanti object problem cms start databas interfac extens store activ extens list databas might ask extens activ first place well administr interfac extens well obvious first instal cms extens activ default could write list insid text file solut problem lot host nice script write file sinc cms public might problem
mvc mcv model defin first control fire base user request generat view output c v right
reflect lgpl simpli use reflect add method function class defin lgpl librari link count modif exist librari would reflect code releas lgpl
relationship busi logic layer data access layer work mvc ish app experienc mvc henc ish model data access layer hard test tight coupl tri uncoupl natur relationship model know dal dal know model model dal listen specif case web applic model client side javascript data access back end use ajax persist back end current php sql may switch python googl data store gae
servic locat realli bad peopl say servic locat bad expos depend random method class constructor argument like instead consid function like imagejpeg gd obvious inject call somewher class like servic thing function depend instanti object somehwer class method like pdo thing exact like servic fuss servic locat evil
java iter list iter point element javadoc list iter say list iter current element cursor posit alway lie element would return call previous element would return call next java list iter implement point element rather current element seem make client code less readabl repeat call get next get previous assum must good reason choic side note wrote littl librari call peekabl arraylist extend array list iter list iter provid peek next peek previous method implement like
shard mongo db read mongo db came across shard get exact watev understood better small server huge one data storag data exceed capac one server use anoth machin store data anyon give soem idea shard
inadvert creat mediat mvc current work first biggish project frontend facebook applic sinc last tuesday span loc say use mvc architectur never rigid enforc hobbi project read part pure mvc book quit grasp concept mediat sinc understand see need project yet use singl mediat yesterday went back design board requir chang notic could move ui element view class view essenti manag lifetim ui event ui model technic view becom mediat model ui therefor realiz today could move ui stuff back view creat mediat class handl event view model understand correct think devolv view current handl event model ui mediat ui class view
intercept vs inject framework architectur decis framework help design common task done use common compon log cach rais event particular sure better use depend inject introduc compon servic properti exampl kind meta data place method servic use intercept common task exampl inject version intercept question solut best complic framework intercept win option interact intern valu method use cach servic exampl use way rather attribut implement behavior mayb solut solv problem
hide depend servic servic abstract work call class usual like protect helper method make sentenc less verbos way implement depend hidden children servic io c contain allow use privat properti inject depend
model per databas tabl use codeignit found similar situat repeat model method creat model per control would creat model per databas tabl consid good practic way method written twice instead model per control sever small model share exampl model method get user user id could write user model php one downsid see might call sever model rather controllernam model php could load sever model sever method might use control affect perform speed could best way tackl note similar question cover ground model per databas tabl
get jms front end current web applic would like add messag featur order use jms actual open mq implement provid glassfish problem know get messag notif background listen foreground use jsf framework import could pleas tell notifi user receiv messag like chat suggest welcom
tool support messag format specif compani defin manag messag format specif common compani creat custom tool creat work document work lot system communic via udp messag system interfac control document word html describ messag scheme document descript messag along field usag note look standard format ic ds write tool help creat think creat icd schema defin ic ds data interchang format xml json protobuf could creat parser generat human readabl document html pdf even messag pars code use appropri want reinvent wheel want get carri away propos sound reason
cqrs cach invalid load balanc slowli tri migrat web applic use cqrs princip particular separ write read interfac command queri implement reader class read data db also implement decor reader cach data avoid unnecessari roundtrip db moment decor cach per request like cach data longer durat eg slide minut window howev problem command updat data invalid cach write occur like captur notion explicit domain model specif read interfac c write interfac realiz variant observ pattern would probabl applic sure captur domain model also identifi anoth problem name cach key name role lister want cach list lt domain role gt user eg typeof list lt domain role gt userid key chang domain role know key name thought observ someway respons perhap interfac captur concept domain final realiz form distribut cach would help seem like implement detail want captur invalid notif observ concept domain model pointer would appreci
pros con implement requir differ layer crud app lt domain object gt persist databas new requir keep track lt domain object gt creat sinc app open user see done see three way implement everi time app open creat new sessionid lack better name store databas store sessionid foreign key lt domain object gt use custom queri access data e select domain object sessionid current session id except perform filter busi layer keep track data databas instead model keep track new lt domain object gt problem enough experi understand consequ approach exampl seem like put busi logic databas persist data pros con approach
advantag use busi logic model mvc framework often heard use busi logic model think use busi logic control would run faster view direct connect control want know advantag use busi logic model
mvc appli web almost instantan whenev talk develop model view control mvc say make request url server build entiti model provid visual represent model mean mvc web meet peopl develop employ mvc write web applic usag mvc desktop style applic one new paradigm would like know super set mvc
php use iter buffer result best use iter php implement best avoid load object memori simultan construct exist php queue result oper use iter avoid load object memori simultan exampl would curl http request rest server case http request return result la curl would better go stream result limit pitfal awar use stream better replac curl php nativ stream socket intent implement iter rest client separ document orm maintain gain benefit reduc memori usag increas perform etc thank advanc respons
ui pattern function languag would like start fiddl clojur script puzzl point problem good way deal state chang come user interact tri work function let give coupl exampl mind applic run browser think issu general cours someth chang dom least would like find organ rest code work immut data structur say want attach event dom object hard most function way creat node attach hash map various event handler consid case use event deleg creat new node may attach event handler parent node probabl alreadi exist would chang hash associ alreadi exist node say design autocomplet modul input field everi time user press key make call server get suggest easi suppos want optim bit know result match foo point ask result match foobar filter former need build kind cach cach updat everi time user insert new word superset word previous enter model cach reason way seem hash map map word result mutabl suggest pattern would make easier incorpor chang due user interact function design
static class vs singleton class c possibl duplic differ static method appli singleton pattern need make decis project work whether use static singleton read articl like inclin use singleton better use static class singleton edit client server desktop applic pleas provid code orient solut
convent framework exist mvvm perl use catalyst render lot webform becom larg applic like way form data confus big hash control pass templat seem jumbl messi templat sure real disadvantag describ proper one solut decid convent hash e g anoth way store page form data attribut class view model pass whole object templat could use like way flexibl larg applic solut exist catalyst compat framework
creat share librari might use desktop applic web project involv number mvc net c desktop project compani last year also manag kept nose poke project read learn capac cours notic across various project team lot function well design good interfac abstract tend like work time notic coupl project exact class method copi obvious work one easili move new project probabl develop origin wrote mention fact one programm meet occasion suggest pull function core compani librari build time use across multipl project everyon agre start look possibl howev come across stumbl block pretti earli team primarili focus mvc moment project main start branch also number desktop applic might benefit share class basic helper method initi creat dll includ share class could use across project type web client etc start look ad share modul would use mvc applic howev meant includ refer microsoft web dll order leverag class creat stage mvc issu share dll refer web specif librari could also possibl use client applic dll referenc initi mvc eventu move onto mvc project alot class librari expect still relev mvc etc code within dll separ namespac compani dll primit compani dll web mvc compani dll helper etc etc question ok share librari like web specif featur creat separ web dll target specif framework mvc version ok kind issu might face use librari refer mvc mvc project exampl would think might run sort compat issu even issu develop use librari realiz need mvc librari might want use generic class etc concept seem like good idea time start think mayb realli practic solut number time seen copi class method across project proven test code bit unnerv perfect honest updat bernard answer taken board seem good advic howev want creat share class probabl use mvc mvc project howev share assembl refer one mvc framework order creat share class first place expand q2 want mvc web solut would share compani dll web mvc3 project would specif referenc mvc would mean copi code compani dll web mvc2 solut new mvc3 share project seem miss fundament design skill creation share assembl build referenc differ framework version might simpl suck creat compani dll web mvc2 compani dll web mvc3 compani dll web mvc4 etc etc librari
rubi shoe non trivial app take look rubi shoe gui develop rubi far pretti good experi make simpl app howev quit worri abl write larg scale applic exampl would go use mvp pattern framework abl make present concern leak view lack kind data bind code look like call present updat sampl properti updat view sampl properti label updat accord work would make present updat sampl properti return string call label text return valu think would violat mvp principl present logic view use work net mvp pattern know pattern appli correct shoe like tri resourc make non trivial app shoe especi use mvp pattern someth similar edit took look shoebox see peopl achiev framework though look extens first sight seem like simpl project real purpos updat final abl come someth satisfi oh way move green shoe written rubi run command line rather shoe applic packag issu quit yet
optim communic pattern updat subscrib optim way updat subscrib local model chang c central model c c updat done follow method publish updat model c subscrib drawback model big contrast chang result much data communic publish chang c subscrib subscrib updat local model way server drawback client need know busi logic updat model way server must assur subscrib model stay equal central model calcul delta patch chang c c transfer delta drawback requir calcul appli delta c c cheap easi oper client newli subscrib must initi involv send current model method alway requir think play chess concret exampl subscrib send move want see latest chess board state server check valid move appli chess board server send updat chessboard method send move method send delta method remov piec field d4 put tower field d8
c mvc realli necessari understand role model view model view control pattern hard time understand control necessari let assum creat chess program use mvc approach game state model gui view exact control case separ class function call say click tile perform logic model view
actual purpos mvc seen lot stuff describ done lot tell done way keep code readabl better reason
model view present web form winform window form project use model view present pattern would like build web form project top mvp structur window form project know noth asp net membership communic via present model busi layer user log valid web form project creat custom class inherit built membership role provid class use exist user role tabl well integr nice asp net login control howev current refer busi layer direct custom membership class valid user follow mvp membership code view refer busi layer model mean referenc system web secur model way still use asp net membership mvp webform winform project built top mvp structur think need pass depend membership present model quit see clean way one common mention benefit mvp allow build differ ui top present model etc howev practic realli work well best implement mvp separ per ui technolog also relat web form project session state someth view deal need wrap custom class interfac pass present maintain
usag repositori ef model code consum binari data databas convert bitmap point think whether appropri use repositori consum present layer use repositori exampl class creat model item public class real item public string name get set public bitmap imag get set public abstract class base repositori use uniti http uniti codeplex com inject depend entiti context depend public context get set public calss item repositori base repositori public list lt item gt select enumer lt item gt item item context item select item list lt real item gt lst new list lt real item gt foreach itm item memori stream stream new memori stream itm imag bitmap imag bitmap imag stream stream real item ritem new real item name item name imag imag lst add ritem return lst correct way use repositori pattern learn pattern seen lot exampl onlin use repositori look sourc code exampl public queryabl lt object gt select return q base context select q see behavior ad system approach confus mayb repositori someth els got wrong end extra benifit use right
dao webservic consumpt web applic current work convert legaci web base coldfus applic singl data sourc mssql databas multi tier oop current system read write databas usual stuff addit read databas export daili hour enterpris resourc plan erp system ssis job busi product item manufactur scm plan data reason opportun need convert multi tier oop newer modern erp system implement busi wide complet replac newer erp system offer sever interfac third parti applic like mine direct sql access either dot net web servic soap like web servic found sever suitabl framework would happi use coldspr fw sure design pattern appli data access object compon manag connect session token background question follow three part first concern move relat safeti ssis job protect downtim speed erp system direct connect one web servic note seem signific slower expect simpl small request often take whole second design pattern investig use cach protect data tier understand data access object compon connect direct web servic convert data type work domain object singleton act adapt facad correct part data access object setup connect usernam password could set multipl user connect multipl time respond session token need provid everi subsequ request share across whole applic setup new connect everi user applic keep token session scope might quick hit licens limit set connect per page request design pattern miss manag multipl connect request access use first free connect worth note erp system die need reset invalid connect start scratch depend web servic use might need manual close connect session
must develop understand busi domain specif suffici work compani domain realli difficult understand high technolog electron applic softwar develop complex domain applic work display lot inform chart metric difficult understand without experi domain develop use specif describ softwar must specifi particular chart must display kind metric metric follow arithmet formula way develop realli understand busi task ok specif realli detail author forgotten use case quit hard develop find solut hand train everi develop busi aspect long difficult give import detail specif know perfect specif exist train develop understand busi domain edit keep mind answer compani could use extern develop format domain week
sql db queri encapsul softwar system frequent write small applic either web base otherwis requir heavi databas usag attempt various way handl put actual sql queri sort ad hoc orm system includ model build allow sql insid model sort factori style method model built factori class allow know sql third entiti map model base field key databas generat sql code fli base common knowledg method best anoth way miss clear lot base context system usual produc lightweight tool util framework experi never found feel intuit right clunki also want go full framework django rubi tool creat varieti languag usual warrant level surround footprint
command queri separ multithread safe interfac like command queri separ pattern oosc eiffel basic either return valu chang state class make reason class easier easier write except safe class multi thread run major problem separ queri command basic invalid result queri anyth happen question handl command queri separ multi thread environ clarif exampl stack command queri separ would follow method push command pop command return valu top queri return valu empti queri problem get empti status reli top realli retriev element sinc call empti call top stack might empti goe pop amp top get item use top sure item pop solv use extern lock exact call threadsaf design
inject depend done ctor per method consid ctor inject make extens difficult code call ctor need updat new depend ad method level inject seem remain encapsul class level depend find argument approach definit approach take inject n b search inform tri make question object
reflect use reflect still bad slow chang reflect sinc notic deal express express tree use reflect lot set get valu properti occur use reflect seem get common thing like data anot valid attribut heavi ms etc wonder chang sinc day year year ago use told avoid reflect possibl anyth chang speed machin chang framework speed reflect noth realli chang still bad slow use reflect
strategi avoid sql control mani method model situat run reason often one model start either grow monster ton ton method allow pass piec sql flexibl enough requir million differ method exampl say widget model start basic method get id insert record updat id record delet id get list get list widget fine dandi need report list creat start date end date list purchas start date end date list pend report start get complex list pend creat start date end date list custom custom id list pend creat custom custom id start date end date see grow eventu mani specif queri requir either need implement ton ton method sort queri object pass singl queri queri queri method bite bullet start someth like list model queri start date x end date lt pend custom id z certain appeal one method like instead million specif method feel wrong sometim stuff pile basic sql control right way handl situat like seem accept stuf queri like generic queri method better strategi
handl control control specif model got nice mvc set go websit requir view map direct model specif got generic report user need run creat util compar system configur right logic cram report control start comparison control feel like big abus system control use assort differ model pull data relat base user report run report control view group togeth file system url structur accept use control paradigm think better way structur control make control model use make report ect seem like good idea end one control model view per report comparison vast complic appar structur site
use thing mvc modelbind occur model binder mechan asp mvc insan power cool use mechan done seen guess sinc concept similar framework reason limit asp mvc
model control distribut subview view mani user interfac librari concept view subview accord mvc pattern everi view updat model soon chang view refer model subview calcul model also pass subview part model pertain subview pass subview say take certain action separ control subview action subview handl parent view control
structur mvc model orm model troubl get good folder structur project would like know way could use structur file current work mvc sturctur folder noth special far also use orm system easili get object databas like sort code resid model right get someth like look good far opinion one thing also specifi model use orm system model basic set valid rule like let orm know add new row updat exist one db check follow model first valid rule problem sort model one basic use getter setter get store data databas control model anoth model valid rule set want mix folder must come anoth structur someth like model real repositori sinc store object repo class commit method anyth like also store 2nd model valid entiti folder entiti idea structur
c best way central data repositori code c server client connect client get spun thread communic server host game inform must share client thread well thread choos spawn data like level data player onlin etc thread might possibl access data time c static static static field superior way realli want deal pass refer specif object everywher figur current implement goe oop etc would good case use singleton design pattern idea welcom
databas schema live mvc start check sql file creat maintain databas previous sql file kept total separ codebas version control like pragmat store databas construct manipul file code make sens subdirectori model separ directori somewher part sql statement data model access stuff mainten script ect stuff pragmat fit mvc folder structur
learn mvc home share control let start say asp net web form develop understand mvc new way thing learn mvc go tutori train video question tutori address attempt address start new project new internet applic templat visual studio look around project tri wrap head around mvc paradigm notic home page view file two page make sens share control think would make sens sever screen edit view delet data tabl home page necessarili anyth mean creat page need full blown control like sitemap someth stick view home view folder seem right know basic stuff big deal type stuff bug hell thank advanc clarif
design pattern coordin chang event listen work observ pattern java script use various popular librari number year yui amp j queri often need observ set properti valu chang e g respond specif valu chang eleg way subscrib handler call one time someth miss wrong design
tri grasp idea di uniti possibl appli simpl applic app basic form fill peopl form valid review report creat think di mess simpl exampl uniti mvc could use someth overkil seem idea behind di dynam grab object differ type case mayb set rule valid form someth like syntax rules1 dll busi rules1 dll calcul rules1 dll time goe mayb addit set rule would creat drop anoth dll like busi rules2 dll folder di would pick boot strapper chang littl use di might pointless layer abstract need right idea idea di could use type app could make entir view control model form dll make sens read alot theori struggl find concret exampl di
mvc java design pratic flaw java util observ java util observ plan learn model view control mvc develop use java read came across post mention java util observ java util observ mvc develop never heard upon googl came across post discuss design flaw mention class question three part class still use industri mvc develop except eclips mention post flaw class one use way mvc project develop industri would nice answer general term look answer like spring p edit desktop web applic
mvc view control interact java applic implement follow mvc pattern want window view contain form allow user add sever text field also button allow user add text field form sever question code ad new text field consid part control view control control anyth model modifi view violat mvc view violat mvc chang view direct model
verifi client view consist remot model design client server system via web broswser problem send data client via json javascript view show stuff user take action command sent back server usual stuff problem view data corrupt old one solut thought make hash via sha1 algorithm full object client model json data order also add delay system googl doc manag kind thing also send data everi time model updat make sens keep consist send chang think whole problem one
event driven design separ core ui logic new event driven develop feel lost tri implement event pass core ui boundari program follow exampl c want rule form cell chang updat correspond rule rule list rule list chang result recalcul rule current thought order keep core logic separ ui logic e core know noth ui core generat event process event generat other creat kind ui rule list wrapper process rule form chang event updat core rule list rule list term fire chang event ui result form use summari question want know reason purpos implement okay probabl mean core modul abl process event generat outsid ui separ kind mysophobia done better approach
good way jump particular state yield state function work embed code use c various piec function need non block state function most implement use switch various state exampl modem connect manag pseudo code state machin nasti best time start move differ paradigm use coroutin style function use yield statement cours c provid yield statement use protothread achiev protothread great give exact want implement non block state machin structur program style function rough translat pseudo code see protothread version whole much clearer amp simpler term flow logic learn protothread work look past minor boilerpl includ exampl jump particular state state machin common pattern come across state machin version handl eleg procedur version cours procedur version less bug prone clearer jump place whim except goto like avoid usual reason howev good reason want jump add signific bug prone lack clariti otherwis straightforward function obvious plenti way achiev necessari function none scale well state bear mind simplest possibl exampl real world function fill half screen way solv problem way muddi otherwis lucid flow logic
role singleton abstract class interfac studi oop c even though awar definit concept cannot realli realiz use let use class exampl singleton restrict class one object work design class would instanc mayb use singleton recommend necessari good practic abstract class far know one pure virtual function class becom abstract ad would right would need class whose object requir interfac interfac abstract class method pure virtual function main differ thank advanc
altern singleton pattern read differ opinion singleton pattern maintain avoid cost other use certain situat one situat use singleton need factori let say object f type f creat object certain class factori creat use configur paramet use time object type instanti everi part code want instanti fetch singleton f creat new instanc e g general scenario need one instanc class either optim reason need multipl factori object share common state e g factori know mani instanc still creat need way access instanc f f differ place code interest discuss whether pattern good bad assum want avoid use singleton pattern use idea get factori object registri creat factori point program start pass factori around paramet solut registri singleton shift problem use singleton factori registri case need initi sourc object factori object come afraid would fall back anoth singleton object provid factori instanc follow back chain singleton mayb reduc problem one singleton whole applic singleton direct indirect manag would last option use one initi singleton creat uniqu object inject singleton right place accept solut solut implicit suggest one advis use singleton solut e g exampl illustr edit sinc think point question misunderstood inform explain e g word singleton indic class singl instanc object b design pattern use creat access object make thing clearer let us use term uniqu object singleton pattern b know singleton pattern depend inject btw late use di heavili remov instanc singleton pattern code work point unless whole object graph instanti singl object live stack main method alway need access uniqu object singleton pattern question whether complet object graph creation wire depend main method e g power di framework use pattern singleton pattern free solut
replac dao layer develop seri webservic base spring spring mvc first time dev career plan replac dao layer futur alway seen mention never current use spring annot could simpli chang qualifi name inject dao place use better global mechan could use current code look like declar dao inject go servic class chang qualifi name seem rather long wind better way basic futur want flip switch refer region dao point new region dao dao solut use annot prefer reason subject prefer realiz may case xml base config
global state evil start let say well awar concept abstract depend inject need eye open well us say mani time without realli understand use global variabl singleton evil global realli bad omin global state let say need global configur applic instanc system folder path applic wide databas credenti case see good solut provid set sort global space common avail entir applic know bad abus global space realli evil good altern
data object design problem goal tri figur best way model design implement user featur system background design line access request system compani use web base method user request access various softwar system sinc system user user focal point system user request access system user manag approv reject request system owner approv reject request system admin approv reject final secur administr approv reject add appropri activ directori group access target activ directori driven applic applic problem see entiti repres user core set class es system user object straight forward pass window login activ directori ad via ldap queri get info load object ldap queri user report user manag store ad user user system also manag user also databas system owner also system owner far assum manag someon least one direct report assign ad consid singl user object properti manag system owner howev construct object hierarchi exampl manag class inherit user quirk system owner could inherit user manag system owner manag howev manag system owner system admin secur admin user request access softwar system role system user overview user entiti user request access softwar system system manag user system owner user system admin user secur admin user unlik due organ manag may system owner alway system owner may manag alway system admin may manag alway system admin may system owner like secur admin may manag alway secur admin may system owner like addit info anticip secur admin use system user request access alway possibl manag may creat access request behalf one employe revok access fire employe exampl employe window domain access site assum activ directori group creat system admin secur admin user group dynam rather user one team sys admin user anoth team secur admin system owner subject chang store databas along option design altern approv vacat etc may need manag altern approv plan store user domain databas seem like easi model paper get good flexibl code stump suggest welcom edit base karl feedback prototyp model look solid oop perspect base intend use
mvc architectur close coupl model view control got app use mvc struggl littl control architect exampl view view subset model data howev unsur exact arrang normal view model direct call function control exampl sort interfac total encapsul never know control edit custom app written web framework look framework specif detail freedom make choic
proper way pass paramet mvc system tri learn java servlet jsp mvc concept built simplest mvc applic want give detail enhanc understand would need regist new row tabl databas pass various valu column system exampl user might want regist new event planner detail event involv detail etc pass long valu servlet paramet e http link illustr view realli unprofession show paramet link way pass
javascript mvc principl suppos want implement mvc java script ask mvc framework ask build principl let consid search page e commerc site work follow user choos product attribut press search button applic send search request server receiv list product applic display list web page think model hold queri list product object publish event queri updat list product updat etc model awar dom server cours view hold entir dom tree subscrib model event updat dom besid publish event user chose product user press search button etc control hold data subscrib view event call server updat model make sens
develop domain model alon ddd exampl seem common method develop domain model sit domain expert iter version model say whiteboard continu modifi chang presum agreement made model look project spent coupl day domain expert discuss domain want lock away produc draft model base understand rather produc model collabor domain expert could review could updat accord subsequ discuss anyon els work like anyon think good bad idea think mayb find easier think creativ alon
wizard like data collect implement help next next finish begin build interfac field tech close work order mani differ requir paper form differ custom hope build system set page form net wpf possibl use caliburn micro bad choic base rule display certain page automat start set basic framework consist wpf form button back next finish cancel frame end hope object pass identifi go get inform need decid page show show order updat databas user click finish anyth specif research learn make job easier finish product robust reliabl would good approach decid page show most would base someth like show form custom x like abl complex extens need end page form probabl also generat pdf file custom actual form fill sound like routin thing never person implement use anyth go blind would host window ask page need shown page speak host window pass entir data object bool function show let page sort mechan alreadi place regist page certain someth sure like fair easili updat app deploy via clickonc total number user forese futur ad new page object logic collect deploy caus troubl question could implement transact net could start transact window object creat individu page frame data work via share wcf proxi commit transact everyth work page build object main window pass object back origin applic data work e g make whole segment applic data unawar sure would work well sound like mainten nightmar wrong place put kind question look code feel right overflow word describ tri question thank read time cours day tri clarifi brain speak alway make gud word
map member respons organ work django project track art relat activ stuck human resourc part thing code class ensembl subclass organ organ one import field name ensembl anoth field player mani mani relationship player perform two foreign key field individu instrument idea perform individu particular instrument e g one individu two perform one guitar bass problem organ clean organ dancer instanc danc troup plus number generic individu number specif task track specif class like perform first think would best map individu organ mani mani relationship creat job class map individu job code class might includ row someth like perform work well instanc want keep track instrument perform play particular ensembl play multipl instrument would like abl make explicit ensembl player relationship made sens seem organ class never truli abstract still need abl track type job individu organ ensembl make sens map perform organ teacher school would like abl make explicit bassoon player teach bassoon school clarinet even though might play map individu school organ right also seem like would common problem convent way deal kind relationship effect code
mvc sever view control one view must one uniqu control question design architectur project around mvc c marmalad sdk project use particular mvc framework make one sever articl like origin steve burbek articl keep read concept mvc triad bog sinc took concept rather liter read first time look like applic built around mvc triad unit one ui piec suppos find rather un flexibl think mvc intend use research issu found sever exampl tight coupl control view name relationship text edit view text edit control get back project find could use one control logic unit like add element control sever view particular control clear think someth like add element control sort tab ui add element control add element tab view sever add imag view add sound view etc tab differ sub control tab view sum regard mvc pattern x framework particular understand implement pattern correct sever view control view particular control also correct keep state inform control stateless mean state place non domain state model thank advanc
regist input listen control view mvc use c sdk marmalad build project around mvc pattern app user input listen may regist certain ui element widget etc provid proper callback function accord mvc method control right scenario regist listen control must access view ui element less decoupl control present view direct access ui element must refer control incorrect mvc two think latter make sens better separ concern afraid overlook problem design thank advanc
depend inject sell let known big fan depend inject di autom test could talk day background recent team got big project built scratch strateg applic complex busi requir cours want nice clean meant maintain testabl want use di resist problem team di taboo brought time god approv discourag move may sound weird third parti librari usual approv architect team think thou shalt speak uniti ninject n hibern moq n unit lest cut finger instead use establish di contain wrote extrem simpl contain basic wire depend startup inject depend constructor properti dispos dispos object end web request extrem lightweight need ask review respons well make short met heavi resist main argument need add layer complex alreadi complex project also like plug differ implement compon want keep simpl possibl stuff everyth one assembl di uneed complex benefit final question would handl situat good present idea would like know peopl would present argument cours assum like prefer use di agre pleas say see side coin would realli interest see point view someon disagre updat thank everyon answer realli put thing perspect nice enough anoth set eye give feedback fifteen realli awesom realli great answer help see issu differ side choos one answer pick top vote one thank everyon take time answer decid probabl best time implement di readi instead concentr effort make design testabl attempt present autom unit test awar write test addit overhead ever decid addit overhead worth person would still see win situat sinc design still testabl ever test di choic futur design easili handl
definit state good way defin state state variabl state machin new previous non programm good way explain concept use write softwar concept state explicit taught begin program cours book common
ddd identifi aggreg root design web applic use domain driven design follow scenario applic group one applic applic multipl configur tri figur one aggreg object one aggreg root
transact design pattern mvc locat respons design pretti standard spring mvc applic tri figur respons transact manag lie read java transact design strategi one think best suit server deleg one control manag transact servic da os oblivi transact somehow feel right gut feel servic one control transact case control may call sever servic perform action handl transact mvc applic consid best place handl transact
given present model pattern view present model model respons ad child view exist view runtim build flex base applic use present model design pattern applic sever differ compon shown imag main view dashboard view alway visibl correspond present model model necessari view easili creat declar mxml applic root also mani widget view n view ad dashboard view user runtim simpl drop list need accomplish via action script drop list alway show widget view n alreadi ad dashboard view therefor state widget view n creat need store sinc list avail widget view n one ad dashboard view also need access compon system think need store model object understand present model design pattern view lean contain close zero logic practic view communic bind present model contain necessari view logic present model effect abstract represent view support low coupl eas testabl present model may one model inject order display necessari inform model contain view logic whatsoev sever question around design respons creat widget view n compon ad dashboard view respons dashboard view dashboard present model dashboard model someth els entir seem like dashboard present model would respons creat ad remov child view display without pass dashboard view dashboard present model list avail visibl widget view n compon need access compon well okay refer widget view n store referenc model good exampl present model pattern onlin flex also includ creat child view runtim
bad practic call view anoth view mvc plain view logic behind action control behind propous alert user someth like sent email confirm account access resourc etc view realli simpl call control action seem much overhead somehow feel like quit correct think handl kind situat guess question appli mvc framework case use asp net mvc framework
depend inject hand better altern composit polymorph first entri level programm fact finish degre final capston project summer new job project wait fill team new hire given book read learn wait textbook other much like code complet go book turn internet learn much possibl start learn solid di talk liskov substitut principl much els solid idea learn sat learn better began write code util di hand di framework develop comput thing notic feel familiar seem like much like work done past use composit abstract class use polymorph miss bigger pictur someth di least hand goe beyond understand possibl configur code di framework great benefit far chang thing without recompil hand sure differ state insight would help
relationship repositori unit work go implement repositori would like use uow pattern sinc consum repositori could sever oper want commit read sever articl matter still get relat two element depend articl done way u sometim uow someth intern repositori public class repositori unit work uow public repositori uow io c get lt unit work gt public void save entiti e uow track e public void submitt chang save storag uow get chang sometim extern public class repositori public void save entiti e unit work uow uow track e public void submitt chang unit work uow save storag uow get chang time uow refer repositori public class unit work repositori repositori public unit work repositori repositori repositori repositori public void save entiti e track e public void submitt chang repositori save get chang two element relat uow track element need chang repositori contain logic persist chang call last make sens also manag connect sever oper done repositori think use connect even transact sound mayb put connect object insid uow one insid repositori make sens well cheer
j queri json net servic layer wcf wcf recent discuss colleagu mine pros con wcf mention much code generat support wcf also overhead requir mention simpl j queri ajax post aspx page handler matter return json would work effici take much less code implement also awar new wcf web api feel technolog may solv bloat ness requir attain proxi etc output json develop relat db mssql storag model fair complex busi layer c data access layer entiti fw good technolog creat servic layer spit view model repres json cqrs command queri approach mind app would use servic layer support requir ui well provid avail subset servic output json data servic subscrib word admin panel support admin ui servic endpoint return json access configur made administr ui potenti technolog use transport communic layer like use pure res tful approach url rewrit ii obvious avail technolog wcf wcf web api even separ straight request respons queri string aspx handler would use mvc net solv entir problem mayb singl page app approach suggest feedback develop type applic thank
use visitor pattern larg object hierarchi context use hierarchi object express tree pseudo visitor pattern pseudo use doubl dispatch design howev questionn pretti comfort sinc number implement interfac signific need add extra oper implement uniqu differ express oper composit ie oper node contain oper leaf node travers current perform call accept oper root node tree turn call accept child node turn time come need add new oper pretti print basic see two option keep design ad new method oper deriv class expens maintain option imho use true visitor pattern expens extens option expect implement come along way overload visit method one match specif implement question would recommand use visitor pattern pattern could help solv issu
const vs readon singleton singleton anchor togeth differ data structur part expos singleton list object repres necessari key column order connect link data structur doubt anyon would tri chang object differ modul want explicit protect risk current use readon modifi object use readon instead const list read use const emb item referenc assembl therefor trigger rebuild referenc assembl list modifi seem like tighter coupl would want modul wonder obsess moot point question altern see use readon make variabl privat wrap public get struggl see advantag approach seem like wrapper code provid much addit benefit question high unlik chang content format list compil thing avoid use magic string place unfortun code convert use singleton present string likewis know chang contain class list normal argu encapsul advantag get wrapper provid feel case repres sampl singleton question take reason approach case worri const vs readon better way provid inform address addit concern first understand folk oppos use singleton think appropri use case constant state inform open differ opinion solut see singleton pattern singleton pattern use second broader audienc c cli similar keyword readon initon strict c type question liter field versus constant variabl c cli sidenot discuss nuanc use const readon
event sourc readi prime time event sourc popular lmax mean provid speed perform scalabl transpar persist transpar live mirror rebrand event sourc type architectur pattern known system preval yet never familiar pattern lmax team went public pattern prove numer product system therefor even conserv individu feel empow embrac pattern event sourc system preval exot pattern best left fearless
multiten data share plan stage new webapp lean strong toward multiten model app file storag function user upload oper file would like abil user share file howev typic accomplish multi tenant model exampl would someth like googl doc user file edit tag build collect file share doc collect someon els collabor everi user databas tabl strategi would one use allow kind share minim duplic file associ metadata
make modular reusabl loos coupl mvc compon build mvc3 applic need general guidelin manag complex client side interact compon definit one compon general way compon control model view compon logic place insid three part compon sort standalon contain form data need interact updat ajax besid intern logic behavior compon need abl talk outsid world mean provid data event sort compon get embed page notifi compon updat base current state data idea use client view model java script would hookup relev compon page control interact would make compon reusabl modular independ context use would bit stuck know good approach technic possibl achiev use java script jqueri confus part updat via ajax ensur compon proper link view model compon ajax updat even wors remov dynam ad also view model construct technic use compon work synergi web found various exampl similar approach oversimplifi even dummi specif provid valuabl resourc general solut kind implement serious exampl would also help note aim make interact mani compon page simpler robust eleg
organ product databas develop web base store mvc close base sport store exampl pro asp net mvc framework use sql databas access system data entiti db context tabl describ product sell column name descript price seem work fine howev also want includ imag probabl imag per product 150kb think would conveni store imag binari data anoth tabl databas includ column identifi product relat work seem ineleg better suggest realli like keep imag databas seem easier store path imag databas separ upload imag webserv
validat object vs singl respons like extnes point mvc allow view model implement validat object add custom valid tri keep control lean code valid logic exampl login view model implement validat object get login valid object via constructor inject seem ninject inject instanc view model realli common practic may even anti pattern good approach better one
differ class level attribut class constant singleton method differ given exist per class use one anoth e purpos use rubi
make ninject inject mvc view model configur ninject inject instanc view model ps abstract servic help valid tri burden model much respons
question model mvc pattern ms stuff non web work applic look employ mvc pattern come design decis point could use help applic go deal design state machin current mvc model hold inform machin state input output etc view go show diagram machin graphic allow user add new state establish transit put state pleas arrang among thing would like store part diagram state e g x state posit machin inform store later retriev wonder best go structur model seem like ui inform close relat view state machin model think secondari model might order reluct pursu rout ad complex ad inform current model seem right way go either first time use mvc pattern still figur thing input would appreci
implement state machin logic method requir object c hypothet object class class relat method give function want link object n method realtim request event trigger event relat singl method class singl event necessarili mean connect method also mean connect method class group method avoid link list brows entir list know method link ensur link method kept particular order let say alphabet order name class also involv massiv amount pointer usag exampl object employe jon jon acquir knowledg forget thing pretti easili skill may vari period time respons jon add remov cv implement logic
observ pattern unpredict observ time situat object creat unpredict time object creat import event event alreadi happen make object execut stuff right away event forthcom make object observ event event trigger object notifi execut code anoth design pattern wrap even replac observ pattern think look littl dirti
design hierarch structur lot read write process work video demand system part involv manag hierarch tree structur think window explor allow user upload video move folder around creat new folder etc user action allow depend permiss addit manag structur creat folder upload video subscrib view content read access number read signific write question big one store data databas write also sort cach use read use two databas better solut also resolv concurr issu think optimist lock databas resolv fair bit cqrs last month sure way go idea
messag technolog applic recent creat program send messag two winform execut use tool simpl built function prevent figur in out vast quantiti protocol exist readi learn intern differ these protocol googl coupl would great appreci good refer book give clean idea protocol work pros con coupl context list nice protocol found share memori tcp list item name pipe file map mailslot msmq microsoft queue solut wcf know protocol specif languag would nice exampl could net thank much
c iter lifetim detect invalid base consid idiomat c iter custom contain surviv contain destroy possibl detect iter becom invalid condit debug build practic detail recent brush c learn way around c part write idiomat wrapper around uripars librari part wrap link list represent pars path compon look advic idiomat contain one thing worri come recent garbag collect languag ensur random object go disappear user make mistak regard lifetim account path list contain iter keep share ptr actual intern state object ensur long anyth point data exist data howev look stl lot search look like c contain guarante horribl suspicion expect let contain destroy invalid iter along std vector certain seem let iter get invalid still incorrect function want know expect good idiomat c code given shini new smart pointer seem kind strang stl allow easili blow leg accident leak iter use share ptr back data unnecessari ineffici good idea debug someth expect stl hope ground idiomat c avoid charg subject
use default paramet error php mvc design custom made framework written php work good doubt certain thing right user call url exampl would resolv user user control edit edit action user control treat param suppos control user control exist could throw hand url could also use param index control default control case control index control user could action index control otherwis treat param edit treat param treat param actual work right framework basic never throw could ofcours say param given control name explicit name url want url invok index control index action specif tell control action use url url becom index index control index 2nd one action method user treat param edit treat param treat param way control exist rerout everyth param index control simpli throw error question one preffer allow option configur config file alway use one simpli best way
modular databas structur examin code base use work worri size packag grown actual code modular procedur broken small function testabl part issu see procedur singl packag almost entir domain model thought break packag creat sub domain center around procedur relationship object group bunch procedur relationship three tabl etc end result would lot packag packag would smaller feel entir code base would readabl procedur cross two domain model less struggl figur packag belong problem actual benefit would realli look general advantag modular yet consid latest develop procedur within packag alreadi reusabl advanc stage rare requir asynchron develop requir simpli ladder stori across iter guess question peopl know reason would break class rather method insid class right believ issu mega packag form benefit realli pin break readabl someth experi gain work would solv
best architectur asp net web form applic written asp net web form portal client project kind evolv rather proper plan structur begin consequ code mash togeth within project without layer client happi function would like refactor code confid releas project seem mani differ way design architectur would like opinion best approach take function portal allow administr configur html templat associ partner abl display templat ad frame code site within templat custom regist purchas product api implement use wcf allow extern compani interfac system also admin section allow administr configur various function view report partner system send invoic email notif custom current architectur current use ef4 read write databas ef object use direct within aspx file facilit rapid develop write site probabl unaccept keep like tight coupl db ui specif busi logic ad partial class ef object question goal refactor make site scalabl easili maintain secur kind architectur would best pleas describ layer whether use dto poco activ record pattern etc robust way auto generat dto b os futur enhanc simpl implement despit extra layer would benefici convert project web form mvc
best practic use n hibern session asp net mvc web api follow setup project sure recommend way insert session control think use di sure inject session open bind begin request deleg control constructor get question recommend way use n hibern session asp net mvc web api
java fx right way use properti domain object java fx provid bunch new properti object javafx bean properti doubl properti allow defin field automat observ synchronis mani jfx exampl mvc model class number properti field bind automat view howev seem encourag us put jfx properti domain object assum model class go domain object strike poor separ concern e put gui code domain anyon seen problem solv real life done
mvc right way mvc month use code ignit framework php still know realli thing right current model put databas queri select insert updat delet sampl one model control talk model call method model queri databas suppli data view display success alert error alert data databas inherit parent control check user log sampl view put html css java script code form valid code current form loop data suppli control statement hide show thing depend data suppli control code actual code applic current work work alon realli someon review code point wrong thing post hope someon could point wrong thing done also look guidelin write mvc code like thing includ view model control els improv current code right written realli terribl code duplic logic etc want improv code easili maintain futur thank
persist ignor object abl implement lazi load persist ignor applic singl respons principl practic mean domain object contain code relat persist instead contain domain logic assum mean code contact lower layer ie persist layer live outsid domain model class oc busi logic layer b assumpt correct say custom never contain method get custom get custom id c assumpt b correct assum custom domain object use lazi load properti point custom intern logic must contact oc turn retriev deffer data custom need contact oc receiv deffer data realli claim domain object contain logic relat persist thank repli jkohlhepp assum order provid custom provid class contain within busi logic layer gather repli assumpt b correct would check see privat order field popul null null far tell soon domain code need check whether privat order field popul contact order provid alreadi violat pi principl
code core php separ logic present various way acheiv someon pleas guid code websit friend design friend want use core php framework like codeignit someth realli like comfort look coupl roll mvc framework guid sure ideal approach sinc solut might come may various bug secur issu goal use plain php without help thirdparti framework code site logic separ view thank
nice iter name name iter return begin end iter class without sound clunki exampl get idea begin iter idea begin
properti c cost much class creat namespac like name space sub name space static class name code snippet code file want use class mani time creat properti code file like problem like
valid way elimin reduc state definit exampl state see diagram show easi exampl notic current state chang turnstil oper input insert coin push turnstil given twice row thought question bit came noth reduc scope featur project softwar push burden make intellig decis user suppli program cheat sheet make decis easier exampl instead tri write program drive car use two webcam could emb waypoint marker road everi ft place special reflect marker lane use databas terrain map help program make decis one would requir work tesla newton level genius assum program thing like dodg anim remnant explod tire etc take less drastic measur thing like cardboard plastic bottl deal occlus landmark indic caus vehicl adjust weather etc condit vs someon write connect dot algorithm ps would classifi two method cheat signific chang input output program first case whittl away program noth second shift much burden decis make onto whoever maintain databas transit system valid way elimin reduc state
ddd saga event sourc compens action simpli delet event store realiz question probabl rais let tri explain tri wrap head coupl relat concept basic saga pattern combin event sourc ddd concept good post wrap togeth get question minut think tri summar understand first might well wrong pleas correct case sinc might well impact ask question begin saga pattern sort broker given action end user autom etc essenti anyth go chang data divid action busi activ send activ messag messag bus turn send respect aggreg root taken care aggreg root oper complet autonom nice separ concern great scalabl etc saga instanc contain busi logic contain aggreg root send activ logic contain saga process logic often implement statemachin determin base action receiv well follow event e activ send saga pattern implement kind distribut transact pattern e one aggreg root work autonom without know eachoth existens fail entir action might roll back implement aggreg root upon complet activ report back saga case success well error case aggreg root return success intern statemachin saga determin next decid done case failur saga issu aggreg root took part last action call compens action e action undo last action aggreg root might simpli minus vote action plus vote could complic like restor blogpost previous version event sourc see blogpost combin two aim extern save result activ aggreg root undertak central event store chang call event context event store singl version truth use replay state entiti simpli iter event store essenti like event log combin two e let aggreg root use event sourc outsourc save chang report back saga enabl lot nice possibl one concern question felt need get shoulder sinc lot grasp one go given context mindset pleas correct wrong question aggreg root receiv compens action aggreg root outsourc state chang use event sourc compens action situat delet last event event store given aggreg root assum persist implement allow delet would make sens lot would anoth great benefit combin said might make assumpt base incorrect incomplet understand concept hope get long wind thank
clojur state persist learn clojur see someth leverag current job import convinc boss clojur killer featur java make worth invest featur guess clojur evangelist would tout state manag concurr exampl see often blog book account balanc updat multipl thread clojur state manag alway clean ensur balanc accur regardless number thread read write valu practic though applic would never allow account balanc live memori would persist outsid jvm probabl databas two hope obvious reason app goe databas need accur reflect latest state recoveri reason databas cannot asynchron updat read would block databas updat complet applic read manipul account balanc mayb scale app sever server balanc would need kept sync instanc clojur state manag handl situat like eleg instanc given scenario read account balanc would first need check databas get valu databas lock would block correct valu avail great clojur handl memori concurr eleg eleg extend extern state realli gain anyth note thing like express eleg etc rare consid killer featur mgmt
cqrs event sourc correct command general communic point point domain event communic pub sub basic tri wrap head around concept cqrs relat concept although cqrs necessarili incorpor messag event sourc seem good combin seen lot exampl blogpost combin concept given use case state chang someth say updat question would consid follow flow correct best practic system issu aggreg updat question command might separ coupl smaller command updat question target question aggreg root updat user action count point etc target user aggreg root send asynchron use point point messag aggreg root thing goe well fire event question updat user action updat respect contain state outsourc event store persist yadayada complet realli point event also put pub sub queue broadcast subscrib among like one multipl projector creat read view free subscrib event general question inde best practic command communic point point e receiv known wherea event broadcast e receiv unknown assum would advantag disadvantag allow command broadcast pub sub instead point point exampl broadcast command use saga could problem sinc mediat role saga need play case failur one aggreg root hinder saga know aggreg root particip begin hand see advantag flexibl broadcast command would allow
use di option io c framework step far consid log system use absolut everywher codebas note log exampl take liter point favourit log system could make everi singl class logger ctor param use io c framework could use someth like use point global log log messag hello log world compositon root main entri point program set global log new file logger somefil log could done singleton cours use di option io c step far would case
control factor maintain sensibl read mani post similar site howev still question best situat also answer contradict question question websit web applic control per section domain logic e product control news control contact control etc one larg ugli admin control contain logic add edit view delet function section imagin control get control wherea function over larg dozen function one control sit well read general consensus lump admin function section control howev also suggest creat new control admin section well would product control admin product control seem littl overkil howev real clue tip read would appreci industri best practis would nice know well
best practic file includ requir file one server catch xmlrpc php request line requir one make life simpler creat separ file requir requir xmlrpc file best practic open issu know
import implement cach system mvc style framework write php framework wait groan subsid purpos learn best practic design princip etc entir self taught consequ gap knowledg understand mainstream framework incorpor form cach system guess keep regular use class file close fast load right ideal envisag system somewhat self monitor self manag track class file usag memori limit request process perform remov item cach automat longer need increas cach size perform drop low etc even form basic garbag collect better noth right question first understood everyth correct far import implement kind system regular includ requir method determin memori usag system perform metric cach class use sleep wakeup magic method also gather store class serial use session variabl temporari db tabl kind flat file sq lite db cach thank help suggest
design pattern except mvc web want know design pattern web besid mvc know design pattern registri observ factori activ record mvc set design pattern folder structur design pattern like mvc set design pattern edit program languag php
distribut applic use rabbit mq way creat applic bound context use cqrs amp event sourc order make bound context talk plan use rabbit mq requisit follow bound context must know bound context must hinder bound context rabbit mq bound context avail messag receiv must wait patient return ie everi event publish must forward least bc interest therefor think referenc queue band master queue creat produc event event store store dispatch consist two step project event everi littl project project littl tini store event alreadi project warrant idempot period time publish event queue band master queue would fail step rabbitmq avail expect event store tri dispatch messag rabbit mq sometim realli though precis part must say band master bound context know everi differ b cs look one read band master queue decid event public also respons handl saga send correct action bc order comun bound context use dedic queue bound context creat exit bc bound specif queue add event come outsid event store afterward project project architectur work see major flaw
add complex custom form creat two form work wpf applic import export delimit text file end user control encapsul logic delimit configur control individu select delimit preset dropdown quick select certain common combin csv task modifi export configur dialog want preset featur modifi also cover text format option relat delimit chang appear export configur dialog set question applic import involv ad new control bad also need addit preset avail import dialog presenc may impact behavior dialog overal unsur best way three option come mind cours might miss one clone user control make requisit chang dialog separ control howev control lot logic common uncomfort dri perspect keep singl user control throw mode properti base set show hide certain control swap item sourc preset dropdown etc attract sinc involv less copi past cost singl control complic overal perhap difficult maintain road redo whole thing architectur behavior relat aspect proper manag separ view model new view model programmat configur repres differ work mode basic swap list avail preset repres instanc preset class creat two differ set ui repres differ layout one simpli control option care gut instinct best option concern excess effort though picki one first two option pitfal thought bit histori user control person feel kind pita maintain want cautious case overeag rewrit emot reason
templat render engin legitim use singleton wrote standalon singleton class scaffold tonight serv facad class includ templat class view class templat view name instanc store scaffold object templat contain view view contain view templat contain view render make scaffold singleton seem like good idea want control object construct want one instanc gui render regardless templat render state easili releas scaffold class test reason whatev want seem like accept use case specif design consider overlook religi war pleas includ languag hope languag agnost consider say script languag singl thread
would constitut mvc even loos sens work kind crm sale guy offic job role spare time task type thing claim develop anyth like would definit like pursu career web develop line think need much stronger understand oop principl design pattern mvc could even consid basic way develop section app html page use j queri listen event send ajax request server redirect class method perform usual simpl crud task send back json respons client reflect page would constitut mvc even loos sens present complet seper thing like databas interact there go interact two like say earli stage grappl comprehens mvc whole thought would appreci thank
mvvm ddd wpf layer applic project structur guidanc tri setup applic structur vs want tri futur proof reason level applic wpf write old winform app follow convent layer tier acronym etc fair largish enterpris applic plan use linq sql db like alway ms sql also exist skill set want follow mvvm ddd best get confus structur applic combin let tri illustr exampl follow mvvm folder structur may look like fit simplist ddd layer approach project structur might resembl put model domain layer version say person lead anoth question would put repositori map db object domain object would assum data view get would go ui would view model also final would embed busi logic found follow code plex ddd exampl help seem web app though may matter ignor shine get wrong know mani folder call whatev want tri figur place thing scale abl place necessarili call heart question might shown like tbl person object generat dbml obvious would belong data layer would model dto domain model whatev call seper layer project call person would need mapper person tbl person sure put view model say edit person would properti pull person possibl well final view bound view model clear paragraph fill assumpt guess hope someon help clear air offer insight month year kick need
depend inject good practic reduc boilerpl code simpl question even sure answer let tri code c use depend inject avoid global state work quit well run unexpect undefin behaviour often howev realis project grow write lot code consid boilerpl wors fact boilerpl code actual code make sometim hard understand noth beat good exampl let go class call time factori creat time object detail sure relev time object quit complex time differ format convers neither linear straightforward time contain synchron handl convers make sure proper initi synchron use time factori time factori one instanc applic wide would qualifi singleton mutabl want make singleton app lot class need creat time object sometim class deepli nest let say class contain instanc class b class class need creat time object naiv implement pass time factori constructor class pass constructor class b class imagin coupl class like time factori coupl class hierarchi like one loos flexibl readabl suppos get use depend inject start wonder major design flaw app necessari evil use depend inject think
zend framework view helper composit review piec code perfect candid abstract away view helper howev moment piec code use two view helper get final display question new view helper creat recommend inject two helper use alreadi one creat get final result need seen anyth initi feel code probabl need refactor think dev will outlin seem like nice middl ground
wpf mvvm ef poco guidanc requir simpl architectur sorri poor english develop applic use wpf ef code first use mvvm caliburn micro use most crud work creat base view model lt gt class wich view model inherit expos select properti bind view know recomend expos model view make thing simpl get app run problem want pollut model ef poco class notifi properti chang data error info edit object etc someth realli duplic model properti view model give tri bind model direct would like use attribut valid sinc model alreadi use approach past silverlight ria case ria servic generat class plumb code get valid errro use valid class also need indic compon error ui think need implement data error info model happen right notifi properti chang use someth like notifi properti weaver problem edit object someth abl use attribut valid would nice someth like magic busi base class implement interfac lt model gt encapsul model bind move know make work implement manual interfac vm think duplic code make cring wpf develop kind thing today secret ninja techniqu awar
justif bidirect relationship typic tri avoid bidirect relationship cost recent tri follow domain centric design philosophi look advic best way solv specif problem implement basic 2d grid basic class item tile list item world 2d array tile struggl put move method move item one tile neighbor tile initi inclin would place move method item class sinc item actual move howev would creat circular depend past alway work dumb object case move method higher layer kind world manag move manag know tile item interest propos other might avoid circular depend maintain domain centric philosophi
di stabl depend volatil depend recent read mark seemann depend inject net attempt appli learn new project work stump particular scenario tri determin depend inject read sever question elsewher discuss similar scenario roundabout manner think narrow under conceptu question titl stabl depend volatil depend put anoth way stabl depend volatil depend stabl depend realli stabl quick exampl situat class stabl depend chosen inject instead instanti intern hold via composit howev stabl depend volatil depend inject class pass stabl depend constructor whatev reason smell littl bit fair straightforward simpl contriv exampl see thing get hand quick complic real world situat stabl depend realli stabl compos resolv prior construct class inject realli forese stabl depend chang replac anoth implement hand practic pass depend parent class children parent child composit sens seem expos detail children parent would violat law demet edit chang volatil dependency1 volatil dependency2 interfac clarifi intend satisfi multipl possibl implement lsp compat edit think read keith answer default kramer comment make realiz mayb name stabl depend think depend first place someth ever expect multipl implement mere implement detail class use composit contain stabl depend class knowledg construct stabl depend problem think big question stabl depend depend volatil dependency2 inject depend reason intent purpos class depend volatil dependency2 fact pass depend stabl depend implement detail unrel di
factor intellisens support strong type enough justifi use anaem domain model easi accept object use layer except layer nomin data layer howev easi end anaem domain model object represent data real function howev use object fashion bring benefit factor intellisens support strong type readabl discover etc factor strong argument otherwis anaem domain model
follow tdd inevit lead di learn test driven develop tdd depend inject di invers control io c time write code use tdd alway end use di class constructor wonder learn tdd natur side effect tdd question follow tdd princip write unit test depend extern servic inevit lead di
use unit work repositori pattern servic orient enviro creat applic framework use unit work repositori pattern data layer data consum layer present depend data layer design exampl crud abstract form depend repositori repositori architectur work like charm client server environ ex wpf applic sql server look good pattern chang reus architectur servic orient environ cours idea idea adapt design pattern keep current architectur creat new unit work repositori implement work servic instead orm data layer consum loos coupl data layer possibl problem unit work creat context track object state client side send chang server side call commit someth think ria done silverlight diagram idea add anoth layer add anoth layer let say local servic data provid put data layer unit work repositori data consum layer like ui rewrit consum class crud class depend repositori depend anoth interfac diagram pleas note local servic layer current architectur expos data layer function anoth word ui layer communic data local servic layer wherea local servic layer also use data layer
initi depend tdd applic tri learn implement tdd mock fake object one question initi depend applic implement tdd exampl articl begin mock moq show exampl constructor take file writer paramet suppos want suppli real file writer case actual applic fake one unit test question real applic suppli paramet suppos caller applic depend well constructor caller code respons mayb better way use factori would factori work factori distribut constructor paramet like manner
action control manag strategi mvc app anyon name useful strategi architectur pattern alloc action differ control use mvc pattern develop web applic develop web app use asp net mvc3 framework still figur manag action control one approach creat singl action control url best choic sinc much control creat list avail url support web app devid group creat separ control group act differ manner seem like becom face face kind mess consist approach manag action control
inherit command event sourc order redo thing sever time want factor common stuff instanc let say cow hors cow produc milk hors run fast eat grass eat grass applic receiv command json xml whatev deserialis class command handler far good get herbivor object access eat grass function whether hors cow matter realli problem inde let imagin cow produc milk morn want eat grass event repositori contain event milk produc come command eat grass command handler longer presenc cow herbivori know anyth produc milk explicit contextu command like would mean extern compon ask herbivor eat grass know bound context talk cow former command talk general herbivor behavior context call import knew need herbivor eat grass main problem possibl leakag domain specif one bound context anoth actual might mean cannot support abstract work interfac sever applic wonder could accept event rebuild herbivor mean find method appli event goe fine tri appli next one stream real simpl solut put eas know event might appli produc error rehydr object actual think less feel guilti thank help begin kind problem would glad news someon experienc
perform user authent code ignit control constructor clean code talk unit test mi ko heveri mention littl work possibl done constructor make class easili testabl got think way implement user authent mechan delv mvc develop code ignit design first web applic perform user authent protect resourc control constructor case everi public function control requir user authent control public method mix authent requir would natur move authent constructor method requir authent though current need made choic primarili keep control tight ensur resourc control alway cover code longev maintain given applic structur forese situat one affect control would need public method requir user authent see potenti drawback general implement e requir futur refactor good idea
differ spring setter interfac inject know constructor setter inject work spring normal use interfac instead class inject bean use setter consid interfac inject case constructor also use interfac confus follow exampl use job processor interfac instead job processor impl class tri find solut googl differ opinion writer even peopl say spring support interfac inject blog statement someon help exampl
depend inject n tier entiti framework solut current design n tier solut use entiti framework net data access strategi concern incorpor depend inject make testabl flexibl current solut layout follow solut call alcatraz alcatraz web ui asp net webform project front end user interfac refer project alcatraz busi alcatraz data model alcatraz busi class librari project contain busi logic refer project alcatraz data access alcatraz data model alcatraz data access class librari project hous alcatraz model edmx alcatraz entiti db context refer project alcatraz data model alcatraz data model class librari project contain poc os alcatraz model refer vision solut would work web ui would instanti repositori within busi librari repositori would depend constructor connect string alcatraz entiti instanc web ui would know databas connect string entiti framework connect string busi project web ui relat question design design even make sens term entiti framework capabl heard entiti framework use unit work pattern alreadi ad anoth layer abstract unnecessarili want web ui direct communic entiti framework even refer matter want databas access go busi layer futur multipl project use busi layer web servic window applic etc want easi maintain updat busi logic one central area appropri way achiev busi layer even contain repositori contain within access layer alright pass connect string good depend assum thank take time read
possibl implement complet stateless multiplay game face challeng understand program web version card game complet stateless creat object graph game begin distribut card player player b lay screen point could assum html querystr hold least state keep snapshot copi game state server side sole purpos valid input receiv web client still appear state game natur mutabl card dealt deck etc get strive minim side effect function object take input would design stateless card game
understand definit side effect possibl duplic side effect understand wikipedia articl side effect comput scienc function express said side effect addit return valu also modifi state observ interact call function outsid world know exampl first thing caus function express side effect modifi state function express modifi state observ interact call function outsid world mean pleas give exampl articl continu say exampl function might modifi global static variabl modifi one argument rais except write data display file read data call side effect function exampl exampl modifiy state also part observ interact call function outsid world
depend inject io c contain practic write framework use various io c contain castl windsor autofac mef etc net number project found tend frequent abus encourag number bad practic establish practic io c contain use particular provid platform framework aim framework writer make code simpl easi use possibl rather write one line code construct object ten even two exampl coupl code smell notic good suggest larg number paramet constructor creat servic tend complex depend inject via constructor despit fact compon rare option except mayb test lack privat intern class one may specif limit use c silverlight interest solv difficult tell framework interfac class public allow access privat part probabl shouldnt touch coupl object lifecycl io c contain often difficult manual construct depend requir creat object object lifecycl often manag io c framework seen project class regist singleton get lack explicit control also forc manag intern relat point class public inject exampl net framework mani static method date time utc mani time seen wrap inject construct paramet depend concret implement make code hard test inject depend make code hard use particular class mani paramet provid testabl interfac well one easi use best practic
use di di contain build small php mvc framework yes yet anoth one most learn purpos tri right way like use di contain ask one use rather use one without go much detail mvc divid modul control render view action request process main object instanti request object router inject request router figur modul call instanti modul object send request modul creat modul router send request figur control action creat control view render inject view render control control send data view view render need know modul control action call figur path view script modul figur inject view render modul call action method control call render method view render di contain set bunch init x method creat requir compon alreadi instanc modul init view render method init method get call right compon need compon alreadi set initi allow compon switch requir manual set like implement di contain still keep manual configur bare minimum directori structur name convent follow everyth work without even touch config use di contain inject everyth contain would inject creat compon compon use regist compon di compon regist compon di run time creat common config use figur fli compon need need set main use router use request main need use contain get modul modul need found set beforehand modul use router need figur set view render control fli advanc di contain set modul modul figur control action control need servic inject contain everi control start might inject everyth basic look best practic deal stuff like know di di contain look guidanc use real life isol exampl net sorri lengthi post mani thank advanc edit read bit seem inject contain object make use contain find stuff actual servic locat depend inject latest idea use factori stuff dynam acquir base someth like get control base router say contain would inject factori would use like servic locat non dynam compon would regist beforehand compon would built contain return fulli oper depend fill flow would look like get main contain main inject request router modul factori use contain find modul pre configur main use modul factori creat modul inject modul router request control factori view render modul use control factori creat control inject servic depend modul call action control send result view render render view get anywher
bind view control seen differ approach mvc web one like ext js bind callback view via control find everi element view ad functional like angular js lift framework bind view write functional control better cleaner ext js approach dumb view logic control seem clean problem global ds gui element relat navig gui element approach chang view control find button anymor multipl instanc one button id singl applic global id solv ds global view applic multipl time could mess dumb view layout design function break angular js approach bind view problem global ds also person chang someth view layout know ds anyway control put data right spot write angular js implement extj find element local id add handler control side seem differ thing second one one layer indirect seem cleaner first one seem less effort
manag dao method singl transact interview someon ask manag transact dao method singl transact desir capabl anyon fail need rollback method method call separ attach singl transact manag dao layer servic layer think question relat spring transact manag
mvc separ control start mvc newbi question would logic criteria defin control encompass exampl say websit help section sever option like us return instruct contact us employ opportun would access like mysit com help aboutus mysit com help return mysit com help contactus etc question help control us return contact us employ action respect view differ control action view set line reason determin separ control
mvvm child window data context child window data context view model use data context parent broad view view model rule guid make decis various view model access model abl find consist guidanc question ms definit mvvm appear silent child window one exampl creat warn messag notif view realli need data context sinc pass messag display need fanci bit would tap parent data context run anoth scenario need child window complic notif box parent view model alreadi get clutter plan generat dedic vm child window find guidanc whether good idea potenti consequ may fwiw happen work silverlight know question strict silverlight issu
resourc popular domain model come across mani situat build system librari clinic popular domain thing domain model librari probabl done time alreadi differ level detail cours exampl popular websit communiti one find readi made domain model popular system whole purpos tri achiev quick get grasp domain model customis need invent wheel seem realli absurd system might model proper previous note know googl might sound like perfect sourc better repositori peopl post model other share
domain model php program php sever year past adopt method handl data within applic built mvc past reason understand oop within php know implement need serious work past use relationship model databas tabl know research realli best way forward far understand creat model realli care under databas whatev storag mechan use care action data establish creat model let say exampl person person object could children human children also person object held array add person remov person method accept person object could creat person mapper could use get person specif id save person could lookup relationship data lookup tabl creat associ child object person request likewis save data lookup tabl save command push limit knowledg want model build differ level differ room within level want place item room would creat class build level room item follow structur build mani level object held array level mani room object held array room mani item object held array mapper class higher level mapper use child mapper popul array either request top level object lazi load request seem tight coupl differ object albeit one direct ie floor need build build level correct way go thing within view want show build option select level show level option select room etc may also want show tree like structur item build level room hope make sens struggl concept nest object within general concept oop seem separ thing someon help would realli use mani thank
reus data crud method data access layer updat quick agre put crud method data access layer howev current project issu legaci system quit lot crud method concret manag class peopl includ seem add new method rather reus exist method know whether exist method need even sourc code realli need read code make decis updat quick time get familiar dao api back question solv project say reus realli need reusabl rather excus
question identifi compon mvc current develop client server applic node js express mustach sql howev believ question most languag framework agnost first time real mvc applic troubl decid exact mean compon done web applic could perhap call mvc confid refer server js tie whole applic togeth initi compon includ databas connect think model view receiv http request decid view use mean server js file control mix code belong compon break server js file exampl code server js file anoth file belong name session js receiv cooki object read store data decid valid user session also includ function name login chang valu cooki first thought would part control sinc kind dealt user input suppli data model thought mayb model sinc dealt applic data databas data suppli use view even wonder could consid view sinc output data cooki part http header output
mvc two model requir softwar long time almost back end centric recent decid learn swing tri appli mvc principl realiz swing view handl compon add window frame panel control code respond event howev come model quick found need two model one back end model repres under data univers model complet unawar ui fact even display second version model addit attribut govern display relat aspect exampl project chose tool cross refer databas instanc schema tabl huge enterpris applic contain db instanc sever hundr schema thousand tabl sometim look unfamiliar code tabl name find instanc schema chore tool display column db instanc schema tabl column contain uniqu name click tabl name instanc schema instanc column get filter show particular tabl occur click schema name instanc name result similar filter behavior two column backend model contain three level tree instanc schema tabl inappropri ui want display second display model built backend model back three column store flag indic entri visibl base user input two model signific differ structur display model entri contain refer backend model entri sens display model entri adapt allow backend model entri handl display appropri way run across refer gut feel must common problem anybodi els run issu accept ui program way accomplish object
singleton pattern prone thread safeti problem singleton pattern prone thread safeti problem best method work around
get progress review solo junior develop current work person compani solo primari develop boss get client mock png design templat hand system work fine realli enjoy type project work small medium size busi usual want cms system develop scratch build customis backend client add edit remov categori tag product etc output front end accord design templat hand time gone project increas complex shop cart order featur common e commerc type featur system work fine realli enjoy issu person develop programm spend lot spare time read program blog check stackexchang read suggest program book current pragmat programm realli good far brain exercis lumos com khanacademi math problem lot physic exercis person develop type activ help feel though miss feedback critiqu boss great never hold back prais regard work unfortun either busi check code honest think one specialti provid feedback want know wrong right put much logic control modul code enough etc done develop littl famili budget app tri clean effect current know want know somewher submit app season develop provid feedback subsect code like codereview stackexchang appear requir entir workflow want critiqu know lot ask expect main advic given look job within team certain someth look later track want persist current employ situat want develop mani bad habit let know provid inform help clarifi right place type question apologis advanc want use reddit felt communiti foster well thought respons
separ versus segreg term segreg use cqrs pattern differ segreg versus separ case
event sourc persist read event sourc question regard persist still db entiti right event replay everi time applic start get latest version entiti memori seem like wast larger system larg amount data point event sourc replay event popul data store requir analyz data
let model instanc choos appropri view class use categori good design assum abstract base model class call money sourc two realize bank card cellular account money sourc list view control want display list list item view differ money sourc subclass defin categori money sourc overrid concret sublcass money sourc return suitabl view class ask model object view violat mvc principl avoid class introspect construct thank
advantag use templat languag work cake php app view consist raw html embed php echo statement time gotten rather messi go rewrit code wonder make sens rewrit view templat engin twig smarti experi templat engin advantag use templat engin
put busi logic mvc design creat simpl mvc java applic add record data form databas app collect data also valid store data sourc onlin differ user data most numer natur numer data store databas sql server want app perform comput display result user interest comput done must encapsul user must abl view simpl comput data exampl column data minus b column data divid c column data know write store procedur want three tier app want data put databas record work upon perform calcul origin data remain unaffect new data post calcul must store new entiti record databas write code background calcul rule busi logic put new java bean file
access repositori domain say task log system task log user specifi categori task default status outstand assum instanc categori status implement entiti normal would applic layer entiti like consist told entiti access repositori would make much sens entiti status repositori dependeci inject anyway real depend feel thike domain make thedecis task default outstand previous version feel like applic layeer make decis repositori contract often domain posibl extrem exampl domain decid urgenc entiti way would want pass possibl version urgenc way would want calcul busi logic applic layer sure would appropri way valid reason access repositori domain edit could also case non static method
variabl introduc state read c code standard line variabl introduc state deal littl state possibl lifetim short possibl anyth mutat eventu manipul state deal littl state possibl mean impur languag c state manag realli way deal littl state possibl limit variabl lifetim
php differ design pattern implement oo control oppos procedur control exampl straightforward index php control procedur script like navig procedur script essenti act simpl control control mechan basic procedur script make control class instead procedur script must control class alway tie rout mechan
display function live mvc web app use yii framework mvc php framework pretti similar standard web base mvc framework want display relat data mani mani tabl list string view assum tabl schema like post display like achiev someth like post view model gt tag array tag object associ model question amount code logic okay view person think rather refer properti call singl function code live model control helper potenti may want use view well ultim think pure display issu would make think view repeat code view want use
asp net mvc control separ best practic new asp net mvc web stuff want know separ page logic differ control like exampl use home buy product product buy sign move logic new separ control one control per page basic rule
distribut uniqu databas alreadi product let assum success web spring applic run sql postgr sql databas traffic becom high amount data becom big distribut databas solut need implement address scalabl issu let also assum applic use hibern data access layer clean separ da os ideal one abl add remov databas easili failback solut welcom would best strategi scale databas possibl minim shard code shard applic
depend inject ioc contain close project make sens assembl project depend inject contain one use code project question came read ioc articl justif use depend inject articl friend reus class replac depend class class get inject instanti class would use inject object need instead pass layer target bad learn bad practic pass instanc sever layer mayb reus part project know know good justif
domain expert make class diagram domain expert team use uml class diagram model domain model result class diagram technic model rather domain model serv sort technic specif developp concept implement model end domain expert end job architect technic expert right normal domain expert develop technic profil class diagram kind model use
follow domain entiti contain logic creat delet entiti far understand case domain model dm contain code creat delet domain entiti instead job layer ie servic layer ui layer top dm creat delet domain entiti b domain entiti model real world entiti assum particular real world entiti abstract function creat delet real world entiti assum domain entiti abstract real world entiti could also contain logic creat delet entiti thank
model view present model view control possibl duplic build websit better approach mvp mvc tri learn differ mvc mvp model far see much differ term architectur set question mvp model chosen mvc model situat one better
mvc anti oop main idea behind oop unifi data behavior singl entiti object procedur program data separ algorithm modifi data model view control pattern data logic algorithm place distinct entiti model control respect equival oop approach model control place logic entiti
depend inject simpl name counterpart inject object tutori book never seen singl word describ object inject object inject instead term use like inject point denot object contain inject object noth think sound right except mayb inject target never read anywher singl word simpl express like must name recent fantasi book seri
sampl domain model onlin store group softwar develop student current studi cape peninsula univers technolog current task develop web applic function onlin store decid back end java make use googl guic persist most irrelev question general idea far use php creat websit decid would like tri hand project regist busi actual implement websit problem experienc domain model most small issu howev start impact schedul project sinc young student virtual experi busi world spend quit signific amount time plan domain model first place issu pick say refer custom entiti order entiti current custom id order entiti list order entiti custom entiti late wonder persist mechan put client id physic order tabl even entiti start wonder load custom object search entir order tabl order custom id say custom order take extrem long time also busi process complet clear final question anyon know sampl domain model similar tri achiev safe look refer want accus steal anybodi intellectu properti especi sinc might implement busi
di hypothet readon setter c sometim would like declar properti like wonder anyon see reason syntax exist believ subset get privat set could make code robust feel setter would extrem di friend cours interest hear opinion think awar public readon field interfac friend even consid said mind bring discuss edit realiz read comment perhap idea littl confus ultim purpos new syntax would automat properti syntax specifi back privat field readon basic declar properti use hypothet syntax would interpret c reason say would di friend reli heavili constructor inject believ good practic declar constructor inject field readon
mvc deleg begin os programm use model view control model design pattern model know anyth view order make compat view view know anyth model interact via control usual way view interact control deleg user interact app view notifi control call method model updat view necessari howev would make sens also make control deleg model convinc way go could handi model notifi control process finish exampl ask extra input user enough inform complet task downsid though control would deleg control model realli proper way notifi model chang view vice versa correct wrong conclus realli think good idea control deleg model deleg view would fine way mvc model handl way control deleg control model proper communic like said beginn want stuff right way immedi rather spend load hour model work anyway
valid error generat use data mapper pattern work save state object databas use data mapper pattern look suggest guidanc valid error messag generat step step general step see data mapper use get current info assoc array object db mapper return associ array eg person mapper get person id id person object constructor take array argument popul field 3a get request input html form use chang info person popul use person getter 3b post request person object alter post data use person setter valid error messag generat per field basi take place person object person mapper object data valid place field person object data mapper save person object updat row databas guidanc suggest critic name call would great appreci
architect model data access layer object websit task design data layer websit work interest architectur code best flexibl maintain readabl general acut awar valu complet separ actual model data access layer model complet naiv come data access case particular use model may built databas may built soap web servic seem make sens factori data access layer creat model object far made pseudocod get use control fashion similar follow question good structur data access layer good idea use factori build model object data think misunderstood someth general pattern read write data access object creat model object
modular enterpris architectur use mvc orchard cms make larg scale mvc applic use orchard go separ logic modul also tri heavili decoupl applic maximum extens testabl rudimentari understand io c repositori pattern unit work pattern servic layer pattern made diagram wonder correct anyth miss regard extens applic note modul separ project updat mani ui modul use db modul split servic ui modul use ui modul split made time independ
differ deleg dispatch differ deleg dispatch quit sure either concept
aggreg root repositori dilemma big dilemma leagu team player entiti creat repo leagu team cannot exist without leagu first bound player team realis would problem free agent also bound player leagu wonder player could exist without leagu team total confus question would make player repositori includ leagu repo thank
ddd model design repositori persist perform consider read ddd time tri figur best approach sever issu tend agre design model persist agnost manner repositori load persist model valid state approach realist practic mean normal model hold refer collect anoth type persist model mean persist entir collect fine realli need load entir collect everi time load model probabl special repositori load mayb subset object graph via dt os other load entir object graph use dt os stop client code direct call complet bypass model mapper factori creat model dt os mayb depend design model might alway work might allow model creat valid state edit asid lazi eager load use di framework inject repositori model anoth approach correct approach
function intellisens code brows benefici use depend inject contain question realli base php could valid dynam type interpret languag specif method generat code insight object brows develop environ use php storm find intellisens invalu provid limit static analysi pars doc comment obvious lend well obtain depend contain ide idea type return develop lose plethora case framework anyway rich document provid doc comment start see stuff like code insight work effect comment tight bound wors come sync code modifi comment obvious comment could improv referenc widget interfac might well use factori avoid requir extra type hint comment dic complex boiler plate import averag develop code insight intellisens nirvana decoupl
py qt applic architectur tri give sound structur py qt applic implement card game far follow class ui game describ ui cours respons react event emit card widget instanc main control respons manag whole applic setup subsequ state applic like start new hand display notif state chang ui end game game engin set class implement whole game logic way concret code python follow better way inject control ui game class ui game control total road
design data structur shard design data structur applic best practic make sure shard particular follow better creat relationship databas establish relationship sql queri necessari
access function user control without event generic function seem access function mainform direct usercontrol easier rais event exampl function main form display one desir usercontrol center tweak make function static access function refer user control parent rather rais event seem conveni like rais event seem complex case need declar new user control b event also includ initi usercontrol c display insid event show initi user control b much clutter hard code read later addit pass paramet anoth usercontrol nightmar like need save paramet artifici sender usercontrol class cast back later insid event opinion complet prohibit code like least generic function like mention clearer code need small tweak reus prefer
name osherov modifi singleton pattern pretti well sold singleton evil line thought nevertheless limit occurr want limit creation object roy osherov advis plan use singleton design separ logic singleton class logic make singleton part initi static variabl exampl two separ class way keep singl respons principl srp also way overrid singleton logic art unit test pattern still perpetu global state howev result testabl design seem good pattern mitig damag singleton howev osherov give name pattern name pattern accord gang four import name pattern immedi increas design vocabulari let us design higher level abstract standard name pattern seem differ enough standard singleton deserv separ name decoupl singleton perhap
creat repositori special function like get staff activ seen lot articl none realli help want use dapper dal creat repositori special function like get staff activ use repositori implement dapper extens generic crud idea handl databas connect open connect everi function suppos use transact scope somehow repositori work share connect order transact work open connect bll use queri execut direct still thing
mvc model know anyth view work game without get detail use mvc pattern rule whatev want call make game view includ everyth need draw thing screen control pass input model model contain game logic problem game made mobil devic vari screen size feel model need know view size appropri adjust thought could put adjust view seem ineffici translat model posit view need posit everi time model know size need adjust question pass view size model without break mvc feel person still decoupl way size number could still chang view time long size want get communiti respons seen mani discuss mvc use game clear want answer use game break mvc let know view size edit detail game need want pass view object posit need set relat edg screen ui element appear relat place sprite size stretch window size wider phone screen place relat screen edg gave view handl need flag say element posit say x number pixel top bottom right left allow view draw inform accept want know better way still mvc seem way repeat logic knew view size model could convert relat posit absolut posit one run convert everi updat screen
higher order function fp interpret kind depend inject accord articl object orient program design depend inject involv depend consum declar compon depend defin interfac contract injector creat instanc class implement given depend interfac request let us consid higher order function function program languag e g haskel function data list function transform list anoth list order perform job use consum extern predic function must provid caller e g express select even number input list construct similar pattern illustr filter function depend consum signatur gt bool function argument interfac contract express use higher order injector particular case inject implement x gt mod x contract general one relat higher order function usag pattern function program depend inject pattern object orient languag invers direct depend inject compar use kind higher order function
use structur core librari graphic toolkit domain java mani program languag often structur deal graphic element colour shape etc often ui toolkit thus relat strong coupl ui element domain applic often deal colour shape etc display statist inform element right display save element littl behaviour would make sens avoid reinvent wheel direct use structur java awt make element avoid coupl toolkit like element go away anytim soon part core java librari time feel weird import java awt server side problem use java util list everywher feel differ class would recommend practic case
inject class allow constructor paramet di given follow code client class depend class parser howev want use depend inject unit test would caus problem send input string parser constructor like calcul insid client calss solut found modifi class took paramet constructor util setter instead exampl set input string howev think might better solut sometim modifi exist class caus much harm benefit inject class allow input paramet class must take input paramet constructor would way inject proper updat clarif problem happen product code decid updat clarif tri find general solut problem exampl code class paramet constructor one
contract project line item hierarchi design consider current applic allow user creat contract contract project project sub project sub project well line line number sub line sub line current design contain circular refer like get away current look bit like use v vm pattern use model associ view model popul larg edit screen user modifi contract properti object thing start get confus add exampl cost properti line issu reflect highest level contract chang made lowest level look thought chang design remov circular refer one thought contract would dictionari lt guid project gt would contain project regardless level hierarchi project would guid properti call parent could use search contract dictionari parent object logic could appli line level thank help appreci
permiss add log code mvc model work c win form program written mvc actual model view present style want add line code respons log event write two three line code need write present section get idea line sampl code alreadi exist save metohd compani applic present present cs class written code lie follow part present
make creat viewmodel runtim less pain apolog long question read bit rant promis summar question mvc world thing straightforward model state view show model control stuff model basic control state stuff control depend web servic repositori lot instanti control care suppli depend noth els execut action method control use depend retriev updat model call domain servic context say like user want see detail particular item pass id item paramet action nowher control refer state far good enter mvvm love wpf love data bind love framework make data bind view model even easier use caliburn micro feel thing less straightforward world though let exercis model state view show view model view model stuff model basic view model state clarifi mayb deleg properti one model mean must refer model one way anoth state stuff view model depend web servic repositori lot instanti view model care suppli depend also state ladi gentlemen annoy end whenev need instanti product detail view model product search view model call product search web servic turn return enumer lt product dto gt everybodi still one thing call new product detail view model product dto shop cart web servic dependci bad imagin depend mean product search view model need take depend well also chang constructor pain call inject product detail view model factori creat initi product dto factori func easili generat io c framework think bad init method leaki abstract also use readon keyword field set init method sure reason call inject product detail view model abstract factori creat product dto pattern abstract factori usual recommend type problem though genius sinc satisfi crave static type actual start use amount boilerpl code think much know apart ridicul variabl name get use view model need runtim paramet get two extra file factori interfac implement need type non runtim depend like extra time time depend chang get chang factori well feel like even use di contain anymor think castl windsor kind solut drawback correct wrong someth anonym type dictionari like static type yeah mix state behavior way creat problem exist mvc feel like current realli adequ solut problem like observ thing peopl actual use mvvm either care brilliant solut found depth exampl mvvm wpf exampl nddd sampl project immens help understand ddd concept realli like someon could point direct someth similar mvvm wpf mayb mvvm wrong turn design upsid mayb problem well know peopl ask question think one summar correct conclud view model integr point state behavior reason difficulti mvvm pattern whole use abstract factori pattern best way instanti view model static type way someth like depth refer implement avail lot view model state behavior design smell
handl object need custom behavior need exist entiti databas simpl exampl assum applic send notif user various event happen databas might follow tabl event generat program hard code point applic event instanc generat need notifi subscrib user applic edit event tabl except initi instal updat new event might creat point event generat applic need lookup event get list user best way link event sourc code event databas option store event name program fix constant look name option store event id program static guid look id extra credit similar circumst may want includ custom behavior event type want subclass event entiti class differ behavior lookup event want return instanc subclass instanc class event public guid id get public guid event name get public read collect lt event subscript gt event subscript get public void notifi subscrib foreach var event subscript event subscript event subscript notifi subscrib notifi public virtual void subscrib notifi class wake event event privat readon waker waker public wake event waker waker waker null throw new argument null except waker waker waker public overrid void subscrib notifi waker wake base subscrib notifi mean need map wake event whatev key use look databas let say event id store relationship go event repositori class wake event know declar id static member method backward event subclass instead retriev event id ask repositori wake event like public get event lt gt event goe first one tackl best practic
model view control mvc compon handl save load oper tradit mvc applic compon model view control respons read write model disk
asp net mvvm handl multipl data transfer object singl page asp net mvc edit page allow user make edit parent entiti also creat child entiti page note make data transfer object view two html form one custom edit http post custom order creat http post view page load custom order creat form use custom order html form action post differ control http post action result custom edit action result concern custom order control http post action result know return model state valid right problem jqueri unobtrus valid handl valid client need complex valid ie server need handl valid
mvc dao call control model seen various argument dao call control class direct also dao model class infact person feel follow mvc pattern control coupl dao model class invok dao within control invok model class decoupl model class apart webappl expos function various way like rest servic use model class write dao invoc control would possibl rest servic reus function right summar approach approach approach note definit model model model manag behavior data applic domain respond request inform state usual view respond instruct chang state usual control event driven system model notifi observ usual view inform chang react would need expert opinion find mani use one
reliabl solut annot reflect code metadata c languag support java like annot c like attribut code metadata general howev mean possibl languag exampl php stubbl doctrin annot librari question anyth like c reliabl way reflect extend code metadata c ideal look someth read javadoc like comment edit reason need oppos want need generat c code code metadata databas well abl edit metadada updat databas volum work variabl structur function generat databas justifi solut
know violat mvvm wpf recent grab auto generat tree view item nest tree view node wpf use item contain generat get code behind thought certain violat mvvm right sign someon violat mvvm
tdd test object ad collect collect privat assum plan write class work someth like ad effect someth charact ad collect remov effect revert chang charact remov collect easi test effect appli charact test effect ad collect test could write start construct class could write test contain would return true certain effect collect arrang case function would return true implement add method need place thing collect ok sinc contain depend add work tri creat add first well first test need tri figur effect ad collect would way see effect collect contain function way could think test would use fake collect mock add remov contain real collect want collect affect outsid sourc want add set effect collect effect function want class function one thing think could work silli make declar privat data structur type everi declar charact way test without break tdd principl still allow keep collect privat
depend inject condit object creation base type servic endpoint initi use di follow style end point use across app chang requir go differ type custom legaci regular requir base type custom valid persist custom differ way e g legaci custom persist legaci repositori wrong way break di somth like option seem like di possibl valid servic custom repositori switch base type seem wrong chang servic signatur save valid servic valid custom repositori repositori custom dto custom invas chang break di use strategi pattern approach type someth like static method need know initi differ servic sure common problem right way solv without chang servic signatur break di
php mvc error handl view display user permiss build moder panel scratch mvc approach lot question crop develop would like hear other handl situat error handl handl error insid class method method return someth anyway handl error control pdo except handl exampl let say method return true user exist tabl fals exist return catch statement return fals control assum everyth alright truth someth must serious broken display error method complet break whole design mayb page redirect insid method proper way show view control right look someth like view also check includ index page prevent access direct view file differ document bodi way includ differ view ok proper way manag user right user right see part system verifi user permiss see view control view right permiss check direct view view contain sever form requir differ permiss would need make seper file put control also check permiss everytim form submit form data easili forg truth permiss check valid input turn control huge els cluster feel like time error check permiss valid littl actual logic normal even popular framework
put busi logic model happen multipl type storag alway thought busi logic control control sinc middl part stay static model view capsul via interfac way could chang busi logic without affect anyth els program multipl model one databas type storag dozen view differ platform exampl read question alway put busi logic model control deepli connect view realli make sens impli time want mean support anoth databas type storag rewrit whole model includ busi logic want anoth view rewrit view control may someon explain went wrong somewher
view view control mani one one one develop android applic typic view layout xml display screen correspond fragment purpos question may refer view control view fragment view control appropri name reflect display effect allow programm easili pinpoint file associ see given screen refer one one part question pleas note except similar display two view view control use two view use simpl switch type determin layout xml file load flip side current work os version app develop seem adopt one mani view control view approach appear one view control handl display logic mani differ type view view control assort boolean flag array data display use determin view load display seem cumbersom coupl comment ambigu variabl name find difficult implement chang project guy think two approach one would prefer realli consid put extra time work refactor os orient approach reason modular legibl peopl measur qualiti code base easi anoth develop pick reign easi pull piec code use somewher els
null valu vs empti singleton option field first develop parser xml base format 3d graphic call xgl question appli situat field class option e valu field miss take scala cours coursera interest pattern creat abstract class method need creat normal fulli function subclass empti singleton subclass alway return fals empti method throw except one question better assign null option field valu miss make hierarchi describ assign empti singleton implement
hierarch view view model present mvpvm work mvvm recent start use mvpvm want know creat hierarchi view view model present app use pattern mvvm would typic build applic use hierarchi view correspond view model e g might defin view follow view model view would follow would data templat say b view model c view model present use view b view c final step would put code view model would assign valu child1 child2 result would screen look someth like mvpvm would fair simpl simpli move code view model constructor present want busi logic b view model c view model would need b present c present problem im sure best place put could store refer present view model child1 view model child2 present e solut seem ineleg compar mvvm approach keep track present view model ensur stay sync exampl want button view click swap view child1 child2 might command follow would work far swap view screen assum correct properti chang notif code place present child1present point present view model child2 present child2present point present view model child1 someth access present child1present chang actual happen view model child2 imagin lead sort debug fun know may misunderstand pattern case clarif im wrong would appreci edit question wpf mvpvm design pattern asp net mvp
clean separ layer attempt domain driven design xaml c work applic use mixtur tdd ddd work hard separ layer applic question come solut laid follow plan use view model xaml ui write test defin interfac system follow code thus far view model blog post observ collect lt post gt first thought like load blog post method view model call static method blog post entiti problem feel like need inject data servic entiti object promot loos coupl two option struggl use static method use member method blog post entiti blog post take data servic constructor use depend inject resolv blog post instanc data servic implement use entiti call data servic put data servic constructor view model use contain resolv data servic viewmodel instanti option one layer look like view model present layer entiti domain layer data servic servic layer view model present layer data servic servic layer
view model suppos access main view model mvvm current work wp8 applic current design view bind specif view model direct look sampl though seem anoth way view model access main view model view view model mvm correct way caus flexibl issu futur
session awar model bad thing think specif rail suspect wider question rail web applic use data session model order model know log use method filter data databas depend simpl permiss system thing use session model rail requir bit workaround work feel someth worri big gotcha miss suppos right thing would return data filter want bit control pass view model seem avoid quit bit code duplic feel cleaner anyon tell problem
repres complex object depend sever class reason complex acycl depend graph depend form class x instanc contain attribut class attribut set initi never chang class constructor coupl paramet object know proper paramet pass constructor object contain class outer top depend hierarchi e class depend current ui layer creat outer instanc paramet outer constructor deriv user input cours outer process initi creat object need turn creat object need new develop user know depend graph may want reach deep set valu argument pass constructor inner class essenti overrid valu use current chang design support could keep current approach inner class creat class need case inform user overrid would need pass outer class constructor complex user overrid structur perhap user overrid could full logic represent depend graph overrid attach appropri edg outer class would pass user overrid everi object creat would object initi lower level object find locat graph check user request overrid constructor argument altern could rewrit object constructor take paramet full object requir thus creation inner object would move outsid whole hierarchi new control layer lie outer ui layer control layer would essenti travers depend graph bottom creat object goe control layer would ask higher level object paramet valu lower level object whenev relev paramet provid user neither approach look terribl simpl approach problem come enough past pattern read use python think matter much design level
constructor inject look term constructor inject depend inject go articl servic locat design pattern googl constructor inject got unclear result prompt check constructor inject specif type depend inject canon exampl would great help edit revisit question gap week see lost case anyon els pop updat question bodi littl learn mine pleas feel free comment correct constructor inject properti inject two type depend inject
avoid big clumsi ui tabl view control os problem implement mvc pattern os search internet seem find nice solut problem mani ui tabl view control implement seem rather big exampl seen let ui tabl view control implement lt ui tabl view deleg gt lt ui tabl view data sourc gt implement big reason ui tabl view control get big one solut would creat separ class implement lt ui tabl view deleg gt lt ui tabl view data sourc gt cours class would refer ui tabl view control drawback use solut general think deleg function helper class similar use deleg pattern well establish way solv problem want model contain much function view believ logic realli control class sinc one cornerston mvc pattern big question divid control mvc implement smaller manag piec appli mvc os case might general pattern solv although specif look solut os pleas give exampl good pattern solv issu pleas provid argument solut awesom
handl notif sever partial view model work refactor old simul ture machin applic use class contain state logic program execut sever panel display tape represent show state messag gui control start stop program list would like refactor use mvc architectur use originali frame way get access differ panel also strong coupl engin class gui updat way frame display panel state set text halt frame output panel messag append thing look put state relat code observ model class make differ panel observ problem java observ class provid global notif observ would prefer refresh everi observ everytim part specificali observ chang think implement sever vector listen state posit output messag feel like reinvent wheel though also ad flag observ could check like new messag avail tape move etc sound also approxim design btw ok keep fetch execut loop model move anoth place think theoric ideal way complet revamp small applic
proper perform pass oper result view develop web site self made mvc engin action control handl oper like regist login post submit etc action control receiv oper name paramet cours mast handl error user nick alreadi exist password short action handler notifi user question best way organ error view could easili get local user notif messag see two way first one defin error constant like local map second one defin abstract constant like pass field name case local look like like method advis someth els
advantag deleg pattern observ pattern deleg pattern one object direct listen anoth object event observ pattern number object listen particular object event design class need notifi object event would ever use deleg pattern observ pattern see observ pattern flexibl may one observ futur design may requir multipl observ
good way share specif data view model app context inject view model servic contain share data global filter applic wide properti case data specif exampl one vm implement master second one detail select tree item thus detail vm must know select item chang store inform either app context insid concern vm case updat notif sent via messeng see pros con approach decid one better 1st explicit expos share proerti easi follow depend app contxt becom clutter specif data 2nd exact opposit first memori load due data duplic may someon offer design altern tell one variant object superior caus miss someth import
distinguish ui command domain command build wpf client applic use mvvm pattern provid interfac top exist set busi logic resid librari share applic busi librari follow domain driven architectur use cqrs separ read write model event sourc combin technolog pattern brought interest conundrum mvvm pattern use command pattern handl user interact view model net provid command interfac implement mvvm framework like mvvm light relay command prism deleg command exampl view model would expos number command object properti bound ui respond user perform action like click button mani implement cqrs use command pattern isol encapsul individu behavior busi librari implement write model command command handler pair want work creat new order issu command creat order command rout command handler respons execut command great clear explain mani sourc good howev take scenario toolbar view model expos creat new order command properti command object bound button ui click ui command creat issu new creat order command object domain handl creat order command handler difficult explain develop find get tongu tie everyth command sure first develop pattern overlap like name terminolog also overlap approach distinguish command use ui use domain edit mention busi librari ui agnost e ui technolog specif code exist exist librari
sql rdbms one queri multipl call look around internet decid creat da os return object poj os call busi logic function method exampl custom object address refer would split rdbms two tabl custom address custom dao would charg join data two tabl creat address pojo custom pojo ad address custom object final return fulll custom pojo simpl howev point need join three four tabl repres attribut list attribut result pojo sql includ group still result multipl row pojo tabl join one mani relationship app code loop row tri figur row differ attribut record new pojo continu creat dao use techniqu break pojo creation multipl db call make code easier understand maintain
develop web servic global state new web program experienc comfort client side code recent dabbl web program python googl app engin ran difficulti tri write simpl app purpos learn main involv maintain kind consist univers access state applic tri write simpl queue manag system kind would expect use small clinic cafeteria typic done hardwar take number ticket machin number display call approach counter servic altern could given small pager beep vibrat turn receiv servic former somewhat better idea mani peopl still ahead queue situat global state last number queue need updat whenev request made server sure best store maintain valu gae context solut thought keep valu datastor attempt queri ticket request updat valu store put problem figur lock resourc request check valu middl updat concern may end ticket request queue number also whole solut feel awkward wonder natur way accomplish without go datastor anyon experi domain provid advic approach design applic
design pattern chain observ sever time found situat want add function exist observ observ relationship exampl let say observ class call price feed instanc creat varieti price sourc observ notifi whenev under price sourc updat price feed new price want add featur allow temporari overrid set price feed price sourc still updat price price feed long overrid set whenev consum ask price feed current valu get overrid way introduc new overrid price feed observ observ decor actual price feed implement get price straight chain respons handl observ event overrid set clear issu event observ well forward event under price feed think kind chain observ curious definit descript similar pattern
singleton life time avail destroy singleton design creat destroy time program creat avail life time program one best practic advantag disadvantag edit per link share mat singleton static disadvantag make destroy one advantag memori save use
fit establish site ci framework manag rather larg featur full nightmar site end featur creep set option etc code procedur function way would like move oo mvc setup quit new done alot research feel code ignit code choic framework use help quicken transfer look framework start construct list object creat class photo user forum topic forum blog blog post comment troubl understand generic univers object fall ci mvc setup best way organis kind stuff class general use multipl model view control
implement servic layer mvc defin servic layer host wcf build websit need use servic function websit written asp net mvc tri decid refer wcf servic mvc app larg complex websit chang week basi first reaction abstract servic refer servic one wcf host creat servic ref facad librari websit interact know exact use servic facad mvc start think model respons control get model model call servic need return control ask tri avoid mvc app know detail servic refer could model factori creat whatev model control need use servic facad accomplish good plan track
creat contract python current learn python java question contract exampl applic defin interfac plugin must implement main applic call java plugin implement interfac use reflect main app call way contract main app plugin refer one go someth similar python also approach better p post much concern philosophi behind two approach
script engin global environ java curious global variabl handl script engin look script engin preserv state global variabl upon invoc engin look script languag use script engin api java make multipl invoc script engin top level call eval evalu method preserv state global variabl mean consequ call eval use global variabl left last invoc script engin preserv state provid abil reset state global variabl initi state everi time script engin invok
io c contain servic locat pattern tri get understand invers control dos dont articl read one mark seemann wide link strong ask folk use servic locat pattern somewher along way came across articl ken help us build io c notic noth implement servic locat pattern question observ correct implement servic locat pattern answer yes io c contain like autofac use servic locat pattern answer differen pattern di invers control consolid answer answer kelli servic locat pattern inde use initi resolv call servic locat pattern use least answer eric simpli call ioc resolv interfac mean io c contain use servic locat resolv call somewher right answer tungano code contain constructor receiv depend contain use pattern realli programm use contain use pattern wire togeth basic use contain di servic locat answer gnat factori lookup use invers control learnt thank answer io c use servic locat pattern inher harm use io c done number way includ servic locat pattern part need take care use option inject depend
downsid implement singleton java enum tradit singleton usual implement java enum implement singleton awesom 2nd version downsid gave thought answer question hope better answer
desktop applic depend inject think appli real depend inject librari toy c gtk desktop applic chose n inject think irrelev question databas object main window sever util window class clear inject databas everi window object di use make sens inject util window class window class exampl class util class open main window util window also open util window general might realli complex graph open class might need quit lot window class inject worri usag go suggest inject mani class becom code smell use kind servic locat object
design interrupt oper find better topic user click button code start work anoth button click would stop whatev start run second button code user interact electr power detect connect devic softwar would cancel current event start power procedur design most appli code mean stop part would say event event handler etc bind condit event tell program without use ladder end process etc
creat manag class without global variabl singleton would like implement kind manag class applic charg load textur process distribut etc first want make global variabl simpli contain instanc manag class found question howev user seem recommend never use global variabl fine heard singleton though could use instead mean creat one instanc manag class sound good howev found question singleton appropri basic tell singleton scenario kind anti pattern bit lost approach take creat manag class whose requir access anywher
repres domain object relat recent question regard name awkward domain object number answer indic use wrong represent domain object summar chose use enum repres domain object use key lookup question want review decis use enum identifi altern jump bottom question tl dr domain descript applic respons perform calcul involv chemic compound basic equat calcul number mole compound calcul specif graviti densiti compound various concentr equat could handl method within chemic class like chemic get mole mass doubl mass gram chemic get densiti doubl concentr could implement method generic chemic properti class like chemic get mole mass compound cmpd doubl mass gram chemic get densiti compound cmpd doubl concentr think object respons point view first option method chemic class would better represent advanc equat involv calcul quantiti compound consum busi process calcul storag requir compound optim deliveri base upon standard contain size equat chemic compound input method storag tank cluster generat compound cmpd doubl requir volum storag tank cluster need know chemic dimens space tank within cluster chang base upon chemic requir volum chemic store affect tank materi select well impact safeti clearanc tank moment consid paramet space materi lookup item instead element compound respons know likewis deliveri optim affect chemic compound arguabl whether aspect compound responsibl storag tank cluster deliveri optim compon intend reus non chemic aspect applic question alreadi get complic call element foo bar foo bar could util deliveri optim foo use storag tank cluster applic various properti discuss far need store within databas persist layer realiz affect good design thought worth mention admit decis bias port applic anoth sourc forc everyth done structur manner write question highlight area better examin object respons function design far orient around lookup tabl use enum valu key tabl use key caus treat name object within program instead treat object system would oper upon pretti much releg chemic compound 2nd tier class status wonder right decis hand concern chemic compound class becom bloat beyond use tl dr implement must c use enum right choic done
use mvc java app need write cross platform gui applic process multipl thread visual fair larg quantiti data ideal applic relat fast look good app interfac consist tabl widget tree widget custom figur draw widget user abl modifi data one widget chang immedi reflect widget natur plan use mvc howev normal gui program c qt limit exposur java would realli appreci advic organ app java particular use swing java fx widget would pick job could recommend book onlin tutori cover aspect java platform great appreci feedback thank question origin post stack overflow site suggest appropri place ask
front end applic broken mv manner model dedic ui logic talk simpl ui logic like click button direct anoth page one action may result sever differ behavior depend current applic state may also trigger respons part applic current view publish ui event respons deleg part problem part order avoid write fat control hold arbitrari amount domain logic thought might nice non persist object model ui behavior sure make sens push problem around object happi
wcf servic proxi publish real time data wpf mvvm client task creat dashboard applic show real time updat server raw data come xml file intranet need pars present user option everi user dashboard pull xml file time updat read need use wcf servic consum xml file server side push updat client look servic need scalabl around concurr user start need scale hundr futur need updat xml file everi second minut right track wcf option consid
parser servic object fit mvc nsurl connect servic object xml json parser object fall within control layer model layer ok busi logic control model layer model layer repres ns array ns dictionari object strict structur custom object compli mvc pattern given app requir persist storag
use repositori pattern entiti framework job interview ask explain repositori pattern good pattern work ms like entiti framework case
immut stateless singleton bad late kind revolut singleton someth wrong stateless know overus talk appli everyth singleton
organ mvvm file solut fair new mvvm concept like lot flexibl give far howev struggl find good way manag code sever class sit folder solut xxx view cs xxx view model cs yyy view cs yyy view model cs zzz view cs zzz view model cs get idea start crowd solut make harder find file look standard way organ file creat view view model folder separ clean solut peopl found better way
one declar altern respons type e g json rail control action even utilis wonder accept convent rail control design current everi control app written set send json respons necessari thing ever utils html respons app good idea defin exampl make control code less readabl loc also mean think deepli good json respons html use decreas speed control develop especi true condit respons exampl posit see futur proof control e need json respons later alreadi written write json respons logic might well write xml respons e format xml
unit work repositori pattern depend inject advic develop seri repositori class unit work class plus unit work interfac cours use castl windsor inject depend via constructor busi tier class custom busi logic method like retriev custom save custom etc turn use uow perform databas oper struggl find bll class get instanc uow feel right inject ctr unit work exact unit work think individu method load custom save custom respons instanti uow lifetim oper howev mean resort servic locat anti pattern suggest welcom
use secur condit view violat mvc often display user e g web page base part secur check usual consid user level acl secur part busi logic system view explicit check secur condit display ui element violat mvc contain busi logic
get refer central asset loader everi widget work simpl ui system game build block widget object contain sever sub class widget e g label widget imag widget button widget sinc nest possibl button widget realli noth contain label widget imag widget pretti happi problem need use asset loader load imag cannot get direct disk multipl asset loader implement one platform game run one instanc creat earli state need pass asset loader object imag widget button widget sinc contain imag widget updat code need pass asset loader almost everi widget realli like see investig code base ui framework like notic android someth similar context object pass everi view use load resourc sinc view usual instanti magic xml annoy use think one way make singleton noth offer refer asset loader e g asset loader holder convinc actual wors think remot eleg solut note use depend inject framework option
jsf object like phase listen fit mvc pattern come jsf troubl distinguish certain object creat fit overal mvc pattern view simpl enough sinc handl xhtml templat come object like action chang listen phase listen valid navig bean convert filter first assum belong control seen number statement elsewher web state develop use mvc framework specif jsf major entireti control alreadi implement framework follow q amp inform still leav feel pretti vagu matter accept answer state consum jsf implement control thesi link bottom answer clear state listen part control pattern
newbi asp net develop forc mvc4 web form recent got hire new asp net develop c code behind arriv told move mvc bought two book howev day learn use razor use web form result via googl return articl web form view engin appar select option instead razor question possibl learn mvc web form razor possibl mean worth time stick razor cover book slowli adapt knowledg web form drastic chang need understood learn mvc web form perspect thank time
program object orient di framework possibl duplic invers control promot anem domain model impress project use di framework like spring guic tend lose object orient degener pure procedur design di central question implement object use also manag life cycl object mani oo design pattern howev reli abil busi logic wire object know exampl implement strategi pattern spring decis concret strategi use static determin configur applic instead piec code goe decor composit observ reason lead design function data separ want let di contain decid data creat split code data order part manag di contain contrari idea oo code data resid togeth one unit break encapsul data field data bean expos public getter setter use polymorph anymor code link data anymor virtual function work lead instanceof cascad know use also lose design reli polymorph di contain inject manag bean object also manag mix manag bean normal object non manag gap refer chain manag bean start di need put code control di contain use normal object anymor suppos reason separ code data done rigor di project see reason use di realli worth give much peopl care oo apart articl find discuss topic understand proper idea four point tackl appendix explan strategi pattern refer exampl let assum di version implement strategi context inject strategi exampl strategi exampl decid anymor strategi inject context configur would alreadi decid implement inject context yes di heavili appli strategi pattern alway static
someth like polymorph singleton resourc loader object load object disk zip archiv depend platform state e g path directori zip archiv possibl cach futur need singl instanc normal singleton would problem resourc loader multipl implement one chosen initialis turn resourc loader singleton think singleton hold refer singl resourc loader nicer pattern
migrat legaci procedur code mvc without rewrit recent start work php applic built mani year ago advent object namespac php code procedur separ present logic busi logic lack front end point front control file everywher seem random folder heirarchi howev work great custom despit code mess actual pretti fast like slowli move codebas someth maintain organ put mvc titl truth realli mean organ maintain key object effort degrad custom experi sort way overhaul take place rewrit option fulli separ view logic least best practic method implement new applic end point rout consist method layer persist data begin encapsul much code possibl object unit test feasibl point time
mvc page design split page mani partial current work mvc web app project need display lot inform front page relat new web page layout design hit wall term structur code behind page first thought split page mani partial possibl view model smaller easier manag although sure correct way go tri fit need page one view model display inform need question split page lot small partial make one big page
mvcs model view control store recent decid start learn os develop end read os program big nerd ranch guid book author describ design pattern mvcs model view control store basic idea sinc mani applic make use multipl extern sourc data keep request logic control get messi instead author propos move request logic control separ object short quot book model view control store put request logic separ object call object store figur use store object minim redund code simplifi code fetch save data import move logic deal extern sourc tidi class clear focus goal make code easier understand make easier maintain debug well share programm team cool thing asynchron store even though lot object lot work process request flow request respons one place control give us benefit code easi read also easi modifi want find pattern see other might say search onlin refer could find book pattern perhap known name author logic seem make sens seem like logic extens regular mvc pattern perhap realli much experi mvc pattern practic asid foray os develop sort use mvv backbon js consid mvc hope perhap someon experi shed light whether obvious flaw problem mvcs pattern miss
mvc pattern procedur php first anyth oo program mad believ think sort procedur mvc pattern php let explain better know variabl scope unless taken session databas redi etc never global refer singular execut script exampl obvious common situat data taken db otherwis object car per execut would name possibl appli mvc pattern procedur code simplic purpos imagin realli simpl social network like applic could structur like profil messag login php work control rout right view user messag php work class contain function eventu need control get user id id post messag id meesag etc simplifi lot think sort understand point would think implement long run
determin decor class avail via reflect creat pizza place applic employe abl creat order custom pizza number top school project requir noth question gui number checkbox employe use determin top pizza want use decor pattern want sure good idea want put decor separ namespac use reflect grab decor name name space use build checkbox list reason top ad later think would benefici abl add assembl top decor without recompil distribut entir applic thought learn reflect hammer tri pound everyth even remot look lilk nail
servic layer design develop mvc websit php first time would like implement servic layer design consider would like get advic backend mean larg enterpris system look keep thing relat simpl still leverag benefit servic layer idea control interact servic turn interact da os main question granular servic familiar concept servic granular soa never implement practic instanc handl user registr registr servic class user servic contain regist method along user relat servic former approach mean servic layer full small fine grain servic guess good thing latter seem hinder servic reus result larg class mani method instead perhap combin two approach ensur servic reus instanc registr servic interact dao class could user servic class regist method method interact fine grain registr servic way registr servic easili reus compos coars grain servic sure exampl reus would like instanc place order would need use orchestr mani differ servic guess could call layer approach seen discuss could structur way servic layer becom mess would love hear thought whether suggest recommend experi comment idea present thank advanc
mvc expos databas primari key go mvc tutori notic convent seem expos tabl primari key detail page url ie movi detail exampl tutori obvious problem thing like movi record post might bit differ invoic transact confidenti inform key sequenti guessabl tutori mvc app typic expos tabl primari key common librari pattern hide key want expos
cqrs repositori pattern invers control di assign poc project someon ask implement command queri respons segreg invers control depend inject repositori pattern someon gave poc solut project sure whether way done brief poc project project simpl tier applic present layer pl busi logic layer bll data access layer dal tier separ project present layer web applic bll dal class librari project busi layer defin repositori interfac refer bll librari ad dal project insid dal project concret class implement repositori interfac invers control appli sinc command queri respons segreg done repositori interfac busi layer declar add updat delet method read read interfac direct dal dal concret class implement interfac present layer contain refer bll librari dal librari call add updat delet rout bll dal read done direct dal believ conform command queri respons segreg concept bypass bll read illustr setup three project nw web nw busi nw data access snapshot code differ layer nw web class present layer public class custom page busi layer interfac nw busi namespac privat custom busi cust b dal read interfac nw data access read namepsac privat custom read lt guid gt cust r constructor custom page use constructor inject public custom page custom busi cust b custom read lt guid gt cust r cust b cust b cust r cust r nw busi declar busi interfac busi layer interfac custom busi void persist class busi layer implement busi interfac public class custom custom busi repositori interfac object inject constructor inject privat custom repositori cust rep public custom custom repositori cust rep cust rep cust rep public void persist cust rep add updat declar repositori interfac busi layer public interfac custom repositori void add updat void delet nw data access public class custom repositori custom repositori public void add updat implement add updat public void delet implement delet read interfac data access layer interfac custom read lt gt read return dto sinc databas may map tabl custom dto get custom detail id implement read interfac data access layer namespac nw data access read public class custom read lt gt custom read lt gt public custom dto get custom detail id implement gut feel someth wrong seem cqrs least implement address requir custom busi object custom class may need read databas intern purpos like initi variabl etc read direct defin dal layer way would refer dal dll bll would creat circular refer go ioc done happen common read requir across busi object
mvc share multipl model build java desktop applic attempt implement mvc gui interfac multipl view think pop window main view view associ model receiv updat run scenario two view need access particular data field one model requir one model know anoth option solv data field tabl popul one view subsequ access main splash view tri pass second model first constructor control howev feel sloppi model listen anoth model observ pattern perhap question subject
mvc isol view model logic understand model general consist data manipul view data display model keep model view layer decoupl simpl view tabl display data associ model manipul data base view type tabl model method involv use tabl model type view general breakdown data generic type integ string model therefor model handl simpl generic list data without need use tabl model case view chang anoth interfac model unawar view good program practic right chang view command line interfac associ model still abl perform function given correct associ list integ string whatev
mvvm clarif write first wpf applic becom familiar mvvm pattern built mani winform applic architectur success us littl bit troubl translat architectur determin certain piec architectur fit mvvm model histor gui main exe communic busi logic dll busi logic communic dal dll web servic dal interact db dal busi logic gui refer busi object dll transit mvvm fair straight forward gui still contain view busi ojbect still contain model dal still interact db although technolog implement may chang sure busi logic compon histor would provid function gui call popul control view ie get custom list would return list custom object typic crud function main hang whether mvvm pattern would call addit compon hous view model chang think migrat use busi logic compon view model busi logic compon repres view model
mvc basic data retriev model done view given concept skinni control fat model general accept view direct call model requir data output one consid handl get display part request within view control exampl attempt keep code fair generic control view make least sens case request essenti view control collect pass data view retriev leav control open pure applic level process e g handl get post request manag access right permiss etc well keep model reusabl good stuff exampl extend allow user filter result control would handl post form pass filter view would request data time filter valid approach develop mvc applic overlook import part role control play
mvc pattern get error model control say typic mvc setup control pass input model ask someth valid data fail problem best way get error pass back control pass view display user moment error array model error occur simpli add error messag array return fals control know error occur control better way handl
control know view model vice versa conceptu tri understand someth els entir
good idea regist view view model singleton ioc contain understand benefit inject depend object found much guidanc type object inject make singleton take exampl applic follow type object servic includ repositori busi servic calculatepric view view model servic inject servic typic exampl given clear regist singleton contain statelesss origin intent servic inject contain view view model amp state long last object general way access long last object sever place use registri similar assum cannot pass around paramet option regist object singleton contain inject need see problem use singleton contain approach beyond issu remov object contain lifecycl end sure easi go use uniti would interest hear problem other forse interest asid mvvm light framework use view model locat rather inject viewmodel
use class static member singleton java c object c c similar oop languag use class static method var instead go singleton syntax deal various scenario
mvp present instanti control present implement applic use mvp gwt work nice view singl purpos evolv view achiev multipl purpos singl window view view view present use exampl model build applic take look view view also present instanti receiv present view need fulfil purpos reveal event interfac present view view present hook listen react go insid present amp view question still follow mvp principl violat separ concern somewher present creat receiv control present aka design pattern creat interfac also compos complex interfac updat respons robert harvey question difficulti pass object present view present view view event trigger instanc button flag click event handler attach need pick data object relat click event anoth method reveal view present work feel caus problem later kind object handl grow complex
violat dri principl use mvc server side framework client side mvc framework use mvc pattern server side code case django model definit defin model compon use client side mvc base librari case backbon model definit subset redefin make chang server side model definit let say add field model would make similar model chang client side model definit includ new field violat dri principl server side model definit auto generat client side javascript base model definit accept violat dri principl
code behind wpf consid part view read plenti articl around differ pattern use wpf someth yet understand code behind file consid part view consequ code behind file allow utilis knowledg specif element markup number scenario control present view influenc data view model eg button list item current handl kind scenario relev code behind file feel like implement detail view thus part anoth view view model might choos list box list item exampl
migrat php asp net mvc plan migrat websit php asp net mvc howev sinc websit larg migrat done short time plan use mvc php page togeth idea replac php page group page mvc equival refactor page rewrit overal anyway thought might well move asp net mvc framework various reason question anyon know problem face thought login plan overcom ajax request asp net websit background keep login inform separ asp net session sure share session even need sure anyth els aris anyon experienc thing say
reason build applic game use compon entiti system architectur know build applic nativ web appl app store googl play app store common use model view control architectur howev reason also creat applic use compon entiti system architectur common game engin
make asp net mvc websit continu process run websit suppos game player build build produc resourc e g iron mine may produc piec iron ore per minut automat add user inventori matter whether user onlin run user log account see stack iron ore built depend long pointer right direct would great appreci
handl error messag spring mvc login form appli mani error handl scenario curious login scenario given spring control method login html form use thymeleaf follow logic similar jsp error handl usual done java web applic anywher error happen branch differ cleaner generic way
asp net mvc3 applic request lifetim depend inject thought ask seem concept type question problem type question need move pleas anyway tough time find straight info use uniti mvc3 setup depend inject control compon control might use understand uniti mvc3 websit anyth dispos dispos end request contain regist hierarch lifetim manag mean thing regist contain control lifetim manag regist instanc request long server applic run regist instanc use hierarch lifetim manag type applic session request lifetim work ask come php php scope outsid request obvious someth need get hang
control put search action touch mani differ model current follow model design search function search within model locat user user friend creat search control put action one exist locat user user friend control plural search control search control
variat mvc java script work sort javascript code current view implement without model collect work separ model view transform plan follow assumpt view data load form server x talk server get requir data x fire event view listen event updat accord x exact replica entiti server x take entiti data server view request data x exact one x view question x call option model control view model present anyth els crude thing terminolog
implement servic layer mvc4 honor singl respons tri learn best practic ramp mvc4 solut three project web mvc stuff core data model test test class tri add servic busi logic take logic get filter item control place servic project depend core upon web depend noth http request begin want honor singl respons creat one class per method question good approach say need get filter item method take id return list convent term name class method class sampl class method sampl class return someth right
observ variant improv c code base work bunch instanc observ pattern littl differ classic pattern classic observ specif interfac specif method call observ chang new data code base use templat class take number type argument updat method paramet allow specifi pointer method recipi data improv origin pattern think pros approach classic clariti interfac mark class recipi observ data less code boiler plate ugli templat syntax creat functor somewhat oner variant flexibl make object system receiv updat right method signatur without chang origin object anoth option wrong observ pattern practic
use depend inject conjunct factori pattern consid modul respons pars file given type think use strategi pattern tackl problem alreadi explain pleas refer link post proceed question consid class b need content product xml file class need instanti appropri concret implement parser interfac pars xml file deleg instanti appropri concret implement factori class b factori howev class b depend factori instanti concret implement mean constructor setter method class b need pass factori therefor factori class b need pars file tight coupl understand may complet wrong whatev explain far would like know whether use depend inject scenario depend inject factori would right way implement take advantag area mock factori unit test
interfac implement ejb except java ee project interfac like two stateless bean implement get except cannot resolv refer local ejb ref ejb applic interfac data access problem clear may one class implement data access would conveni could use two client want work interfac data access distinguish onlin offlin code offer method client depend inject see problem two implement data access chang make work client alway start onlin version data access could request offlin version offlin version need interfac need data access inject alway onlin version use two implement interfac togeth ejb depend inject
synchron client server model object client server applic thick client gwt client side mvp present mvc control hold refer object view gui user action caus object updat server send updat object back client reassign present problem usual refer object client list hash map etc hard updat anoth approach updat refer updat object e g copi properti server object client one object complex easi approach better mayb miss someth
idiom loop execut block instruct iter rubi particular often need oper loop oper iter simpl exampl would collect word array string spell backward separ comma idiom languag support languag most interest rubi usual someth like foo bar baz n size loop lt lt revers break n lt lt end know way save half iter use rubi iter foo bar baz w lt lt w revers end
name design pattern like singleton compromis temporari measur howev want go complet singleton rather want use pattern basic would applic class control model view etc access need one instanc sake easier unit test among reason want applic object store refer mvc class pattern convers later point time easier unit test might easier general accept name pattern
depend inject depend chain pattern last larg project use depend inject realli heavili start use constructor inject even two three depend result realli ugli code fan properti inject peopl say impli option depend think mean default depend product class replac mock object test mani time depend depend provid default valu unless use singleton someth problem properti inject prefer fulli initi object want accident forget mock depend test found compromis creat paramet object properti depend pass constructor benefit keep code somewhat cleaner could ignor depend test touch base feedback got impress bad idea constructor inject paramet inject compromis allow later realiz paramet object sometim becam class set class discov interest pattern mani busi object depend busi object depend end interest data structur similar link list data structur could becom fair complex depend number interact class case structur closer n ari tree paramet object could link number object includ busi object busi object node tree paramet object like edg connect think connect object togeth without use declar depend inject framework would mind numb depend inject framework use go level deep code build depend bottom worst case paramet object usual expos depend rare occas would hide behind friend function call made busi object usual result yet anoth paramet object remind paramet object exist want construct depend constructor pass constructor made sens creat new busi object start repeat even end explos paramet object read plenti book explain situat never happen class depend sign class much case busi object use data multipl databas tabl repositori configur set servic etc order calcul someth occur often implement seri step make unit work n thing need task best push n thing class call stack one class depend better wors class two depend hope get feedback approach depend inject relat architect busi layer
safe assum one control ever use one primari model design mvc framework name keep everyth static type non magic come quit problem automat pass model control tradit usual see one model use time control far automat popul instanc take tutori method like control concern pass movi model creat method popul form valu magic api easili possibl would look someth like rout concern much harder multipl model limit c type system cours control alway manual creat model form valu near pretti question common someth like foo movi model bar class model control class good idea attempt support scenario symptom put much unrel logic singl control note concern fluent api even possibl answer generic deleg lot lot generic deleg far littl reflect
prefer way communic applic system design system built sever small applic written python servic other program run special situat need achiev let server communic servic certain event occur small amount data servic know new situat take appropri action sometim immedi sometim futur look memcach seem like overkil solut system separ applic run raspberri pi write file use someth like pyinotifi think eleg final think store state databas also like much prefer way handl sort communic process thought sure mention one would smartest go
explan object paramet coupl mention code complet book read semin excel book code complet discuss various kind coupl happen modul may class well method simpl data paramet coupl simpl object coupl object paramet coupl semant coupl book say object paramet coupl two modul object paramet coupl object1 requir object2 pass object3 kind coupl tighter object1 requir object2 pass primit data type requir object2 know object3 author tri mean
codeignit mvc workflow bit workflow question stare mvc wonder peopl usual work mvc option see code model control complet first work view option code part time look might quickest effici way code mvc inhous design design job everyon task code design test db etc thank
avoid singleton exampl class imag anoth one imag store imag valu object contain packag name imag name imag store actual work calcul real path imag base packag imag name load server quit big deep hierarchi node render engin game exampl group want insert new imag moment imag size yet want hard code imag size case tile alway exampl game view imag ad group suppos group alreadi attach render group invalid render request new frame render pars hierarchi tree node find imag ad ask imag store tile imag store one store width height also bottom center point tile bottom center tile match bottom center point real imag imag data imag store load packag also info width height appli new width height imag set flag load would like somehow imag store detach render abl use imag imag store without need render edit want would like know size imag even imag render order get imag ask imag store size anchor imag data packag like imag store load big file abl know imag width height
implement visitor pattern abstract syntax tree process creat program languag learn purpos alreadi wrote lexer recurs descent parser subset languag current support mathemat express parenthesi parser hand back abstract syntax tree call evalu method get result express everyth work fine approxim current situat code exampl c although pretti much languag agnost howev would like decoupl algorithm tree node want appli open close principl reopen everi node class want implement code generat exampl read visitor pattern good good understand pattern work use doubl dispatch way go due recurs natur tree sure approach visitor would look like problem want tackl immedi languag support lot functionn avoid bigger problem later post stack overflow want provid implement want share idea concept might miss approach
achiev n tier type codeignit mvc know n tier intend separ layer differ network would like code separ codeignit got idea model databas crud data layer rest api busi logic busi layer call crud method model control amp view go flow view lt control lt api busi class lt model wanna know kind drawback architectur
use di creat java decent amount oop various languag pretti new java read lot tutori larg number object creat within code class tri run build version class tutori depend inject instead instanti class java like languag use pretti much everyth object liter inject everyth result would messi hard follow obvious inject string object guess object inject sure line go point di stop right thing start burden decid pragmat inject instanti fyi tutori build simpl client server copi line line though tri creat equival class follow best practic
use depend inject static factori design system often face problem bunch modul log databas acc etc use modul question go provid compon compon two answer seem possibl depend inject use factori pattern howev seem wrong factori make test pain allow easi swap implement also make depend appar e g examin method oblivi fact call method call method call method use databas dependeci inject massiv swell constructor argument list smear aspect code typic situat constructor half class look like log provid l db session provid db except factori user session sess descript typic situat problem except class use error descript load databas use queri paramet user languag set user session object creat new except need descript requir databas session user session doom drag object across method case might need throw except tackl problem
deleg import os program moment teach os program one concept find realli hard wrap head around deleg use advantag technic write book read make hard understand
rest api use busi layer use php codeignit mvc design pattern project sort specif busi process applic deal exist rest ap googl trello came idea creat rest api act busi logic layer bbl turn access model direct fetch need data formul busi rule control communic bll rest client bad approach perform better creat layer model one data access layer dal one busi logic layer bll
practic differ style depend inject new depend inject question style use applic read invers control contain depend inject pattern martin fowler get practic differ constructor setter interfac inject seem reason use one matter code clean clariti differ strong advantag disadvantag use one state opinion constructor inject intuit well interfac inject least hand setter inject middl term suppos abl chang instanc depend object initi inject style inject guarante object need depend alway inject believ pleas correct wrong
applic set status singleton relat new program 1yr field experi think overus singleton pattern need input better way right use singleton excus static global data use singleton applic status applic set also lot manag basic object need differ part applic think pattern make easier creat one object inject part need downsid approach suggest regard matter
mvvm view model inject html templat default view work web applic design includ knockout js overal mvvm question make sens view model automat inject default html templat pull separ file detail suppos site like widget go knockout js view model determin runtim overal list avail widget associ html templat file understand mvvm want view html templat case separ view model javascript file case peopl edit separ possibl provid multipl templat differ skin howev seem like would also make sens view model point default html templat get automat use unless control code provid differ one look correct exampl see answer stack overflow recommend inject html view model seem like one liner would make sens case possibl overrid default templat valu
model queri spatial responsibilit compani local branch best practic model queri spatial respons compani local branch compani mani local branch general respons citi easiest case howev except case list possibl case branch respons citi general case branch respons citi b c branch respons disctrict citi wherea branch b respons district citi branch respons citi foostreet district wherea branch b respons district citi branch respons citi odd housenumb foostreet district wherea branch b respons district citi branch respons citi custom whose surnam begin letter f wherea branch b g k branch c branch respons citi case handl foo wherea branch b respons citi case handl bar possibl respons case could cours also mix plan system provid answer question branch respons citi b c except case question specif possibl provid hint like citi one branch pleas chose district case ask respons branch handl foo bar question would like ask branch respons foostreet foociti requir java enterpris sql databas may possibl use mongo db neo4j realli make sens alreadi databas everi citi district zipcod street data could connect hope question sound like pleas job experi spatial domain model almost zero
audit trail record action background discuss come work recent handl audit log record event integr 3rd parti app trigger handl code written number prototyp compon handl noth feel right yet main issu want creat facebook style time line user see action happen recent seem fit well record audit question would best handl type scenario tailor audit log tabl fit requir front end separ tabl handl action event audit separ look messag base architectur like event sourc type compon input somebodi done type system would much appreci
maintain synchronis state across thread good use singleton hear lot singleton alway bad around place hate degre tri use better altern case system handl lot request come thread everi request come need alloc uniqu sequenti id current singleton class whose role initi id start maintain system run singleton creat retriev id valu increment thread safe way one would expect actual hand thread creation depend inject core class classic singleton built around static represent current id valu given like work requir multi thread approach would interest know whether way could implement type function way allow data maintain synchron across thread otherwis unawar without use much fear singleton pattern
use mvc practic confus even begin understand mvc would implement outsid web develop might seem like general question would one appli mvc follow general question v c meant one class mani mani would work class made previous data insid separ class would work mvc instanc let say class take care virtual dog would think would make dog class exampl bark command would play sound along name variabl coat color variabl know simpl would fit insid mvc seem would end mc v inform model control dog class would mayb access swing whatev librari updat view program like sim simplifi version person would inform would put info anoth class sorri base giant misconcept pretti confus right use java matter mvc
bad practis creat instanc sql queri research way creat oo model repositori layer use php pdo idea creat model class repres domain object repositori class model respons save databas take model argument map object properti valu sql queri read databas return instanc model similar fashion inspir cours oop use net ef linq lab ask question sa could achiv sa got flame suppos bad practis see case
refactor expans messag architectur current work system act like messag bus messag come servic wcf window servic host system use servic locat pattern look dynam load assembl assign messag assembl found method execut handl messag respons sent back client problem messag base grow enorm well associ plugin lot code duplic let give exampl get order messag get expir order messag get order messag custom id get someth relat order messag etc etc see messag specif messag simpl data contract contain zero busi logic top problem plug messag handl one messag therefor almost plugin everi messag type system appear support one mani relationship messag plugin appear implement one one could refactor reduc code duplic make system smarter would like code easili digest develop lot duplic happen due constraint cannot use orm data access entiti creation respons robert harvey comment would like clarifi follow use case plug layer simpli wrap data access call might look
asp net mvc web site wcf web servic share function follow situat creat websit web servic share part function want write code twice thought follow architectur app busi logic save data model databas app data access data model amp entiti amp map app ui model view model app ui servic layer acces busi logic creat ui view model websit transform view model back data model save help busi logic layer app web site app ws model ws model object pass client ws app ws servic layer access busi logic creat ws model web servic transfom ws model back data model save help busi logic layer app web servic architectur overkil problem encount problem control asp net mvc websit
use name rout generat outbound ur ls violat separ concern comput scienc separ concern c process break comput program distinct featur overlap function littl possibl concern piec interest focus program typic concern synonym featur behavior progress toward c tradit achiev modular encapsul help inform hide pro asp net mvc book page problem reli rout name generat outgo ur ls html rout link click rout index custom break separ concern central mvc design pattern generat link url view action method want focus action control user direct format url use bring knowledg differ rout view control creat depend would prefer avoid understand creat depend action method view rout configur modul html rout link call within action method view specifi name rout want use introduc depend alreadi consid violat c name even though creat depend two modul actual introduc addit function concern either modul definit c impli violat c occur new function concern introduc modul b anyhow understand simpli generat url within action method view specifi name rout bring focus format url thank
good techniqu prevent unauthent user access control method event control tri organis code fair tidi straightforward control name control authent user access method edit event add event control extend howev method control need access unauthent user get event good way handl make two complet separ control extend basic event control add authent method previous manag control handl method requir authent add user delet user add doc delet doc becam blot quick easi updat modifi control plus messi seem follow good program etiquett
present view sort data mvp applic typic mvp applic might view method void set display item list lt display item gt item present sort list item task view feel might task view two reason task present method void add display item display item item work present insert item correct place view offer differ sort option base user select howev also shake feel much think view anyon comment correct choic mvp note typic produc swing base java applic case allow specif answer
method allow abil freeli modifi class make immut other creat model part mvc architectur one class provid access allow one fetch system state want state immut chang want anyon access model abl break state make foolish chang howev object repres state bit tree structur object contain set b contain set object c contain set object etc etc due natur fetch data build structur bottom bottom chid object generat other complet make rather inconveni build immut object intuit manner want add set last phase build alreadi built immut object know three approach sure like one builder patern keep track builder complic structur done seem like could ugli second sort clone method build new immut object clone old ad newli provid set pattern call get ugli tri ad child element set sinc need pretti much rebuild entir tree new immut object add one valu third far easiest solut get rid tree structur make make call model get data want instead call object get children call model get object children object one work darn want pretti tree structur immut state way conveni build state manner model freeli modifi state built still immut final publish control ps run java matter
repositori return queryabl see lot project repositori return instanc queryabl allow addit filter sort perform queryabl code translat differ sql generat curious pattern came whether good idea biggest concern queryabl promis hit databas time later enumer mean error would thrown outsid repositori could mean entiti framework except thrown differ layer applic also run issu multipl activ result set mar past especi use transact approach sound like would lead happen often alway call enumer array end linq express make sure databas hit leav repositori code wonder return queryabl could use build block data layer seen pretti extravag code one repositori call anoth repositori build even bigger queryabl
java would sacrific type safeti nicer program interfac would general sacrific typesafeti nicer program interfac let give exampl choic two event aggreg one would prefer reflect version static type version pleas note java due type erasur cannot implement generic interfac differ type paramet need resort anonym extern class handler reflect event system nicer user interfac lose type safeti one would prefer would creat empti event class sake symbol like microsoft prism event aggreg
architectur question regard mv framework sql data model gradual refactor web app would like gradual refactor ad structur narrow option backbon plugin ember js angular js goal refactor app usual j queri spaghetti gradual add structur requir noth framework e g allow gradual move code without rewrit app scratch winner backbon someth futur peopl seem excit big compani behind angular take bullet let sometim thing way forc paradigm backbon clear winner someth realli boost product remov need boilerpl code angular ember someth good obvious thing also complex thing e g anim transit nest model handl modal dialog view drag drop support widget system etc one option becom advanc develop ask peopl someth similar know backbon everyth want want know care wonder miss take risk use angular js ember js question specif answer construct much could question angular ember abl support drag drop without bend backward either framework support anim transit well framework easier add gradual fulli rewrit thing way better support sql document base model mongo db like document e g json doc rather relat model better built support complex model similar ember data backbon relat seem come relat databas paradigm wonder anyth build model arbitrari multilevel nest tree like structur without defin sql model relat like data structur e g mani belong instead json like document also want stop use jqueri ui done ember way angular way backbon realli best option nice bell whistl come angular ember trade flexibl good architectur choic use either angular ember refactor exist j queri callback pasta gradual iter approach
servic class mvc time time find need build servic class someth realli attach insid model order respect grasp solid creat class call account transfer servic servic class good design practic repres model servic model mvc arhitectur
scheme formal program state think understood less pars scheme program look like binari tree atom valu leav understood correct anybodi pleas defin give refer state comput scheme program current bind plus posit stack posit syntax tree case would appreci refer formal definit scheme bind well simpl descript like one ture machin program current content tape current posit tape
ambigu use control mvc heard two separ use term control speak model view control methodolog intermediari section code communic model view tie togeth modul deal input similar view deal output starter definit correct read use first definit second second first one learn addit seem thing use inde use mvc like design use thing way even ever call one control mvc realli defin way includ thing would mean architectur contain model input modul output modul intermedi modul connect make sens
servic locat heard term pop around read various articl regard subject heard two main definit term servic locat glorifi registri bad practic global variabl general evil type depend inject contain help manag depend make modular extens applic general help differenti two servic locat realli mean give simpl exampl servic locat good evil
communic view model basic issu mvc architectur awar view usual listen model user request propag model current like user click e g updat button gui action listen call method view view call method control control call method model three concedrn view must awar control long call chain seem right way number user action number call chain increas best practis
bad habit use reflect good practic use reflect great reduc quantiti boilerpl code basic trade perform mayb readabl one side abstract autom reduct boilerpl code side edit exampl recommend use reflect give exampl suppos abstract class base field subclass subclass subclass b subclass c differ field simpl bean problem get two base type refer want see correspond object sub type equal solut raw solut first check type equal check field use reflect dynam see type iter method start get convent configur call object call equal result
model structur php mvc class compos orm generat model example1 exampl report php model use document php model generat orm base document object report creat would like know name suggest report php folder path clear belong model folder subfold example2 custom tag filter php remov html tag html string wish find clear path name kind model suggest
model control write system sort quasi mvc structur never state build full knowledg system control make call updat system someth similar graph need sens path multipl node way identifi origin node receiv connect two node origin graph build knowledg full path origin node read direct obvious infer finish build graph instinct write basic path trace sort logic model everi new edg would infer path exist origin input node trace path forward backward appropri trace path forward backward requir bit knowledg system connect edg node littl complic edg connect node b question would still within realm model path trace determin input node identifi path etc much work realli store control easier modif later need trace capabl build origin graph control even initi cours could control provid method call path trace like use control implement build graph think logic graph chang way use task thing model make easier model modifi quasi immut object direct allow control without call model packag scope variabl
java class databas queri someon pleas explain best way solv problem suppos three class person venu vehicl dao method need return attribut class queri pleas note requir use one dao three class framework mvc implement accomplish seem wrong make class person venu vehicl return object get instanc field valu taught databas entiti must reflect class case implement situat
use dao abstract orm rest applic use sql sequel js orm wonder whether doa layer abstract worthwhil option use sequel model throughout applic abstract sequel build layer convert sequel model backbon model use backbon throughout rest applic instead abstract import case normal use model orm throughout layer
servic model mvc php mvc applic file tabl need implement function mark read best solut code found far put actual implement model servic file servic php problem class file servic get bloat realli fast differ function would good solut avoid bloat servic creat differ servic action
accept placement composit root use depend inject di invers control io c contain read sever sourc includ mark seemann ploeh blog appropri placement composit root io c contain close possibl entri point applic net world applic seem common thought web project wpf project consol applic thing typic ui read librari project realli go sage advic place composit root entri point librari project repres logic entri point group librari project client project group someon els work whose author add composit root project ui project yet anoth librari project even familiar ninject io c contain implement imagin mani other work way scan modul contain necessari bind configur mean could put bind modul librari project compil main librari project output client want chang configur unlik scenario case could drop replac dll replac librari bind modul seem avoid common client deal depend inject composit root would make cleanest api librari project group yet seem fli face convent wisdom issu advic make assumpt develop coordin develop ui project well rather case develop librari other use
allow make multipl instanc singleton class confus read regard singleton design pattern ensur class one instanc instanc easili access global variabl make object access keep instanti multipl object use singleton pattern creat multipl instanc sourc design pattern element reusabl object orient softwar gamma helm johnson vl
store type databas anti pattern littl background question come current net applic work featur relat archiv certain type busi entiti call project depend situat archiv exact action involv archiv vari wild basic idea creat entiti call archiv schedul basic store data say kind project archiv amount time want encapsul queri select object archiv command actual archiv object inherit common interfac multipl archiv queri select item base various properti whether archiv later restor etc multipl archiv command ie command send data differ interfac perform delet etc consid includ archiv schedul refer actual net type correspond queri command want use schedul want actual run queri command use reflect build object execut command queri basic strategi store type inform databas use reflect creat object inject depend antipattern better way note know issu store type name namespac might chang refactor believ could mitig fair easili use guid attribut class definit store guid instead curious fundament issu beyond
separ present logic javascript mvc framework learn follow piec code bad obstrus javascript mix present logic best practic add sort identifi link element bound event separ file someth among line see use onclick html bad practic come javascript mvc framework like backbon js angular js etc encourag piec code like taken ok
implement session state backend web applic use non mvc servic orient interactor pattern approach decoupl system architectur session state implement think build frontend applic use mvc php rubi etc send messag command line backend actual applic sinc want offlin applic complet control function would imagin use offlin session manag system work best login issu id thereaft sent applic everi request id would store cooki client side like regular session cooki sinc frontend work http request anyway make littl sens way better altern method consid would prefer keep actual system complet decoupl web ui also plan implement desktop ui aswel interactor pattern seem best way achiev explicit tri avoid everyth mvc framework stuck forev seem popular nowaday
bad design specifi default bind use invers control ioc contain depend inject di use ninject ninject specif question wonder advanc flexibl capabl io c contain give enough rope hang bad applic design got servic interfac lean ninject factori extens factori creat guess call proxi implement runtim builder bind like experi custom instanc provid bind generat ninject guess io c contain may similar construct overrid basic bind behavior two distinct bind scenario goal categori bind cannot resolv builder servic creat categori argument null object builder resolv default bind case client id bind cannot resolv default client implement like cat one builder default client categori cat one resolv default bind case situat unknown categori request expect seem shame use expens except handl someth know happen often want fallback behavior handl unhandl plain way case would null object bulder unknown categori default client unknown client known categori two distinct fallback behavior two differ type unknown behavior troubl keep two fallback behavior map respect scenario given paus think friction feel flesh design flaw design default bind logic use determin one need contain io c custom implement rather except thrown mis use io c contain
convert static access style project io c di style best approach refactor program project previous written static refer anti pattern major class refer point static bean variabl public half way class instanc see someth like evil class variabl return boolean differ class see someth like recent work pattern want mix style get thing confus style want slowli sure fix project dev time sit refactor otherwis push full rewrit best practic awar work fix kind project problem
websit frontend render client side server side talk colleagu come as3 html world creat small websit appar dynam content follow flash rule first time hammer tend hammer everyth decid creat framework java script could as3 way frame pure x coordin anim anim content page would fulli load first load vast amount js first page would access without chang url view would turn class method class repres section method stand view append text variabl ad div defend situat mani reason websit high amount user prevent server overload easier creat new section easier translat translat text almost everyth load json expand section direct json file everyth smooth move anoth page come php loyal develop defend opposit side say view split smaller file contain php even html file busi logic control view logic file releas client disabl java script still show content without matter cours server need make calcul render file benefit could need load whole websit first webpag load faster url alway clean case friend without plugin work seamless old browser move anoth page view kept independ file easier work team view regular html file instead call method append string edit natur still need php languag load data server node js consid cours come real question view render client server side
mvc ever consid appli system wide discuss colleagu bought topic mvc use view model asp net mvc discuss n layer architectur ui busi layer data access layer individu assembl project view model ui represent databas busi object discuss whether view model use move discuss mvc appli version use seen elsewher take account separ concern waterfal depend ui project refer bll bll refer dal possibl refer entiti project mvc restrict ui notion model version technic view model view control individu file object ui layer bll talk term databas entiti ui general contain helper map view model entiti colleagu version took system layer level model dal view entir ui control bll whole given mvc triad model unawar view control view know model control know system level applic mvc violat modular program concept code reusabl disregard possibl circular depend issu pattern mvc appli system level often understand mvc relat pattern often appli pure ui spread across entir n layer system way look question mvc realli also seem disagre whose argument answer question support could stuck littl tini net orient world cannot see bigger pictur would like hear thought
mvc optim pattern build res tful web servic java practition recent came learn jax rs specif apach cxf framework still wrap head around thing also read question sinc mvc design pattern jax rs specif confus comparison grant nascent understand jax rs make suitabl implement res tful api say framework use mvc pattern n b c python background
mvc strict php framework tri wrap head around mvc pattern month read ton articl q amp blog post mvc hmvc pattern simpli get tri learn mvc exercis one wide use php mvc framework code ignit implement intern websit compani still get believ one best way learn someth follow strict defin rule question strict php framework term mvc pattern implement one defin use model control view complet get mvc
mvp pattern way restrict user action base secur privilleg mvp applic appropri way implement restrict ui action base current user privileg exampl role base secur differ role differ access ui interact view instanc onlin store product list page custom view detail add item cart administr must also present add product button delet button item similar question ask alreadi op ask ui make permiss check certain ui view respons permiss valid still know whether visual certain ui compon well defin wide adopt pattern tell view ui interact disallow think solut standard proven one prefer stick rather reinvent wheel updat clarifi bit suggest answer consid approach view accept privileg inform present form inform bother use flag bit mask generic represent gain consist pass permiss view coupl view logic resolv flag thing mind view expos flag need settabl properti present like view delet item allow addit logic permiss view add addit complex present adapt permiss flag view properti think use later approach way reus present differ view implement reli view understand permiss system may subject chang anyth worri
safe expect class agre call packag scope method packag scope method question say quick overview situat creat model contain class inherrit object larg amount interconnect want control abl creat object time without modifi model explicit cal model add model would instal object model includ updat connect object object use factori pattern user tri creat someth alreadi repres model alreadi instanc object model return instead construct new one help encapsul want object effectivli immut control matter object chang model without call model add remov model still abl chang object state would put object model packag object packag scope method updat state includ add remov method instal model updat connect object essenti packag scope method chang model state public concern break object call one packag scope method public method mess state without explcit call model write abid contract packag methdo call packag method someon come later tri call add model constructor read comment realiz break assum contract safe expect other read comment abid implicit contract mess model enforc sort pattern prefer without much abstract interfac could confus develop ps use java help think might even abl enforc secur api though may prove confus complic sinc would result obscur runtim except
function program right idea concurr state fp propon claim concurr easi paradigm avoid mutabl state get imagin creat multiplay dungeon crawl roguelik use fp emphas pure function immut data structur generat dungeon compos room corridor hero monster loot world effect object graph structur relationship thing chang represent world amend reflect chang hero kill rat pick shortsword etc world current realiti carri idea state miss fp overcom hero take action function amend state world appear everi decis ai human need base state world present would allow concurr multipl process concurr ammend state world lest one process base outcom expir state feel control occur within singl control loop alway process present state repres current object graph world clear situat perfect suit concurr e process isol task whose state independ one anoth fail see concurr use exampl may issu may misrepres claim somehow someon better repres claim
mvc framework built framework applic work well alway refer mind mvc howev read mvc start gave brief overview look framework use mvc pattern given paus thought structur follow framework bootstrap load requir file framework initi file applic app bootstrap php app bootstrap php file three function first creat constant framework use e databas connect setup profil setup base url path intern file path second requir file would pertin applic primarili call model class contain inform name structur tabl databas valid rule associ model etc model extend abstract class contain static function select creat row databas creat instanc entiti class deal row get set unset fetch column associ save delet save row chang databas third call function within router php file setup bind environment data like url user login status ssl ajax cooki exist etc control class framework run execut function within router php go defin environment data rule determin control load find one requir file applic control directori throw error found call class appropri entri point function index none defin throw error control start function framework execut control finish program end unless profil activ output data end framework provid function control name input class deal input get post server variabl cooki user agent remot ip etc well provid sanit interfac output class header cooki status messag etc queri builder class creat queri databas event function done within model view class pars variabl view render return client read inform mvc appear router php act similar control control act like model model act like orm view pretti much correct would framework still class mvc fit anoth pattern pattern
dao design child object object repres hierarchi relationship exampl person nbsp nbsp spous nbsp nbsp nbsp nbsp spous contact nbsp nbsp nbsp nbsp spous address nbsp nbsp person contact nbsp nbsp person address item list databas tabl relat object object tabl id parent id spous id spous address record base id person exampl given hierarchi arbitrarili deep wide would design object data access layer
design applic read file use mvc pattern go write applic read data csv file display data user intend appli mvc design pattern creat applic user interact applic consol henc view consol main java respons present menu user choos consol abl handl event consol e g user choos option read two csvfile ask applic display differ two csv file execut appropri busi logic select event main java main method display menu user consol consid make main java control class respons take user input figur input main java call class call file servic java servic class file servic java respons read csv file display content text file sort accord rule display differ content csv file file servic pars csv file use csv parser store content file disk use map db intent use map db allow user read huge file e g gb perform oper content file file read main java could display content file display differ text file user select option consol file servic intend model part applic file servic complet decoupl view control main java simpl design achiev separ concern address mvc respons tgkprog view main control file servic model busi part need view class respons built web applic view would limit jsp html page context csv file reader applic would equival html jsp page thing sure menu display consol simpli achiev insid main method main java file 5mb think consol app quit inadequ display differ unless respons could dump differ text file let user view text file would help think thank point
depend properti nativ languag support advent wpf mvvm microsoft introduc depend properti notifi properti chang interfac provid way implement reactiv approach use technolog sad construct verbos requir much boilerpl clumsi use also realli safe sinc requir much use magic string come question put function direct languag creat new kind properti creat simpl keyword provid use stuff depend properti like event chang stop
mvc share model differ requir field differ type model call car depend type car user select view present differ exampl user select grid differ car depend volvo kia ford view must allow differ field edit exampl volvo color edit mandatori kia would like use one car class bind view want client side valid pick requir field base type car want go one action method updat good way approach problem creat base class inherit give bind problem
mvc code save data cach session belong control bit confus save inform session code belong control action shown part model would add control method read session valu later thought ad static util class model someth like seem stupid add line code anoth file
use factori method instead constructor chang still backward compat problem let say class call data sourc provid read data method mayb other let keep thing simpl read data mdb file year later decid want abl support xml file addit mdb file data sourc implement read data quit differ xml mdb file thus design system scratch defin like great perfect implement factori method pattern unfortun data sourc locat librari refactor code like would break exist call various client use librari woe use factori method first place solut solut could come make data sourc constructor return subtyp mdb data sourc xml data sourc would solv problem unfortun c support use differ name end use sinc keep code backward compat e call new data sourc file mdb still work drawback name descript make data sourc wrapper real implement drawback everi data sourc method read data must rout boilerpl code like boilerpl code redund clutter code eleg solut miss
factori pattern prevent multipl instanc object instanc equal good design number object store state essenti two type field one uniqu defin object node edg etc other store state describ thing connect node connect edg edg part path etc model updat state variabl use packag method object act immut anyon model scope object extend one base type toy idea factori approach accept builder object construct applic object howev instanc object alreadi exist ie would return true creat object defin builder pass equal method exist instanc factori return current object instead creat new instanc equal method would compar uniqu defin type object node node b check dynam state stuff node current connect node c e would way ensur anyon want node automat know state connect import would prevent alias nightmar someon tri pass instanc node differ state node model never heard pattern bit odd would overrid serial method make work ensur read seril object add facotri list known instanc return exist factori place well use weak hash map weak hash set know whether instanc exist without worri quasi memori leak occur know confus prone obscur bug one thing know plugin interfac lowest level hardwar plugin abl return state differ memori tell memori state inconsist believ possibl despit fetch object exist memori allow build object without check consist model add model call anyway exist plugin design written extra state exist work fine without ever awar use design avoid crazy anoth question affect post
design pattern typic use design wcf data servic driven winform applic pleas excus bit new follow technolog practic given task creat manag suit util mdi gui suit front end wcf data servic question design pattern typic use profession design applic moment look mvc tier design pattern mvc rout tend taken assum wcf servic ad servic refer provid visibl class model part mvc pretti much cover would make sens generat interfac wcf class tier pattern use would make sens creat datalay object everi visibl wcf class ex properti dal top busi layer object datalay object case class would made visibl would mean addit class seem bit bloat necessari link usag mvc design pattern lead question
uniqu valu object vs entiti tri convert entiti valu object stuck case seem valu object must uniqu within aggreg suppos movi entiti make root aggreg movi entiti relat set advertis event object role display advertis certain timestamp advertis event contain link banner must display coordin effect filter sinc advertis event collect configur paramet sure care ident treat like larg valu object howev care within movi must one advertis event certain timestamp probabl even around timestamp find hard split doubt multipl independ question go collect configur paramet sound like valu object mix concept uniqu advertis event within movi transact integr rule choic point impli advertis event must member aggreg made movi advertis event object entiti valu object event object use event suffix name highlight confus larg valu object like design smell guess deal event sens ddd someth happen real ddd event someth like advertis event reach
extend composit structur model general enterpris architect current project integr domain specif techniqu model tool enterpris architect uml profil domain specfic model almost match structur composit structur model coupl restrict though tri use model foundat restrict question general extend model like composit structur model lie m1 layer meta object facil element part composit structur diagram metaclass extend stereotyp uml profil sinc literatur topic exhaust also look suggest
control jsp view peopl say use js ps jsp show anyth act control would need redeploy complet webapp make small signific chang servlet instead put new jsp j boss tmp folder till full deploy control jsp cours includ redirect view js ps final render question downsid alreadi applic work last year join keep work compel reason chang regular servlet note js ps question control rather process certain use case
javascript architectur model obvious flaw oo architectur model intend implement use javascript similar mvp model instead role model broken three modul cach store data instead rerequest server model manag request raw data retriev cach avail server modifi handl request requir data make chang data server diagram show data flow model view set amp manag ui possibl requir request data present set control alter display possibl requir request data present cach contain record fetch data data object store method store data cach retriev method retriev data cach access storag retriev avail model modifi act faster intermedi locat share inform server present handl request format data view request data model pass callback complet format data present call view callback model handl request data present request data cach cach retriev data cach request server store cach cach store data pass back present via callback modifi handl request view modif data specifi post put delet request type support specif type request may handl separ eg set store new data cach cach store push data server call callback success data storag quit big project number other work would good get right edit cach store cach retriev method receiv inform requir refer data cach specifi store cach method use inform respond store correct data intern structur data store kept secret
mvc url format design refactor lot mvc code run issu url design exampl let say venu object event object initi set action set event control like id specifi venu would return list event venu id specifi return list event result confus url id paramet ambigu mislead thought chang make lot sens clear even cleaner url would exist action move venu control set like id would clear specifi venu id issu url primarili deal event object venu control seem wrong lean toward first option even though option cleaner seem like keep event page view list page relat event object event control recommend
servic model layer understand servic state busi logic implement servic like authentif servic consid rule method servic static
singl write multipl read state object scenario one data input feed call sourc multipl object call layer1 read sourc analyz feed analysi state layer1 object configur paramet exampl new foo layer1 differ analysi new foo layer1 differ analysi new foo layer1 layer1 analysi done asynchron still object call layer2 readon output layer1 object process result analysi also state guic object creation hierarchi need layer1 object access often enough matter creat lazili long remain memori creat first time need layer2 object hardcod good way know advanc layer1 object need want abl reus work layer1 object exampl let say alpha layer2 object read output foo layer1 bar layer1 beta layer2 read output bar layer1 baz layer1 quux layer1 implement want server comput valu quux layer1 unless layer2 object need current factori layer2 object access creat appropri layer1 object need store creat layer1 object map sinc layer1 object also configur paramet need make sure store layer1 object good data structur layer1 function need flexibl figur creat kind layer1 object kind map could get realli complic ask question fine complex grow maintain data structur way seem becom realli difficult tri sort nest map data structur get access time find layer1 object make cach super complic altern could keep much flatter structur iter list layer1 object see right paramet none found creat new one long layer2 object keep refer happen yet anoth option would creat map lt class set lt layer1 gt gt need iter creat layer1 object correct class anyon seen kind scenario option mention prefer someth mention yet also way use guic creat layer1 object way get reus need state
depend inject eas use write handi librari call thinger goe fetch xml document x path queri someth help result actual far bore bother simplifi exampl wise lazi programm make use two third parti compon one fetch remot xml document call fetcher one run x path queri call querier librari provid thinger class one must inject fetcher querier could via setter constructor think poor peopl use librari think inject depend realli want call someth like far written static factori instanti new thinger fetcher querier assembl appropri return thinger left feel slight unclean sure better way edit framework etc would probabl get around use depend inject contain similar sinc write fair small third parti librari seem like bad approach
mvc view question php web page index php simpl script call page class build page index php execut method within instanc page class add bodi bla bla bla call build method page class return string user input html element pre ad index php echo essenti page class templat sort tri kind mvc hierarchi student learn program best practic time question would index php view would instanc page class view construct page actual show return string would page class control also view allow talk eg get data control exampl call method control own mani thank help
compil direct antipattern work legaci system helper class symbol link mani differ net project within solut logic riddl compil direct chang intern behavior base net project happen compil instanc compil direct interog ui variabl true compil frm progress instanc display progress user tri explain colleagu poor design referenc specif anti pattern come far posit pattern use like singl respons pattern observ pattern anyon suggest specif anti pattern might appli thx
mvc framework use class instead method action mvc framework control class contain multipl method repres one action annot reflect use call method appropri oop point view whole class mani respons eg one action action repres class mvc framework implement action like exist kind discuss discuss pros con approach believ would much cleaner class way would allow simpl extens inherit without need annot would overhead mani class make harder maintain code
consid return null object appli dao read method look answer question dao return search end entiti exist generic previous question relat return null look answer specif context dao retriev scenario clear say null object refer null object pattern java space josh bloch recommend empti collect solut book effect java see item provid good introduct problem solut despit awar bloch advic first wrote question consid return null appropri read retriev scenario good compani make mistak null
way allow inspect java data model export file refactor program remov depend sql databas store state memori model howev manag like abil easili inspect domain state sql join filter databas time wish maintain similar domain inspect abil discuss call dump model state file inspect much state fit memori state larg enough need mechan allow us fetch child given parent better manual inspect file need best tool make doabl think export everyth csv read db could work seem use db join data type plus old approach use string join guarante uniqu addit extra object thought would put lay databas field repres new model object particular child object parent toy idea one idea csv file program read csv file sql like join found program easili also toy interact java interpret read thing model call model even use linux base command write join awk similar sure like option though anyon suggest good way p ssh maintain system time copi file without permiss maintain live system tool use inspect memori packag releas jar justif includ
xml html css xsl analog model view control time person project use xsl convert raw xml data human friend html css simpl project java script let leav equat simplic tri understand mvc architectur pattern first experi take work go understand basic understand well wonder analog two xml data model lack complex logic full blown model compon intent seem similar xsl convert raw data view mdash seem like control html css render viewabl output analog fit match well one dissimilar suppos exampl get input back view mdash produc output
checklist code mvvm web applic small team work web applic use mvvm design pattern use technolog like net knockout html tri come code review checklist team make use code well review tri find googl help guy suggest look code review checklist
languag expand stl iter type mani languag use concept iter c stl expand input iter output iter forward bidirect random access other far know distinct exist languag talk author stl alexand stepanov talk iter among thing mention idea dimension iter seen anywher question languag librari expand iter use dimension iter question could anyon point good resourc iter theori call
singl respons principl vs kiss principl let assum model user model context social network user concept compos two notion authent element like user name password email etc extra data inform sometim call user profil like first name birthday pictur etc first glanc analysi involv separ task respons want keep srp howev typic case social network user name may seen pure inform belong user profil rather pure element authent thus three way accord model user concept first whole one class user user name password email first name birthday pictur etc second one one relationship user user profil user user name password email user profil first name birthday pictur etc third one one redund common field focus authent visibl user inform websit user user name password email user profil user name first name birthday pictur etc repetit cours consit time avoid join case relat databas one want retriev use profil data good practic model concept place user name field dilemma keep kiss keep simpl stupid srp
write data driven reflect base test ensur design complet write softwar often forc point make decis involv design pattern convent name behavior pattern normal make feel kind slimi net develop near everyth static type arguabl even dynam type static type other cover well go read blog thank natur encount other oppos view felt mani case convent base name behavior pattern actual help allow cleaner readabl consist code even state depend far convent taken instanc type reflect name determin behavior scenario might even enforc good name break function name inconsist establish convent brought around place love passion develop goe die test came follow hypothesi use name convent associ behavior structur rule associ convent possibl write test product enforc behavior structur associ name implement correct reflect avail target binari furthermor also possibl enforc convent design allow misus name convent mean name fall name convent follow behavior structur rule use inappropri e someth word locat type name implement servic locat pattern anyon ever investig kind architectur design test provabl experi write architectur convent test challeng face solut devis framework tool research subject done peer review
best way repres quantiti stock domain model transact contain one line item one line item relat item everi item number field repres quantiti stock use approach everi transact creation need decreas quantiti item user updat transact quantiti item need adjust user delet transact quantiti item need increas best way implement rule behaviour domain model layer transact oper like creat updat delet locat data access layer
persist temporari data multipl http request webappl list question answer user question serv user one one save last question answer problem face save help data goe store index last question return whether last question return answer question overview etc initi store data session work also meant differ session variabl type question list bunch cast remov session variabl creat extra field viewmodel store view model entireti insid session made sure temporari data persist troughout request question solv meant new request remov great deal session made code readabl anoth exampl usag local user object get overwritten everi request obtain repositori databasecontext creat everi request ninject also meant keep temporari list user hold alreadi answer question answer sinc empti everi request use approach save list session object write local user start action method perform action save new answer afterward obtain list write viewmodel bit workaround made sure could keep data believ decent solut one project member school project due tomorrow express doubt method said dirti solut altern provid though use asp net mvc approach right way solv differ
map control model view todo list start current project wonder terminolog plan basic want map everi object layer control call method exist control purpos includ model method interact view display base certain action way creat detail list catch duplic make one call heard someth call doctrin sure im look sinc dont know use heard document
mock unit test tri write unit test javascript applic made nodej want know say class vehicl depend anoth class road mock road class send paramet vehicl unit test creat new object send paramet vehicl chang road class chang mock everi use factori creat mock object
java mvc extra class simpl mvc project current packag gui control db domain want put extra class use e g md5 hash email valid method use one class put probabl use one packag two three model sure creat extra packag put domain static unchang
good idea lower applic layer awar higher one typic well design mvc web app databas awar model code model code awar control code control code awar view code imagin could even start far hardwar perhap even pattern might go direct go one layer view awar control model control awar model databas model awar databas os anyth deeper probabl irrelev intuit grasp good idea articul unidirect style layer good idea
mvc consid good practic privat non action function control class sometim action function control class becom huge nasti mani mani line code simpli control flow data model view point huge function complet lose track basic principl good code e one thing small readabl manag etc would consid good practic break huge action function smaller privat function control class need optim mean rather add model would vote smaller function privat control relat action heard argument control prefer simpl model get huge clumpi wonder one would prefer method
locat valu object eric evan ddd book cargo ship exampl pg locat two place name latitud longitud could provid uniqu key probabl practic one sinc measur interest purpos system would fair complic like locat part geograph model kind relat place accord ship lane domain specif concern arbitrari intern automat generat identifi suffic reason author made locat entiti two differ place could name sinc appear locat immut thus chang time better instead valu object thus instead automat generat identifi introduc addit attribut describ actual charasterist locat would help distinguish two place name could make locat vo b even introduc addit attribut describ actual characterist locat instead use automat generat identifi still consid locat vo sinc fact still remain immut applic would work even track sever instanc repres locat c quot seem author would design locat entiti even instead automat generat identifi use latitud longitud help distinguish differ locat thank
salvag busi model mismatch databas applic involv bill enterpris custom servic custom util databas schema proper reflect busi model instanc given account servic may becom activ deactiv column repres servic deactiv code place updat row servic reactiv rather ad new row ideal row would ad servic activ updat deactiv would column repres activ date stand solid bill histori enterpris custom need set cutoff legaci model corrupt wipe tabl clean add appropri column start work tabl proper check row activ date null detect legaci must sever way handl experi kind situat would like hear various approach
differ send messag emit halfway rabbit mq tutori notic tutori stop refer produc send messag start use verb emit instead pretti consist second tutori verb send longer use describ produc transmit messag exampl second tutori main idea behind work queue encapsul task messag send queue worker process run background fourth tutori use model log system let focus emit log first differ send messag vs emit one
mvc pattern jsf spring bati webapp java webapp framework want know implement meet mvc pattern control layer v use jsf busi layer c use spring data layer use bati java interfac associ xml file bati layer implement mvc pattern confus
put method write java program use mvc design pattern class item supplier databas connect item supplier tabl write method give supplier specif item use item id public array list lt supplier gt get item supplier int item id db layer well db item db supplier method go use most item ui think db item correct place usual sale line item pattern sale sale line item item separ class case need interact tabl item supplier print one updat method basic need item supplier model layer class respect db item supplier two method get item supplier updat item supplier either db item db supplier latter
architectur mockabl dal larg project recent read articl creat blog use asp net mvc articl user split data access layer separ class librari creat interfac allow dal mock test work great small project struggl see scale exampl articl end follow interfac associ cs file implement interfac would implement similar architectur much larger project exampl project work consist control minimum list add edit view delet count would lead interfac function kind architectur still suitabl larger project would structur avoid singl file implement function
mvvm wpf outdat current tri get head round mvvm wpf mean get head round concept around actual nut bolt anyth beaten track dumb crud notic lot framework blog post age ago old hat blogger move onto next big thing said everyth say word someth miss
repositori pass user interfac mark seeman depend inject net inject repositori ui layer believ store everyth ui configur howev strike bad design better pass servic refer ui stop futur develop use repositori direct also say build n tier architectur coupl data layer ui layer matter di use want host three layer differ self contain server approach could work seem wrong want see general communiti say right thought miss someth simplifi version code
valu mvvm line busi applic rant current develop practic year still struggl mvvm practic method produc work softwar case great multithread applic control small assembl line would nightmer without mvvm concept abstract physic assembl line almost brainer howev career most revolv around intern line busi applic formal optim oper busi app general busi teir revolv around crud compound oper lo bs view model end simpl collect one line wrapper function busi class method end end complic simplest task like show messag box open window anybodi els find odd peopl go long discript depend inject messag provid window show dialog call around decad mani question stack overflow ask advic task extrem simpl winform get wrong get mvvm could invalu larg team horizont develop shrink wrap market softwar packag unit test view model could save million avoid bad rtm bug dedic ui develop could give rich experi cost redeploy minim busi care pay simpl work softwar spend time unit test simpl wrapper vm busi logic alreadi unit test much time busi realli go allow spend cute anim color scheme anyth left junior develop track bug save function use look save click understand pattern project whole especi reli templat marri vm view admit realli like databind wpf take advantag set data context window access busi class well observ properti yes break near everi mvvm rule least simpl event driven code easi read get take advantag new databind valid problem design use much hope better integr design show hundr properti window base class relat point resourc book even chang perspect made easier swallow give mvvm anoth shot last time felt pretti stupid worri depend inject show messag box vm intent unit test even unit test realli get qualiti trade run time test compil time error dread tight coupl applic realiz one answer stay winform one last support web form much critiqu trend web develop felt littl like dinosaur descov web form left microsoft certif track move forward option even like
need j unit test control layer mvc databas layer mvc structur ui control db model basic control realli much connect ui db layer need provid j unit test control program point matter semest project would help somehow much code basic take paramet put cover model layer test exampl method control insert retriev
creat system sequenc diagram extend use case taught one control one use case outsid control supplier control extend outsid control sub contractor control also extentd outsid control want ssd supplier control sub contractor control write ss ds method outsid control
unit test class adapt log input output third parti librari follow c question could also appli java repres properti method wrap log two dozen total separ call logger method part requir unit test class note name properti method third parti class alway match name properti method librari adapt
manag udp client server state tri write java applic work similar map reduc server sever worker worker may come go pleas membership group soft state becom part group worker must send udp datagram server continu part group worker must send udp datagram server everi minut order accommod temporari error worker allow miss mani two consecut period udp datagram server must keep track current set worker well last time worker sent udp datagram implement class call worker listen implement runnabl listen udp datagram particular udp port keep track activ worker class may maintain hash set hash map datagram receiv server may queri hash set check new member add new worker group ad entri hash set must reset timer worker note heard correspond worker use word timer generic sens clock sort perhap could also implement use int long variabl also server must run thread continu monitor timer worker see client time two consecut datagram interv remov hash set want worker listen thread would block udp datagram receiv function creat separ thread monitor worker hash set would need differ class perhap worker registrar must share hash set thread mutual exclus must also implement question best way pointer sampl implement would great want use barebon jdk implement fanci state mainten api take care everyth want use demonstr class teach thank
automat observ chang databas tabl current work project follow set proprietari applic perform transact microsoft access databas actual store mdb file api applic enough function requir face applic direct access databas design c applic react event trigger api way think somehow observ databas direct react accord custom event one approach would probabl queri db time trigger react possibl lead perform issu db larg would rather appreci approach db notifi applic specifi event occur edit proprietari applic enterpris architect model tool expect number concurr user definit exceed user databas size larger mb would probabl accept solut outsourc poll activ separ thread notifi rest applic event concern number user databas size load ms access databas approxim handl well known pattern approach kind problem avail know would face problem
mvc pattern split model data access busi logic layer chanc tri like much think use futur project like hear critiqu opinion done littl research subject sure seen approach around pretti sure must tri experienc peopl like avoid pitfal come idea model split db access layer dal busi logic layer bll db access layer contain ideal logic db access logic prepar queri suppli paramet call return result db need case select queri class test logic insert sinc contain throw command busi logic layer contain actual logic app control see dal call bll turn call dal need bll need test use unit test sinc kept separ db access read function test db access mock use depend inject creat mock class altern everi dal class method load via factori method request bll depend whether call came test environ load either mock real class cours case write function delet insert test would includ db call case real class would call rather mock still use system read write db call benefit approach code separ keep busi logic clean db access code improv readabl especi big method need make sever call db make easier maintain code also allow encapsul db access logic call numer blls also make easier maintain make easier switch databas point someth happen often happen easi thing everybodi point know talk test bll mock class make test run faster sinc call db made signific help tweak function intens test along way time make much easier test perform pure logic detach db call drawback clutter ad whole new layer class system slight lower perform due ad depend inject take time resolv mock class nice work creat maintain ad bureaucraci whole system miss anyth prefer system describ good ol fashion layer mvc guru still explor various architectur like one much would love hear experienc colleagu say
bad program practic check class referenc interfac instanc anoth class class timer array list timabl object timeabl interfac specif function need trigger class implement timabl refer call target lot method need search timer array trigger object certain target function like feel like bad practic timer class depend trigger class sort longer general two question actual bad practic better way bad practic
java general question regard general know need done worth extra class field e g statist custom field custom custom int project count statist countri field countri countri int project count best situat creat extra class project count keep twice two class
depend inject move complex separ class look use typhoon framework depend inject week get separ construct object benefici replac arbitrari compon mock unit test far seen benefit alon cannot help think humong view control class ten header import humong factori class ten header import suppos avoid massiv factori class
test mvc model use sql referenti constraint mvc web app wire postgr sql db use full gamut various referenti constraint ensur referenti integr oppos say rail approach tri check model logic also choic use orm write sql statement hand model want write unit test function test problem write test databas oppos mock creat entir long hierarch chain refer model test system let generat vacuum e g cannot creat model without foreign key foreign key point exist record etc way chain thing rememb unlik orm cannot trust data access layer dal work expect might fat finger statement somewher mayb got logic wrong must test data access layer suppos one way solv problem use someth like rail factori girl proper configur generat chain record need instanti model system way test dal model logic obvious ideal test case would wast ton time hit db add extra boilerpl simpli need suit go run time real fast bad solut think test suit dal test suit would make sure creat right refer would test sql statement work expect refer realli explicit test seem bit overkil done desir least make sure chain relat built happi path scenario suit ultim go compar short thus consum mani cycl mock model control test thing test isol without db refer constaint get way vast major test happen mock db make complet sens far save time goe way also test sql access layer twice need question propos solut peopl solv sql constraint model control test problem miss option
okay call model method view interest keep control skinni put headlin method model properti control context question far mvc concern okay call model method view like
pattern use differ stage softwar develop softwar laboratori test devic test devic multi subtest done reach final result perform complet test softwar must pass stage1 automat goe stage2 stage3 whole test finish meanwhil user select stage3 stage2 stage independ perform select runtim thing done far use di contain know chang list stage test work flow runtim question design right yes pattern shall follow obey principl chang stage runtim
db connect depend inject static creator method often use static factori method creat object databas tri use depend inject pass constructor obj db problem obj db param static function annoy pass param around handl case better solut
pass context around depend inject project work use guic tri much possibl depend inject howev one littl snag mani object reli object context immut object inform object need function proper never chang class work within context applic must abl support differ context time scope think three way solv problem current found write lot code assist inject almost alway method like factori creat context c code depend context creat manner even otherwis simpl start consid use provid chang everi line factori creat context obj provid get obj set context c want reli code call like compil make sure everi object context context cannot chang never research point thread idea pair context child injector one line bind context class instanc context factori make instanc arg sure ensur everyth use correct child injector seem like might best thread scenario sure right situat sscce might done option
interfac adapt expos busi object via wcf design know countless discuss think question slight differ may perhap prompt heat discuss let keep friend scene develop system mean learn various concept came across predica brain conflict whether keep interfac separ class librari live side side busi object want expos certain object via wcf howev refus expos entireti sure agre expos properti ds properti good practic also want busi object decor attribut question essenti separ interfac object essenti expos outsid world could end quit make sens creat separ class librari interfac also bring question whether adapt live separ class librari ideal want mechan transfer one object vice versa
design pattern complex view creation sheet music got bunch note model properti like pitch durat music notat note must place certain bar certain line certain page mani factor influenc posit note like note place bar also style properti influenc mani differ view element posit note affect line height music line whether bar justifi width page look design pattern help clean posit view relat anybodi help use svg java script current project import thank much help
reduc repetit di code method construct depend use uniti current call pretti much thing regist repositori object app part object issu lot method becom massiv generalis call exampl though could split reduc code method regist type contain first move bottom call anoth method sinc regist interfac came method seem work sure best way would also like move call anoth method prefer one creat sure even possibl better way refactor
memento option state edit point steve ever pdr correct implement memento pattern design actual state pattern menu program built consol base menu program multipl level select particular test run level precis describ oper level type back go back one level memento design state problem right state enum determin factor state back state next yet know noth current memento state anyon experienc similar issu found effect way handl memento option state possibl solut flexibl refer code everi case statement menu class could check state current memo set state enum accord pass builder howev seem flexibl flexibl chang struggl see effect way refactor design
adopt mvc decid get hand wet got yii framework php creat first applic creat new control model view connect databas got record pass control view print hello world confus thing page seem like nightmar control lot oper declar variabl pass view also need creat model page confus idea main goal develop avoid duplic see lot lot duplic code pleas advis clarifi mayb could suggest good read mvc code pattern best practic mvc far take much time creat small site use mvc use program schema
depend inject confus think decent grasp depend invers principl dip confus around depend inject understand whole point di decoupl part applic allow chang one part without effect anoth assum interfac chang exampl sake better practic may miss import point fail see gain awar use ioc contain easili handl object life cycl think core ioc edit expand exampl
better solut simpl factori method concret implement differ attribut creat factori use simpl factori method tri creat instanc like problem set specif attribut like bln bark bln jump high effici way send extra param creat scale class also break inherit lot basic function better pattern solv
far go domain driven design read littl domain driven design usag rich domain model describ martin fowler decid put practic person project instead use transact script everyth went fine ui implement start thing view use rich compon back unusu model thus must transform domain model use compon transform special complex view domain portion point busi logic involv wich bring question adapt far got follow conclus present layer good well layer impos restrict model one handl bad busi leakag servic object control action whatev good chang domain api present layer bad transact script wich intend design final domain model leakag busi logic futur could expect explos api seri method design handl view model lt domain model adapt hope could make clear
tri understand layer program confus understand structur layer programm good place except entiti etc use mvc ui model transfer entiti class model class etc creat project call ramznegar web project user regist get account login creat categori like gmail yahoo etc categori user add item password programm actual password keeper develop program creat four project follow structur ramznegar dal contain dao file ramznegar bll contain logic program like password decrypt encrypt class ramznegar ui contain jsp servlet class entiti contain type class entiti like categori item user class except includ except class use program like data sourc access except ramznegar dal use entiti librari ramznegar bll use ramznegar dal entiti librari ramznegar ui use ramznegar bll entiti librari pleas say structur correct problem layer concept
python gui mvc get variabl modul tri split code differ layer gui read gui creat input calcul model interpret data creat view send view gui somebodi told mvc would like tri build program way littl confus exchang inform modul run problem undefin global name forth model written matlab consist simul gui suppos present data plot actual problem connect differ modul class file suppos independ possibl exampl creat gui one file like call interfac order keep file nice clean would like defin function handl button click read field anoth file guess would call control part connect two exampl hand instanc control object read event inherit subclass rather new program start month ago struggl sort theori somebodi could point way communic modul file meet point look like give link studi like javier although read thing
3rd parti control mvc anathema read use asp net mvc reli 3rd parti vendor control ui author seem say mayb explan subtl dens thought true would
mvc softwar load model work rest java script client tri follow mvc pattern basic question came mind make http request load data model intuit tell control lot exampl ember js document exampl done model find method framework like django control think better way
configur di decoupl app read mark seeman depend inject net excel read far someth escap applic architectur like dal gt bll lt ui busi logic layer free depend upon data access ui layer depend upon bll composit root locat ui layer earth suppos abl bind interfac type bll implement dal mark seeman give nice typic exampl abstract class product repositori live bll class sql product repositori dal may sound like silli question ui layer suppos abl bind product repositori sql product repositori without refer dal move control view model user interfac layer present model layer leav view aspx ascx file composit root user interfac layer thing pretti sure guy know talk part miss also would put composit root case class librari project first thought bll would perfect given dal lt bll gt ui refactor project liter revers depend know anymor use bll knew dal ui layer bind type layer easi nobodi know everyon anymor like anywher could possibl put composit root help feel like miss fundament cornerston
model view control cach data build gui interfac embed devic pc host gui provid control devic paramet display feedback gui also emul devic function present user advis use model view control pattern devic acknowledg command user know ineffect action troubl cannot decid compon cach data exampl valu print screen view clear know howev model also know use calcul valu furthermor control also know exampl valu chang could proport logarithm user action pull proper
applic logic busi logic model control put applic brain tri wrap head around model view control feel though read conflict inform seem encount guess general goal far seen shoot fat model thin control still bit baffl put give exampl someth work person project mess php fun mini game sort ad time task itinerari collect reward task complet class kind like exist anoth class like user interfac user see task descript click someth like add itinerari understand correct control need pick request someth much exampl need figur task complet keep simpl mere time durat task control calcul give model valid model handl control realli glorifi router data second part happen itinerari task complet user interfac task show complet complet time past user click someth like claim reward let say know xp e experi point someth get updat user account let say amount xp calcul way base upon difficulti task time requir etc would put calcul insid model class user object control figur send user object model itinerari entri model reason ask specif kind claim reward code would coupl thing least actual claim reward updat user account clean expir task databas mark complet someth would interact user itinerari entri littl specif guidanc would realli help brain start hurt read explan kind like need know total thank advanc
possibl encapsul object within dynam properti ask question curios let say class foo singleton want call foo instead foo instanc access static object would possibl encapsul object within dynam properti would c allow creat dynam properti refer anyth properti said object like would allow call instead possibl witch situat would viabl encapsul kind object like whithout use heritag exampl instead would
use interfac unit test io c suspect made schoolboy error look clarif lot class solut c dare say major end write correspond interfac e g calcul interfac calcul class implement even though never like replac calcul differ implement also class resid project depend realli need intern end public side effect implement respect interfac think practic creat interfac everyth stem falsehood origin thought interfac necessari creat unit test mock use moq sinc discov class mock member virtual parameterless constructor correct wrong origin thought interfac necessari regist class io c framework castl windsor e g fact could regist concret type use interfac e g constructor paramet depend inject result loos coupl gone mad interfac awar scenario would normal use interfac e g expos public api thing like pluggabl function solut small number class fit use case wonder interfac unnecessari remov regard point violat loos coupl edit play moq seem requir method public virtual public parameterless constructor order abl mock look like intern class
depend servic pipelin work creat new data process system multipl step fulfil differ servic exampl schedul servic kick someth analysi servic process notif servic summar email result data flow order main question design would better analysi servic know notif servic notif servic know analysi initi thought use servic bus notif servic simpli subscrib analysi result get broadcast way notif servic replac chang need chang analysi servic also mean client want start analysi get notif would call notif servic first tell handl result eventu get kick actual analysi oppos idea analysi servic simpli call direct notif servic analysi servic need know creat call notif mean client would bundl notif specif instruct get pass analysi servic later look know pass notif call seem like servic bus approach notif servic get process analysi result would better could also add servic futur someth result without chang analysi servic call explicit anyon provid insight approach would work better easier develop maintain support
cqrs valid start introduc cqrs concept get stuck follow situat supous entiti must uniqu name order verifi prior creat entiti must make queri thus verif queri subsystem happen syncron happen command system queri system yet client sent name happen case
observ pattern adequ kind scenario creat simpl game develop framework rubi node system node game entiti posit children node one parent node children alway drawn relat parent node posit field anyon modifi posit modifi node must updat children accord proper draw relat posit contain point instanc class x properti plus use method need know node posit state chang tell node updat children easi programm someth like equival call lost happen one know posit chang point instanc store posit properti node need node notifi point consid observ pattern basic point observ node posit properti given new point instanc assign oper stop observ previous point start observ new one point instanc get state chang observ node own notifi node updat children posit chang problem happen mean two node observ point chang one node posit would chang well fix posit assign plan creat new point instanc copi pass argument x store newli creat point instead store pass one anoth problem fear would technic modifi node posit sure anyon would expect behavior impress peopl see point kind primit rather actual object approach even reason reason feel skeptic heard observ pattern use well mani observ technic scenario one observ time assign node posit anoth node posit anoth node posit creat whole new instanc rather store pass point feel hackish even ineffici
mvvm pattern best design approach manag applic one year ago discov wpf technolog develop littl applic first experi compar content two differ directori content directori shown differ data grid time develop applic use mvvm pattern experi good work much experi wpf design pattern proud work want rewrit applic improv follow recommend mvvm pattern actual design applic way main model main common algorithm main view uniqu view applic datagrid show result algorithm main view model take care handl connect two view model main model main view one view model data grid way separ behavior data two data grid main model contain main algorithm use search file given directori like main view model instanti object view model view model datagrid use properti want appli design pattern help manag applic like factori method builder templat method think suitabl applic differ usag condit design pattern sure design know correct implement mvvm pattern promot loos coupl high cohes help design mine correct implement mvvm correct one opinion thank
di io c abstract factori galor given project architectur follow box repres assembl class librari arrow stand depend might worth noth project massiv well becom complex incur decoupl absolut warrant busi logic layer bll librari defin organ various set poco interfac abstract namespac implement various function logic concret namespac function logic refer use abstract poco interfac data access layer dal librari implement poco interfac bll use partial class extend linq sql dbml class custom l2s class implement bll custom interfac sometim l2s class differ type bll abstract use enum type often partial class code look like assembl provid model expos class name xxxx model constructor inject repositori regroup servic twist xxxxx model class implement interfac call unit work encapsul databas transact must abl oper repositori dispos possibl dynam runtim determin connect string achiev creat model factori creat singl data context appropri type inject instanc repositori present logic layer bll poco interfac need view model implement e g display item list pll librari defin howev goal librari focus around well actual present logic although refer wpf whatsoev singl refer window base get assembl provid view model one thing note view model complet control view view model inject implement view factori creat view implement technic view model bliss unawar implement sure deepli violat mvvm honest realli care point especi read blog post like one thing point view model litter creat view assign data context make simpl deal thing simpl show close window view model class inherit view model base abstract class take view factori protect constructor effect instanti view offend code view model essenti control view point encapsul make easi implement dialog result enumer much closer way win form view assembl librari refer consum view model pll assembl implement interfac defin bll assembl arrow miss also depend upon bll use indirect librari provid view defin wpf xaml window control apart valu convert markup extens implement much c code librari hard refer view model implement xaml data context design instanc declar wrong definit like direct depend includ pll view one fact bll zero depend mean reus librari come web ui ever need one happen eventu dal bll decoupl mean part data model could come web servic cloud whatev busi logic care less good main issu find write lot abstract factori implement even alway reus abstract henc smell seem like whenev ask inject dynam depend answer almost automat abstract factori probabl right think right pretti much everyth dynam depend even abstract function factori normal factori almost everyth repositori servic model dal view view model pll view librari project rather small still programm work like architectur solid simpl possibl come implement new function 2nd project implement di io c needless say tri run swim perhap even fli walk tip issu see abus abstract factori els could instanti view els could data model could connect given set almost ident databas user discret know break mvvm overlook anyth pattern could simplifi exist
n hibern complex domain model legaci databas tri refactor actual rewrit applic current use store procedur access databas hundr ps goal use nhibern follow good design much possibl sinc databas ps use dozen app realli chang db design cours aw face design problem realli find good solut tabl call movi contain movi movi differ thing exampl tabl contain movi well episod tv show way know differ field name episod set movi episod object expos follow class hierarchi current map whole movi tabl model class movi model build episod movi class auto mapper factori method program class seem realli wrong mani level anem data model sinc movi model total empti busi logic automapp stuff becom realli hard maintain add mani entiti relat movi break lazi load auto mapper heard map nhibern realli solv issu creat sub compon class question ideal busi logic guess movi model class realli like idea expos databas field way nhibern map tabl differ class base field valu point wrap nhibern object want provid clean public api goal build base librari use hope legaci app want provid clean api logic method without expos databas mess even still deal thank help put right direct
host mvc razor syntax app old server start new job creat web app host intranet window r2 server sql server said question work mcv3 razor syntax applic know work easili even work recent server instal someth rememb name razor understood old server get work tell buy date server
loos coupl depend inject databas manag current set mongo db databas web app run node js use mongoos help manag map valid ect wonder good idea realli decoupl mongo db code chanc want switch someth like couch db littl later specif make databas manger modul respons set mongoos mongo defin mongoos model manag replica set extra valid manag would export generic api handl detail queri intern manag would pass around via depend inject make sens kind redo mongoos function advic appreci
group select statement count valid model make facebook app tri follow mvc proper wonder class bunch fql queri get data facebook keep control model accord codeignit user guid model php class design work inform databas sinc fql interact facebook databas would class full basic sql select statement count valid model
factori class still factori class object return alreadi exist decid name class far label factori sure class see exist return concret type interfac resolv registr issu base argument suppli getter method resolut famili enum understand factori class accept argument defin entiti develop deliv return howev case entiti alreadi develop ejb refer thus method deliv still factori
good strategi bind view object model object c imagin rich data model repres hierarchi object also view hierarchi view extract requir data model object display data allow user manipul data actual could multipl view hierarchi repres manipul model e g overview detail view direct manipul view current approach control layer store refer under model object view object view object get current data model display send model object messag updat data view object effect observ model object model object broadcast notif properti chang approach allow view updat simultan view chang model implement care work howev requir lot work ensur view model object hold stale refer model object user delet model object sub hierarchi model time ensur view object hold refer model object delet time consum difficult feel like approach take especi clean want explicit code control layer mediat communic view model seem like must better implicit approach establish bind view model relat model object particular look approach c understand two key point mani one relationship view model object under model object destroy depend view object must clean stale refer exist share ptr weak ptr use manag lifetim under model object allow weak refer view model provid notif destruct under object sens use stale weak ptr allow notif need approach notifi depend object weak refer go away anyon suggest good strategi manag
break model class mvc sure whether right wrong answer one curious general consensus user model current perform user function retriev user detail databas insert new user databas updat user detail etc lead fair larg class accept thought break model model alreadi relat one kind entiti larg class permiss case moment class resembl someth like concern mani thing perform retriev user inform databas handl databas side log session user
compromis dri command queri separ recent refactor method command queri method separ one command method one queri method found multipl place code call command get valu queri seem like violat dri principl wrap common code method method would command queri accept
item group filter view model view layer situat list item need display depend properti unsur best place put filter group logic viewmodel state current view use convert unsur whether logic viewmodel e g view model layer view layer build like view model layer view layer mayb someth view model layer view layer guess question good practic term logic put view model logic put bind view seem overlap bit
zend framework keep model mapper applic modul process plan web applic follow best practic approach softwar develop build applic use zend framework go document best practic build applic zend framework mvc pattern right confus keep model layer far applic develop use zend use keep model layer applic modul think model relat singl modul singl modul may communic multipl model also zf2 modul get load request except applic modul load everi request despit modul request place model specif modul load servic config relat modul abl use modul
fair call databas document model model view control part job work line busi applic built around client side databas access fox pro time local loba direct document access exact one one map logic object xml node refer bookmark word document rang excel spreadsheet code messi one would expect usual fair stabl platform applic built upon one thing common translat program data physic storag direct transpar programm point view would fair refer databas document one loba model refer model view control separ concern would improp call separ ui busi logic mvc unless make intermedi object turn map either ui databas
use java fx properti usual care keep model view control code separ thing java fx properti conveni bind togeth issu make entir code design depend java fx feel abl chang view without chang much model control ignor conveni java fx properti embrac fact reduc code flexibl
downfal mvc use mvc mv sinc start actual organ code year ago use long even think way structur code everi job intern mvc base question downfal mvc case would mvc bad choic project would correct choic look mvc altern near everi result differ type mvc narrow scope get close let say web applic work backend front end differ project say front end backend
publish subscrib observ pattern implement question develop desktop applic java swing compon regist subscrib mani panel get messag custom event compon someth like messag tray valid error kind info messag deliv panel tray publish method face problem window consist messag tray intern panel intern panel compon panel panel panel implement publish interfac creat fli metadata access regist subscrib cannot direct regist messag tray subscrib panel access creat dynam metadata chang ok set subscrib object refer middl panel creat dynam publish panel regist refer ok observ pattern class refer object strict need mayb object inject way mayb ok mess mind today
mvvm view model command need bit help understand relationship viewmodel command respons viewmodel tri give exampl use caliburn micro viewmodel class command class view save button user click save save method call spin command save work question command refer viewmodel viewmodel pass work command pass save result back viewmodel updat yes command need refer viewmodel properti need public set abl seem like cleanest way also requir extra work work result simpl bool similar guess root relationship viewmodel command respons viewmodel strong friend relationship view model command code move anoth class noth wrong command direct access viewmodel anoth understand viewmodel simpl class almost properti contain littl logic logic command viewmodel pretti smart contain applic logic command realli need either mani one viewmodel bit complic otherwis command code stay viewmodel rambl guess pleas help understand viewmodel respons
mvc web framework favor anem domain model order avoid duplic bind direct form model help lot get rid boiler plate code mean model must getter setter properti otherwis possibl anoth choic would creat anoth layer dto carri data form rich domain model necessarili getter setter attribut mean duplic field valid code instanc right web mail applic know alreadi java mail api good rich domain model howev way design make imposs bind web form model forc creat dto captur data pass java mail api like exampl domain model would like one would happen spring mvc document instead often prefer bind direct busi object reusabl busi code need duplic use exist busi object command form object instead mirror extend particular framework base class mvc web framework spring mvc strut favor anem domain model order avoid duplic
push complet notif client cqrs accept consist eventu howev mean user continu poll eventu mean updat take 500ms sync sake ux want least give illus consist possibl transpar possibl mind setup angularj web client consum webapi rest servic send command nservicebus command handler save neventstor dispatch event nservicebus event handler send messag signalr hub send notif angularj web client setup theoret initi request server valid request send necessari command mean time client get respons updat view work get messag sometim later done updat data thing get interest command could spawn multipl event sure serious current exampl new custom spawn custom id creat custom name updat custom address updat etc event handler need notifi client progress bar style updat
mvc architectur mani control need code most script simpl applic move new role develop web app use proper mvc architectur desper tri learn quick hope question similar best practic mvc architectur go differ tutori notic multipl control differ thing mani control singl web app need realiz would difficult answer without exampl provid one applic user log user one three thing upload file store mongodb databas meta data b search file c log question general one gave exampl help anyon tri answer
good practic object instanti mvc mvc domain model model layer instanti domain model domain model instanti control pass use depend inject implement real applic choos path control get fat
unus depend constructor inject class depend writabbl db connect read db connect queri filter util object want constructor inject class would look someth like object would like instanti static factori know retriev db connect problem see everi time build object need pass depend although possibl one use oper need like hide depend insid servic locat class sinc want keep depend explicit solut live unus instanc
clean modular code vs mv framework hear lot new mv framework tinker knockout js creat invoic applic much prefer write clean modular code raw java script leverag util ap librari necessari given method structur solid approach write java script applic oop soc srp design principl adher usag mv framework superflu articl express address concern found one past note migrat question site appropri audienc
state pattern good solut implement ui chang landscap portrait mode os app lot complic ui logic depend interfac orient view control condit logic present lot place segreg differ state form object
mvp implement user control level tri figur mvp implement user control level thought end read blog post pretti much shut back start idea proceed let say user control someth simpl like two text box es combo box get invok main form view present way understand mvp main form present suppos invok second present handl communic user control get drop get complet lost past implement user control learn mvp alway incorpor logic behind control e g combo box select chang text label relat text box1 implement user control done drag onto design call command like user control1 updat user control1 display data data third parti user control command user control perform command control present need invok instanc drop combo box list view win form control onto form yet intern logic dictat display essenc test present separ somewher thought good solut would constructor user control would creat present command user control would deleg straight present would allow user control present logic separ view test implement main form need drop user control perform data send receiv part local present logic user control present logic left invis implement thought understood find bad practic self awar view plead peopl understand better construct user control keep present logic invis end user construct wrap present main form without violat principl matt wynn discuss link post complet misunderstand concept mvp
use mvc way provid respons web design respons web design show user differ element element arrang differ way use media queri devic desktop laptop show tablet show phone show thing methodolog though especi app site use mvc anyway leverag mvc return differ view base type devic user agent model control pair could least three view desklaptop tablet phone well perhap granular gradat view tailor larger devic base size user agent real estat invok appropri view think might natur easier implement way optim experi user least convers mvc exact implement user agent determin appropri control action result invok sure though thought updat respons comment answer think along line scenario imo media queri satisfactorili handl app site centerpiec map ancillari vital piec place around map top botton side fit tablet bare larger devic fine phone though way room map even map almost puni way think deal show map full screen phone button link state like wyom montana nevada invok part surround map larger devic monopol screen phone case current display view need link open portion app site otherwis way could usabl phone user carri magnifi glass around zoom swipe around screen like madman imo pain gluteus maximus scenario seem view would easier implement alter css major renov screen rearrang furnitur
mix angular asp net mvc web api come use asp net mvc web api start use angular clear proper way mix use angular mvc server side concept still provid valu strict use web api pure get data angular http call mayb strip start point use vs templat ad lot stuff need like idea strict divid server side pure data client side pure html process
architect domain layer modul depend inject mind current new depend inject pattern influenc link mark seemann confus regard whether interfac agent class agent modul includ domain layer agent mean class modul interact extern wcf webservic diagram show short ok product agent interfac busi layer actual implement agent modul confus aris fact call servic even consid busi rule today servic fulfil facil tomorrow might anoth mean cater facil liskov substitut principl apolog mix thing
factori array object python ok titl might littl mislead window class draw widget insid constructor widget type pass list dictionari contain paramet widget work quit nice worri interfac caller obfusc order use window one studi class construct correct list dictionari call constructor one paramet widget param good bad design altern python syntax provid
convert data present type quit new stuff like di mvvm wpf altogeth fair possibl read like giant wtf defin interfac busi layer entiti data layer public class entiti entiti entiti type thing note busi layer refer data layer present layer list item given window view model enumer lt entiti gt properti enumer lt entiti view model gt want abl mark list item delet sinc eventu go whole bunch delet type creat delet interfac entiti type data layer need know delet implement interfac entiti view model entiti delet class present layer part start think defin busi domain layer instead problem model spit entiti realli entiti data layer need way convert entiti entiti view model given entiti view model declar present layer option seem view model class constructor like class hold present logic bridg two implement someth like work somehow feel right given entiti entiti entiti view model delet would common normal way implement wrong
main method templat gotten depend inject groov find main method differ applic look basic similar stuff might find guic document put exampl multipl applic main method look like let say want make brand new app say reus databas modul pretti much copi past main method make appropri chang view copi past code smell let say realiz probabl put shutdown hook go chang everi main method applic attach shutdown hook servic good way templat process minim boilerpl
code enumer provid stronger domain model static tabl code enumer provid stronger domain model static databas tabl exampl say marbl entiti color attribut color attribut finit set possibl valu mdash say red green blue say databas team recommend static valid color tabl effect wherea think along line sketch general concept public class color public static const color red color public static const color green color public static const color blue color privat color uint type code asid question better probabl depend number factor repres question touch strong domain model one way anem
state pattern long state class name use state pattern state applic state membership card major state boolean attribut membership card actual affect behavior decid emb state multipli state problem state class name get craze end class state name like membership creation print link premium frozen hyphen differ attribut make clear ok state class name like
mvc work principl tell ask procedur code get inform make decis object orient code tell object thing alec sharp view want display inform suppos deriv properti model display calcul part model view ideal view tell object inform need model calcul return result model start new method everi time new type view want display extra inform deriv model properti method view model case subclass model add requir method assign view object c develop also add categori model view languag featur add method object class runtim ideal design model mvc meant inform key valu pair instead real object pass around view read valu base getter
auto increment id domain object read lot auto increment id guid interlock increment object id generat find noth situat domain model user ask automat progress numer id activ creat sinc user request want put domain model mode usual older applic without good architectur access databas retriev max add object sinc domain layer must awar db like db ident lack control sometim db administr chang id user error creation activ interlock increment look fine applic instal everi user machin use sinc must intellig progress use guid find good idea lev gorodinski articl servic domain domain driven design defin interfac generat activ id domain layer domain servic find way make good implement suggest edit lev gorodinski idea see generat defin found id generat implement put implement activ repositori yes omit id generat activiri repositori intefac
design pattern multi thread messag server design instant messag server person exercis improv understand applic multi thread design pattern java still design code yet goal server make effect use multi cpu box like server distribut across multipl box wonder run walk initi thought client connect manag server socket object constant accept client socket connect client connect manag thread pool spawn new client proxi object client socket connect accept hand client socket object client proxi object repres client app handl send receiv messag across socket stream correct one server socket may bind port take way pool object accept socket connect two idea pass messag client proxi object either direct client proxi object buddi via central exchang object better yet pool object pros con two approach exchang lend better distribut app would observ mediat pattern respect appropri
mvvm applic architectur put depend inject configur class busi layer common interfac plan architectur mvvm applic come app ui view app busi layer view model app data access layer repositori impl ef app domain layer domain object repositori interfac app common log secur util contain reflect method use mani level custom except app unit test inspir domain driven dese test driven develop onion architectur sure done well sure coupl thing put depend inject configur class common project put busi layer interfac domain layer put common interfac domain layer common referenc domain reflect util di respons yes circular refer good
model connect resourc rudimentari event process simpl mud client use apach telnet ssh mud client strang beast general mud client basic telnet client lack vt100 termin emul capabl perform telnet negoti standard featur seen mud client includ ansi color support alias trigger script wikipedia would like yet written control refer telnet connect use higher level abstract attempt prise class apart fail telnet connect seem take respons everyth keep grow part difficulti lie within input output class adapt io util apach reason cannot includ link apach sourc code send input stream input output need callback use observ send string data match search get back match search text trick term captur consol input print remot output mud server consol like regular telnet regex etc remot output concurr open untermin stream last requir seem make odd beast cannot envis flow control data
mvc model instanti model instati mvc arhitectur understand prefer way would outsid control bootstrap file inject use dependeci inject contain model work depend run time paramet
use servic layer mvc control get fat model instanti start add servic layer could use wrap logic insid servic class get bunch servic one two method feel like code smell best practic regard servic instanti model servic instanti model servic unit test cover integr test
support interfac differ devic input scenario ask question someon point would better like right go want opinion differ way approach problem okay system wanna design toward futur type object wich take paramet object implement interfac wich contain anoth object implement anoth interfac way get point object contain anoth one everi interfac implement common interfac interfac necessarili implement interfac b interfac one implement multipl possibl tree question want manag possibl tree better use reflect generat possibl tree startup would better hold differ tree xml file would pars startup keep mind interfac type implement keep come everi time add new type manag know solut work question like would best approach orient system toward futur add context situat exampl case interfac expos adaptor adaptor may need anoth one task instanc adaptor wich pars data data communic remot target use ethernet serial port etc could generic parser wich take generic communic one differ possibl need clarif dont hesit
depend inject worth outsid unit test given constructor never ever use differ implement sever object initi still practic use di might still want unit test class question initi class constructor class use pretti specif never use anoth implement justifi avoid tri program interfac
mutual observ pattern java want improv multi thread design pattern skill design instant messag server write server first plan far client proxi class handl socket connect client want exchang class take messag client proxi hand recipi client proxi think client exchang observ situat via observ pattern mutual observ client proxi exchang observ subject think instead exchang observ client proxi multipl subject exchang thought seem peopl quit like idea mutual observ proxi exchang plan client proxi run separ thread would exchang becom bottleneck one object sound like might need pool exchang object unsur would map observ pattern even kind broker front pool worker
bad practic make iter awar end background ask question exampl python method chain chain arbitrari number rang togeth make one without make copi link case understand decid would implement chain c use variad templat far tell way make iter chain success go next contain iter know end contain thought sort hack call end know go next contain first way seem easier safer versatil question anyth inher wrong iter know end code c languag agnost sinc mani languag iter
use java reflect decoupl code modul involv project sever modul found programm design one modul easili decoupl depend modul use java reflect modul need call method modul programm expect use reflect call result lot place hard code reflect call hard code mean class method name perman fix string kind defeat purpos reflect suppos dynam program justifi feel novic misus reflect api think polymorph right way decoupl modul anoth without break function unfortun chang entir code base polymorph way much mainten
generic repositori unit test best practic unit test generic repositori unit test code use someth like dont know correct way test repositori cant find use tutori articl unit test generic repositori crud oper
expos domain model api build simpl res tful api web base applic work wonder best way go expos domain model let say user class want provid json respons various user properti obvious want public expos everi properti model thing date creat password hash etc due secur bandwidth issu read data transfer object wonder way go right could pass exampl user model user dto ensur said dto allow exposur user properti choos would also help decoupl model public api solut appropri better way go thank
java desktop applic use mvc hibern develop java desktop applic plan use mvc architectur describ oracl site java se applic design mvc need store data databas decid use hibern simpl tutori use swing mvc hibern possibl use togeth
unit work pattern gone mani articl still confus whether use unit work pattern use generic repositori repositori pattern understand uow pattern correct persist tool today offer unit work pattern alreadi implement db context object context db set want know case tri implement uow pattern altogeth see one articl sorri refer sinc miss somewher wrap db context insid uow class left wonder reason might
valid data persist domain model first current workplac net shop suffer abund anem domain model extent realli know valid data persist handl proper domain model data persist one option would give domain model way persist could exampl inject foo repositori via constructor inject resolv io c contain ensur creat depend la onion architectur sure code use domain model respons call method save data etc done implicit behind scene background thread perhap break puriti domain model along line activ record pattern option see tie domain model data persist instead coordin servic layer respons aspect best practic data persist domain model pattern valid anoth problem know solv proper domain model indic ui current model state invalid without coupl least cater ui exampl let say form user fill various field want valid input someth wrong indic error specif field messag would handl valid level granular without ad signific complex domain model hack ish string type thing like throw valid except properti name messag
oop object nest object dao someth keep struggl figur best solut problem work php java fundament understand oop issu exampl php let say object song artist artist profil user instanc want artist profil array user object subscrib call artist e g artist profil page instanc want artist info like view page song nest one object part anoth creat specif object differ usag option nest option build object option mean wast lot time resourc grab inform may need page easier manag option messi requir keep track object faster far less db call correct option 3rd correct option
reason reflect error work eclips plug project use plug user creat eclips java project specif exampl add java class name save file java class creat src project use jar file must ad project classpath case plug use reflect get data class two differ test case give error plug find class instanti jar contain class name save file ad project classpath case classpath incomplet user plug updat jar old version jar contain name class new version jar could happen class delet new version jar case plug find class classpath complet plug must differenti two test case fail find class name use reflect done
relationship meta circular interpret virtual machin increas perform read meta circular interpret web includ sicp look code implement py py narcissus read quit bit two languag made great use metacircular evalu lisp smalltalk far understood lisp first self host compil smalltalk first true jit implement one thing fulli understood interpret compil achiev good perform word py py faster c python reflect also smalltalk research led believ relationship jit virtual machin reflect virtual machin jvm clr allow great deal type introspect believ make great use time aot suppos compil far know virtual machin kind like cp us basic instruct set virtual machin effici includ type refer inform would allow languag agnost reflect ask mani interpret compil languag use bytecod target llvm parrot yarv c python tradit v ms like jvm clr gain incred boost perform told jit far know jit noth new sinc smalltalk sun self java rememb v ms perform particular well past mani non academ one outsid jvm net perform definit good wish could sourc claim speak person experi sudden late 2000s someth chang lot v ms start pop even establish languag good perform someth discov jit implement allow pretti much everi modern vm skyrocket perform paper book mayb
generic vs io c one servic locat pattern drawback caller mislead depend calle ok put depend generic paramet class level found coupl opinion want discuss continu signific counterargu depend inject use generic make late bind unavail care case app need featur want find solid counterargu p new constraint necessari understand
use mvvm creat new viewmodel swap model say viewmodel like viewmodel bind view display employe thing think viewmodel repres employe display employe viewmodel contain thing view specif instanc background color mani employe one employe view mind chang display employe make sens creat new employe view model rebind view simpli swap employe model distinct even import matter style alway lean toward creat new viewmodel work project viewmodel creat model swap sure feel though seem work fine
manag thread java good pattern morn began write minim chat use java socket thread took minut experi lot problem mvc manag current class main main class use start control chat control use manag model view class control class host class contain socket attribut two scanner print stream attribut read write socket problem class extend thread let program read write featur concurr professor told extend chat control henc control class think much hard code also like method attribut inherit thread visibl chat control class correct extend control class thread manag thread consid implement anoth class task problem even tri pattern need sourc find pastebin
good name valu object contain databas updat creat column valu know field databas admin like add user creat amp date creat user updat amp date updat need display ui want put valu object come good name call class
net mvc project architectur layer plan architectur mid larg scale mvc web applic implement layer decoupl possibl easi test basic follow best practic let say use code first data access struggl defin busi logic meant interact data layer take vehicl sale applic exampl would busi logic class perform task calcul tax band given vehicl compar mile per gallon statist etc busi entiti e g car van motorcycl would put data layer along datacontext class also would constitut applic logic oppos busi guess thing like session user input valid exampl car control might return action view result list top ten car filter type best mpg let say car repositori car repo inject control use repositori pattern di filter car action method paramet e g var car car repo get car type hatchback kept data access knowledg control use repositori keep busi logic control use domain model var result new mpg calcul car let say need calcul class need perform addit logic calcul best fuel effici load filter entiti db data set view render use repositori retriev data access layer domain specif object process perform busi relat task data make mistak still need use repositori pattern code interfac decoupl orm test topic concret data access class dbcontext data layer interfac definit go domain busi layer mean data access technolog ever chang layer effect studi thus far structur look like mvc internet applic standard internet project model view model domain busi layer busi specif class model control use process domain entiti data layer pass relev view repositori abstract necessari hear lot debat especi use orm data layer entiti class car van motorcycl db context concret data access technolog layer apolog exampl make sens tri learn best pattern without make applic unnecessarili complic
best way wire entiti framework databas context model view model mvvm wpf question best way wire entiti framework databas model context view model mvvm wpf learn mvvm pattern wpf alot exampl show implement model view model model exampl simpl class want use mvvm togeth entiti framework model base first approach what best way wire model view model thank answer usual ctor view model think better way read repositori pattern sure adapt wpf mvvm
develop go manag complex plural word activ record play plural command line begin scare multipl leaf leaf leav multipl cactus cactus cacti even cactus radius becom radius instead radii yet correct get women octopi knive errata finer thing life understand activ record use plural method use test seem made enough tabl without think would eventu run problem locat proper tabl expect plural differ convent recommend test plural command line make note tabl call develop label someth uncount get fuzzi side note activ record tag
uncl bob exampl refactor abstract factori simpl factori book clean code robert martin make statement regard follow code statement solut problem see list buri switch statement basement abstract factori never let anyon see understand call abstract factori solut creat employe subclass implement calcul pay method logic move let say control creat simpl factori idiom abstract factori present origin book gof abstract factori intent provid interfac creat famili relat depend object without specifi concret class clear case
natur spring accur say depend inject manual use java without spring noth implement strategi pattern per exampl furthermor correct say spring provid declar way specifi depend oppos manual method wherebi depend need creat set use java code
best practic php mvc rout custom mvc framework constant state evolut long stand debat co worker rout work consid follow directori structur question current user authent establish router choos control directori load control argument authent router error control creat instead request control inform mishap directori structur clear indic authent requir argument router rout rout leav control handl case case basi modular allow flexibl chang need made router allud topic differ natur altern suggest would welcom well
busi rule display data uppercas handl part system work manag secur inform stock bond etc busi rule specifi certain field display cap stock symbol cusi ps exampl user look data display screen well perform creat edit data entri oper best place deal present layer user enter ibm stock symbol store databas ibm convert uppercas display app ibm convert cap store db user enter ibm model class convert uppercas send databas store ibm someth like custom setter convert cap db user enter ibm databas insert queri convert ibm exampl use upper function sql end result user see data cap system care data input proper case mvc compliant answer seem data never use format cap would argu valid store databas becom control view model concern right heard peopl speak accomplish client side java even css seem like poor solut think question languag system agnost matter use ms sql entiti framework asp net mvc scratch head whether present busi rule like influenc data store db cap vs cap applic care stock symbol ibm input bm ib seem wrong store data like ever use display cap would consid data valid issu handl control model level present detail handl view
architect multi model multi db asp net mvc solut asp net mvc solut put togeth leverag io c repositori pattern use entiti framework new requir abl pull data second databas anoth intern applic control api avail unfortun second applic general pattern place work go direct databas want maintain consist approach model domain use entiti framework pull data thus far use entiti framework databas first approach generat domain model databas context top howev becom littl stuck includ second domain model applic generic repositori move common data access project short creat two distinct wrapper generic repositori identifi specif databas context struggl see eleg includ multipl model
inject specif class tabl sql builder interfac method get creat tabl sql interfac use class follow tabl sql builder interfac multipl implement sq lite tabl sql builder sql tabl sql builder sq lite tabl sql builder origin creat sql method creat sql index field turn function method need place split sq lite field sql builder sq lite index sql builder class instanti sq lite tabl sql builder thus inject sq lite tabl sql builder depend concret class unsur chang field index sql builder inject one hand give flexibl also allow mock behaviour test bind flexibl current code split new class go inject approach accept type could field sql builder index sql builder interfac implement current concret class howev mean one happili end sql index builder sq lite tabl builder clear avoid could also type hint concret class pretend interfac get rid depend long construct happen outsid tabl sql builder think collabor inject valid except better go way
formul domain model domain driven design proper bound context domain say applic deal differ core domain exampl made hard put real exampl meaning data togeth concis domain driven design ddd start look bound context domain sub domain say bound context phase lifecycl exampl context would within ecommerc system although could model singl system would also warrant split separ context area within applic ubiquit languag model way talk bound context obtain inform need core sub generic domain area expertis numer complex applic say long process deal entiti exampl book core domain look bound context number phase book life cycl say outlin creation correct publish sale phase imagin second core domain perhap store domain publish branch store sell book store number bound context life cycl phase exampl stock inventori context first domain probabl book databas tabl basic id track differ book entiti differ life cycl suppos support domain e g user catalog inventori hard think relev exampl exampl domain model book outlin phase creation phase correct phase publish phase sale phase store core domain probabl number life cycl phase creation phase bound context book could simpl class wherea publish phase bound context would text releas date etc immedi benefit see separ life cycl phase great way separ busi logic mammoth encompass entiti domain servic problem figur concret defin rule physic layout domain model domain model get model mani bound context separ project etc life cycl phase across core domain complex applic edit answer yes accord answer alexey zimarev entir domain bound context b domain model typic arrang bound context domain edit answer b bound context complet domain servic entiti vo repositori c mean easili segreg domain model multipl project use entiti valu object edit answer c complet domain bound context domain model entiti vo layer project use bound context direct via chosen path e via domain event part tri figur domain model actual implement start figur bound context core sub domain particular complex applic goal establish definit help separ entiti bound context domain
program task express without state theoret question mani year program realiz normal imper techniqu use c main discov world function program stumbl upon accident casual learn java script led wonder could technic replac complet state orient program differ implement pure function without state intrigu idea must admit clariti eleg function program realli blown mind
throw except properti object state invalid awar general case answer throw except properti general special circumst ok microsoft guidelin give general answer also question site face situat think may one special one ok question realli one except situat throw except superior altern better use getter setter like general case applic use linq2sql case object invalid state somebodi someth wrote nonsens databas consid toy exampl could write code ensur applic never write rectangl zero length side databas matter bulletproof make code somebodi could open databas differ applic creat invalid rectangl especi one second side exampl pleas forget possibl design databas way write side length zero rectangl tabl imposs domain model complex constraint model state cannot express relat databas solut gravit chang getter reason behind throw except properti programm abl use without make precaut catch handl case think ok continu use properti without precaut except thrown applic wrote non zero rectangl side databas serious bug cannot handl applic code prevent good except visibl thrown way bug caught except thrown differ applic chang data databas handl outsid scope applic anyth catch good enough reason get avoid part guidelin throw except turn method note real code properti invalid state feel less like result calcul natur properti method
depend inject finit state machin interfac segreg principl tri figur best way setup fsm also keep interfac clean use ioc contain use di let visit head first design pattern textbook exampl gumbal machin best practic thrown except invalid state add state even applic guess portion confus could see simpl exampl get complex relat question perform di state state machin state regist ioc contain let suppos order servic inventori servic depend stage order state might object model look like hard time digest actual inject depend state guess could regist state pass contain around state
deal data model specif technolog use case data class domain model applic seem depend technolog use one exampl follow suppos build one applic net need employe class suppos go implement relat databas employe primari key right class would someth like employe id depend technolog right someth way choos persist data write class independ thing way work think would need map time domain model persist specif type sure
design agil process recent interview dev team compani team use agil tdd code exercis implement video rental store generat statement calc total rental fee type video new releas children etc custom exist code use object like statement generat statement calc fee big switch statement sit use enum determin calc rental fee custom hold list rental movi base class deriv class type movi new children action etc code origin compil owner assum hit bus outlin improv object model better respons class use strategi pattern replac switch statement weav config team say wast time requir uat test suit work guidelin goe architectur decis under stori get price featur say anyth discuss focus time spent refactor switch statement understand agil methodolog mean zero design upfront code smell avoid begin also unit uat test suit detect code smell otherwis sonar findbug exist want ask thing call agil design agil methodolog like agil document defin agil design upfront know enough enough understand ballpark architectur data contract among compon defin start project detail right anyon explain team realli look kind setup design aspect agil aspect implement minimum viabl product concept agil process real world project must feel embarrass mvp
permiss mvc progress develop web applic web applic most crud interfac although user allow perform action see part view would reason way handl user permiss given part view avail user think function permiss permiss return true iff current user given permiss although would requir condit around part view visibl user exampl fear becom ugli unread mess especi sinc permiss get kind complic problem common solv web applic consid use haskel happstack python django
data transform pipelin creat kind data pipelin transform coordin data use inform shell pipelin everi pipelin compon accept return type posit pipelin entiti code posit pipelin entiti need mani properti mani unus certain compon requir other properti also becom redund end pipelin exampl compon could execut transform coordin compon pars raw coordin data coordin type determin countri compon determin store countri code determin road compon determin store whether coordin road code posit pipelin entiti type problem concern depend compon properti way solv would creat specif type compon problem cannot chain togeth like problem order compon pipelin matter depend current structur provid static runtim check thing feedback would appreci
switch vs polymorph deal model view figur better solut problem view control present list element element model instanc b c etc inherit view control item go differ screen applic pass data user select one two altern come mind pleas ignor syntax specif languag switch know suck polymorph problem solut sinc b c etc model know view relat stuff case
sub rout spa site spa site work requir subrout page view model im current use pattern site master view model rout tabl meta object defin queri popul top level view model invok sammyj fine support sub rout plan chang meta object option offcours look like sammyj detect bar id queri string barmodel execut popul meta object good design edit hmm notic design alway enough parent view model might need process sub rout trigger ad object definit sent app defin like
bad practic call control action view render anoth control let say order control handl order user add product view final price get calcul ajax call control action price calcul logic implement seper class use control action happen mani view differ control need use particular action like kind price control could call action view would know price control call action bad practic view call action differ control render
law demet mvc regard control view communic scenario control control view compos complex subview one subview separ class separ file exampl one subview call button view bunch button control access button would access button like violat lod one hand could yes control access inner hierarchi view control awar happen insid view compos thought
depend inject point allow creat new object refactor php applic tri much depend inject di possibl feel like got good grasp work certain see class becom lot leaner robust refactor inject depend rather creat new object within class point go creat object use dread new keyword problem run point actual creat new object look like end top level class creat load new object els go feel wrong read blog use factori class creat object inject factori class call factori method factori creat new object concern factori class go new free guess may ok factori class rule stick use factori pattern di go way mark
test issu local develop environ introduc cluster product recent cluster applic came light ssl offload via load balanc product work right mimic function local machin ssl offload apach proxi still comparison similar issu aris deal state applic sticki session would industri standard test kind product black box scenario local environ especi relat cluster
tell user whether alreadi view item list pretti common web applic display list item item list indic current user whether alreadi view associ item approach taken past store view object contain id view item object id user view item object come time display list item requir queri databas item separ queri databas view object combin result queri set object construct sole purpos display view e g li use e g view properti object construct think time find better approach would like know approach would recommend
implement separ concern via mvc creat question see understand mvc separ correct abl find clear answer anywher onlin right way implement java would java file one model control view would put class relat model model java like model class class consid belong model correct class within model class read nest class avoid possibl
mvvm servic pattern build wpf applic use mvvm pattern right viewmodel call servic layer retriev model relev viewmodel convert viewmodel use constructor inject pass servic requir viewmodel easili testabl work well viewmodel depend soon tri creat view model complex model constructor lot servic inject one retriev depend list avail valu bind item sourc exampl wonder handl multipl servic like still viewmodel unit test easili think solut creat servic singleton servic contain avail servic interfac exampl servic current xxx servic retriev servic current yyy servic retriev way huge constructor ton servic paramet creat facad servic use view model pass object ctor viewmodel creat facad complex viewmodel might bit much think right way implement kind architectur
servic layer coupl work write servic layer order system php typic scenario order multipl line item let say request receiv store line item pictur comment might receiv json request idea servic line item bike class know take json data store entiti bike question servic line item class need fetch comment file attach store relationship servic line item seem like interact servic comment servic file upload instanc two servic instanti pass servic line item constructor set getter setter depend inject seem like right solut allow servic access servic fetch helper seem wrong stay applic level use doctrin orm technic write dql queri insid servic line item fetch comment file upload necessari associ seem like would tighter coupl rather leav right servic object
web applic domain model integr use json capabl dt os bit confus architectur choic web applic java python world c c world avail open sourc choic implement web applic pretti limit zero involv java python choic explod hard sort mess avail framework applic approach want sort clean mvc model stand fulli blown poco pojo driven domain model accord fowler eaa pattern use matur oo languag java c implement background system certain hardwar compon introduc system imman activ behavior configur databas system meta hw compon configur data even usual self contain sinc hw compon capabl persist configur data anyway realize configur status data exchang protocol hw compon chosen googl protobuf format work well direct wire communic compon protocol alreadi use success java base gui applic via tcp ip connect main system control hw compon applic drawback design flaw histor reason want develop abstract model domain model configur monitor hw compon repres use case orient view overal system behavior feel plain java class model would fit best c implement seem much implement integr overhead viabl languag bridg interfac googl protobuf messag definit could still serv well describ dto object use interact domain model api integr googl protobuf messag client side e g data bind current view seem good choic think extra serial featur e g json base data exchang view control lightweight solut seem involv python base present layer use wsgi json base data transfer least sure fulli inform someon give good advic best practic easi integr framework case updat accord recent research comment colleagu notic use java jvm might prefer choic integr python limit linux system run arm9 hard discuss memori mcu cost c c modul would well sinc form nativ interfac python extens e g pyramid base solut seem provid lightweight framework allow integr domain model use appropri python facad protobuf also provid python class generat support someon experi integr protobuf messag dto python imagin provid domain model appropri c c api though still think effort higher skill requir involv develop languag still search good approach support architectur appreci pointer
step group relat class packag step need taken group relat class packag java case number java file like group packag accord mvc pattern one packag model class one packag view class one packag control class identifi belong packag sure next step want know seper packag make folder place java file folder repres packag belong
side effect free interfac top state librari interview john hugh talk erlang haskel follow say use state librari erlang want use state librari usual build side effect free interfac top use safe rest code mean tri think exampl would look imagin knowledg fail
random uniqu iter rang say rang valu anyth els want iter rang stop indetermin point stop valu could anywher rang iter sequenti good caus earli valu access often later valu bad thing wear also reduc perform sinc must travers extra valu random iter better averag increas hit rate fewer valu access find right one also distribut access even averag problem standard method random jump around result valu access multipl time automat way determin valu check thus whole rang exhaust one simplifi contriv solut could make list valu pick one random remov time loop pick one fromt set remain item unfortun work small list forc exampl say creat game program tri guess number pick show mani guess took rang instead ask guess random could creat list number pick random remov rang realli creat billion item list seen coupl implement rn gs suppos provid uniform distribut none area also suppos uniqu e repeat valu practic way random uniqu iter rang
busi logic layer mvc applic asp mvc applic decid add anoth busi layer made model properti function like save db get db done new busi layer control call busi layer model various oper good approach design like decid use model purpos would need number model differ action eg one edit creat
mvc gui architectur architectur gui domain fowler refer mvc gui architectur mani differ way organ code rich client system discuss select feel influenti introduc relat pattern mvc gui architectur say mvc busi rule domain wrong
make class diagram mvc pattern project question make class diagram mvc base colleg senior project actor user system let say undergrad graduat student children abstract class call user generalis actor featur question case need two actor separ class inherit abstract class user even though go implement role use one model call user model think see confus code use mvc pattern never made class diagram pattern thank advanc
depend inject use altern reflect creat instanc piec net c code use reflect creat instanc use activ creat instanc old piec code run top enterpris librari better idea replac depend inject creat object pro con either approach
mvc design pattern combin multipl model use design multipl model model control need use model process oper exampl see pretti simpl view control model would get model togeth way think top level control refer everi control control getter setter function model violat mvc everi control model intermedi class combin everi model one model creat control new super model know better idea thank
good approach implement depend inject desktop app well thing creat desktop app net window form wonder would realli wise chois use io c structur map ninject spring net use asp net web applic make doubt fact work window form busi entiti persist navig tab unlik web form mvc app would necesari inject busi entiti everi new request perform mean asp net page life cycl perform initi control instanti mayb misunderstand point use io c pleas tell think would better chois
modifi access properti need public uniti modifi access properti need public uniti interest detail explan question read tip way detail explan declar explicit code
ensur transact consist ddd start ddd understand aggreg root use ensur transnat consist modifi multipl aggreg one applic servic would like know howev deal follow situat aggreg root call product also aggreg root call group id edit independ multipl product point group applic servic chang product group product servic chang product group string product id string group id check group exist get product repositori set group write product back repositori also applic servic group delet group servic delet group string group id get product repositori whose group id set provid group id ensur count abort delet group group repositori save chang question follow scenario would happen product servic chang product group check group exist check separ user delet product group via group servic delet group case set refer product delet flaw design use differ domain design ad addit element necessari would use transact
depend inject mean say inject runtim understand depend inject someth done code done compil time depend inject code easili done helper tool like ninject howev compil time depend inject occur mean depend inject also occur runtim straight wiki depend inject depend inject softwar design pattern allow remov hard code depend make possibl chang whether run time compil time mean thought came idea may refer multipl interfac singl class deleg call metho one interfac depend inject decid someth like runtim went deeper even discuss boss sound like simpl depend inject make decis assum correct one anyon help clear question
rest api backend mvc javascript framework client side build onlin social network finish write res tful api servic use django return json respons html generat server side json respons use build nativ smartphon app api servic common client question sinc html respons server side mv javascript framework like angular backbon ember take care complet front end right generat html page css
static factori vs factori singleton code static factori similar code review propos singleton inject look like thing highlight factori stateless differ method scope instanc vs static implement foo bean interfac argument go static class stateless therefor need instanti seem natur abl call static method instanti factori argument factori singleton good inject everyth despit stateless factori test easier inject easi mock mock test consum serious issu singleton approach sinc seem suggest method ever static also seem suggest util string util wrap inject seem silli last impli need mock factori point seem right think need mock factori communiti think like singleton approach seem terribl strong argument
mvc send inform view control use mvc pattern let say want creat new object add databas better creat new object view control
state status variabl name contain word state variabl name instead contain word status read code discuss pertain code often see word state status use interchang follow tendenc seem exist variabl hold valu intend indic someth certain state name variabl often contain word state abbrevi thereof howev return valu function serv indic state tend call valu status code valu store variabl variabl common name status someth similar isol fine guess aforement variabl actual one choic need made involv pervert intricaci english languag human languag general prevail code standard convent come disambigu two one two alway avoid english stackexchang question also relev suppos
could model layer consum web servic databas django use django applic framework need consum web servic need tradit django model relat orm case sinc django variant mvc architectur mvt precis wrap web servic call model app use call web servic direct django view remov model layer
style content queri data structur nest n level deep question come write simpl text adventur game charact inventori includ contain also thing want clean way style inventori output like current includ format result return queri one shot exampl would like cleaner separ content present queri would return data structur separ pass could style style pass handl n level deep data structur exampl would style tool like css handl need procedur generat css data structur
high level configur constructor inject c question specif deal depend inject constructor understand pros con servic locat pattern constructor setter inject flavor howev someth seem get past choos pure constructor inject read mani materi testabl design includ thorough perus mi ko heveri blog specif post follow situat assum write c program correct inject depend constructor readabl given high level object singl execut function call main execut respons simpli wire requir object kick highest level object highest level object requir coupl depend object requir object impli function look like take mi ko blog would ask figur time get back way satisfi pure constructor inject depend blog post mention state factori per object lifetim level essenti execut make code look ident exampl question standard approach pattern awar seem similar maven context xml pure constructor inject simpli suffer cost upfront alloc
differ singleton pattern auto ptr resp uniqu ptr maintain legaci code physic simul calcul object build singleton ensur one instanc co worker told singleton complet date instanti smartpoint think initi smartpoint garanti one instanc object right wanna one singl instanc object code way prefer use singleton pattern initi object one smartpoint auto ptr lt gt uniqu ptr lt gt
updat user interfac form databas updat client server applic assum work support execut resolv custom ticket support team got two ticket work ticket client liver rais ticket updat phone number ticket client liver rais second ticket updat email id work ticket open applic click edit custom info buttton enter new phone number save form edit form left cuppa colleagu look ticket edit custom inform updat new email id persist databas come back save ticket phone number updat would overwrit chang e email id chang lost updat custom liver way get back work page cuppa break see email id updat valu prevent approach possibl design idea ensur data loss
decoupl use static librari think reason prevent lot programm first write clean modular express code develop exampl cocoa touch app discov top three reason follow ui code devic specif ui ux general clutter quick fix workaround poor control view decoupl sometim control end job view respons spars test har cours problem stem lack disciplin habit write clean code difficult disciplin environ allow easi sort laundri set dedic drawer one drawer slowli turn mess unless disciplin tri appli idea sort drawer address code problem thought possibl sort mvp compon follow model actual framework class respons deal data model reusabl set routin work data view actual framework class respons present inform graphic depend much environ definit reus control framework class respons coordin aforement layer work user interact path applic someth like big control sinc glue togeth defin set model defin set view reusabl depend heavili platform etc given v somewhat reusabl c mayb make sens forc separ v best way ensur separ put static librari link app contain control code approach seem quit good control depend someth develop write separ test suit modul user interfac class reus app easili model class extract cross platform codebas maintain old facad commit limit three realli distinct modul distinct separ librari think sound like idea follow
thought refactor generic dao design generic dao java confus whether refactor differ design ps say use alreadi exist 3rd person framework know present learn java design pattern need practic get confus pleas ask clarifi current architectur dao factori java contain abstract method creation dao delet dao updat interfac implement concret implement class public class method creat concret factori produc concret implementaton interfac mention dao read java similar interfac generic method connect pass servic layer close transact manag tabl name enum use switch case lower layer dao call tabl specif function also use enum help type check oracl read java implement delet function interfac concret class oracl specif lower layer dao talk basic contain switch case check specif tabl oracl specif java spec aseem master spec aseem role tabl specif specif schema specif layer produc requir field spec aseem role java servic layer type dao method call pojo repres schema data field e g authent detail pojo aka dto communic control servic layer model pleas note give overview simplest way interfac abstract da os contain total abstract method implement concret class generic class depend lower layer dao get specif queri prepar statement etc call function auxiliari util class function depend tabl name pass hierarchi bottom layer schema specif confus refactor satisfi upper layer dao think lower level specif oracl specif thing strong coupl weak coupl e g differ method get prepar statement insert updat turn switch case call function lower util class although schema specif method tie togeth differ util class method call oracl specif java coupl think whether chang enum tabl name contain specif state state think schema specif lowest level util class specif state contain enum use chang state dao dao call specif function base interfac implement state thus depend state behavior chang automat design decis correct would meaningless thing might overlook thought design would lose type safeti introduc generic due chang
design pattern describ separ form model work web applic implement c follow mvc convent applic contain page allow creat updat wingd view pass complet wingd model back control creat updat problem page also checkbox allow creat ident wingd user current code add variabl wind model captur data pass back view seem obvious page wingd page form object pass back view control instead ad extra variabl model get save db know count separ concern specif design pattern describ separ model
custom program generat store proc class data tier put generat class architectur question regard mvc data access custom program generat store proc class data tier ms sql databas pretti nice generat base class basic crud oper includ foreign key read also generat plural version class return collect object next phase applic plan use mvc hope continu use great tool put generat class new mvc applic seen peopl creat infrastructur folder data access logic good idea continu use tool convert entiti framework also dal return object list object put model layer
state design pattern best implement case mate discuss would best way implement pattern state manag sever screen applic develop screen manag guess context class accord book look like irrelev code remov eas understand see screenmanag list game screen updat everi time updat method call coupl screen base screen class base class creat coupl game screen screen manag also exist coupl screen manag game screen see titl screen know play screen creat add screen manag creat depend titl screen play screen although kind implement seen book far read companion propos anoth kind implement propos creat observ approach replac titl screen whole play screen manag event would suscrib screen manag screen manag would orchestr manag screen approach say titl screen could reus applic decoupl screen among creat big screen manag class would coupl everyon sure whether state approach observ approach better specif case would best implement thank
concern use static read unit work behav like cach relat question cach data rare chang make asp net mvc4 applic everi request secur detail user need check area control action access see allow view secur inform store databas exampl permiss token appli mvc action indic token requir order access action user given permiss via user permiss tabl token therefor access action look cach data sinc rare chang queri memori data hit databas consider perform hit moment tri store thing list use cach provid either run problem perform improv one problem constant run use lazi load dynam proxi entiti framework mean even list everyth store somewher static relationship never popul exampl user permiss collect alway null want includ everyth tri keep thing simpl generic easi modifi one thing know entiti framework db context unit work act 1st level cach durat unit work everyth access cach memori want creat read db context exist indefinit use read permiss data upon test work perfect page load time went 200ms 20ms easili forc data refresh certain interv simpli leav refresh applic pool recycl basic behav like cach note rest applic interact context exist per request normal disadvantag approach could someth differ
god view model desir wpf applic user control within user control pleas see screen shot one beauti applic time uc user control properti live main window code behind none user control bind properti use work fine mean bind properti main window code behind main window view model desir mvvm say wpf approach children share view model
hmvc databas connect whilst good experi oop fair new concept h mvc understand basic concept modular design come hmvc great attract one thing bug hope help understand hmvc better handl databas connect would assum would modul let call databas would initi connect start script would someth along line would initi connect databas howev want run queri need run someth along line need access queri function databas object far tell hmvc direct access db conn within model anoth modul almost everi modul need access db conn understand mean control modul time need run queri would creat new instanc databas modul pass array argument tell databas method run argument method need need make call databas half way method modul model quit often need updat tabl select data base statement sure move logic control mean need abl access anoth modul within model seem break rule hmvc implement databas modul confus
mvc creat desktop mobil webapp plan creation webapp dedic mobil web interfac dedic desktop tablet interfac consid asp net mvc clear mvc separ concern explain anyway case like minim code support eleg phone desktop may landscap tablet desktop mvc wise choic case 1st stop kind xdevic web app
user permiss check take place mvc user permiss check take place model control handl permiss check user object user manag helper happen check control check control help make model simpl action keep logic control check model put check model complic model also make sure accident allow user stuff suppos control settl place check user realli user respons know acccess perhap helper class know common ask singl question well question think answer nice togeth
factori pattern depend inject understand concept use factori pattern depend inject howev seem littl odd conceptu case use one use conjunct use di would hard code creation class within factori defeat point di factori depend exist class creat thus would need pass factori runtim use di would pass class factori meant creat factori meant creat defeat point build factori first place injector would basic work factori thank much attent look forward insight
mvp pattern refer window c applic ask question told viewer present never know anyth model mean add refer model gui make instead let say list lt car gt transport inform use string int e g dictionari lt car id car name gt fact use entiti framework half domain model basic dal rest bll would need add refer layer approach wrong
aggreg boundari repositori servic design tri appli ddd design releas manag system domain entiti project project product system project environ environ test stage prod exist project project defin environ project version specif version project would associ deploy packag aggreg boundari would project aggreg root project environ project version aggreg project neither exist without project repositori would project repositori would provid persist project includ project version project environ aggreg consequ access respect project question version repositori environ repositori get version id method product repositori sound wrong suppli multipl repositori threaten aggreg boundari project servic would handl valid aggreg use three repositori order safeguard invalid data client code would abl refer project servic
sync object code view wpf read time press would requir simpl solut promis read later come winform c background late work wpf user interfac implement input intens gotten use notifi properti chang far ran 3d interfac third parti librari mogr wpf upon click object 3d interfac need display object properti posit size etc code behind look class let call object interest save properti 3d data includ method manipul object one method generat grid contain textbox simul name valu pair properti like x posit properti user chang manag bind textbox text chang event respond chang ie size chang grid generat set display main window use content present set content object interest grid work like charm implement properti chang properti grid look like depend combobox includ grid exampl object cube want width height length show want radius properti show sphere kind stuck regener grid upon combobox select valu chang notifi view generat occur object interest class instead main window class mean rebind grid regener cannot call content present content object interest grid main window idea instanc grid chang without complet understand mvvm method rewrit applic fit model accomplish
sever interdepend model sever data sourc avoid hell nightmar current work project requir complic model structur struggl pick right architectur first sever interdepend model chang one model trigger chang sever model exampl user input queri first model check databas type queri second model request data depend queri type second model sever data sourc data sourc use condit depend system configur app need function seamless exampl one data sourc return requir inform model must tri use anoth one import thing also codebas eventu expand model model data sourc etc must modular current sever way organis model layer dumb model creat factori object input data relat model chang model depend resolv oper object encapsul whole updat routin oper object configur run domain model know inject data sourc though smart model updat logic encapsul model queri sort mapper data sourc manag work proxi differ data sourc model report updat domain model depend resolv model control depend manag object architectur appropri lean toward first one mind better work immut model updat whole tree chang input approach give sever benefit exampl easier serial presenc model equal finit state realli unsur data sourc
entiti allow refer entiti insid aggreg except root read sever place follow rule concern aggreg entiti one aggreg hold refer aggreg root never entiti valu object insid aggreg go wrong entiti hold direct refer entiti anoth aggreg root someon pleas explain rule import prefer illustr exampl pleas
refactor static member basic class current work c project classifi legaci project lot poor written code commit lack experi pressur deadlin tri fix bug eventu make new one recent got free time want make project better exact want begin use tdd howev turn easi face problem write test class singleton everywher even basic class use static member instanc project wide use numer class wrapper dec number c librari decim comput class static member keep context precis round mode etc obvious need refactor class avoid static field immedi thought depend inject factori pattern factori keep singl context everi user class creat numer instanc use factori code go messi factori inject everi class want construct numer instanc pattern use case one make sure everi instanc numer class use singl share state p signific parallel question depend inject good practic reduc boilerpl code
type search complex model possibl cqrs sql solut given follow relat model need implement type search hotel abl queri name citi countri categori hoteltyp roompric customtyp room custom type roomtyp combin criteria moment though entiti framework dynam construct queri hotel entiti queryabl fine current littl data howev scalabl lot data becom slow queri tabl note need load hotel data entir graph think way improv scalabl part look cqrs mayb sql solut one approach mind model write side enforc consist differ model read side write would updat read model viewmodel howev sinc alreadi less complex model term relat see problem updat metadata categori roomtyp hoteltyp would requir updat hotel room read model could quit slow imposs lot data suppos use document databas mongo db save hotel relat item denorm queri tabl still slow search insid document still still quit fast sql summar question denorm model right approach would best way sql faster better approach follow way break relationship flatten hierarchi still abl type search ideal field also support fuzzi search would best way achiev
packag diagram mvc pattern project requir make packag diagram senior project sinc project use mvc patter design creat mvc class diagram problem creat packag diagram class diagram possibl packag mvc time would someth like packag account account model profil control registr control profil view registr view control cannot exist without account model includ thank advanc
choos ubiquit languag across differ bound context domain sever bound context one team work context develop ubiquit languag context one forc context bound context definit evan book state bound context delimit applic particular model team member clear share understand consist relat context within context work keep model logic unifi worri applic outsid bound context model appli differ terminolog concept rule dialect ubiquit languag understand meant dialect ubiquit languag develop univers ubiquit langug modifi bound context main problem singl team go work context might get confus constant chang terminolog updat let use exampl illustr problem bound context oper custom servic entiti order custom may request refund oper context call refund custom servic context call cancel model gonna someth like order refund order cancel question model order entiti one method call refund context method call cancel forc singl terminolog implement refund process might differ
design pattern suitabl log log event program far know would better keep log code outsid program real function program may tell keep complet code use observ listen log event add line code like follow wherev need log someth make mistak use observ design pattern need anoth design pattern stop think design pattern ps1 want log use listen observ certain need add improv observ listen program ps2 certain know differ librari log java use java util log need wrapper log special object
observ class instanc sometim read observ pattern descript make constructor observ base class protect class abstract make constructor public even one neccessari could use observ instanc base class disadvantag mention yet
test determinist non determinist better either determinist test suit result test succeed non determinist test suit potenti possibl cover case exampl write test suit test control function mvc applic control requir applic data databas input test two option hardcod row test databas select input e g 10th 412th row use random number generat pseudorandom pick data databas two row select random number generat first determinist everi run test revis code yield result second non determinist everi run test suit possibl yield differ result random pick data might howev better represent data edg case might simul user feed control unpredict data better reason choos one
load data shop cart item current tri cover shop cart unit test class shop cart item properti term also load avail term item upon object creation current done use call static class constructor current state question make data sourc interchang introduc factori class obvious answer use constructor inject seem somewhat right think make someth along line
slower ajax respons put view logic insid control increas page load speed control action call view load ajax get slow respons happen put view logic insid control like good way code increas effici writ control action like view use two foreach loop nest get tabl row load view jqueri ajax request url ajax foo question clear whether good practic put view logic control ajax call increas speed page load new code thing profession good profession method altern avail
model view control factori class go work slowli small flask project one model class call post lightweight namedtupl post object creat post factori creat post involv hit databas post factori hold necessari databas connect post object serial part model view control divis factori object natur fit part model sinc tight coupl post object control sinc manipul model
mobil develop project architectur model pattern would like hear improv suggest mobil develop android os project architectur would like go safe design modular easili maintain time far know android also os platform built mvc least activ ui view control sort control part mvc mani state internet also know two approach far basic project android os favorit sort mvc model model simpl getter setter class shape project entiti view activ ui view control custom view display get data user interfac usual get data control never direct acess control singleton necessari usual manag entiti data usual busi job load data access layer access view layer access databas web servic manag serv data back control layer contact layer common seen also sort mvc model model simpl getter setter class shape project entiti usual saw also busi job view control activ ui view control manag entiti data usual busi job also take care display data user also make call web servic class get data far use first variant consid decoupl see differ make busi job user interfac communic data provid make maintain second one drawback first one layer second one mean class less code class start project take bit longer develop second one approach use think better
shoud main window wpf contain make wpf applic follow mvvm model seen approach appli mvvm concern main window xaml tutori seen main window host content control first main page applic make wizard type applic multipl view next back button one welcom view go first view question approach use window contain content control point toward main view copi past ui element welcom view main window get rid welcom view suitabl pros con approach
okay reassign model view mvc ever realli accept reassign model view mvc mv applic word singl view instanc ever ok reassign view model oppos use setter mutat model reassign condit accept mvc design exampl java script question languag agnost line view set model model2 model reassign approach question line model2 set messag hi model instead mutat via setter view seem general prefer one main drawback see model reassign could complic attempt reus model elsewher applic mvc applic singl share model could use drive multipl view e g list editor display view data case model reassign would problemat would least requir ad complex communic model reassign depend view think dri principl trump mutat principl open argument even stronger case made recap circumst might model assign accept perhap certain languag extrem perform constraint reassign model good rule thumb pointer authorit sourc real world situat would help
use depend inject without break encapsul solut project book store solut book store coupler project bootstrapp cs book store domain project creat book command valid cs composit valid cs valid cs valid cs command handler cs book store infrastructur project creat book command handler cs valid command handler decor cs book store web project global asax book store batch process project program cs bootstrapp cs creat book command valid cs composit valid cs valid cs valid cs command handler cs creat book command handler cs valid command handler decor cs global asax program cs sorri long setup problem better way explain detail actual problem want make creat book command valid public would rather intern make intern abl regist di contain reason would like intern project notion valid lt implement book store domain project project need consum valid lt composit valid resolv fulfil valid use depend inject without break encapsul go wrong
global constant valu throughout mvc site mvc net constant valu site phone number physic address email address etc like store valu futur updat easier chang detail make question simpler focus phone number question store number problem face decis moment chosen store global asax file static method eg work well control add refer method assign view bag per mani site phone number visibl top everi page place layout cshtml logic problem control know layout cshtml way pass valu view bag phone set everi view eg messi smelli idea improv store global variabl differ place better approach sure common problem
loos coupl shuffl depend bunch class look someth like read design pattern come understand good design loos coupl instead code interfac code implement graphic player etc order fix perceiv problem start chang depend interfac sure help realli nice graphic field exampl tie graphic class use awesom graphic class spark graphic class instead long class implement graphic still hard depend graphic player point refactor actual code much complic also come understand depend inject good idea tri next look realli nice longer hard depend game howev depend still code move class instanti game back start class loos coupl point refactor pretti sure could use io c contain take care depend somehow would like add ton complic alreadi complic project plus move depend anoth class stick first place tangibl benefit see yet
depend manag across modular applic let say structur like wherebi modul public helper provid helper function near everi modul helper helper need access anoth modul public helper method let say instanc php applic module1 provid function creat sale part situat method need obtain instanc either new whatev user public helper given modul public helper class instanti minimum set constructor param e g entiti manag would best way get copi obvious realli inject user public helper class class contain creat sale one solut would use servic locat registri howev test applic exact easi
api design refer root object normal post stack overflow design theori question rather code question give shot applic current use core object model origin wrote year ago grown need stuff code without think design first part inflex part poor design yet clunki decid start scratch rather tri retrofit new api top exist one also decid actual map full api first upfront write code far approach pay suppos nice littl model brew howev one quandari new design consid autom model offer thing like microsoft word primari object properti name applic point back core object exist object model follow pretti much principl use new one current api howev mix approach object store refer root object other properti simpli look singleton servic object heart servic contain look regist object yes servic locat get pass constructor other look store refer normal like consist mess new design chang approach object still properti back root object idea object behav manual go hunt applic write code given implement background inform way question object hold refer root object store direct refer look somehow ie singleton servic locat former approach go use memori byte extra per object per object current compil everyth 32bit sound lot sure go creat mani thousand object sort want base api effici possibl doubt app stick top approach also mean go pass object refer around everi singl constructor much problem real code make write test bit complic latter approach mean save memori continu use bad practic servic locat suppos least hint perform issu lookup refer quit go quick return direct one anoth approach larg object model use consid mention normal dive make someth work leav alon break need someth els guess answer go store refer stop complain better get feel peopl opinion
miss mis understand io c di castl windsor okay understand io c di web api work use castl windsor note though confid understand though fall somewher confid could best denni rodman one one basketbal game confid saniti anoth way put say spent last sever day read io c di castl windsor web api experi still feel like wearili respond nine pard set em alley sever specif question stack overflow one yet much clearer go talk loud hope somebodi respond someth refin understand shed light opaqu subject help unravel gordian knot point basi io c di lie pass interfac constructor class constructor instanti object fact need know concret compon class point set need code like control point class implement depart repositori pass depart control constructor point coder explicit ioc contain castl windsor case automat intercept web api rout mechan code like global asax cs point global asax cs applic start get ball roll call instal registrar code point lot castl windsor scaffold set specif class need instal regist think regist would better easili grokkabl term one major say headscratch area know registr code look like like like elsewis point set control repositori make safe cw regist castl windsor rout engin call web api app like resolv compon concret class implement depart repositori cw abl figur long one class implement depart repositori one silent pass control constructor take arg class implement depart repositori n class implement depart repositori cw know one pass control constructor lowli human meet silicon pink squishi stuff design n want cw pass constructor
test wrap system notif send current cocoa app work got object record schedul respond two type notif day pass quicksav interv pass case record schedul tell record record job among thing want record schedul issu record mac goe sleep subscrib sleep wake notif via ns workspac easi enough add record schedul init notif would process nice thing two case wrote helper method like fire day pass use unit test fire custom notif ad assert record schedul respons work well feel comfort fire ns workspac sleep notif sinc b know side effect instead resort call schedul comput sleep nil would receiv notif intergr ish test verifi record schedul subscrib ns workspac sleep notif found addit inform sent abandon idea creat hibern observ subscrib ns workspac notif send kind sleep wake notif seem addit benefit point still unit test fire notif assert side effect notif handl receiv subscript upon initi els could verifi object sign notif receiv make habit wrap system notif
use mvc strict daab one compani familiar mvc get pressur modern switch mvc futur project task creat templat use base train base new project perfect fine glad howev one absolut requir use el data access block kinda defeat purpos mvc use orm simpler data code tri look everywher onlin standard practic use mvc daab cannot find singl good articl tutori code anywher lead believ way note possibl use el data access model set strong type get basic act kinda like ef think could creat t4 templat someth help generat model base db tabl add much crud oper could clue good idea though
separ class command handler handl instead handl method command part cqrs pattern implement use arp architectur like wonder class command contain data handl method kind testabl benefit need test command handl logic separ command properti frequent busi requir need one command handl differ implement command handler lt command command result gt
terminalog control mvc view control io studi io general come across viewcontrol give confus view control someth control mvc come view control combin terminolog actual mean
isol massiv changeabl web servic tri come way wrap larg web servic chang frequent type type attribut servic sale forc com enterpris api typic scenario would creat correspond domain model interfac use auto mapper similar due size changeabl web servic approach would mean maintain nightmar t4 resuc unfortun type generat web servic tie nice area auto generat could determin object type wherev type properti repres collect object instead produc enumer lt type generat sale forc queri object way determin actual type collect contain anybodi way encapsul monster involv hand crank maintain thousand line code code generat servic refer current line long
object cqrs es fulli initi constructor appli first event appear widespread agreement oop communiti class constructor leav object part even fulli uniniti mean initi rough speak atom process bring newli creat object state class invari hold first thing happen object run per object noth permit get hold un initi object thus frequent advic perform object initi right class constructor reason initi method often frown upon break apart atom make possibl get hold use object yet well defin state problem cqrs combin event sourc cqrs es state chang object caught order seri event event stream left wonder object actual reach fulli initi state end class constructor first event appli object note refrain use term aggreg root prefer substitut whenev read object exampl discuss assum object uniqu identifi opaqu id valu think guid event stream repres object state chang identifi event store id valu let worri correct event order interfac event store enumer lt event gt get event object id object id assum two object type custom shop cart let focus shop cart creat shop cart empti must associ exact one custom last bit class invari shop cart object associ custom invalid state tradit oop one might model constructor partial class shop cart public id id get privat set public custom custom get privat set public shop cart id id custom custom id id custom custom howev loss model cqrs es without end defer initi sinc simpl bit initi effect state chang model event partial class creat empti shop cart public shop cart id get privat set public custom id get privat set note shop cart id actual requir sinc id must known advanc order fetch event stream event store would obvious first event shop cart object event stream object would initi event appli initi becom part event stream playback generic process would like work whether custom object shop cart object object type matter constructor paramet less noth leav work void appli creat empti shop cart method much frown upon initi constructor receiv event stream play back make initi atom mean class constructor contain generic play back amp appli logic e unwant code duplic tradit oop constructor shown proper initi object event first void appli ie expect answer provid fulli work demo implement alreadi happi someon could explain reason flaw whether object initi realli pain point cqrs es implement
would structur code mvc format want home page root websit check cooki exist user log base determin whether load sign page land page feed user log would check occur kept control base articl read skinni control fat model sure right place keep
layer order column shown user use mvc say want render tabl five column want order column differ depend specif paramet would easi accomplish model set order view simpli use loop creat tabl accord howev unless misunderstood thing want let view handl thing render although guess may gray area involv term view decid render also feel ugli let model set format order mayb anoth thing might misunderstood view suppos deal order column good way accomplish read use lot statement ugli code view
res tful ap tend encourag anem domain model work project tri appli domain driven design rest servic orient architectur worri rest complianc would probabl better say tri build resourc orient http ap level richardson rest matur model nevertheless tri stay away rpc style use http request e attempt implement http verb accord rfc2616 rather use post postal address valid exampl howev emphasi seem expens attempt appli domain driven design get post put delet rare use method tend build cru ddi servic cru ddi servic tend anem domain model post receiv data valid dump data get retriev data return real busi logic also use messag event servic seem busi logic end build around rest ddd tension level misunderstand someth mayb someth els wrong possibl build strong domain model servic orient architectur avoid rpc style http call
help complex mvvm multipl view need help creat view model follow scenario deep hierarch data multipl view set data view singl dynam chang view base activ select depend valu properti display differ type tab tab control question creat view model represent view vm1 vm2 etc exampl singl view figur multipl view updat base activ room notic tab control figur differ activ room multipl view updat tab control item chang base object properti figur differ select type entir view chang
avoid duplic code relat share entiti repositori pattern build repositori larg crm schema high number relat entiti entiti referenc almost entiti e g person compani aggreg root order address order header order line etc case order new custom need insert compani person record time far good difficulti situat mani aggreg root want privat method insert person person everi singl repositori implement custom repositori alreadi public insert custom custom method persist compani person record read indic repositori depend case okay repositori depend best way go inject custom repositori order repositori constuctor pass paramet method need never commit evil duplic ident code repositori case repositori need specialis code specif context
loos coupl present view mvp work java shop web applic use implement mvp architectur pattern manag come net world expos mvvm design pattern manag advoc chang mvp implement includ present decoupl loos coupl depend interpret view via observ design pattern tradit mvvm opinion present view work togeth achiev common goal coupl among argument brought support chang abil unit test present present see view observ argument goe easili unit test present strong coupl view necessarili difficult test view use humbl view paradigm mock final testabl symptom good design driver design anoth argument use manag support layer view present suppos matur mvvm follow mvvm teach adapt implement mvp correct wrong mvvm impos artifici layer view present order facilit data bind control pleas help us see light use decoupl model pay price see benefit occam razor say need argument use decoupl test seem one clarif realli look question argument tip balanc favor present know view shoot event aether favor present know view direct coupl like humbl view interfac direct class note present easili serv multipl view loos tight coupl differ interfac present talk loos coupl present talk listen class event bus repres wherea tight coupl present talk view interfac
separ entiti busi logic layer go start project bll would someth like jumper map record need keep track make probabl class hold e g jumper list map list record list first good practic hold object good separ like bll entiti jumper map record bll list jumper list map list record list okay may written confus way meant good make like
one design various architectur busi model current learn various applic design approach one thing realli get head around let say physic devic network ip surveil camera need model repres ip surveil camera work applic might look like want store ip camera databas e g entiti framework need mayb anoth properti thus anoth model oh want access applic via wcf servic use object ip address serial friend henc need anoth model custom ip class store ip address string last android client want access data design res tful api use web api2 client interest camera rtsp uri want know current state onlin offlin wonder name model come conflict design model per purpos layer servic link map adapt pattern
visitor pattern still use languag support class extens visitor pattern use languag support class extens bother implement open class subclass want new function class could subclass unless miss someth still use languag support class extens
design tree use visitor pattern implement differ kind travers ask theoret design question eye upon go f pattern given design tree use standard visitor pattern would design look allow user choos om pre order order post order travers thinkin let visitor give travers iter object follow iter pattern idea would implement iter enabl desir travers interfac visitor need interact interfac give argument iter provid travers user choos iter use give one visitor sound like eleg solut better idea
mvc mvc question origin start j queri plugin move onto backbon js applic experi micro js mvc modul day even wonder need recent prototyp new applic code slim sleek beauti proceed rewrit hour backbon js applic code turn away fit model petit bloat complex ugli mess problem day alway happen soon mvc mv architectur introduc goe puke wonder day age requir thing client side browser actual quit capabl be mayb need bloat mv framework anymor thought other run mvc mvc
program php without mvc class framework rewrit continu new featur program sever year back learn php learn program use class mvc logic use framework found self solv problem well use function eight month ago recruit start develop huge social platform work sever month built huge websit various complic featur 35k line code guess could see self continu like everyth code without framework class mvc logic sinc time learn move fast write everyth function put lot effort well document describ code well organ beauti easi read howev top list learn class mvc laravel framework see self stop learn list rewrit code would simpli push us back time start move fast mani deadlin new featur idea develop spoken mani peopl regard peopl say lot differ thing say matter tast abl move other say incred stupid scaleabl never get serious fund one ever abl work project stop start learn etc doom feel lost person opinion even though huge system alreadi still mvp guess point futur would rewrit code anyway success stage ventur grow fast get fund etc
fit requir mvc let say websit requir allow user function simpl creat user model user control user view work perfect howev let assum user mani one relat tabl connect titl child also mvc compon child model child control child view requir creat csv file download contain detail user detail child would go design requir download csv could essenti crud method control view model base detail tabl control view model db view anoth method besid crud user child control
best practic design pattern retriev data report dashboard domain rich applic first want say seem neglect question area question need improv help make great question benefit other experi two side applic task side user interact applic object domain model live report side user get data base happen task side task side clear applic rich domain model busi logic domain model databas use most persist separ concern everi book written know awesom report side data warehous accept bad design incorpor busi logic databas data order aggreg data databas data warehous data must appli busi logic rule data logic rule come domain model came data aggreg process wrong work larg financi project manag applic busi logic extens report data often lot aggreg pull inform requir report dashboard aggreg lot busi logic perform sake high aggreg tabl store procedur exampl let say report dashboard need show list activ project imagin project project need set metric shown exampl total budget effort date burn rate budget exhaust date current burn rate etc involv lot busi logic talk multipli number simpl logic talk order get budget appli rate sheet differ rate one employe time project multipli appli expens appropri markup etc logic extens took lot aggreg queri tune get data reason amount time client run domain first perform even straight sql queri bare get data fast enough client display reason amount time imagin tri get data client fast enough rehydr domain object mix match aggreg data applic layer tri aggreg data applic seem case sql good crunch data use busi logic outsid domain model chang busi logic chang domain model report aggreg scheme realli loss design report dashboard part applic respect domain driven design good practic ad mvc tag mvc design flavor du jour use current design figur report data fit type applic look help area book design pattern key word googl articl anyth find inform topic
best practic design pattern retriev data report dashboard domain rich applic first want say seem neglect question area question need improv help make great question benefit other look advic help peopl implement solut solv problem idea tri experi two side applic task side larg domain driven user interact rich domain model engin applic report side user get data base happen task side task side clear applic rich domain model busi logic domain model databas use most persist separ concern everi book written know awesom report side data warehous accept bad design incorpor busi logic databas data order aggreg data databas data warehous data must appli busi logic rule data logic rule come domain model came data aggreg process wrong work larg financi project manag applic busi logic extens report data often lot aggreg pull inform requir report dashboard aggreg lot busi logic perform sake high aggreg tabl store procedur exampl let say report dashboard need show list activ project imagin project project need set metric shown exampl total budget effort date burn rate budget exhaust date current burn rate etc involv lot busi logic talk multipli number simpl logic talk order get budget appli rate sheet differ rate one employe time project multipli appli expens appropri markup etc logic extens took lot aggreg queri tune get data reason amount time client run domain first perform even straight sql queri bare get data fast enough client display reason amount time imagin tri get data client fast enough rehydr domain object mix match aggreg data applic layer tri aggreg data applic seem case sql good crunch data use busi logic outsid domain model chang busi logic chang domain model report aggreg scheme realli loss design report dashboard part applic respect domain driven design good practic ad mvc tag mvc design flavor du jour use current design figur report data fit type applic look help area book design pattern key word googl articl anyth find inform topic edit anoth exampl anoth perfect exampl ran across today custom want report custom sale team want seem like simpl metric sale person annual sale date complic sale person particip multipl sale opportun sale opportun multipl sale peopl alloc percentag credit sale per role particip imagin go domain amount object rehydr would pull data databas everi sale person get sale peopl get sale opportun get percentag sale calcul sale amount add sale opportun sale amount one metric write sql queri quick effici tune fast edit cqrs pattern read cqrs pattern intrigu even martin fowler say test problem solv past face everyon point anoth establish well worn approach track record success edit report system tool anoth thing consid context report tool report servic crystal report analysi servic cognoscenti etc expect data sql databas doubt data come busi later yet other like vital part report lot larg system data proper handl even busi logic data sourc system well possibl report
io c contain part portabl librari see benefit portabl class librari central model view model singl code base depend inject manag io c contain take place though model depend believ would benefit suppli inject sure go bootstrap set contain portabl librari also saw suggest portabl librari depend di framework point think mayb di set applic use portabl librari seem rather backward though requir someon use librari add bootstrap portion applic well would duplic everi app use librari librari applic handl di specif environ question like c wpf applic referenc pcl model view model core logic consid use autofac io c contain
non mvvm code belong mvvm app non mvvm code mean thing like high general compon like one common extens method clr type homeless helper class etc core project other refer resolv circular depend refactor extens anoth project seem common challeng well layer project case easier produc better project structur one copi class two compon use symlink copi namespac differ els go end quit fat core project host dispar group helper class granular factor increas depend count client serviv general convent
pattern atom updat pair object standard pattern oop kind atom updat pair object like pair bank account transact would like somehow singl public method expos come way make two call public method updat object separ current experi racket would appreci exampl languag descript standard pattern exampl experi rubi comfort racket concern lock class interfac class account def initi total total total end def total total end def transfer anoth sum chang total sum anoth chang total sum end protect def chang total sum total sum end end account new b account new transfer b sum print new total total nnew b total b total work use protect instead privat
reduc coupl seri task work code right involv process user request request requir go approv request made one record creat databas record request entail ticket creat place approv work queue typic request approv involv step request process usual result tabl get updat chang record histori tabl record audit request mark approv approv approv audit ticket remov work queue origin request sent email tell request approv singl class kick step sequenti within transact part sequenc realli matter email realli essenti problem class least depend realiti closer stump reduc number depend come workflow like thought group item togeth logic group see much point creat unnecessari layer like anyway also thought kind observ pattern net event class higher could listen event instanti need class kick howev higher class would depend class right back situat way abl think reduc number depend either artifici group class make layer problem neither seem ideal wonder miss someth help use ninject asp net mvc access ioc contain depend resolv wonder solut sort combin use listen event ioc contain
model view control job first know lot answer mvc need specif ansew base probabl wrong understand mvc alreadi read good answer explain model view control still need clarif need understand understood mvc work use kind mvc framework develop view moment stupid templat model thing fetch data databas sourc transform array pass view control most ajax javascript script observ button user event php script call ajax script need perform server side oper like sql updat insert etc mvc understand make app work way open index load viewsload model one load content call contentsload model call script depend view user request data load singl array viewsload model use render request view pass user user click button exampl view contact button hood contactslisten control call contactsload model load contact list array provid contactsload model pass trhough contactslisten control inject view think serious problem mvc model look like control differ thing probabl put observ listen view part use control load content provid model model dedic data fetch organ exampl fetch databas put array organ right structur control thought handl user event use view purpos use queri model inject answer view view stupid templat put busi logic like event listen follow read put entir interfac side script put client server side script control case idea control
know languag still code like peer move new job code base c net window form etc last four year three month today three month caught part languag syntax know mvvm silverlight advanc stuff net like action func callback etc know still go code fix bug see code get disappoint see code techniqu although know syntax understand think could write answer exampl creat class member action run time assign action separ instanc regist unregist event part code etc normal get better time stupid mediocr develop make better
handl unspecifi valu softwar work softwar product number field custom leav blank numer persist databas use nullabl column easi peasi consid util object orient domain model one thing bug issu nullabl field reason world java c one often find advic null valu inde write code null check place suck get null refer except forget check null mess good approach initi everyth declar idea null actual make sens field custom enter valu thus valu etc applic programm program languag seem configur binari rather ternari logic also variabl darn well valu rather mayb valu also mayb object orient design presum one could come clever system repres case valu person done analysi yet reason find increment chang success sell peopl radic chang propos object orient domain model object orient might kill idea thus hope improv structur softwar rather propos version domain model work easi sell intern whole thing null valu weigh heavi mind sinc use c could defin nullabl number easi one add question mark convinc possibl also best approach background junk way question compani handl nonexist valu object orient domain model way find effect way find ineffect select criteria answer one seem sellabl defin background junk realli like see peopl come learn new thing answer thought behind receiv upvot note seen discuss null valu thread noth quit line want talk henc new question edit question scope includ valu type properti like number c one way allow represent null purchas price would declar purchas price decim nullabl decim type see number disadvantag number exampl also null look altern edit null object pattern make sens refer use nullabl type valu appear may tractabl coalesc bother coalesc null type someon forget coalesc expos null refer except suppos could mayb use static analysi tool ensur coalesc use expect allay worri edit sens someon made conscious decis make field nullabl ad abil repres extra piec inform would otherwis need anoth field repres boolean valu mean anti null zealot met past perhap incorrect measur use nulliti fact improv design
di factori pattern differ apprach let say abstract class call base switch inherit concret implement switch switch b switch repres real life switch telephoni tool among respons write cdr data record call hit switch switch real life write cdr differ format differ sourc say switch write text file anoth write sql databas switch entiti cdr detail defin system end user goal write import class respons import cdr base sourc data determin switch entiti system hide import switch class layer respons import cdr loop upon switch instati import object base cdr format defin switch anyon suggest approach use edit clarif public class switch base public abstract string cdr format get
ddd domain model factori design tri understand implement domain model factori includ compani aggreg demo done includ design decis end would appreci comment suggest critiqu point compani domain model compani factori domain factori class use ensur busi rule invari violat creat new instanc domain model would resid domain layer compani mapper entiti mapper class use map rich domain model entiti framework data entiti would resid infrastructur layer compani constructor declar intern reason factori call constructor intern ensur layer instanti layer separ vs project compani factori creat new string name method would use creat new compani system reason sinc would persist yet new uniqu ident need generat use ident factori compani factori creat exist int id string name method use compani repositori retriev item databas reason model would alreadi ident would need suppli factori compani mapper map compani tabl data entiti use compani repositori retriev data persist reason entiti framework data entiti need map domain model compani factori use creat domain model ensur busi rule satisfi compani mapper map compani domain entiti use compani repositori ad updat model persist reason domain model need map straight onto data entiti properti entiti framework recognis chang make databas thank
advantag next iter iter work often java c iter direct alway wonder reason design iter next fashion order start move iter order check data check next element appeal concept iter start begin check state let say valid loop entir collect would look like order check next element go check state valid ymmv anyway advantag next iter java c iter note conceptu question design languag
clean way pass login context layer data access layer inherit api implement use asp net web api action control like depend mani method similar signatur depend also use login context class final reach bottom call stack data access layer login context class actual use depend current inject constructor io c contain number issu bother repetit check control action user author need login context everi method everi depend referenc anywher control first case creat action filter handl authent write custom ident contain login context detail back http context leav meat question best way pass login context layer data access layer updat clarifi respons question authent check data access layer although busi layer obvious thing differ base caller authoris claim rather pass data gather authent process data access layer use access particular resourc infrastructur concern audit problem still remain though everi method busi layer everi method data layer take login context one paramet better way
ddd persist valu object must denorm read lot domain driven develop came question preserv lack distinct ident valu object v os ddd world requir yet sure understand full power pose problem lower orm layer term persist tabl part like normal make life easi term delet insert anomali concern come implement v os primari key ident definit foreign key parent make entiti violat ddd favor persist instead could make wrapper class accept bag paramet attach parent foreign key mechan messi sound like work read lot respons internet stack overflow also denorm tabl concern violat persist ddd allow v os exist proper definit without denorm
model view model view new mvvm pattern window text box name address descript save button listview display field save button click want save field databas well show record listview design model view model interfac
put notifi properti chang interfac model view model new mvvm pattern window text box name name address descript save button listview display field name address descript respect save button click want save field databas well show record listview well put notifi properti chang interfac model view model place
practic use depenc inject io c contain creat mvc ish framework php tri implement di contain allow creation control object among other mvc framework pretti typic modul compon wish control respons execut request modul control typic extend base control class control accept request respons object argument confus occur control may need differ argument order function exampl mani control need databas object control send mail may need mailer object control log data may need log object di contain contain recip creat control front control need abl creat control object specifi request furthermor control need abl creat control get front control modul control access di contain way result depend di contain control actual mind front control depend contain concern modul control thank
use modul level declar global singleton python ok know use singleton general bad practic db connect log et al allow go respect clean design modul defin variabl initi startup eg db declar top level modul could reason compromis pass db object use true oo way global
activ record violat srp ocp watch activ record class project grow larg class need anyth user exampl go person class make perfect sens consid domain realiti person class mishmash lot lot function get modifi sometim domain becom clearer mean srp ocp violat one thing come activ record pattern wrong
determin messag command messag event messag two enterpris integr pattern command messag event messag work system use messag integr system intern communic servic suppos eventu consist system servic suppos ignor except coupl special purpos servic tri avoid thing feel like remot procedur call rpc rpi bus messag orient middlewar system messag broadcast tend name messag event phrase past perfect e g purchas order ship howev event often ad servic need know begin often one servic care moreov sometim servic emit event result listen first servic thus diagram interact would look much like diagram command messag link even rpc diagram one event messag though actual implement direct messag broadcast bus add fact recent seen messag ad name command phrase imper e g bill ship purchas order odd thing name messag way flow chang whether name event command one determin whether someth command messag event differ semant name actual implement differ command event messag given messag broadcast mean none truli command messag
mvc widget optim access css resourc tri imagin web solut mvc fashion go old webform base solut work asp net mvc bootstrap main menu ad function form widget use html action call control action fill inform part page think css resourc go get widget separ control effect use scenario use html action let control add function page lose connect page whole could possibl load resourc packag css type object would one solv make possibl web portal knowledg css resourc file alreadi ad solut
proper distinguish mvc three tier mani webapp framework e g spring call mvc framework distinct done mvc three tier seem framework call mvc framework realli three tier framework proper label
spring jdbc templat without dao rather new write applic interact databas curious project work write simpl web app go display metric data base hand various queri probabl various databas tabl base research spring jdbc templat seem like good technolog go base rather simplist natur project everi exampl see use though seem involv use dao pattern assumpt usag dao pattern necessari seem extrem pervas exampl perhap mistaken criteria would use evalu whether implement dao pattern spring jdbc templat project
make domain model violat oop game read number json file deseri hand result object class need deseri object thought domain model normal simpl one object simpl properti sprite class privat want good encapsul mean constructor accept mani argument sever method set properti also properti need attribut read json parser look like poco read poc os persist ignor could creat simpler domain model act like dto satisfi sprite class nice ignor write anoth class handl busi logic type stuff worri domain model anem order avoid could make properti sprite class public keep busi logic encapsul
need help model user project task relationship creat simpl project task manag applic laravel sure relationship would work project task user model user project member project task belong user project best way defin user project relationship could mani mani relationship user project use project user pivot tabl associ two want determin user own project could add field project call owner popul id user creat seem kind wrong though relationship would normal model belong relationship advic great appreci
model restaur avail search look find effici way scale thousand restaur reserv search ideal would effici answer queri like find restaur avail peopl time slot base minut interv e g use document databas raven db issu conceptu think depend under datasourc restaur differ amount capac exampl restaur might fit peopl restaur b might fit first instinct restaur collect reserv collect howev cannot think way effici queri made restaur reserv collect actual get result restaur enough space particular time book sampl data object option came mind actual keep track day timeslot day min interv book respect timeslot updat henc queri would simpl search timeslot would work tri yet involv mainten best way go problem mayb side see comput avail book idea second option comput avail book would add anoth data object background task would creat new time slot restaur subsequ day exampl creat day advanc user book maximum day today day would differ timeslot exampl forth initi restaur time slot would set avail book max book maximum book restaur e g reason max book restaur avail might base time might avail might expand book say peopl made respect timeslot avail book would ad search need done one would search easili restaur time slot make sens issu constant creat new data object avail search keep sync new book made look like lead system error prone
handl login error user class user class handl thing relat user within content manag system expect class contain function login function accept three argument usernam password rememb latter default true question best way handl login error display user use custom mvc model control view need remain abstract class identifi follow possibl solut return sign integ login function interpret insid control add variabl user object contain error messag plain text output error direct within function call point moot sinc coupl output class bad point seem logic make multi languag featur may well ad later difficult exampl might someth like think best option exampl could insid class insid control look return valu login handl therein peopl thought better way tackl
design storag servic data structur decoupl model share data sure rememb norton command applic similar sometim data display separ decoupl view build web applic follow principl amount data big fetch display entir page potenti overlap subset data need display separ view architectur look like applic creat present pass instanc event bus storag servic present turn creat respect model view storag servic pass model communic present done via event bus scenario left side awar right side yet model possess inform without need doubl round trip server achiev use storag servic model implement model fetch method ask storag data data previous request storag simpli return act like memori cach come actual question context design data structur network wise effici storag servic follow use case left model request get file limit right model request get file limit actual need last attempt approach store request made model everi addit request best figur request diff diff request e g get file offset amp limit store fetch item file id1 item1 id110 item110 unfortun step help relat url id model request next set valu never know actual memori cach cours could use per url memori cach strategi would duplic entri cach someth like avoid thought feel like reinvent wheel better simpler common accept method perhap architectur flaw
good program practic similar child class develop os applic draw pattern view base option select user let explain clear user shown number imag option choos select option view drawn view inherit class say parent class set common properti child class parent class right approach use separ class pattern overrid draw rect differ pattern creat separ child class child design mani similar child class differ draw rect implement main control initi pattern child class base select use switch case problem got alot option say creat separ inherit class h file would realli bad approach opinion bad program practic pattern follow optim code creat child class pattern best approach idea mind pass select index hope question clear thank idea mind creat singl child pattern class select index properti base select index implement draw rect method lot els switch case
best practic applic flow diagram make web applic most mvc object orient databas enabl alway troubl go back project month releas work even rememb made project overcom problem afford much time consum document mani diagram quick way guy practic avoid
mv pattern non busi model goe pass menu item view view model menu definit model properti titl imag children enabl model meant ui unlik busi domain model like person contact detail transact etc see menu model sit along busi domain model felt like pollut right place put kind ui specif model thank
would correct way use repositori pattern asp net mvc applic implement entiti framework asp net mvc applic implement entiti framework declar repositori db context like way declar initialis compani db context within control access repositori use compani db context instanc correct creat separ unit work class access repositori
python sort iter set modifi iter look datastructur handl cycl larg number order subroutin activ think need implement python set like object remain order modifi easili iter care actual loop work long simpl effici way read element order notabl modifi iter allow implement specif form subroutin program unfortun cannot use built subroutin modul python program emul behaviour legaci system precis need finer control effect list subroutin referenc index number dictionari subroutin iter ascend order last reach point return lowest number one howev larg number subroutin time activ one activ skip order run consid simpli give routin activ flag would test run howev enorm number potenti routin compar tini number activ one make method much slow subroutin occasion activ deactiv run must fast look keep list key activ one iter ad remov activ deactiv look reason effici way maintain list main two system seem feasibl blist sort set howev sure support modifi iter use two heapq shift item order definit support modif time would requir lot manual work would probabl slower howev somebodi may much better answer either appreci idea achiev reason effici ideal python way though deal littl ugli job
help depend inject still confus use depend inject anyon could explain mayb use exampl would great explan would appreci let say creat web app save movi review written c asp net mvc follow model code would class provid control list review add averag movi look like know di most use allow easier unit test perk worth go old project make sure provid use princip
mvc differ model servic framework logic layer call model wherea call servic differ differ name convent updat reason ask zend framework classic mvc framework everybodi use concept model learn angular js seem word model disappear replac word servic notic servic like singleton reus exampl rest client wherea model relat data manipul come control mvc pattern
gradual shift methodolog write code affect system perform care td dr confus ask drive idea behind question alway intend question may articul well origin intent alway modular separ loos coupl decoupl refactor code mark slower natur monolith singl unit everyth one place one file tight coupl code rest detail various manifest came across later slower sure scale like non defrag disk pick piec everywher slower sure care question micro optim prematur optim etc optim part death overal methodolog techniqu way think write code emerg time inject code class depend write one file per class separ view databas control domain write spaghetti homogeni singl codeblock write mani separ modular compon work togeth way style code current within decad seen advoc framework advoc convent pass via communiti shift think monolith block microservic come price term machin level perform overhead programm level overhead well origin question follow comput scienc field notic notabl shift think come program come across advic quit often goe like write smaller function wise code testabl maintain way refactor exist code smaller smaller chunk code method function line long clear purpos creat function compar larger monolith block write function one thing separ concern etc usual creat function frame stack creat file one class per file class decomposit purpos layer purpos mvc domain architectur design pattern oo etc creat file system call chang compar old outdat spaghetti code practic method span line big class god object everyth question call come machin code 1s 0s assembl instruct hdd platter concern perfect class separ oo code varieti refactor small tini function method generat much extra overhead detail intim familiar oo code method call handl asm end db call compil call translat move actuat arm hdd platter idea assum extra function call object call includ call languag generat extra set instruct therebi increas code volum ad various code wire overhead without ad actual use code also imagin good optim done asm actual ran hardwar optim much henc question much overhead space speed well separ code code split across hundr file class design pattern etc actual introduc compar one big method contain everyth one monolith file due overhead updat clariti assum take code split refactor decoupl function object method class result paramet pass smaller code piec sure refactor code keep thread go requir paramet pass method class factori method design pattern result overhead pass various bit inform case singl monolith class method said somewher quot tbd code made asm mov instruct load cpu regist proper variabl actual comput done case load cpu time push pop instruct provid linkag paramet pass various piec code smaller make piec code overhead linkag requir concern linkag add softwar bloat slow wonder concern much current futur generat programm build softwar next centuri live consum softwar built use practic updat multipl file write new code slowli replac old code particular note one old class line file mention earlier becom set file locat across various directori includ test file includ php framework use bind thing togeth file come well come disk load multipl file slower load one larg file cours file load load need disk cach memori cach option exist yet still believ load multipl file take process load singl file memori ad concern updat depend inject everyth come back think question misunderstood mayb chose misunderstand answer talk micro optim answer singl least think call talk micro optim misnom movement refactor code loosen tight coupl whole everi level code came zend con recent style code one core point centerpiec convent decoupl logic view view model model databas decoupl data databas depend inject everyth sometim mean ad wire code function class boilerpl noth serv seam hook point easili doubl code size case updat separ code file signific affect perform level comput philosophi compartment code multipl file impact today comput perform disk util memori manag cpu process task talk hypothet yet quit real distant past could easili write one mono block file model view control spaghetti spaghetti code run everyth alreadi load benchmark past use c code found much faster load singl 900mb file memori process larg chunk load bunch smaller file process smaller peac meal chunk work end today find look code show ledger featur like item order show order html block line item copi print html block display icon html paramet behind allow make copi item move display appropri html arrow etc zend framework creat partial call essenti mean call function take paramet insert separ html file also call depend detail want get creat separ html function tiniest part ledger one arrow arrow one copi item etc easili creat sever file display small part webpag take code behind scene zend framework code system stack probabl call close differ file interest aspect wear tear machin creat compartment code mani smaller separ file exampl load file mean locat various place file system various place physic hdd mean hdd seek read time cpu probabl mean context switch load various regist sub block updat interest strict use multipl file task could done singl file affect system perform use zend form api vs simpl html use zend form api latest greatest modern oo practic build html form valid transform post domain object took file make could replac simpl html php js css file perhap total light weight file better worth imagin load file numer zend zramework librari file make work vs simpl file
creat win form project wpf readi c develop privileg learn wpf yet howev recent initi architectur phase new project expect eventu employ wpf probabl although asp net still option gui develop begin sever month need get buy win form base proof concept proceed full product grade develop readi begin implement gui either learn wpf hire someon experi prefer question key fundament design pattern languag essenti etc could employ right away would facilit smoother migrat road exampl code simul model contain larg number entiti eventu need visual interact user control certain techniqu implement ground would make wire object wpf less pain later like depend properti similar stick mvc approach familiar right straight forward morph mvvm strategi later simpl concept could appli would make migrat easier take two week current dev cycl master basic tri follow uncl bob advic postpon architectur decis case gui layer absolut make want know unnecessari migrat cost could avoid anticip advanc
rubi rail databas use static lookup tabl constant string rubi rail project seen instanc string use instead foreign key refer lookup tabl usual code c sql server use lookup tabl particular experienc rubi rail question use string instead lookup tabl rubi rail web project mysql activ record someth specif rubi rail dynam type languag particular circumst bad databas design lookup tabl mean like follow user status user wherea string user
rail get data model collect new model method model product attribut sale view need get sale view count product correct implement method call like product sale creat new model stat implement stat product sale
consid loos coupl class method well fan depend inject howev know much public privat method insid class loos coupl pictur better project id user id privat properti class decent setter method input valid also throw error case unexpect input better class method reli properti instead get via method argument repeat whole valid etc case method tight bind class probabl constructor well advantag method easili reli setter method alway assum also proper data alway avail process setter thrown except otherwis seem quit help make class librari loos coupl way depend howev question method insid class depend class properti consid bad practic
domain model vs view model earli stage program career work mvc year spent much time learn pattern concept behind project work get larger start think mayb best understand model layer suppos work hear lot alway view model protect domain model work practic relationship two look like model need extra view logic creat copi
web design pattern build small websit php use mvc design pattern ui futur need add mobil support websit sub domain like everyon web new new mvc page view model control view model intern directori control public directori server server root directori question need creat new mvc design mobil page use model regular websit site sub domain mobil web page thing need chang view part public page control creat view mobil page control decid view present like sub domain must differ control
addit code complex data model interact simpl consid disadvantag mvc model accord slide given lectur one disadvantag mvc model addit code complex data model interact simpl would assum would make differ sinc data model interact two differ compon mvc model
valid object design pattern need run zoo applic zoo includ abstract class anim sever deriv class zebra eleph orangutan baboon class sever instanc question want check two anim instanc mate busi logic divid two part want check mate partner fit mate e g young old sick etc want check two partner match e g zebra cannot mate eleph orangutan mate baboon assum first requir would implement abstract function would resid anim baseclass second requir would design class general matter ad new type anim would requir much overhead
mvc implement link view develop java applic visual time seri need least three link view mean interact one updat other view list repres avail current select time seri select time seri use input subsequ comput chang select updat view line chart display avail select time seri time seri select click bar chart show aggreg data time seri zoom period time line chart zoom period vice versa implement nice softwar engin point view e like write reusabl clear maintain code thought mvc pattern first like idea three view compon observ model class refresh view upon notifi feel right store view relat data model store e g time seri select plot zoom level model make implic view want reusabl model hand control observ result lot depend ad anoth view regist view observ new view vice versa pass around mani refer introduc depend mayb anoth model store view relat data would solut
best way keep html document structur php control structur strong visibl complex view file creat lot view work part common mvc pattern appli web framework like code ignit cake also adher follow maxim best fat model librari object logic skinni control respond user action server side view present request result provid ui lead situat lot view html variabl echo loop accompani mark css javascript applic nice clear howev case view need complex might need differ thing base state loop item exampl sometim get quit complex problem ident appli html php soon get sync simpl exampl li element depth output document level code start use control structur get wors well use pattern follow minimis problem even complex view
applic set via constructor inject ambient context develop applic contain class load applic set configur file set class public seal class app set app set privat app set default set instanc public app set default languag en var config configur manag get section app set name valu collect config null string null empti config default languag default languag config default languag public static app set default get return default set instanc default set instanc new app set set valu null throw new argument null except valu default set instanc valu public string default languag get privat set class use set version public seal class class public function use languag set app set default default languag en version public seal class class privat readon string default languag public class string default languag string null empti default languag throw new argument null except default languag default languag default languag public function use languag set default languag en class interfac locat assembl approach better global applic set pass via construct inject use ambient context someth els
realli need implement event sourc case exampl use case event sourc applic whose excerpt say someth went wrong app result user get block abus user claim done anyth break rule go back stage environ play event lead block system see happen first hand need comprehens log event basic interact happen around app stage system replay event base sensit data may want anonym detail hand imo event sourc real benefit ask state rather state applic design follow cqrs principl use event sourc yet applic realli focus rather sinc oper realli simpl mean differ way end result similar use tempor pattern introduc persist object version revis databas rather implement event sourc especi track user abus like post insult temporari hidden simpl queri ask version abus commit could enough quick made rather script stage environ replay event get right snapshot show abus
class autowir spring use depend inject use depend inject spring time understand work pros con use howev creat new class often wonder class manag spring ioc contain want talk differ autowir annot xml configur setter inject constructor inject etc question general one let say servic convert clear convert depend necessari autowir seem better autowir code cleaner easi test write code without di servic look like much difficult test moreov new convert creat everi convert oper even though alway state seem like overhead well known pattern spring mvc control use servic servic use repositori repositori autowir usual servic autowir quit clear use compon annot static util class like convert mapper autowir tri make class autowir class depend easi inject easi understand easi test tri autowir absolut necessari spent time look general rule use autowir find specif tip usual peopl talk use di yes type depend inject prefer answer question would grate tip concern topic
decoupl simpl factori default implement simpl factori class file resourc static factori method provid default implement default file resourc problem class tight coupl default implement default file resourc given new requir class part api file resourc cannot direct depend class part api default file resourc figur solut invers control either depend inject servic provid servic locat possibl decoupl file resourc default implement default file resourc far know doabl inject depend file resourc constructor field setter method main problem constructor file resourc privat furthermor static factori method altern factori method pattern would abstract factori api class would concret factori non api class could even inject decoupl api non api class either way depend contain necessari handl wire think overthink
manual depend inject abstract factori start use depend inject fair larg interact program earli yet feel major object inject go want runtim data pass constructor prior use di web applic build everyth composit root problem work runtim data sound like option use manual inject abstract factori anyth import consid decid two main come person prefer use ninject factori extens go factori rout oner howev end factori everi class sign someth wrong prefer manual inject power io c contain need could simpli mean use depend inject
understand depend inject read depend inject di complic thing read referenc invers control io c well felt go journey understand instead creat model class also consum pass inject model alreadi fill interest properti need new class could take paramet constructor pass argument must miss understood point mayb becom obvious bigger project understand non di use pseudo code di would could one shed light sure muddl
unit test factori law demet code work object repres current state someth akin shop cart order store 3rd parti shop api control code want abl call order actual send messag third parti third parti also need know sever thing specif order like order id login id chang lifetim applic creat order origin inject messag factori know login id updat quantiti call order pass along order id control code easi write anoth thread handl callback updat order chang success inform order chang fail problem test order object depend messag factori need messag factori return actual messag call set order id exampl set complic messag factori mock addit want kill fairi everi time mock return mock fairi die solv problem keep control code simpl read question help talk test problem solut thought somehow refactor code requir factori method return real object perhap less factori messag sender creat test implement messag factori inject code pretti involv attempt sscce
jacquard loom consid stateless jacquard loom pictur complet chain paper card consid stateless far tell tell oper depend previous concept branch loop
add creat command handl cqrs event sourc architectur want implement first applic use cqrs pattern along event sourc wonder creation aggreg root handl proper let say someon send creat item command handl event item creat store first event new item kind item list entiti aggreg item event list consist item creat event udi dahan suggest creat aggreg root alway use instead kind fetch method fetch someth new certain id assign understand idea behind pretti reason think new object object state compos zero event repli use distinct method repositori like get new item make get id method accept option lt item id gt instead edit time dig found realli interest implement aforement pattern use actor author instead creat aggreg retriev kind repositori newli creat uuid drawback approach allow temporari inconsist state also wonder implement delet method approach simpli add delet event event list aggreg
serial preclud use depend inject simpl question understand serial c requir default constructor would elimin possibl use constructor inject di general favor style di read citat need realli either situat miss someth side question io c contain side step tradeoff somehow
observ pattern count composit classic implement observ design pattern subject list refer observ observ might refer subject consid composit far understand composit mean one object includ anoth object order use function object observ pattern subject includ refer observ exact use function intern thing outward keep refer notifi hand subject observ maintain relationship often character composit subject observ observ subject consid kind composit
one subclass instead composit use factori method design pattern current learn design pattern learn factori method pattern pattern mean order implement factori creat object one subclass class need object subclass creat way superclass work abstract refer instead concret implement subclass generat creat loos coupl design usual mean superclass becom abstract sinc creat object method must abstract subclass contain factori method implement method like factori pattern pattern encapsul creation concret object allow client work higher level abstract specif pattern built inherit understand would anybodi go troubl subclass class need factori make abstract composit much better purpos way make much sens creat abstract class interfac call factori would declar one method creat object creat concret implement differ purpos weapon factori titl factori give client factori member instanc factori refer set whatev concret factori need runtim client simpli use factori creat object need without know concret implement factori hold understand one would go troubl subclass class make abstract benefit allow use factori loos coupl manner simpl composit base design describ better way think agre could explain anybodi would use factori method pattern describ
factori method pattern creat famili object two main differ design pattern factori method abstract factori differ factori method main base inherit class way use subclass creat object object creat depend subclass use abstract factori base inherit way also composit client own abstract factori instanc hold concret factori differ factori method creat one object abstract factori creat famili relat object differ understand although troubl understand anyon would prefer subclass class need factori instead give factori use composit unless class alreadi subclass differ understand factori method creat famili product instead one product certain return array product famili product share common interfac method return array type said method produc one product addit factori method insid concret subclass abstract factori creat differ product use differ method call client concret factori factori method pattern differ factori method differ product
log page session id inner modul c orm modul generat queri log generat queri inform error trace file use web applic queri generat dynam base dynam busi rule user interact littl control obvious orm modul complet decoupl web applic therefor complet unawar web session page hit etc downsid log entri generat cannot trace back origin page hit notic non perform queri log cannot easili determin page hit generat queri keep orm modul decoupl web applic still allow log enough relev inform correl log entri session page hit know pass logger object around logger object preserv session inform howev function call nest level deep pass logger around cumbersom
factori method vs factori method design pattern current studi design pattern book although tri anyth els find excel head first design pattern confus two concept factori method factori method design pattern tri understand one mean came conclus like know definit exact factori method method meant one thing creat object specif supertyp return may may take paramet may may decid use statement kind concret object creat exampl factori method factori method design pattern name factori method pattern provid specif way encapsul object creation client work like pattern system two class creator concret creator creator abstract class concret creator subclass class job concret creator creat object return use factori method contain one method job creator manipul use object receiv subclass concret creator usual return client done like creator contain abstract method signatur someth like supertyp object creat object whenev need object type supertyp object call creat object thing creat object said abstract concret creator job implement method way implement creat object hidden creator know concret object get know sure type sypertyp object way client use creator object creat object supertyp concret object creat depend subclass thus declar shoe factori factori new california style shoe factori make factori produc california style shoe shoe factori factori new ny style shoe factori make factori produc ny style shoe sinc implement creat concret object depend concret creator code demonstr understand two concept accur thank
server side c mvc angular js like use net mvc use quit bit past also built spa use angular js page load initi one think want use blend two mani case set applic initi use net mvc set rout server side set page mini spa page quit complex lot client side function confus come handl model view bind use net mvc angular js scope avoid use razor html helper html helper creat markup behind scene could get messi tri add angularj tag use helper add ng model exampl html text box x x name also ng repeat work load model scope right still want use c foreach loop draw line separ anyon gotten net mvc angular js play nice togeth architectur suggest
inject depend di c applic play depend inject sure right especi sure correct way build class inject depend say class creat class b class b depend class c class c depend class respons creat class could class howev larg system class might end creat assembl larg number object separ builder class creat c b use builder class option addit read lot di contain howev seem major framework c also understand correct di perform well even without contain correct
run function function list execut goal current mvc project method updat view bag base previous action user would like call function whenev certain list mvc action call question would observ pattern fit problem read moment start sound like would would overkil someth simpl would good practic look right direct better way reach goal user activ entiti session select one need display entiti name date etc page load part header inform catch use data model larg hierarchi data display part level time view bag accept locat store data act similar header inform think approach correct might someon abl point good direct
initi object system use depend inject follow question follow post inject depend di c applic system use di someon somewher respons creat various object wire find difficult figur read one option root class howev case seem root class might respons creat larg number object though option use smaller builder class use root class good way note tag c question develop c sure make differ answer
reflect part design current design somewhat larg program involv simul math physic model collect data implement code yet one main problem face pass data around easili without multipl copi data may potenti outdat redund initi think model object implement function return data structur contain copi data collect data structur togeth pass around would involv lot copi howev data map actual object anymor data structur idea would involv use trie data nice hierarch lookup done easili string think instead design program use data structur pass data around program would simpli pass model data extract reflect would pretti much avoid redund data pass alway date problem also need program fast soft realtim constraint sure perform impact reflect reflect seem kinda ugli time peopl say never good idea optim earli fenc design program use reflect liber tri avoid reflect much design
depend inject vs mix level abstract read clean code handbook agil softwar craftsmanship robert c martin one point make g34 function descend one level abstract howev wonder function actual creat object applic say depend use depend inject app would need creat book databas instanc inject databas instanc book accept break mix level abstract rule yes
build webservic mvc plan websit base mvc think webservic know mayb one day creat android app someth site webservic behav difer write differ control stuff fs place exampl site control act password correct redirect user welcom screen password incorrect render login page webservic simpl show json like messag wrong password sucess one think best approach
consid client interact web server state web server maintain state via session variabl cooki littl confus notion state stateless architectur forgiv unclear question consid client interact web server state web server maintain state via session variabl cooki assum chang inform come client side way depend user amazon web store although state may chang reflect automat client client attempt oper stale data system recogn act appropri pure stateless still somewher ad layer java script constant poll server everi second keep client side updat abstract level consid state client continu updat state definit model tri work stateless architectur websit http stateless protocol client make http web request server calcul process request return back client appropri inform current state websit client inform websit chang state chang reflect back client side client make anoth web request state architectur client simpli oper assum data seen repres actual state server
way use observ pattern creat gui system java swing librari implement observ subscrib publish design pattern design way program respond event gui button click etc programm regist action listen object observ gui element subject observ publish object get notifi gui element state chang someth accord seem reason way design gui system think way framework could way design event respons system gui imper languag framework librari gui event respons system design way event respons system common c gui librari implement event respons issu use observ someth els librari python etc
mvc tier architectur game busi layer make game follow exampl use mvc architectur pattern tri get head around would fit tier architectur gather far mvc tier separ idea compat mvc triangular communic structur wherea tier stack mvc use within tier structur mvc part contain ui layer diagram model game contain class describ abstract game world item charact posit veloc world score etc would constitut busi tier thing would normal associ busi layer diagram case perhap show view control ui layer model contain busi layer
pull frequenc paramet mvc architectur assum simpl spa singl page applic mayb dashboard basic condit model contain method access display data view contain method load templat appli model data templat control manag user command router handl navig exampl make sure user configur dashboard updat everi n second pull new data back end pull frequenc compon proper set pull frequenc paramet model view control router somewher els
fine skip mvc build pair compon communic one way fashion j button allow user select file j button action listen pick click pull file name directori need inform display j text field function basic need ever chang someon suggest way relay messag ask anoth question skip mvc simpl best right simplest clearest way think relay messag mean modifi j text field j button action listen go simpler approach tri appli mvc anyway
model view control user interact view control recent learn mvc design pattern learn head first design pattern book accord book understand correct model applic logic data view basic gui repres model visual user control respons mediat act middleman view model view report control user made action control translat method call model howev lot place web contradict understand book claim general user interact control view one true common user interact control direct view direct approach accept common
state pattern code embed devic depend inject devic object context state class wrestl code think final gotten state pattern code work event got simplifi system work like first go state pattern code exampl found simpl relat type devic q context class suppos control peripher devic activ state direct control instanc drive display read sensor etc either way would work enough experi choos correct mention di pass peripher context state provid control pass context make call context activ state mention way see activ state context constant communic via di control devic hope clear context class code exampl state class
look design pattern repres share state music sequenc like give lot context also state basic question top concis possibl feel free read littl lot work music sequenc happi far use publish subscrib approach help decoupl major compon applic help test refactor howev wonder compon share awar certain state without ad depend new singleton abus publish event cach copi state specif exampl playhead anoth exampl explain playhead trivial repres instanc immut timecod class measur beat tick essenti sub beat unit compon subscrib beat event grab timecod updat intern playhead properti get function like edit see compon track playhead also want track sequenc event activ playhead time e g note also need add function step region time segment say measur similar playhead singl moment time compon similar need track stump repres object applic without introduc tighter coupl current approach compon listen event seem good fit right sequenc compon emit beat event subscrib use updat playhead enhanc event includ sequenc event data note etc smell bad event typic meant transient consum occur event consum updat privat state especi privat state would ident consum also event beat could signal chang playhead e g user click anoth part score event approach seem multipl compon depend new playhead compon bidirect bind sever compon could detect chang playhead set state even use depend inject reduc depend sake test feel wrong case even context help illustr problem read app current sever immut data type larger compon may depend may use without know type timecod sequenc event meter tempo stret string fret object pitch larger compon construct time depend includ sequenc repres score queri iter random access sequenc event sequenc handl playback time current emit beat note event score view render sequenc tablatur sheet music visual show playhead neck view show guitar neck activ play note gui contain number simpler control includ clock display updat playhead compon also instanti score view neck view compon wire way run time wire intern compon via pub sub subscrib event name handler pub sub pros con work well point howev case approach break guitar neck show static marker current select note addit play activ marker anim note play requir track state note stret start time current playhead click guitar neck toggl add remov note activ sequenc current playhead posit would also updat score view new featur allow step region allow step score increment like whole measur current step could larger singl time point neck score view abl display static marker note within step region seem duplic problem appli playhead yet anoth approach smell bad new entiti manag own sequenc compon publish event specif like playhead updat step region updat contain necessari data seem bad misus event updat redund state sever compon might mitig event referenc immut least subject chang object e g playhead state mayb would less bad approach still problem compon cannot chang playhead step region without publish request sequenc handl chang seem wrong mayb other solv exact type problem eleg think pointer appreci
mvc implement differ design detail still consid mvc implement model view control pattern strict defin design detail term like mani other lot differ interpret version fit definit come across mani version interpret mvc term exampl version state use observ pattern view regist observ model view get updat model chang updat version claim view must never interact model way first version head first design pattern book second version read programm two contradict interpret specif design detail mvc exampl question definit mvc pattern one term interpret varieti way accept talk higher view definit pattern pretti clear definit talk specif detail design exampl observ use updat view chang model order view updat pass control may told model direct thing like mvc version vari detail still fit mvc definit simpli lot wrong mvc implement
observ creat loos coupl design complet understand observ design pattern implement also understand term loos coupl mean sure observ make design loos coupl exampl let say want object b c get updat object state observ pattern great way one could also implement brute forc way use pattern pleas explain observ pattern allow loos coupl design sure complet understand thank understand loos coupl mean exact observ allow design loos coupl
mvc design singleton model initi recent learn mvc model view control tri refactor exist program situat like exact one object particular class seem evid use singleton singleton use keep hashmap certain thing howev hashmap initi singleton creat read node xml file store class object dilemma initi xml attribut read convert class object effect thing model class control definit good put initi method control class would refer control class model class conform mvc design put whole singleton control look hashmap control packag defeat purpos model class pass premad hashmap singleton paramet neither constructor privat well technic could give get instanc method paramet feel like dirti way fix sinc either pass null everi time make anoth get instanc method accept paramet right code look like overlook someth use differ approach
deal often occur depend relat class use view class templat view class often requir rout class get uri page could actual say rout avail everi view class wonder would deal depend inject inject constructor would mean includ everi view class mani control would seem wrong would also includ trough class extend think view deserv base class rout librari would abl break solid rule depend direct relat child class last option would inject trough public variabl inject singl place templat render guy solv problem look clean non repetit way
mvp multipl page control page refactor big scale asp net applic written web form unflex design view code behind refactor use mvp architectur model view present use page control approach page control write control page face problem reusabl follow diagram express small sampl illustr problem registr view view form allow user regist introduc data like name address countri modifi data control edit address view retriev alreadi exist data user allow modif modifi data back model may see part common control specif storag data wish reus part code data store consid three option deal creat superclass includ code reus make control inherit class use store algorithm creat kind librari layer e user manag librari control would make use make respect call implement somewhat compon system creat control would manag compon diagram illustr approach note countri retriev obtain list countri popul dropdown menu approach make view conform sever interfac togeth defin view bind view sever page control depend interfac view implement way think could easili creat new view expand function exist one instanc could expand edit address view delet function make implement user delet interfac think approach would allow maxim code reusabl singl respons principl mvp architectur yet feel somehow violat page control pattern feel approach may big drawback futur know ask solut good anyon enlighten matter thank
observ pattern web observ ever use idea sure alreadi exist creat sort network observ subject would like describ work ask sever question say object object b c e object e need observ object b c regular observ pattern e would regist observ b c mean e would regist three time observ creat six observ subject relationship total idea add anoth object middl let call object implement observ observ interfac regist observ object b c object e regist observ object whenev object b c notifi object object notifi observ e thus creat sort network network total five observ subject relationship see two main benefit less import benefit solut allow less observ subject relationship thus think creat less complexilti system simpl descript number relationship get reduc one observ subject bigger benefit import benefit pleas consid applic two group object group group b object group need observ object group b decid add object group b use regular observ updat lot code regist object group observ new object network solut sure differ name regist middl object object observ new object group b object group would notifi new object group b chang state question solut ever use profession project ever encount use cool idea never use practic would say pattern disadvantag advantag awar name
much segreg much design work asp net webform applic develop use wcsf mvp pattern applic search screen allow user enter field display result segreg function user control user control view present search consist search field along submit button contain valid insid present page valid rais custom event search criteria contain data list control display readon search criteria subscrib search event search result communic control bind grid subscrib search event also contain sort grid relat event sinc control control behavior follow solid principl view present thin testabl also increas product facilit develop abl work task independ end think whether engin increas complex introduc user control custom event etc simpl function
realli possibl librari depend librari often see advic tri make librari independ yet realiti never seem achiev bs advic actual possibl realist way exampl write 2d vector librari use make 2d collis librari build 2d physic librari use 2d vector librari 2d collis librari serious expect figur way make physic librari depend librari like eventu want abl serial deseri physic collis data mean want make depend serial librari anoth exampl string librari lot string function think end str end start str start whatev write templat librari use string librari rare seem abl write new librari use librari could write interfac write adaptor attempt decoupl one librari anoth unlik perform often model differ librari mean even could decoupl interfac tri use differ librari one origin decoupl end imposs massiv non perform origin advic bs way actual appli advic real world
differenti factori method abstract factori confus differ pattern factori method abstract factori lot research still confus one question differ two pattern factori method produc one object abstract factori produc famili object differ read lot site web confus know use pattern troubl differenti two
mvc desktop applic view ever hold refer model specifi desktop applic peopl refer specif web implement mvc titl say pretti much mvc structur view ever hold refer model control use middleman communic view model alway direct answer
wrong html string within php object wrong control alway thought typic mvc design bad practic build amp concaten html string php file class strict templat work larg project strict guidelin place forbidden put html code php control fair game php sub object might generat lot html code string get pass templat sub object contain addit logic could chang html depend condit thus main question consid mvc object consid part view frankenstein model view exampl nbsp nbsp
main goal mvvm pattern could tell goal mvvm pattern argument reason give team product owner respect develop accord pattern would like simpl answer someth one sentenc one word mainten secur test someth els
organis data access depend inject compani relat long histori databas back applic begun experi depend inject look advic convert exist data access pattern one suit depend inject specif question creat one access object per tabl given tabl repres entiti collect one interfac per tabl would need low level data access object inject right dozen tabl make composit root nightmar would instead singl interfac defin thing like get custom get order etc took exampl entiti framework would one contain expos object tabl contain conform interfac seem like compat di case help way normal manag data access generic data layer expos crud transact capabl provid specif subclass handl creation db connect db command etc actual tabl access use tabl class perform crud oper associ particular tabl accept return domain object rest system deal tabl class expos static method utilis static data access singleton instanti config file
id properti domain object ddd domain account object e g within context ddd account object id properti id would primari key basic databas artefact
design mvc site ui develop work without access data tier work asp net mvc site use team foundat servic sourc control divid separ project one solut ui design work need access much pretti much thing work view script folder main project project web api take paramet live project data depend app spa style could easili store fake json payload would entir remov need log pull real data ultim goal would abl share subset sourc ui design allow check chang direct overal project rather creat separ instanc work would manual merg anyon experi type thing edit clariti purpos protect intellectu properti solut front end develop access entir solut hope help
rich domain model contain servic long experi program java ee project notic job done transact script anti pattern want learn use rich domain model question shall domain object depend contain system servic persist mail read articl agre servic initi inject domain entiti singl respons paradigm reusabl also read appli uml pattern fantast book know author describ shall respons assign entiti defin data access layer chapter best practic rich domain model depend contain system servic exampl consid follow scenario softwar agent work system agent busi sell insur polici insur polici type special type pre print card given agent agent give insur need track agent number avail card use case record mani card type given agent use case record agent number damag unus card type card use agent sell insur polici believ rich domain model suggest shall method follow agent class agent shall depend dao class one respons one calcul sum count card type given agent one calcul count use card sell insur polici one calcul sum damag unsold card believ make domain entiti mess good practic
mvc methodolog desktop applic current learn develop web app c asp net mvc enjoy mvc paradigm lot thought use develop desktop softwar googl around found noth use mvc pattern creat desktop app connect databas softwar pattern net programm like use use mvc thank
pool singleton object connect pool given follow scenario can enterpris applic maintain connect pool homegrown client applic enterpris app app built use spring framework dao pattern may simplist view think follow line think sound fix pool dao object hold connect object pool clear pool capabl scale depend need connect object must outnumb da os healthi margin good instanti brand new da os everi request access enterpris app dao attempt grab connect pool releas done bad sinc servic object mutabl state held object reduc risk concurr issu also think littl resourc content almost alway dao wait servic think correct could go wrong
use singleton use static class search stack overflow found differ two still sure case one would prefer singleton case one would choos use static class languag support static class like java obvious refer class contain static method field pleas give concret exampl case would pick one explain
state mutabl state immut state newbi question find newbi proof enough answer googl peopl mean say state program general oo program specif also mutabl immut state general program also specif oop
mvvm mvp stori pass interfac view view model bad use wpf enterpris solut hundr view heavili use data input valid mvp pattern clean solut usual small amount code behind form main code pretens layer call user interfac process uip layer next small project use wpf mvvm general idea mvvm look nice like command bind especi concept view model special version model dedic view like much concept messag event aggreg usual tri minim usag pattern exampl view model use ordinari object orient function call view view model view model view use call view model view call view model view use messag though sometim place send messag view model view send interfac view view model use interfac call function view bodi tell practic anti pattern bad
design domain entiti use depend manag state field new ddd ioc di troubl figur design entiti need use state pattern manag status transit somewhat complic use finit state machin fsm handl state use stateless complic situat fsm need loos coupl entiti e know state entiti must handl fsm necessarili know exact fsm e entiti know state trigger transit might go user use term workflow defin fsm state trigger transit rule etc workflow chang independ entiti might want add new state chang rule trigger etc independ chang entiti handl dynam load assembl contain definit fsm implement known interfac use servic inject entiti entiti call servic get fsm use involv potenti load assembl cach factori creat fsm assign fsm appropri state entiti final fsm return set valid trigger provid ui one trigger select fire actual workflow complet encapsul extern entiti current entiti look someth like concern design basic understand domain entiti depend inject yet inject one also understand entiti need handl state hesit move workflow complet entiti idea like init method would move inject method inject would clean way design entiti requir ok inject depend situat
simpl design singleton function java kernel understand singelton help instanti one class time tri learn design singleton function java want know better understand kernel tri follow like know way come privat constructor
singleton global point access bad peopl stack overflow agre singleton evil main explan come across use singleton fact provid global point access object admit understand bad thing conveni abl access import use object anywher code without pass around order get global point access oop bad thing singleton general pleas give concret exampl
code first mvc code good bit found project want work python web app use django mongodb know want web app circumst start brand new project start code first code view first hope ask quick look could use general direct
asp net mvc vs angular js model bind notic trend late net web develop use angular js client side applic becom curious play around angular compar would thing asp net mvc give quick exampl realli got think recent came across situat work work net environ need creat tabl bound collect object abil add remov row item collect add button creat new object append row end tabl remov button row remov particular object row use asp net mvc first found make ajax call server oper updat server side model refresh part page show result tabl work realli like idea call server updat model time tri come solut client side turn quit task generat html add valid correct index model bind work got wors remov end crazi string replac function recreat index item satisfi bind requir item last remov index longer correct curios tri recreat home angular experi took minut simpl function add remov item client side model one exampl seem abl achiev result far fewer call server angular fact bind client side model question distinct advantag use javascript mvc framework somehow util power asp net mvc right think oper done client busi requir call server
use factori pattern class littl common use factori pattern multipl class similar sort work want client worri class instanti return type instanti necessari class dynam depend input pass valu class similar method slight differ work class inherit common interfac correct way improv
use global variabl singleton someth els prefac work php abandon hope ye enter background exist larg set global function php number miscellan system call like sleep other use sleep other bunch differ script run bunch differ place found need sleep call pcntl signal dispatch soon sleep finish possibl script general need make global function current hope without disrupt current ecosystem much solut figur could creat wrapper class execut correct sleep singleton could make singleton system class wrap global function hell could even make wrapper static method downsid would lot boilerpl check see version would need execut either vanilla function call one extra stuff global variabl could make generic system class wrap global function could extend system class differ class overrid wrapper function creat global system variabl within script depend upon need function behav script access global variabl downsid would make sure global variabl declar never overwritten use proper system someth els could creat sys control class static system variabl static wrapper system wrapper function swap system sys control class refer downsid feel go overboard option consid method best pitfal look go forward edit end use someth els solut
ddd busi rule depend servic got confus domain requir access extern servic state life cycl busi rule employe accept job seeker job applic employe must creat appoint e mail job seeker current solut leav mail respons job applic domain kinda feel awkward option sinc leav job applic entiti depend mail servic creat new appoint servic option nice sinc need inject appoint servic control leav appoint class anem read never leav domain depend domain servic way fine busi rule requir servic exist domain scope anoth option updat third option would like
worth use factori employ tdd quit bit day realli enjoy everyth seem flow better natur better construct organ howev write bit io code util system io stream wonder ever worth use factori stream case certain seem better use factori general complex type defin class control authent someth interfac databas would probabl use depend inject contain resolv runtim without ever need actual creat one howev circumst need creat lot instanc would creat factori construct type want expos direct creat object client need expos factori creat inject client instead benefit allow replac factori time want someth els general use creat instanc type deriv type howev back stream point would even worth creat factori decor around stream exampl project binari data stream read data streeam binari data custom format take stream argument constructor use new seem violat everyth know learn sinc start use tdd give depend need know explicit get collabor howev factori seem overkil thought edit think need clarifi mean avoid new time obvious use tie depend like howev meant follow situat copi pasta comment meant told intrins evil use new oper collabor insid type use collabor better either pass inject type b pass factori need creat unknown number type use new insid collabor tie creat object creat direct thing requir better inject preconfigur instanc constructor need one instanc inject factori constructor need creat multipl undetermin number instanc
assembl get type vs assembl defin type select type differ assembl get type assembl defin type select gt type origin code
mvc user model get big crowd method crud oper one mani relationship data differ model mvc web project user class mani time user someth els one mani relationship e order user class mani order method add edit delet order user place user class separ order class e vs altern also case option combin option put method main issu option user model tend get huge term size violat srp instanc one project user mani thing like friend user feed upload file warn punish list goe basic ad crud method thing particular user mani user class bad thing spread crud method differ class howev one advantag option control logic crud method use attribut current user object without queri user instanc method add file check see user total file space use attribut user less max without anoth queri
java singleton field implement singleton java realiz could make field static would work way regular instanc field would perform optim differ would turn better prefer way implement singleton field talk field method
must essenti mutabl deriv data invers function read paper tar pit author ben moseley peter mark came across follow section page regard essenti mutabl deriv data essenti deriv data mutabl immut essenti deriv data exclud data deriv demand henc correspond accident state mutabl deriv data make sens function logic use deriv data invers otherwis given mutabl data cannot consid deriv ongo basi effect input invers often exist deriv data repres simpl restructur input data situat modif data simpli treat ident correspond modif exist essenti state understand essenti mutabl deriv data must invers function exampl consid follow java script code inputbox onchang function outputbox valu md5 inputbox valu inputbox valu input system outputbox valu essenti mutabl deriv data deriv inputbox valu use md5 function howev md5 function invers nevertheless inputbox valu still essenti mutabl deriv author actual mean say ldquo mutabl deriv data make sens function logic use deriv data invers otherwis given mutabl data cannot consid deriv ongo basi effect input rdquo exampl elucid point
spring bean inject hibern valid constraint control method like list whose argument annot valid valid password chang object use hibern valid constraint password chang sampl constraint list see inject login dao insid constraint anti pattern altern think inject dao password chang object login dao avail insid implement constraint valid lt v gt somebodi said mix data busi logic anti pattern spring suggest welcom control method password chang bean sampl constraint sampl constraint valid
cascad delet aggreg root entir aggreg make sens base exampl question within pro asp net mvc adam freeman discuss aggreg aggreg root simpl auction system member bid item bid upon bid author say would aggreg item bid item aggreg root author mention aggreg root use cascad delet exampl mean item delet bid item delet make sens problem bid belong item bid aggreg member bid aggreg delet member system place bid would seem reason bid delet well yet without break aggreg also simpli get member list bid level confus given simpl exampl make bit worri bad exampl could member bid valid aggreg instead level arbitrari make choic aggreg accept long make choic way model belong multipl aggreg miss someth p answer question link say domain driven develop tricki go enough detail tricki tricki induc confus question still remain
observ multipl observ network chain observ quick exampl hm observ cm sm observ cm hsm observ hm sm want updat new valu deriv cm detail still made exampl closest simplest come class color model store rgb color observ color observ interfac object class hue model implement color model observ interfac store hue valu deriv rgb color observ color model object updat hue valu observ hue observ interfac object observ notifi hue actual chang class satur model implement color observ interfac store satur valu deriv rgb color observ color model object updat satur valu observ satur observ interfac observ notifi satur actual chang class hue satur monitor implement hue observ interfac satur observ interfac display point whose x coordin repres hue coordin repres satur observ hue observ object satur observ object problem whenev color color model chang two updat trigger hue satur monitor object case new color satur hue updat trigger vice versa order two updat trigger depend subscript order two observ color model go intermedi state x coordin hue satur monitor alreadi new valu coordin still old valu one two updat trigger yet sake exampl let assum intermedi state hue satur monitor undesir want switch direct final x posit hue satur monitor function correct hue model satur model subscrib color model way enforc within hue satur model question organ interdepend observ without depend much order subscrib could delay trigger sourc updat duplic question deal multipl observ observ plug togeth form network network drawn direct graph distinct featur question natur topolog network graph hue satur monitor observ two observ behavior depend combin valu observ question observ observ one thing valu two observ need combin direct graph deal acycl ignor direct becom cyclic part challeng question direct graph repres partial order set tree direct graph contain direct chain length mean two level depend e g hsm observ hs observ cm characterist appear question combin relev caus problem want solv
visitor applic use composit pattern long time tri get head wrap around visitor pattern somehow thing keep rather fuzzi current impress use appli oper object implement composit pattern least far php concern accur observ miss someth process reimplement function includ comput diff two entiti entiti contain various valu object differ deriv type hierarchi entiti differ valu object origin diff code contain entiti though caus quit clutter rather move dedic servic object visitor pattern sprung mind though see actual sane appli would valu object need implement entiti element interfac seem bad case visitor pattern inde appli simpli fail see would appli nice
url control structur parent child relationship use mvc web framework creat applic contain hierarchi number locat locat sever devic repres n relationship databas devic run servic servic like http ftp etc defin extra tabl connect devic use n relationship far model entiti one locat control crud oper sinc devic somehow belong locat devic crud function locat locat control well servic control url access data structur like note also url creat delet entri omit think get idea question feel wrong think wrong put function insid locat control therefor would like move separ control hand like url structur sinc repres hierarchi data pretti well furthermor like url structur correspond control better solut separ control combin ur ls separ control separ ur ls combin control combin ur ls
team two mvc framework without fight creat crud base web project think use server side mvc framework code ignit laravel tandem client side mvc framework angular js fair common approach clear need someth server mvc client well enhanc applic feel two mvc framework project would get way lead disproportion complex repetit kind approach architectur would help get best mvc framework use one client server
domain secur involv domain logic togeth applic domain logic tri outlin secur model stuck requir prevent consid secur cross cut concern domain logic follow situat user system potenti allow creat certain kind object say filter introduc permiss call creat filter user either allow creat filter depend whether admin assign permiss user ok consid complex requir number filter user creat limit e g admin abl set max number filter user allow creat even complex assign max number individu user say valu user1 user2 secur system order author filter creation user suffici check whether user permiss assign analyz domain model complex way order look mani filter alreadi creat user make decis make thing complex imagin max limit depend amount money user account someth want conceptu separ least mind whether complic secur logic pure pertain secur cours depend domain model alreadi full fledg part domain logic make sens keep permiss concept assign remov permiss help much sinc domain state depend author decis rather assign permiss would way go say complic permiss concept simpli allow action mere fact exist would rather involv complex decis make logic
multipl model singl model multipl custom data type writ small webapp learn better best practic creat multipl model one model multipl custom data type exampl let say web app public librari librari would shelv shelv would book locat book would titl author text dewey decim number would better book model shelf model come better exampl librari model book class shelf class librari model hold class understand model class hope question make sens
use model everyth mvc question result discuss move realli good practic suppli everi valu display view via model especi variabl like current usernam even microsoft ode follow default templat login partial asp net mvc think ok suppli via model much better light maintain obay mvc rule add model sub model everi page model suppli stuff pass around view partial solv problem think best way stuff inherit would option requir everi model inherit base model like contain valu could caus problem need want inherit anoth class model
depend inject request variabl web applic work php sql web applic class depend part global get post variabl member refer direct within class argument constructor initi function mvc framework handl issu
travers ast use visitor write compil c like languag look eleg way travers abstract syntax tree tri implement visitor pattern although convinc correct visit overload type default overload call visit ast node amp subclass forc implement make easier quick dirti thing although defin visit type tedious subclass ast node must implement accept method use travers tree structur howev design quick becom tedious accept method often similar respons travers structur node visitor lean toward ast node provid iter access children visitor travers structur experi design abstract syntax tree pleas share wisdom
event sourc ok introduc depend messag class follow martin fowler explan event sourc messag class look someth like howev case need talk anoth compon process method specif need access repositori get basic data ok add repositori method e could put constructor messag cours howev pass basic data repo call multipl time differ paramet depend ship object ok introduc extern depend event messag class better way
uml class diagram annot observ subject relationship annot uml class diagram instanc class regist observ instanc class b implement appropri interfac realli belong class diagram static someth import design annot type diagram edit clarifi know annot observ pattern uml question specif class regist observ class b import design howev sure associ relationship two class appropri sinc class class b know total decoupl connect observ pattern
repositori repositori first learnt domain driven design also introduc repositori unit work pattern seem top notch cool kid threw sql queri like caveman databas deeper got topic learnt seem necessari anymor ms like ef n hibern implement unit work repositori one api call session context unsur repositori repositori realli understand argument leaki abstract complic thing ad absolut noth may simplifi data access howev feel right coupl everi possibl aspect applic e g entiti framework usual follow simpl guidelin domain layer heart system contain entiti servic repositori infrastructur layer provid implement domain interfac infrastructur concern e g file databas protocol applic layer host composit root wire thing orchestr everyth solut usual look like keep domain layer clean use repositori lt gt also domain concern depend anyth els tell access data would make concret implement module2servic requir data access would inject db context coupl direct infrastructur layer come visual studio project end realli tricki circular depend addit altern depositori fuckton work cqrs one abstract pure infrastructur framework
bad point use core data os like orm start use core data os app think use core data need featur app user look product propos catalog user add product basket user customis select product user creat account purchas order user add recipi order user pay order would persist data core data user log cloud res tful api persist data devic user log cloud res tful api persist data cloud user log res tful api persist data back end question read articl core data quick understood realli verbos rewrit lot similar code app research found wonder articl librari core data ns hipster realli interest use object record librari app one sentenc ns hipster articl alert consequ use librari use core data orm necessarili limit capabl core data muddi conceptu puriti would inform limit capabl use librari inspir activ record regret choic use object record librari app pose problem develop featur later thank updat good point use core data librari inspir activ record lot request insid app allow write less code
poco domain class contain collect question titl good think way word better use develop use poco class project domain object contain absolut logic data wonder best approach deal class relationship put collect insid class request later exampl consid e commerc applic order item insid order could pseudo code use could use way first way compact oop ish second way give control item request e g need request item quantiti use item collect e g display list order unnecessari queri databas older big project gone hybrid approach domain class first flavor various load method like load order load order item fill order object work small toy project custom crazi deadlin got time think issu tri search web hard find poco answer relat entiti framework work net time would like appli concept question method clear better valid depend project aim perform code clariti maintain
mvc control often simpli deleg model notifi view gui event reason sinc learnt mvc use everi app made arguabl best idea topic question small lo c app use java swing gui usual happen view gui class report control gui event common button click made exampl button press view simpli call control button press control button press reaction user input report control noth els think fine proper mvc view implement part doubt follow control button press method often simpli deleg model exampl noth decis make actual interpret view report often simpl deleg model consid reason implement mvc structur specif control control often simpli deleg direct model reaction gui event signal mayb someth wrong
mvc control break singl respons principl singl respons principl state class one reason chang mvc pattern control job mediat view model offer interfac view report action made user gui e g allow view call control specif button press abl call appropri method model order manipul data invok oper e g model someth mean control need know gui order offer view suitabl interfac report user action also need know logic model order abl invok appropri method model mean two reason chang chang gui chang buis logic gui chang e g new button ad control might need add new method allow view report user press button busi logic model chang control might chang order invok correct method model therefor control two possibl reason chang break srp
use differ db connect differ user group web framework databas design build enterpris system usual assign differ set privileg differ user dbms granular need howev experi web framework usual use singl connect dbms privileg assign enforc framework level sort access control scheme databas connect use framework full privileg databas may need creat delet tabl extens instal remov exampl sometim vulner extens framework may allow sql inject attack extens often develop third parti framework develop question efficaci provid multipl db connect vari privileg differ user group web framework secur measur exampl connect system administr may allow creat delet tabl connect public user may allow read certain tabl would replac access control scheme framework ad measur sql inject good idea complet unnecessari pleas explain
implement use case control object os mvc mvc architectur pattern e g os control per view uml concept control object per use case encapsul use case may span one view sometim view support multipl use case case would nice multipl use case control object creat separ control object apart os control encapsul use case idea implement use case control object os mvc realli interest concept control object use case rather per use case fragment view
domain servic vs factori vs aggreg root deal ddd month still confus general purpos domain servic factori aggreg root relat e g overlap respons exampl need creat complex domain entiti saga process manag follow certain domain event need handl elsewher wherea entiti clear aggreg root mark bound context entiti factori respons creation entiti aggreg root servic creat entiti sinc also throw domain event servic act aggreg root creat subent entiti id aggreg root creat manag subent introduc concept aggreg root well factori domain servic seem longer need howev servic handl everyth need well knowledg depend code exampl base ubiquit languag car repair shop
put bind depend inject new depend inject though realli like far sure bind go use guic java say might specif guic see two option accompani class need write instal class modul class whatev modul want abl use said class see advantag class want use manag class want use need know implement detail issu see two class want use two differ version class lot custom possibl di seem restrict lot implement modul class need flip said custom encapsul third option misunderstand someth obvious best practic
data model know store class repres part data deseri xml also behavior want suffer anem domain model domain object xml specif code properti correspond exact tag attribut xml mani class behavior reli resourc load disk like imag properti xml attribut relat file path resourc problem begin absolut path construct resourc base separ depend root project struggl domain object store full absolut path resourc relat path held absolut path class load xml reader take depend project root order build full path make yet anoth layer class handl alreadi layer know handl domain object store path disk make sens know depend relat know locat feel wrong intuit sort unrel part question think go wrong way could bite later
control model interact fair new mvc tri get better understand endless inform theori general respons part mvc app read good deal find constant second guess implement current applic setup model provid number method effect crud work applic data method like add document name path updat account id code name status point work feel clunki effect decid whether want write method updat everi properti model object whether want one method handl updat properti given object method interact model object sql alchemi python db toolkit orm late consid possibl pass orm object back forth model control control would chang properti pass object back model would handl session commit error condit seem much easier write ton crud method also seem break divis respons allow control touch orm object hope get guidanc whole ton crud oper normal mvc app accept pass orm object model control control ever updat properti model handl session databas work also open altern idea separ respons eleg way
javascript mvc applic design canva difficulti grasp structur architect canva applic use mvc like approach javascript ui fair fluid anim game fair simplist heavi emphasi tween anim get mvc work principl practic googl buggeri read aw lot confus start detail applic area multi screen game framework multipl game sit within framework common ui screen includ set info choos difficulti main menu etc multipl input method common ui element top menu bar screen possibl use differ render method canva dom web gl moment app model app control app view plan add screen attach app view thing like top menu bar anoth mvc triad would attach without tight coupl compon accept practic one mvc triad within anoth e add screen app view triad even accept mvc term mind melt option feel like miss someth fundament got solut alreadi run without use mvc approach end tight coupl soup logic view current combin idea open allow easier chang view e g swap canva view dom base view current librari use requir js creat js underscor gsap hand roll mvc implement pointer exampl etc particular regard actual design thing split screen proper v c would appreci appropri method mvc nb seen question ask incorrect stackexchang communiti brain stop function
mvc control seem useless half time problem often design program mvc control useless half time mean someth happen view e g button click view notifi control control direct deleg model noth els noth exampl user press button color blue view tell control control color blue control tell model model color blue model color someth blue exampl control seem useless add noth view might well talk straight model half time howev control kind mediat view model question common mvc structur reason half time control seem unnecessari problem common approach question clear enough pleas say
extend constructor inject suppos class simpl depend use constructor inject code get ship develop use point futur need add second depend ib add depend ib option disapprov add constructor brake chang inherit decor pattern extra class code bloat new class boilerpl code pass around ia guarante develop switch use new class use servic locat popul new ib field use two differ type inject extra confus seem constructor inject easili extens
mvc store interchang algorithm use model whose name also need access view pleas consid program user choos algorithm list strategi pattern util set algorithm model oper exampl imag process applic number algorithm use manipul imag darken brighten contrast etc encapsul object control set model use algorithm list algorithm also need present name ui work user select algorithm list gui control notifi set suitabl algorithm model later model call model oper deleg oper current algorithm classic strategi pattern also view need access name algorithm order allow user choos one list question store algorithm somewher control fetch need set algorithm model control instanti new algorithm whenev need set algorithm model answer good store algorithm somewher model make sens model encapsul busi logic data app view fetch name algorithm control make sens control one set algorithm model also offer view method get algorithm name technic hold busi logic object algorithm differ class anyon interest fetch algorithm name sure lot applic user select oper appropri algorithm set model applic
use data shape ui view model keep concern separ come winform background tri get ahold mvvm xaml right wonder take advantag data shape control either nativ provid third parti maintain separ concern intact exampl typic third parti grid come data group sort filter function want end user abl use featur get custom set data perform action action expos view model cours know record collect absolut clue current display ui given view model know data action perform without know control display right way think expos addit properti view model someth like current ui data handl everi singl data shape event within view properti alway repres ui state howev feel kind wrong proceed miss someth
exact use mvc design pattern read document appl develop websit refer follow guidelin view class depend model class although may unavoid custom view view class depend mediat control class model class depend anyth model class mediat control class depend model class although like view may necessari custom control class mediat control class depend view class coordin control class coordin control class depend class mvc role type consid scenario view control class call employe view control minor compon programmat creat creat xib exact creat subview insid employe view control class ad employe view control view e g self view add sub view better option creat seper ui view subclass consist compon initi add employe view control exact correct way implement mvc suppos creat separ compon view control stack subview insid employe view control
present domain model except thrown valid domain model web applic entiti foo creat pojo foo bean foo new instanc foo bean foo bean might better builder pattern factori method new instanc pojo foo bean valid throw null pointer except illeg argument except need field pojo fill form present layer form valid user input show user friend messag need except messag null pointer except illeg argument except thrown new instanc method rather technic display end user proper way show user friend error messag origin null pointer except illeg argument except
use constructor one inject depend one instanti start use tdd first time project start recent object depend structur look someth like test use mock object depend implement sometim let constructor new concret object feel like cheat sure bad practic consid bad practic
use custom valu object guid entiti identifi distribut system tl dr told domain driven design identifi entiti could custom valu object e someth guid string int etc realli advis distribut system long version invent situat analog one current face say distribut system central concept egg system allow order egg see spend report inventori centric data quantiti hand usag valuat area varieti servic back behavior say also anoth app allow compos recip link particular egg type egg type broken speci mdash ostrich goos duck chicken quail fine dandi mean user end ostrich egg want quail egg whatnot howev get complaint jumbo chicken egg even close equival small one price differ realli substitut recip thought user favor overwhelm mani option current servic say order submitt egg type defin spend report generat inventori tracker recip creator recip tracker whatev identifi egg type industri standard integ represent speci let call speci code realiz goof chang could effect everi servic two basic propos solut use predefin identifi type like guid egg type id throughout servic make egg type defin servic know map speci code egg size code potenti organ flag futur whatev use egg type id valu object combin speci code egg size code everi servic propos first solut hope better encapsul definit egg type egg type defin resili chang say peopl want differenti egg whether organ second solut suggest peopl understand ddd better hope less enrich lookup necessari way justif ddd use valu object id fine also say egg type defin domain egg type entiti guid id howev sure second solut viabl valu object go serial json ur ls get request use varieti technolog c java script break encapsul thus remov behavior identifi valu object either field option etc case want avoid someth would normal fine ddd tri ddd distribut fashion summari good idea use custom valu object identifi distribut system solut
decor pattern actual use practic understand complet implement decor pattern also understand intent decor use one two case altern subclass multipl characterist object one could use inherit order creat subclass possibl combin exampl three characterist b c result lot class b c abc ab ac bc result class explos decor one would three decor b c class decor way expand object function runtim decid decor wrap object runtim thus custom object dynam show understand decor also total understand implement question familiar theoret exampl use decor see know intent still sure actual use practic actual applic tell use altern subclass use dynam add function object help sinc familiar intent also tell think ui window exampl border resiz help alreadi familiar theoret exampl ask concret real world exampl decor practic real world scenario brief explan benefit use decor pattern techniqu clarifi look list applic decor util look exampl decor use design good design choic concret problem solv see concret problem solv decor hope understand better
use simpl static factori vs instanti direct new thing vs factori creat thing benefit two way instanti object option option factori static factori could also simpl factori option said better use factori decoupl client code concret implement class instanti howev differ actual make use new thing factori creat thing differ two option instanti code move differ place explain know academ explan use factori better actual see practic benefit case client know exact want thing differ exact line code new thing factori creat thing sophist factori see benefit exampl use abstract factori pattern could creat differ factori subclass instanti differ concret implement thing inject suitabl factori client runtim without client worri concret implement receiv blue thing factori instanti blue thing red thing factori instanti red thing client care receiv thing sophist factori unabl see benefit use simpl factori exampl describ move new thing differ place understand benefit pleas explain actual benefit use simpl factori
mvc best practic handl date insid outsid usa mvc applic use world wide number page app requir user enter date use j queri datetimepick plug allow user select date enter manual curious best practic cultur date enter dd mm yyyi format instead mm dd yyyi could requir date enter mm dd yyyi format format app expect also want caus much angst user part world
appli ddd simpl app configur twist use light weight php fat free framework base form simpl mvc base app ddd philosophi model layer awar ddd suitabl enterpris solut appli ddd simpl most data driven app kind overkil concept ddd find appeal like repositori pattern busi logic entiti etc like appli app fat free faramework base class repres applic singleton instanc base hold lot use tool method registri global framework variabl hive use among thing configur data write app find use lot base class tool insid class model layer bit confus refer base instanc class simpli call base instanc insid model class inject constructor depend depend inject seem like proper way sinc app depend whole refer pass constructor seem unnecessari also pass exampl databas config data data persist class store hive pass control instanti repositori call direct repositori data mapper look way fire back look insight advic second part problem tri write app entiti busi logic relat configur entiti class idea inspir sail js still test exampl method get properti return array user defin configur data entiti properti e g associ might look bit controversi test busi logic function far work ok client code communic entiti via usual get set method idea behind configur abl automat generat scaffold administr interfac entiti configur data mapper repositori base relat entiti get properti method bug want one place configur data exist place non busi domain logic entiti except databas tabl name whether field requir rich text editor whether checkbox check default certain field use entiti print ident admin web interfac etc realis problem tradeoff clean model singl place configur idea probabl pollut entiti store non busi domain data entit thought perhap someon might idea approach differ better way thank read
good style store view data insid model use variant mvc pattern gui code often need aris synchron view data e g select item differ view exampl let imagin vector draw program two view imag listview object rectangl squar current select item remain sync click rectangl listview rectangl highlight imag view way usual view state class contain model good idea would better solut
better return data servic status except mvvm app data servic use mvvmlight right use like curious invent except ps wrote code typo possibl general idea clear
possibl busi logic creep view develop sever web applic project last year person work seem figur whether possibl least busi logic end view layer applic case problem like user select option x applic must enabl suppli info suppli info z ajax oper appli chang model commit user explicit request simplest problem encount figur possibl avoid complex logic view book read describ mvc usual showcas trivial exampl like crud oper updat data server display crud case rich applic possibl achiev view busi logic
mvc pattern synchronis face problem synchron model view thread view tabl user select row updat view soon user click row sinc want ui slow updat done logic run control thread time control updat model data take place differ thread e control put queri queue execut model thread singl thread interfac soon queri execut control get signal order keep view model synchron updat view base return valu queri data return model even though updat view alreadi user action face issu take lot time model return result time user would perform multipl click result updat view base inform model view sometim goe back state previous click made suppos user click thrice differ row updat view soon click happen also updat view get data back model suppos alreadi updat state view user click third time get data first click model result view goe back state generat first click way handl synchron issu
mvc mvc use lot web app seem go approach design softwar also lot mvc version question mvc peopl structur larg softwar system obvious separ concern invent mvc even call assum type think crucial build maintain softwar present long ago technic term softwar structur mvc
search function fit ddd cqrs vaughn vernon book implement domain driven design accompani sampl applic found implement cqrs approach iddd collabor bound context present follow class applic servic layer calendar applic servic java calendar entri applic servic java calendar entri queri servic java calendar queri servic java interest know applic search page featur numer drop down check box smart text box match differ search pattern structur search logic command servic queri servic take look calendar queri servic java see method huge queri logic mix match search filter exampl heard applic layer busi logic construct dynam queri mayb clutter everyth queri servic
handl pass multipl depend modul hierarchi applic consist number modul modul hierarchi furthermor let also assum modul class tree class class top use class make simpl class a1 bottom may depend input paramet class b1 class a1 creat use instanc class a1 therefor pass depend need instanc class a1 creat depend oper class b1 depend addit depend class a1 higher go depend add toplevel class need know depend unless creat lower level mean class a1 program depend current temperatur pass toplevel class pass next class arriv bottom class a1 make state explicit also mean method class take mani paramet variabl temperatur may chang applic run way avoid pass way class tree without give away explicit state would guy handl constant temperatur constant never chang program run give us option avoid pass alway argument could see someon use global configur singleton make harder test right could also pass temperatur configur object would mean class b1 receiv exampl temperatur airpressur paramet get configur object pass class b1 class b2 class b1 need airpressur class b2 need temperatur good approach pros con
best way find whether collect contain element specif desir qualiti seem common thing tell whether list set contain least one object match given condit yet prior search read never found satisfactori best practic design pattern speak situat think mere use contain suffici test want perform strict base equal method class question thing seen get job done quit soon success found possibl save time lucki enough desir item earli list howev requir loop entir list order get fals result anoth techniqu seen circumst time origin list lt foo gt generat e retriev databas simultan generat map lt foo key foo gt techniqu foo key addit often inner class hold attribut foo form desir qualiti overrid equal hash code method base need determin exist desir foo make new foo key instanc exact want call key map extra effort front quick easi moment need put finger idea work yet feel littl hacki ineffici
mvvm master detail interact scenario implement master vm partial data detail pull whole entiti primarili work net wpf mvvm applic use sever framework mvvm light prism etc abl break implement crud mvvm three scenario scenario web servic return page collect small object navig properti whirl wrap detail vm need logic place list collect view detail vm implement edit object everi crud oper want done list collect view keep list view ui sync current crud oper say user add item immedi ad list collect view reflect ui cancel edit remov save ad item stay list persist server done two simpl view model data templat thank edit object list collect view amp complex initi call web servic return list refer dto contain simpl properti like name amp id scenario master view model call web servic load quick model item select second call made web servic retriev actual object object graph map messag pub sub separ detail view model scenario master view model detail view model properti coupl view model togeth seem alright realli work without manag list becom easier thing spot messag still hard achiev simpl list collect view without messag view model summari scenario easi implement work well requir minim code scenario amp harder implement becom somewhat less clear crud oper keep item refer list sync harder updat inform list edit success complet save back web servic current keep crud oper one view model creat base view model page data inherit crud view model base add command add edit remov amp cancel far work well
mvc design pattern overload control respons develop desktop applic gui use mvc design pattern gui part applic consist singl window view one control interact backend model interact becom complex day day control get method handl input ad depend model object sinc best practic keep class method small feel like deleg task right clean way regard depend model use facad object feel like get overload
proper handl condit depend factori let say string action run time specifi type object need creat dbobject memcacheobject fileobject xmlobject etc assum also creation object non trivial factori requir obvious differ object type depend differ thing one pdo anoth memcach creat object condit left option creat switch action outsid factori order call differ subclass factori call type object exampl case db obj new db factori dbh break clear bad sinc switch present everywher object need switch action insid sort factori factori code parent factori depend everyth might creat sinc might need databas memcach order follow depend inject rule need suppli parent factori pdo memcach instanc even use also sound pretti bad anoth problem creat anoth object type depend someth new add depend code thees factori instanti horizont chang fact avoid tell concept problem see right therefor question tri point even fileobject need depend anyth code pars action still need depend overkil instantiac di need reach global state use singleton registri also consid bad practic would good practic situat
consid implement templat method design pattern pleas consid string bank class class hold list string return client code irrelev stuff omit see string valid abstract method meant implement subclass way subclass serv filter string bank filter invalid string e g particular subclass may return fals string end question consid implement templat method design pattern purpos templat method defin step algorithm abstract superclass subclass defin implement step usual templat method algorithm defin would look someth like howev string bank algorithm simpl involv one method call string valid rest step algorithm defin method loop string remov string return get string realli look like templat method sure consid templat method pattern implement algorithm could describ string check valid implement subclass invalid remov list return list string would defin implement describ implement templat method design pattern even though get string feel like classic templat method
handl domain logic span multipl model object orm know busi logic place model use orm clear place code handl multipl object e g let say custom model type either sporti posh want custom add bonus everi posh custom would creat new class handl yes put alongsid model class subclass orm current use django framework python specif suggest even want
design social network cqrs graph databas relat databas mind done quit amount research topic far come conclus make mind design social network research stumbl upon graph databas found neo4j pretti interest user relat travers node also thought use relat databas ms sql sql store entiti data depend neo4j connect entiti cours mean work applic store pull data differ sourc first question use approach graph relat good approach design social network keep mind user social network synch real data split second posit negat approach second question read cqrs understood most use collabor environ environ user see lot stale data social network share comment event etc mani user queri updat data could cqrs help approach would give perform scalabl benefit non use complex fair applic possibl choic graph relat databas approach mention question purpos know approach mention seem good enough busi context
unit test model mvc mvr app build node js web app tri first time test driven fashion use nodeunit test find allow write test quick painless particular app heavi lift primarili involv translat sql data complex javascript object serv front end via json likewis app also spend great deal code valid translat complex multidimension javascript object receiv front end sql row henc use fat model design app real code resid model data translat happen best approach test model unit test mean particular method creat javascript object sql row serv front end right make particular request model unit test check return data field howev suspicion robust kind test could current test design also mean packag app code dummi data test anticip kind data app return test run updat question specif question make sens inject test layer model databas would better let model work real databas pre defin test data insert second option imagin probabl result accur test first model seem versatil term granular make test develop portabl db requir
mvc communic pattern kind follow question want post separ kind differ topic work multiplay cardgam android platform split project mvc fit need pretti good current stuck figur good way communic differ part everyth setup work control big state machin call gameloop call getter method gui android network part get input input gui network set inputlisten set local variabl read getter method far good work problem control check everi input separ want add input check state valid call getter method state good let code look pretti ugli make addit uncomfort add redund got question mention kind command event pattern fit need want creat share threadsaf queue control instead call getter method check queue new input proceed side gui network getter instead creat event command send control exampl observ observ problem figur way command event fit common interfac queue store still transport differ kind data button click card play player id command come synchron data etc design communic command pattern stick inform need execut command creat imposs gui network knowledg thing control need execut stuff need done exampl card play thought get stuff command execut differ command would need inform control thus give command refer control would make everyth public real bad design guess could tri kind event pattern transport data event like command would interfac event common store share queue could creat big enum differ event possibl save one enum actual event build big switch case event proceed differ stuff differ event problem differ data event need common interfac store event queue get specif data access event interfac even problem creat anoth big switch case look ugli want add new event creat event case enum method call data could cours check event enum cast type call event type specif method give data need look like bad design
benefit use decor factori decor object project decid implement decor pattern class thing method class abstract decor inherit thing decor inherit concret decorator1 concret decorator2 etc cours overrid method add function deleg wrap thing usual decor implement decid implement wrap factori lack better name receiv thing object wrap specifi decor decor requir paramet constructor wrap factori take care actual know benefit oppos client instanti decor direct benefit pleas explain
design consol applic good seper ui logic consid overkil consol applic design like mvc mvp n tier architectur common link simpl exampl want implement tic tac toe game consol applic solut hold two project tic tac toe busi logic class librari project tic tac toe consol applic consol applic project repres view logic tic tac toe consol applic program cs class hold main entri point public static void main face problem want game handl game flow creat new game manag class bl caus view direct know bl part littl confus write accept way use deleg pleas show simpl exampl
use strategi pattern violat fundament mvc pattern os use strategi pattern os app feel like approach violat somehow fundament mvc pattern app display visual stori stori consist e properti one photo one visual event object repres e g anim circl move arrow photo visual event object therefor event type properti might e g k event type circl k event type arrow event thing common like start time properti differ way drawn stori player view current tri follow mvc pattern stori player object control know model object like stori kind visual event view object stori player view chose right draw code differ visual event type stori player use switch statement switch statement type check bad design accord uncl bob lead tight coupl almost alway replac polymorph read strategi pattern head first design pattern felt great way get rid switch statement chang design like special visual event type subclass abstract visual event class show stori player view method everi concret subclass implement concret special version draw behavior method stori player simpli call method type event result seem great got rid switch statement ever add new type visual event futur simpli creat new subclass visual event chang anyth stori player caus approach violat mvc pattern sinc model know depend view control talk model model talk view call method stori player view like draw circl point color line width radius kind call control code model code right seem like made thing wors confus complet miss point strategi pattern better way get rid switch statement without break model view separ
rest servic cqrs struggl architectur new project use follow pattern technolog cqrs anyth go goe command rest use web api mvc asp net mvc angular build spa nhibern beliv provid great separ help keep complex domain grow giant set servic mix queri busi logic rest servic becom non rest put method rest search date search item etc servic method execut command call web model class new command built servic execut feel like lot extra code expect much differ around keep thing track final question would like see put person creat person command realiz rest either put person entiti command make cqrs rest servic work togeth go wrong handl servic method fit rest model perform crud object rather execut busi logic e want ui respons shipment unship want servic layer worri
infinit loop singleton type issu name ran unusu error work project better learn rememb like know type error name definit error memori error unusu talk lead error simplifi situat class singleton superclass class class class b use singleton constructor happen follow class b instanti somewher constructor invok call singleton get instanc singleton get instanc see instanc null execut instanc new singleton constructor singleton run empti implicit call superclass class constructor superclass singleton instanti class b object new class b class b constructor invok call singleton get instanc sinc instanti instanc singleton never reach finish instanc null still return true cycl never end result infinit loop final result memori error question kind infinit loop singleton error common issu idea avoid futur
use orm mvc want use orm mvc system correct use orm object replac model encapsul orm insid model use orm outsid model use orm access db use one instanc store one record data better practis pleas give exampl
best practic method includ imag data grid use mvvm wpf data grid data grid show file readi compil also show progress compil compil file format data grid problem imag column amp represent resourc dictionari contain hundr vector imag canva object want abl includ imag column chang run time go attempt set properti view model type imag bind view via view model appropri properti told pure mvvm fulli accept want know better way say bind enum use convert get imag advic would appreci
dependeci inject increas coupl wikipedia page depend inject disadvantag section tell us depend inject increas coupl requir user subsystem provid need subsystem link articl depend inject depend inject make class use interfac instead concret implement result decreas coupl miss depend inject increas coupl class
best way expos model object view model wpf mvvm applic expos model object view model creat instanc model class caus depend view model instead creat separ vm properti wrap model properti insid view model properti model entiti framework generat proxi class view model servic class expos model object view model creat instanc use new keyword also instanti data servic class vm know caus strong depend best way expos model object view model best way use data servic vm
entiti ddd use cqrs akka use akka cqrs style still place entiti everyth go aggreg implement actor valu object notic entiti written mutabl object side effect seem jive well actor base style
handl permiss mvp applic window form payrol applic employ mvp pattern small scale client plane user permiss handl follow permiss base basic implement less complic straight forward note system could simultan use user maximum databas server side user model user list permiss given user login system keep current user memori exampl bank account detail enter view control control permiss follow purpos relev present like bank account detail present awar user model well addit correspond busi model present view handl user permiss present iter list perform present view promis way
dal except handl mvp applic mvp win form applic handl except follow dal sinc user messag respons dal want move present class could show standard way edit2 base answer edit post except handl code look like dal bank account present caught except dal even moment log error may futur also way differenti error massag dal whether sql relat general use messag servic present show error messag mean full simplifi
mvc data bind use mvc read mvvm sort data bind pure markup view data bind back backend via data attribut look knockout look pretti low level feel like make librari much easier use basic need call javascript function data bind entir page data attribut assign html element benefit see view decoupl back end given view never chang back end chang ie asp net peopl razor view make view specif ms question would know knockout other provid data bind function mvc type applic want recreat someth may alreadi exist want make someth better easier use knockout give exampl mean code one would need get data bind librari final show idea call javascript function set data attribut valu everyth tie togeth worth see
except handl w form applic handl except exampl method present logic ok catch possibl except one catch block follow purpos alert user els alway catch everi possibl except like memori except null refer except etc follow general except separ catch block sinc inform e messag relev averag user could like standard way note sole purpos alert user tri keep system crash
use statement lambda except handl follow code snippet mvp win form applic explan would help answer question dal handl except propag call method present class except handl use singl handler call execut action action action catch except one place rather repeat code everi method moment log error alert user action tri keep system aliv possibl show messag user present use static class call messag servic show error messag custom massag box one place includ general except handler abl handl unforeseen except also could show better way handl show messag use static use lambda statement everi method call execut action gt degrad code readabl show user messag show custom messag like check server connect etc first user want inform like stack trace technic detail could press button like info messag box dialog
present access valu text box use sender object follow method present valid user input ui basic captur valu text properti text box use sender object pass event fire form present view lead unexpect error pleas let know better way
depend inject framework pose depend risk refactor exist system use depend inject work go smooth notic larg number hous librari becam depend upon di framework use result entir project depend upon third parti framework saw ironi decoupl depend make depend upon share librari first reaction creat wrapper librari around depend framework therefor could replac framework need estim work involv realiz result api would similar exist framework therefor make replac difficult abandon idea concern di framework use becom obsolet need replac exist develop pattern work di reduc coupl project di framework
complex di framework add current upvot answer recent question state di contain enterpris softwar pattern use object graph larg complex suspect applic requir someth strong disagre mayb got terminolog wrong di framework mean someth wire object togeth miss someth use guic even realli tini project like class order simplifi sure k b jar file care small project hard ever need configur overhead ad inject annot realli wonder ad complex di framework caus updat address answer class project inject annot singleton provid annot provid need also without di factori modul contain singl line line xml sure small project exact point addit work word rather line use sole constructor inject order get immut easygo object whenev new depend appear add final field let lombok requir arg constructor take care declar let guic take care call proper
show view anoth view mvp question regard mvp triad let say two triad first one view1 mode1 presenter1 second triad view2 model2 presenter2 tri want display view2 click button view1 show view1 call present show method click btn show view2 button view1 display view2 call presenter2 show view1
technic exampl model domain ood consid favor composit inherit look various design pattern multipl approach model domain say entiti similar respect yet differ wide come technic implement tri portray scenario classic car exampl user perspect pretti much vehicl ddd perspect car truck van share certain common state number tire engin certain behavior steer chang speed howev also various state behavior uniqu truck bed van intern storag car seat time progress fair amount chang valid would differ certain thing similar other chang speed steer etc similar yet pull trailer option even differ e g van truck would design cope chang yet remain dri adher ddd mindset pleas explain would go pseudo code mention design pattern strategi would tri implement model simpl yet dynam domain oo principl appli etc
altern foreach iter involv ref tri make flexibl particl system xna game got interfac idea behind system client code need deriv particl make compat subclass particl emitt particl render everyth els automag work behind scene actual middl write everyth moment latter two would abstract base class avail anyway particl system like use mutabl struct optim purpos perfect reason system provid skeleton client decid hey struct way go system support whatev client code throw particl effect appli method take particl ref cheaper pass struct refer copi unfortun break collect involv foreach iter play nice object pass ref eric lippert explain design decis make complet disregard struct chang constraint class particl potenti hurt futur optim make much easier work collect chang anyth use collect lt gt enumer lt gt list lt gt manual poll via index make potenti power cost use deeper interfac list store object someth els hope question depend curious strategi appli make work way want edit realiz could also includ local variabl howev p would still net effect copi also ideal
rail join model get control rail app user buddi user sinc relationship status approv reject pend decid go join model user relationship attribut handl state join model control user relationship control action res tful endpoint chang state relationship bad practic handl state chang relationship user model
put format valid cqrs stylish domain model feel right put format valid insid domain object v os entiti natur place high cohes domain know best everi domain descript attribut properti mean mani ddd practition book author vaugh vernon dan bergh even eric evan suggest differ aspect author model domain reflect matter suggest design domain model way reflect enforc proper state busi agre format valid ie address properti email address vo max char match regex implement insid domain object valid check work best domain model use state chang state queri cqrs command side domain model littl knowledg read side one reimplement input format check queri side applic cqrs common respons command queri side like input format valid usual format valid implement ddd practition suggest duplic one deal w make domain model command side anem w make unawar state attribut hold exampl might featur would let confer owner schedul confer chang number avail seat confer room big enough maximum allow number seat would busi rule would confer owner cannot add seat schedul confer also minimum seat need confer valid state method would confer ar queri side might ui page find schedul confer certain number avail seat server queri side applic must format valid check queri schedul confer number seat avail number rang queri might need someon want reserv certain number seat confer also confer might topic one could see confer topic mani time choos one cheaper seat avail one reimplement format valid queri command side anoth solut p mani format valid duplic command queri side like email format valid currenc format valid currenc usd cad aud etc p p anoth question pop queri side applic requir input format valid input valid format return noth queri found data relat request see format valid queri side pure secur measur ie buffer overflow input format valid realli requir queri side
use guic replac code depend servic locat implement consid servic call file system file system use various class throughout applic typic servic acquir via static class method servic locat get servic file system class consid class game depend file system object open ui resourc game also construct world use world factori world factori also requir file system servic encount problem construct new instanc world factori requir instanc file system inject howev guic inject object construct world factori left without file system inject could pass file system object world factori essenc guic solv problem come realiz use guic correct without get odd instanc constructor game entiti requir pass instanc audio system play audio get messi object servic explicit pass around thank still new guic tri figur use
mvc best practic view acquir data direct model yii framework use yii year right realiz demo applic empow crud auto generat tool gii seem break key mvc architectur pattern like discuss long use mvc four year alway told view acquir data direct model everi piec text mvc read far alway underlin view model complet separ control element spin togeth need model data view often use mechan let control retriev feed view correct wrong find question answer make sure right technic possibl avoid term yii would quit obvious think control retriev data model render view feed model right explain widget place view acquir data direct model miss
web applic combin view layer php javascript ajax develop web applic use php code ignit mvc framework huge real time client side function need first time build larg scale client side app combin php larg scale javascript modul one project alreadi know mvc framework seper applic modul model view control concern view layer could display data dom php built script tag load data control otherwis could use ajax pull data treat control like servic display javascript visual could put data direct control pull use ajax approach better regard applic complex client side function hand php ci default mechan put data direct control use ajax
consid choos framework develop team finish web develop cours friend work mani project aim begin profession team develop function well defin programm analyst design team get much larger number six member quicken develop keep develop work overlap other mvc framework consid group front end develop mind one chosen sinc base around web standard programm consid option sinc question get realli verbos summar would like experi develop opinion consid choos web framework small project perform killer factor would still reason remov rubi python system competit abl work one program languag one framework given languag someth import learn one framework done group develop gather opinion
pass central object around global instanc larger win form applic sever class current pass refer sever central object around function call lead method paramet exampl ask whether ditch approach instead use singleton central object everyon alway access object need pass around anymor exampl question rule thumb whether singleton approach pass object around approach prefer
ok start templat mvc develop new web develop start work project compani use django feel flexibl start develop straight first templat think easier visual thing first question okay start templat rather start model first stumbl sort confus go method develop
view call function view call helper function say pass data db view data unix timestamp make call view convert human readabl ts convert control pass make method model convert look best practic secur code concern answer
dto servic layer stateless best practic interf design rest api coupl servic layer take dt os input produc output work fine servic call dto use access under librari embed olap server work one servic howev someth seem wrong servic respons creat manipul option store object repres report think excel report under librari expos report resourc sinc report repres server side resourc unless persist persist implement concept librari servic need take report object hold inform necessari construct report scratch stateless decid report servic method take report dto manipul return modifi version would includ oper swap row column axe sort axi filter axi think sinc inform avail report dto necessari perform oper might well perform dto return modifi version rather duplic dto domain object say server interfac model inde server side code involv valid report use third parti librari e valid model domain model report dt os save report user choos execut report databas obtain fresh data work done besid manipul dt os work tie domain model need design rather one provid implement aforement oper realiz someth oper busi logic oper dto numer thought okay fine oper servic layer oh wait servic layer coordin domain object contain busi logic busi logic alright make report dto bonafid domain object crap expos domain object servic layer api realli stick dt os input output servic layer chang domain model chang 3rd parti domain model util affect contract servic client fine report report dto exact member report dto alreadi necessari inform manipul report execut valid save due transient report decis made sake res tful api clear counter everi propos solut heck want make report state realli see resourc actual save make state need manag map cach servic deal multipl client tri give report name implement secur ensur user see report etc problem go away stateless approach side effect howev aforement issu go wrong somewher pleas help tackl design issu becom perman part api thank
translat view mvc best practic come view translat mvc design pattern multilingu websit alway one view file translat particular string framework translat function alway mani view websit support direct translat one languag let framework intern load particular languag specif view file languag current select user two option use third one
one implement depend inject geocod client aggreg differ coordin provid implement new di would like know di might use help resolv problem lat long locat implement latitud longitud given two produc distanc use varieti algorithm also reason pick one best algorithm design time without lose sleep howev sinc user rare input physic coordin may need instead compar zip code someth similar order resolv zip code coordin could appli naiv algorithm use string concaten etc rough guess physic coordin could pick random set coordin etc likelihood need resolv zip code use sort databas map zip code coordin new di would like know follow reason applic di overthink locat lat long locat locat provid lt gt locat raw locat return lat long locat zip code locat provid locat provid lt string gt string raw locat return lat long locat naiv zip code locat provid implement use pattern zip code well known provid best effort guess coordin db zip code locat provid implement use databas mayb db context somehow els return coordin db zip code locat provid must depend sort repositori context connect someth access databas unless liter hard code mean need db context someth similar get lost think right way legitim scenario depend inject discrimin say differ connect string vs differ strategi altogeth resolv zip code coordin edit forget web servic zip code locat provid anoth realist option
entir separ busi logic layer mvc current refactor control method asp net mvc applic begin separ data access layer goal remov linq control entir think anoth step creat busi logic layer reduc number line logic control current someth like cours exampl four line code method bigger still imo bad inject helper class io c contain complex logic sit like remov even part worth time creat anoth layer would last gate control final result would think
net observ intend subscrib multipl observ observ observ interfac net also interest concret implement observ hold direct refer observ know subscrib invok unsubscrib pleas pull pin unsubscrib edit unsubscrib implement dispos think scheme employ prevent laps listen problem two thing entir clear though inner unsubscrib class provid subscrib forget behavior exact call dispos dispos unsubscrib garbag collector gc determinist disclaim overal spent time c c c happen want subscrib observ k observ l1 observ alreadi subscrib observ l2 ran test code msdn exampl observ remain subscrib l1 would peculiar real develop potenti avenu improv observ alreadi unsubscrib instanc e alreadi subscrib quiet unsubscrib origin provid subscrib new one approach hide fact longer subscrib origin provid may becom surpris later observ alreadi unsubscrib instanc throw except well behav call code unsubscrib observ explicit observ subscrib multipl provid intrigu option implement observ observ let see possibl observ keep list unsubscrib object one sourc unfortun observ complet provid refer back provid sent observ implement multipl provid would abl determin one unsubscrib net observ intend subscrib multipl observ textbook definit observ pattern requir one observ abl subscrib multipl provid option implement depend
system state design composit consid follow java code imagin want class repres hand state correspond hand control better inject state object level state separ compos one specif state object depend depend clarifi mean implement side respect versus
mvc content manag framework admin panel late develop mvc content manag system use php least mind littl stuck system design believ would appli build content manag system exist mvc framework well go littl difficult explain sorri advanc lengthi dilemma littl intro system current rout look littl like store json rout key default control valu default control router fall next rule done separ front end site admin panel control one directori time although destin chang either return templat popul data respect model simpli modifi request instanti problem problem decid implement separ control concern model front end back end modular way exampl page admin panel allow administr enter privat inform intend access front end usernam password imagin handl info control back end edit privat inform match rout admin info want creat rout front end access privat inform name admin panel info problem make sens context solut consid think solut consid first thought append admin relat control admin admin info control info control interest eventu modular system rout control view css java script need pertain info model would directori structur someth like modul info desir modular mind thought match rout bit like modul control action would impli admin panel modul would need access modul front end use would make sens design thought admin front end two distinguish core concept framework would share modul contain control view ultim look input best approach altern whether total think feel bit like driven crazi pursuit ideal system design keep mvc pattern even right thing system like thank read hope made sens
free memori observ pattern build scientif applic matlab handl sever hundr larg matric larg fit ram matrix contain within dedic object handl metadata properti name data use getter method load data file ram soon need decid unload access object data bundl thus want unload everi time done get data furthermor might need use one two often other think solv within object thought could implement public function clear matrix ram call extern object decid possibl object much right make sens recip disast count observ someth els could use identifi good decis criteria thank
requir paramet function call depend studi depend inject want know requir function paramet consid depend like make sure go around refer depend turn exact accur requir paramet function call depend
mvc busi rule need know mvc appli busi rule imagin situat school need generat calendar class teacher teacher school subject avail certain time need generat calendar way teacher perform without time conflict question part mvc teacher part take mind time data store extern sql databas xml model correct mvc busi rule compil calendar develop like control librari data could work direct model perhap specif model work model bit vision pleas correct wrong data teacher handl model could exampl get time avail school subject teacher model compil calendar could done control librari question control relat rout librari api
cross cut domain ddd recent start studi domain driven design far look like help tremend team current project run bit problem though actual determin domain project init pass end someth like three domain b c differ area busi howev need track current data well creat plan futur led add plan domain see clear way separ plan domain either b c need detail knowledg plan vice versa exampl let say domain inventori implement messag thing like item ad item remov track quantiti various product want allow plan futur quantiti item need add class model allow associ futur product info various time window kind feel like new domain except plan time window logic also appli domain b c essentiali cross cut domain feel like must look wrong way mayb actual domain librari use
develop page mvc websit specif use ifram anoth websit websit go partner anoth websit want view one specif page mine word press websit develop look first glanc appear though word press frame plugin easiest rout next thought probabl still want show header footer page show content page frame big deal think develop view mvc websit use frame purpos sinc probabl want header probabl design page use layout custom header footer show inform come websit question page display contain mani anchor tag embed frame happen user websit click link frame frame page chang entir page chang depend answer disabl hyperlink anchor tag frame page site caus funky site want hyperlink frame page come visit websit matter tell put real link site secur concern allow page access via frame anoth site allow traffic frame page site site direct real page thank
choos view control code awar lot topic mvc design hard find good explan consequ differ possibl work asp net mvc applic html javascript front end current view allow end user edit object like other user form automat generat base meta data object rather complex mani system properti need edit non expert user want spend much time view decid hide input field except simpl one like first name last name phone question filter done control view ignor complex input field view return need field control also control return data model without post process done view could control order save ajax call littl bandwith know adapt control view view control
make asp net mvc n tier current build small websit around view control know mvc design pattern top present layer current stage develop start question feel like small websit need n tier architectur small long run mayb worth worth time migrat n tier level abstract migrat n tier magic point project grow larg done direct begin develop
refer composit mvp compon learn mvp model view present passiv view flavour mvc intend expos event view interfac rather use observ pattern remov explicit coupl present context window form client side java script led believ mvp inde mvc general pattern appli various level user interfac rang main window embed text field instanc model text field probabl string wherea model window contain applic specif view state like person name resid within contain text field given complex scenario document viewer contain toc navig pane document view search pane sinc user interfac item complex reus elsewher make sens design use mvp given user interfac item compris compon compon nest instanti idea emb view insid view parent view idea emb present insid view parent view idea emb view insid view parent present better idea
domain object wrap contain dto interfac use net interfac person interfac implement class multipl separ repositori e g ef6 ef person custom sql sql person even custom assembl connect web servic web person assum rich domain model idea love rich domain object person could privat member variabl person dto type person suppli via constructor member person would way access data person dto q anyth actual inher wrong approach assum lazi load possibl servic layer cross cut stuff pleas note use dto simpli mean anaem object get back repositori
someon help understand mvc read articl mvc pattern tri understand exact till get plain diagram show modul model view control say help increas code reus dri think opposit current separ applic code differ directori one view part present html css js client side req one core relat function found disadvantag approach yet mayb develop big applic yet small hobbi one apart separ find mvc sort url rewrit think achiev necessari someth miss must reason develop inclin toward mvc pattern
proper program design submit form stuck wonder best solut problem develop form like gui quit place input current store ui element array list repres modular compon form seper layout contain ui element relev one anoth pass array list new class handl gather data enter user submit button click feel though method pass ui element array list good practic anyon better suggest would love hear feel method somewhat unclean
mvc view sidebar php load model rout activ control return page view let call master page rout control view master page master page divid header sidebar bodi footer sidebar load page master page view file howev sidebar receiv data user would obtain model theori model could call control call view howev view master page sidebar view master page view sidebar thought possibl follow idea know whether right wrong perhap anoth way could imagin control load data model appli sidebar turn appli master page problem deeper case would extrem labori difficult understand control run model send master page would respons load view sidebar pass inform model case work would pass inform layer far necessari take inform control load view master page load sidebar respons execut model insid view problem view theoret run model print inform alreadi process control would appropri way make process run correct
improp applic wide sourc dropdown bind wpf combobox need bind collect item sourc someth bind select item valu includ collect select valu properti bind view model respons given view host combobox late review implement mvvm past project notic thing happi one multipl view need combo box associ view model copi collect think would better expos collect applic level provid properti bind select valu pertin view model way see work singleton view model kept aliv entir lifetim applic view model would standard collect specif individu view model use entiti framework would context select item properti would bind foreign key entiti instead navig properti sinc various view model share context could encapsul various collect within resourc dictionari set static resourc use bind item sourc various combo box throughout applic question crazi stupid taught wpf mvvm number sourc never sure stray general accept practic thought behind one sourc would allow multipl viewmodel sync set drop collect chang collect one spot rest would show chang bound one sourc need mediat maintain consist view model addit would provid simpl central bindabl singleton class store applic scope variabl current log user obvious flaw might miss past implement mvvm pattern without extern valid work grow pain sure could benefit great peer review
encapsul multipl properti singl class use custom depend properti applic wpf project implement c net use mvvm architectur code behind view order elimin coupl view view model implement wpf specif behaviour custom depend properti bound simpl properti expos view model view assembl sever depend properti bound top level window view see obvious reason collect togeth singl control class code sudden look prettier introduc unnecessari coupl properti simpli may bound top level view view model object requir behaviour sacrific reduct coupl requir top level view model object expos cohes control properti view bind singl custom depend properti would better implement multipl singl purpos custom depend properti behaviour complet differ appropach could use provid kind behaviour contain singl control approach multipl properti approach
domain specif interfac real benefit use interfac abstract class domain model anyon experi use interfac domain model real project technic perspect ddd defin stereotyp like aggreg valu repositori etc repositori exampl defin interfac like custom repositori implement infrastructur valid use case interfac sinc multipl implement repositori mock fake etc howev entir technic reason use interfac use separ domain specif repositori technic implement pure domain specif interfac anyon ever encount situat interfac realize non technic particular reason could speak choos interfac abstract class implement domain specif type mayb multipl inherit involv would requir probabl could consid good design
use packag repositori laravel laravel php develop new di packag workbench repositori pattern want know best concept methodolog flexibl design ie project grow becom someth modular exampl watch jeffrey way video laracast decid use pattern app app config app control app databas app view app patrickmaciel psr compos json app patrickmaciel user repositori eloqu model valid etc app patrickmaciel group app patrickmaciel post app patrickmaciel bill app patrickmaciel helper app patrickmaciel filter watch video read flexibl see develop use packag instead psr altern compos json better flexibl
queue job differ state differ servic around need design queue job much ui orient applic run user need thought pick optim approach ground job differ state import sent elswher creat user even simul import record progress follow whola differ workflow etc therefor also pass thru differ state lifecycl like creat run paus valid edit user case invalid job paramet import even process delet least log audit job state point time need manag somehow common logic also domain applic rule one run stop param edit time state etc main question whether implement kind monolith singleton control state answer state guard one cant transit state state call action servic upon whether implement state machin insid job somehow call servic relat condit logic delet edit also need tie tight ui list task state visibl user also separ concern job domain object paramet state ui brief descript main problem might updat requir suggest question forgot address arriv
candid singleton extern thermomet connect via usb control sw differ part system use never time one thread howev singl devic communic establish connect reason think either method get temperatur static could singleton happi suggest thank
meant oop hide state one mani anti oop rant cat v org found passag joe armstrong rais sever object oop model one follow object object privat state state root evil particular function side effect avoid state program languag undesir real world state abound high interest state bank account deposit withdraw money bank expect state bank account correct updat given state exist real world facil program languag provid deal state oop ls say hide state programm state hidden visibl access function convent program languag c pascal say visibl state variabl control scope rule languag pure declar languag say state global state system carri function come function mechan like monad fp ls dc gs logic languag use hide state programm program state matter full access state system necessari hide state programm option chosen oop ls wors possibl choic instead reveal state tri find way minimis nuisanc state hide away exact meant littl low level procedur experi most oop probabl explain unfamiliar modern standpoint object orient hysteria pass least far tell accur relev guy think passag thank help
maintain view relat inform mvvm may store model ongo discuss colleagu manag view model got model may repres mani view let say got data store array like display data tabl chart certain chart uniqu abl duplic chart duplic display data way origin display part e g data big display scroll origin show first item duplic one show last time remov view view view model delet memori model persist even view repres data hand display inform view tell part data display scroll one let stay exampl display inform neither persist store model shut applic restart care view alway set default howev delet view undo like display data exact delet newli creat view technic order adjust view need maintain scroll posit would simpli put display inform model continu exist whole time howev colleagu disagre say model contain persist data like actual data repres henc keep track display inform view model q1 correct design perspect model contain persist data yes would maintain view relat inform said model may repres mani view may duplic let say found way maintain data would collect x display inform q2 creat new view actual replac old view keyword undo determin display inform collect associ view mean even view uniqu id sinc creat new one cannot reli data quit figur could associ inform correct idea rais separ view model view keep view model aliv hand think suppos
avoid illeg state except mvp view readi yet effort improv code skill tri make use mvp pattern one first android applic go well hit one issu sure proper way deal view class contain googl map object also contain spinner allow user select among number mode center map case center particular user marker case center center group marker user select one mode present notifi depend mode work model figur new center map tell view recent map problem devic rotat whole system restart one first thing happen android system set spinner state rotat trigger recent method tri recent map readi quick fix check someth model class true map readi e marker display alreadi plan present constructor would field method would view call method ad marker map whenev sure readi accept method current generat except guess option hold state view block call map object base view state current methodolog view maintain state present maintain state assum other dealt situat mvp view state accept call particular method someon help understand trade off solut suggest better solut quick fix work seem like hack marker need recent map fact marker exist mean map readi updat either updat sinc present complet control view know map readi updat need creat field present mention set true sure creat map view check field call method would tri updat map guess make perfect sens mvp pattern
best practic implement mvvm mvc delphi pascal delphi pascal programm use latest embarcadero delphi xe would like take advantag design pattern model view control model view view model howev seem much web best practic pascal exampl find c languag featur present pascal mean may find way implement featur tri adapt code articl list issu face nullabl type pascal nullabl type c creat implement section get set properti nullabl type creat nullabl properti howev come code smell exampl creat implement section fine come use properti use foo bar valu use bit messier suppos may noth circular refer like separ class differ unit ie keep user interfac separ control logic model data logic layer situat class refer situat part would like avoid occas need exampl anoth unit code broken two class includ done pascal problem c solut think includ class unit although problem think suit design creat anoth parent interfac b inherit b get around although messi simpl task static class static class delphi use control class best contain class use delphi current use list object list generic collect introduc delphi xe hope best use sinc delphi seem good option still think event handler issu may aris perhap issu thought yet thank advic
control django mvc learn django mvc way thought model databas tabl repres django python class view html return function view py control actual function view py invok http request howev read wikipedia time write regular express base url dispatch control would thought map ur ls function rout control perhap wrong guess got idea asp mvc function handl request contain class call contol
domain model notif system tri build modular notif servic asp net mvc web applic applic generat notif servic respons deliv notif right user creat domain model notif servic inherit natur come mind one requir notif servic user subscrib particular notif type exampl user subscrib receiv new messag notif profil notif notif would one repres relationship user subscript notif type notif type repres inherit cours could possibl via reflect wonder domain model came natur requir sinc think one use asp net mvc entiti framework code first think question general enough object orient program languag
clarif mvc design pattern read mvc doubt exampl model view control individu class whose object creat use deploy applic anoth class gui design treat model view control separ class part chang made without break howev separ class referenc within control ui class 4th class call creat object model view control setup still follow mvc design methodolog thank
decoupl constructor non contractu paramet non contractu paramet mean paramet interfac servic depend someth like class person string name write webpag scrape applic far written wrong order henc creation question made class pars html document string format give url imag class follow descript public class page parser privat readon string html public page parser string html html html public enumer lt string gt get imag import public enumer lt string gt get link import code work great unit test coverag etc problem write unit test code use class without worri constructor class need new class work behavior page parser pseudo code new function follow public report creat report string url var html web client download string url var parser new page parser html var imag parser get imag var link parser get link var relev link link l gt l contain someth return report builder creat imag relev link problem want bunch unit test epic size html document various test case creat report method option come leav everyth leav class structur live test larg setup variabl expos page parser interfac factori creat interfac page parser creat factori correspond interfac interfac page parser factori page parser creat string html class page parser factori page parser factori page parser creat string html return new page parser html result pseudo code would look someth follow download string var page parser page parser factori creat html creat report move paramet html method creat interfac class construct depend interfac page parser enumer lt string gt get imag string html enumer lt string gt get link string html someth els entir anoth pattern solv problem would like know
reactiv program vs mvvm pattern manag gui updat reactiv program mvvm two approach address problem separ domain layer ui mvvm defin viewmodel data structur map ui compon ui display data mayb updat user occur reactiv framework defin graph observ notifi ui piec data chang reactiv framework gain mind share mainstream platform rx net amp java react js experiment place frp haskel main use mvvm angular find simplic express ratio quit satisfi although work small medium project reactiv framework buy develop mvvm realli differ exampl knockout js advertis mvvm framework reactiv feel interfac
implement simpl control embed c known method pattern implement simpl control mvc design pure c switch case approach standard background embed applic pleas busi logic turn also finish ui boil basic function input come multipl sourc output sent sever destin taken care applic idea run pc devic also idea event come human fake unit test struggl applic logic view charg display output driver regroup behavior model provid clear featur know job well function rough draft opinion violat principl like dri cohes flexibl may present scalabl problem rough draft fake name reduc size get idea menu h function rough look like menu c good way thing small medium system could improv consid limit c embed environn tri tri n ari tree approach node menus leav function without polymorph hard defin eleg behav input strong type system also make hard simpl callback system end need ton wrapper around driver unifiy singl callback signatur void callback void also seem overkil simpl state flow feel like work kiss product hammer chain els devil would like higher level languag usual bind event callback someth along line bind menu input callback whenev menu focus event input rais callback call unsur c without go way overboard
intern mvc mvvm applic use web servic persist talk intern applic intranet web app compani seen busi logic piec model mvc vm mvvm one side web servic side web servic persist intranet intern applic custom web app code persist usual orm dlls sit server even folder use see intern app intranet websit refer busi layer busi layer connect persist app persist ignor app someth need expos extern someth open via web servic otherwis everyth stay intern reason seen coupl differ compani seem know answer
updat last access form authent cooki got mvc site use form authent set cooki user log major site requir user log though like whenev user first access site like updat last logon store databas tabl correspond valu request authent want fire everi page user access track user first access site global asax applic start method first request site websit first load iisreset
alway reimplement observ subject code java better option alway write observ subject interfac particular java project e g class implement interfac implement code test debug etc feel futil keep reimplement similar logic better option java
promis suitabl model control communic express app built yeoman angular fullstack generat build api send json angular tri work best way pass back inform model control process may occur control current use promis feel uncomfort model return promis control current model look like control look like
manag non domain applic behaviour cqrs scenario build queue underflow communiti edit q amp site peopl yet grasp basic data structur user like peopl edit post want encourag much conflict possibl want send email notif whenev user post edit log insult editor experi cqrs use event sourc singl data store use event handler deal persist state chang normal n tier crud app might trigger applic facad servic layer cqrs architectur see option event handler like idea seem send notif email concern could well lie independ part system want listen appropri time send email send transpar rest system dislik idea greg young reason point video introduc event sourc would result notif email sent potenti mani time command handler explicit approach still make sens howev seem general consensus command handler coordin domain object direct perform behaviour domain seem plain wrong send notif email concern applic much domain concern primarili busi logic present layer potenti intermedi applic facad simpli hand command handler perform applic specif action send notif question part architectur respons send email
use factori class instead direct object construct seen histori sever java class librari project git hub code plex see trend switch factori class oppos direct object instanti use factori class extens pretti good librari object creat old fashion way invok public constructor class last commit author quick chang public constructor thousand class intern also creat one huge factori class thousand creat xxx static method return new object call intern constructor class extern project api broken well done would chang use point refactor way benefit replac call public class constructor static factori method call use public constructor use factori
separ role author databas someth realli bother way author tend done role asp net mvc way normal done user tabl role tabl user mani role decor control action author attribut say role want allow access control action problem code reliant data within databas obvious could applic start seed databas role need present still fragil depend data databas e g could delet renam etc etc enum similar role level instead store databas seem reason still leav sour feel eleg altern hit upon
observ pattern use pull mechan wonder follow implement want send observ updat use notifi observ pass refer observ use getter subject pull inform want arg argument updat method meant
understand implement mvp mvc softwar requir recent decid start develop client servic base system use wcf duplex channel callback servic client client behav slave connect server server communic eventu server may request client send data stream frequent updat new content object want make softwar loos coupl possibl even read differ pattern mvc mvp seem design fulfil specif requir best code architectur pattern problem consid technolog use
handl circular depend depend inject titl say circular depend correct word design seem solid howev consid follow scenario blue part given extern partner orang implement also assum one concret main want use specif one realiti class depend tri simplifi would like instanci depenc inject uniti obvious get stack overflow except follow code runner tri instanti concret main concret main need runner avouid way structur use di scenario set everyth manual put hard depend concret main class instanti tri avoid uniti registr configur sourc code simplifi exampl
chang state singleton runtim consid go write simpl file base logger app logger use app ideal singleton call via use problem best time provid valu file sinc singleton refactor code skip use singleton custom log file path assum need write multipl time p know use librari e g log4j consid design question refactor code
generic repositori di data intens control usual consid larg number paramet alarm bell may design problem somewher use generic repositori asp net applic control grow number paramet public class generic repositori lt gt repositori lt gt class protect db context context get set protect db set lt gt db set get set public generic repositori db context context context context db set context set lt gt method exclud keep question readabl use di contain pass db context generic repositori far met need concret implment repositori lt gt howev creat dashboard use data mani entiti also form contain coupl dropdown list use generic repositori make paramet requir grow quick control end someth like public home control repositori lt entiti one gt entiti one repositori repositori lt entiti two gt entiti two repositori repositori lt entiti three gt entiti three repositori repositori lt entiti four gt entiti four repositori log error log error current user current user repositori plus other includ requir data dropdown list option mind mani paramet perform point view db context per request di contain serv db context repositori code standard readabl point view ugli better way handl situat real world project real world time constraint dwell long learn perspect would good see situat handl other
best construct test subject unit test busi logic class requir quit depend case come unit test creation becom quit complex test depend often requir depend requir particular method result unit test often requir signific number line code mock useless depend null null check exampl exampl almost half test taken creat depend use investig approach helper method often grow complic quick best way creat bll class test class reduc complex simplifi test
data access object old fashion coupl week ago deliv work univers project code review teacher got snarki remark fact still use data access object teacher question said mention use dao class alway say someth along line back alway use dao big fan object relat map also think great tool talk fellow student also mention prefer use orm understand make wonder though use dao realli old fashion know work dao still use due fact code rather old therefor coupl orm also use orm work tri find inform googl stack exchang site realli enlighten step away use dao start implement orm feel orm bit overkil simpl project love hear opinion fact
factori method pattern exampl violat open close head first design pattern use pizza shop exampl demonstr factori method pattern understand pattern violat open close requir beef pizza must edit statement ny pizza store class
ninject di correct pass initialis data inject type runtim follow two class use ninject set bind problem get inject concret implement email servic store servic constructor store servic actual inject code behind asp net web form need chang email servic accept object contain smtp relat set pull applic set web config chang email servic look like set smtp set way also requir pass store servic via anoth public method done page load method web form code behind access set class ui layer manual poor man di could pass smtp set direct constructor email servic inject email servic store servic constructor ninject access instanc inject type outsid object inject set data ninject alreadi inject via separ public setter method seem wrong realli solv scenario
project structur put busi logic first ask busi logic belong ask answer read agre belong model put busi logic mvc design much busi logic allow exist control layer accur quot busi logic servic model quot put busi logic model happen multipl type storag howev peopl disagre way logic distribut across class seem exist three major current thought fat model busi logic insid entiti class anem model busi logic servic class depend find problemat first option fowlerit stick problem fat model sometim busi logic funtion relat class instead use bunch class exampl develop web store function calc order total could think put function insid order class actual happen logic need use differ class data contain order class also user class session class mayb tax class countri class giftcard payment etc class could compos insid order class other sorri exampl good hope understand mean put function insid order class would break singl respons principl ad unnecesari depend busi logic would scatter across entiti class make hard find second option one usual follow mani project still doubt name class class hold busi logic compani usual develop app offlin capabl user abl perform entir transact offlin valid busi rule implement client usual background thread sync server usual follow class packag everi project data model dt os data access layer persist web servic layer usual one class per ws one method per ws method busi logic standard approach singl class hold logic multipl class criteria use distribut logic across name foo manag foo servic know last one common case bad name ws layer usual class name foo web servic third option probabl right one also devoid use info sum like first approach accept might unabl fulli understand zen advoc fat model univers solut welcom post link explain right way like know standard design name convent second approach oo languag class name packag structur particular would also help could includ link open sourc project show done thank advanc
version hash solv event sourc problem basic exampl seen event sourc deal order event clock offset differ system late event system partit wonder polish event sourc implement reli version stamp modifi object exampl assum system render entiti client version id abcd1234 user modifi entiti system creat event modifi field version id refer version appli later event respond would detect order event merg
mvc model creat view web applic written perl control view model model correspond one view control one file creat model object correspond view view cgi argument retriev view modul creat inde bad thing argu bit first idea sinc object model depend upon view model actual view also fact cgi paramet pass model caus model becom truelli view loos interest sinc relat current implement web app word model keep model loos comprehens model easili understand quit new project analysi pleas harsh bad made prototyp main structur understood web applic made short possibl
strategi use two differ measur system softwar applic need accept output valu us custom unit metric system right convers input output mess enter us system choos output us metric code convers everywher want organ put togeth simpl rule came rule user enter valu either us metric user interfac take care mark proper unit intern store us sinc major system alreadi data store like depend matter suppos long mix unit output us metric depend user select choic prefer theori sound great seem like solut howev one littl problem came across data store code databas alreadi return data like x screw mean four time screw need either us metric exact put convers code convers unit alreadi mix present data data field need popul whole string certain split number x screw question remain put convers code differ locat convers routin right string class produc put convers code right class may good solut except want consist put convers procedur everywher code data sourc right read databas problem though think code deal two system throughout codebas accord rule idea put view script aka last chang modifi shown user may right thing strike may alway best solut first complic view script tad second need work data side split thing extra pars case anoth solut somewher data prep step view aka somewher middl view data sourc strike messi could reason codebas mess right seem best solut question goal figur structur place unit convers code within system softwar system question mvc like zend framework like lamp system specif exampl right class given id creation time method get valu return x screw depend id differ number produc still inch note number written divid bar use decim notat could set framework display valu millimet well
question one argument depend inject creat object graph hard depend inject framework like googl guic give follow motiv usag sourc construct object first build depend build depend need depend build object realli need build object graph build object graph hand labour intens make test difficult buy argument even without depend inject write class easi instanti conveni test e g exampl guic motiv page could rewritten follow way class bill servic privat final credit card processor processor privat final transact log transact log constructor test take collabor paramet bill servic credit card processor processor transact log transact log processor processor transact log transact log constructor product call product constructor collabor public bill servic new paypal credit card processor new databas transact log public receipt charg order pizza order order credit card credit card may argument depend inject scope question easi creation testabl object graph one
mvc helper function busi logic creat helper function mvc net creat common control need almost everi project alert box dialog etc contain busi logic client side code html js ok problem aris need busi logic behind helper want creat rate web applic control visibl everi day user may hide navig rate link hide ever need sort databas access code act busi logic normal would use control di everyth know put code place helper function control respond object instead action result
depend inject store depend use one method develop project integr depend inject refer use uniti problem manag class sever method mani case depend use one method user manag instanti way note depend factori wrapper simplifi access uniti contain ok class like exampl better way implement avoid instanti unnecessari depend
view model rout action control use mvcvm pattern read exampl across internet includ msdn refer found code exampl follow type thing view follow
view control design os vs mvc tradiat web app design came background webapp move os program wonder appli mvc design approach nativ app e os view control tight coupl reason
issu regard new instanc control view page issu creat new control within ascx view page want creat model issu way normal control control variabl within model model middl point creat new instanc control class within ascx page ok edit want know implic put instanc control class direct asp net ascx code view page thank
use ng init initi data angular control recent came across follow one project one mvc view pass model data angular control ng init direct xxx cshtml point accord angular document ng init direct use initi control instead suggest send id ng init direct use http servic get remaind data angular control develop refus idea say faster send data ng init direct instead anoth call get data inti angular control think scenario point right code ugli accord standard would convinc develop follow path suggest complet wrong
rout site res tful best long ur ls read lot res tful alway hard time figur use long queri string hous project alway simpl action control articl want index worri seo applic internet querystr long set somevar amp x amp exampl rest seen seo simpl web app like blog mayb cms rest best practic situat long ur ls lot variabl querystr norm exampl look like non res tful way link illustr bad practic design super long url illustr everyon use rest understand rest know reason rest pretti ur ls hackabl ur ls etc like design applic well feel like would shoehorn pattern need best practic
wpf event driven vs mvvm design pattern begin coder work wpf app sever month struggl implement anyth mvvm due time constrait learn code program way knew code behind tight coupl whole bunch spaghetti code program grown line messi work code most event driven app build probabl use continu develop year come one work code howev time start learn mvvm wonder use realli follow mvvm pattern consid refactor code mvvm pattern everyth seem 100x difficult littl document use code behind tight coupl make ui exact want everyth seem like code much faster event driven method import follow mvvm design pattern wpf app especi long run think good idea invest time redesign app follow mvvm pattern
disadvantag simpl factori read book head first design pattern reilli explain factori method pattern introduc simpl factori first use exampl pizzeria first step show problem obvious problem chang pizzeria whenev add remov pizza henc introduc simpl factori idiom first move creat part class simpl pizza factori need modifi pizzeria anymor ad remov pizza say approach good one pizzeria sever town realli understand reason give follow exampl code say pizzeria use procedur implement use differ method order bake cut pack pizza instead use simpl factori suggest use factori method pattern first see berlin pizzeria suppos use procedur still pizzeria call order use procedur best guess impli abl implement let say cafeteria deliber use someth entir differ make point use factori independ pizzeria prepar pizza way want even use factori method pattern nobodi forc use default procedur even simpler hide differ code exampl given java java method virtual default would abl implement berlin pizzeria overrid order explicit declar method final client howev notic berlin pizzeria thing differ conclus see signific differ simpl factori factori method pattern advantag factori method pattern see would save class name outsourc factori realli disadvantag simpl factori good idea outsourc creat part realli advantag factori method pattern good idea forc creat part implement subclass
let outsid world decor privat field imagin simpl control process control interfac concret class say pid control implement also decor class extend class somehow say ita tune decor imagin flood gate class privat control field would like outsid runtim attach control flood gate ita tune decor access field outsid obvious decor need refer origin control built
decor class call public method written system calcul discount shop cart base set rule rule implement follow interfac c concret implement might look someth like tri introduc log system keep thing clean want jam rule class thought make decor rule handl log issu run rule class actual call activ applic method happen decor simpli pass noth log suppos could make log rule subclass rule would mean would make log rule variant everi rule implement could potenti caus lot duplic could also put log base class use null object pattern want log anyth time want log anyth method call mani mani time worth potenti overhead neither solut seem particular eleg struggl find better altern suggest
akka market reactiv actor model reactiv far understand actor model reactiv program separ concept actor model seem inher reactiv howev akka framework actor model implement describ reactiv java scala program logic live lightweight actor object send receiv messag reactiv fashion reactiv case misus term complet correct actor model implement e g erlang alreadi reactiv simpli generat messag respons messag consid reactiv well relat read approach contrast stack overflow rx vs messag queue like rabbitmq zeromq cs se function reactiv program actor model relat lambda ultim actor vs reactiv object
keep class mvc becom bloat sure word question student class databas queri involv put queri one case someon want student inform queri student class student class put class cross student edit violat singl respons thought queri student queri class class part model layer util servic also need new queri set queri someon come along want special queri copi past chang one thing add switch get multipli across class model layer multipl object giant switch statement etc seem model layer compos giant model code everywher violat dri servic one object student find class student student id call view perhap anoth class find student particular class class id pretti close realiz abstract yet layer isol logic layer abstract forev sooner later appear violat oop encapsul view model view abstract data access layer servic etc littl object anem read lot lot interpret assum leav busi logic model layer control view pseudo exampl seem like duplic perhap thought enough know experi alway someon want slight differ queri end copi past
mvc design use base class interfac web mvc design seen choos model layer exampl domain problem class say student alway inherit superclass model name irrelev alway inherit class instead interfac seen other interfac abstract class concret class know choos class intefac need execut someth constructor superclass mvc method know mutual function need implement beforehand probabl inexperi interfac enforc api seen answer seen specif context mvc design howev use php matter
communic updat unit work entiti framework context collid user chang develop wpf applic use entiti framework databas communic applic hierarchi tab tab db context tab allow user view particular object make chang save updat close open tab relat object crux tab contain inform depend object well object type may relat object n parent children relationship graphic indic show wether properti p valu p children exampl red indic mean unequ green mean equal overlap inform context present wise differ tab step other toe chang other data tab open chang p save indic tab might need chang well sinc tab outdat db context indic still show old valu might confus user seem like general common problem consid mani applic architectur would solv problem see differ flaw problemat solut make user awar fact tab becom obsolet save other feel like forfeit technolog troubl b forc updat relat tab save would either overwrit user chang would build system repositori pattern maintain inform user chang mediat updat keep tell user c indic outdat ness relat tab seem like pragmat solut user left wonder would affect updat tab manual chang made would dismiss communic chang tab without involv db context would sort work could lead complic problem introduc state relat db context overal would increas complex
fire domain event transact complet tri implement domain event system fire event associ unit work commit success main reason want sub system read databas expect chang place handl event also want event handler work send email etc commit fail system multipl asp net applic web form mvc web api current implement problemat right domain rais must put queue must fire immedi queue static caus problem multi user system want accident fire event anoth user definit problem user access queue list solut investig work scenario non static domain raiser class get pass pay use method pass domain raiser difficult domain object sometim event rais chang properti pass object around cumbersom entiti contain event enumer read unit work commit call discuss track everi singl entiti possibl chang difficult load chang track orm also clutter domain object use http context current item store user specif event current best suggest howev possibl unit test lock domain use asp net plan futur releas desktop app question queue dispatch event multi user environ reliabl take consider want fire event overal unit work succeed
reduc depend cycl reduc coupl tri learn produc qualiti object orient code studi concept like solid current work entiti compon process system small game engin current implement screen stack contain stack screen screen entiti manag process manag process manag updat process es given entiti entiti manag process handl game logic need abl use screen stack possibl push pop screen also creat remov chang entiti need entiti manag screen basic process need know everyth game sinc affect much feel wrong go implement better seem like everyth clear depend hierarchi get process get thrown window also seem tight coupl would want push new screen say exampl process main menu screen check menu choic new game click need push new screen get creat moment read random throw new seem
oop design pattern somewhat repres solid oop design principl play tri teach object orient design principl cours solid train institut also want teach student oop design pattern factori singleton one know match solid principl oop design pattern want introduc student pattern sort inclus solid design principl play idea realli tri fit observ pattern want keep conform solid principl
avoid model duplic java ee web applic json front end recent develop web app use follow tech stack hibern orm spring extj mvc javascript front end busi object let personnel personnel class hibern personnel dto explain need personnel javascript model extj know may javascript ui framework need model defin need number aris deal send hibern object back forth deal session circular refer etc etc plus case need fulli fill personnel object full field join sometim field relat sometim need info process personnel send way client secur privaci reason use dto decoupl model object object sent wire ad remov field project design becom tedious error prone ad field requir add db tabl add model object add dto add model dto convert field automat map regard differ scenario requir differ amount inform model add extj model add crud form page add client server valid better approach build similar applic think start new project want make mistak
determin get respect control use mvc pattern web applic built php alway struggl determin whether need new dedic control set action place insid alreadi exist control good rule thumb follow creat control exampl authent control action index display login form submit handl form submiss logout self explanatori login control action index display login form submit handl form submiss logout control action index handl log account control action login get display login form login post handl login form submiss logout get handl log regist get display registr form regist post handl form submiss action involv account
tell view creat cooki login servic class login user email password rememb fals method applic layer model layer rememb true need creat persist user login cooki client browser sinc respons view good way reach view control let know creat cooki
allow entiti own one user referenc user entiti work asp net mvc web applic follow simplifi entiti user regist creat cours entiti cours geograph locat repres event area also creat user event area repres geograph locat avail use user want creat cours locat howev make event area entiti avail user creator rais follow question happen event area modifi delet creat user abl view edit modifi event area entiti altern suggest approach scenario entiti creat one user referenc differ user
domain model associ requir behaviour associ object model struggl question specif think within object orient domain model let say two entiti supplier custom relationship supplier mani custom custom case one supplier issu neither object need behaviour object e supplier object need use behaviour custom object visa versa howev still associ reason problem domain requir supplier custom destroy supplier destroy also need abl retriev collect custom associ supplier manag oo domain model respons associ may say get custom method supplier object associ lie realli like make difficult close supplier class violat open close principl everi time creat new type class associ supplier add get method supplier one thing think could use model associ repositori eric even domain driven design book guess would repositori care relationship could call select custom supplier id etc edit reason see associ object retriev criteria object destruct e user destroy custom destroy respons either object retriev destroy could argu supplier retriev destroy custom sure violat singl respons rule could also lead open close violat would bother add respons associ object that use useless object associ useless though feel someth els respons
present depend view vice versa far use mvp architectur pattern time everi wonder whether present depend view vice versa view depend present note though sampl code provid c mind languag question target precis mvp pattern addit provid top head sole help illustr concern may compil short sampl use let say creat custom manag featur feel like view depend present would need handler properti view present could depend data access servic like handl busi entiti like would wave away method inject benefit imho plus seem reduc complex wave away ui handler ui handler interfac make easili testabl code present easili test class howev way afraid present real handl view abl either show hide grow confus shall depend
entiti design blackjack game make card entiti creat simpl blackjack game back databas card face suit enum entiti bet follow current deal card pars suit face string concaten card field pars card want calcul score find cumbersom want chang field card list bet entiti case would make card class entiti well card servic get card reli databas creat random card make sens make card entiti right
event handler observ interchang object period rais event base action perform applic heard listen act upon accord wish use custom type would like make use either event handler lt gt observ lt gt manag pub sub mechan look put place play requir read msdn observ design pattern msdn event program guid howev remain uncertain one mechan appropri one suit scenario suitabl mere person choic edit pub sub requir ui layer point lower publish monitor network activ rais event base certain network event subscrib respons listen rais event perform associ action ui involv point
interpret happen control model imagin applic user allow creat music scale user select note list arrang group press button creat scale mvc structur upon press button view would tell control user want creat new scale name note pass array string name need interpret match note object compos new scale question interpret happen control pass note array model scale creation take place control pass array string repres name note along model model interpret name note compos note scale would conceptu correct accord idea mvc
use static keyword declar singl instanc pattern come across code find interest know whether consid anoth singl instanc pattern programm claim ensur alway one instanc memori notic setter method code programm initi work static code block never notic static code block use way
effici handl relat data mvc talk mvc servlet jsp context product manufactur queri applic list product servlet load list product databas list object similar servlet set list attribut request forward request jsp jsp retriev list request display content webpag correct question load product manufactur let suppos product contain id manufactur common approach saw around jsp loop insid list object upon show product call class method final run queri databas two thing dislik approach break mvc pattern sever usual separ queri run databas potenti load data e two product come manufactur true better approach solv problem far think make servlet load manufactur data separ object e g map along product list object set request jsp access render page potenti danger drawback idea requir memori hold inform anyth els
access public properti object view work mvc fw php general view load function like load string view name option array view variabl doubt work object like tabl row result need pass object entir view need pass need view exampl pass object entir case view access public properti text object like titl text date creat need creat getter properti access direct properti name chang exampl ii pass need view case control respons send necessari view howev mainten becom littl complic new inform view also requir new definit variabl control anyway wonder would accept concept type task note talk code yes concept use develop someth similar
use singleton js worker build javascript applic continu draw reli asynchron script background also need poll event write global variabl got start use worker access global variabl consist think use singleton communic two allow draw loop keep run worker heavi lift theoret seem work sinc worker design oper function better approach info need essenti poll keyboard interrupt similar oper system regist interrupt program script creat compil store remot script insert fli ensur run worker still need access global variabl draw loop use
one control per page within java script base mvc architectur let say creat page marketplac web applic buyer see catalog product offer seller seller see product preview buyer view within java script code would creat model object sync data server one view object would render various piec data user control object rout messag model view let say creat anoth page applic buyer see catalog product offer singl seller yes subset function go sake hypothet case though catalog exist tab page sibl tab contain unrel data reus object creat first page would still feasibl call central piec control would includ one tab page would probabl control object would proper stick singl control per page call sort view object even though purpos remain rout messag intern model view crux queri whether conceptu standpoint singl control java script code singl page whether abstract compon unit mvc architectur hidden away page larger mvc architectur
io c contain provid public resolv method opinion invers invers could make new user includ make incorrect assumpt use io c contain use servic locat anti pattern cours sound like strong reason separ class end day probabl least one call get root object start program could name design signatur contract accord avoid call one reason interest singl point entri classic app rather server side web app
angular ui state provid think use angular ui specif state provid make easi creat nest view next applic use vanilla angular ng includ direct url variabl pass control easi enough imagin get pretti complex ui view direct promis make simpl one thing keep come back reason use state provid state part internet suppos stateless yet entir rout system built provid state site feel wrong know thing like cooki session provid kind pseudo state kind need full system like state provid also state may necessarili bad thing internet tend think see programm might want hand state provid state provid seem like kind state internet meant think state term internet think initi state inher state action websit get resourc path uri resourc get resourc though might chang delet state provid seem violat principl ge tting resourc time go path general reiter ask whether cooki session good bad whether state internet good bad therefor answer question help entir satisfi ask whether angular ui state provid creat state internet particular kind state web programm seem hate worri make internet state use angular ui state provid
predict futur simul state program combin simul aircraft system predefin pedagog scenario traine pilot learn use system follow normal scenario chapter chapter everyth goe smooth traine skip chapter n goe direct chapter n simul goe snafu chapter n execut simul result incoher state remedi write desir simul state scenario file chapter entri point problem possibl predict simul state chapter n know scenario first heart scenario complex develop spend long time studi scenario get accur pictur expect traine jump chapter n softwar need persist save simul state program run simul state manag variabl possibl us make snapshot simul state everi step would high impractic time scenario updat snapshot would date also access extern variabl sinc privat bound even access would bad idea given sheer amount data common problem best practic known solut tackl issu
get depend inject someon help understand need io c contain apolog seem like yet anoth repeat question everi time find articl regard topic most talk di get di tri understand need io c contain everyon seem get point io c contain realli auto resolv concret implement depend mayb class tend sever depend mayb see big deal want make sure understand util contain correct typic break busi logic class might look someth like one depend case might second third often anyth call pass repo allow use default repo far current understand io c contain goe contain resolv data repositori see ton valu sinc oper class alreadi defin fallback depend pass benefit think sever oper like use fallback repo chang repo one place registri factori contain great
finer point hmvc new hmvc whilst tutori great deal overal detail keep modul separ let control communic great explain littl detail go exampl current face use kohana framework build admin control panel websit first thing done set page admin page admin control page action fine creat basic login page base kohana auth system come first proper page account page need list account link creat new one edit delet exist one fair straight forward view page creat new modul account tutori let need fetch list account design new modul singl instanc account load account end array instanc one account array creat factori control factori sit hmvc structur assum resolv array account avail page control load account need filter page list account product anyth like search top search part page belong admin control right get inform account model load account hmvc would written claus queri admin control pass account model option hmvc admin control knowledg structur account pass search result variabl account control account control load inform direct get post even though search belong admin control recognis way handl hmvc tag php use appreci exampl php
select talig mvp assum select model read tradit talig paper find definit answer mean select select could set indic refer entri model command act proper model subset clear paper repres select view two possibl either assum visual select represent handl view select talk noth set indic object extract view present fed command select actual select model must made avail view inquir visual represent e g user action select modifi select model notifi view highlight item howev paper connect select view present talig mvp formal suppos handl select visual present
use depend inject alway pass interfac use depend inject general pass everyth around interfac perhap except primit string allow easili chanc behavior without chang implement ever case pass complex object interfac though
data serial architectur inject construct vs function call creat data serial deseri mechan essenti persist storag object due varieti system mechan could run need variabl number driver could use serial deseri data troubl figur appropri level abstract system primarili construct driver refer object store object pass various write function let say data access layer wrap data access driver data access layer necessarili contain refer data object also wrap use data access driver actual keep serial represent data object question data access driver construct refer data object pass data object everi function call data access driver make
mvc right place set error messag asp net mvc applic model error properti use store non valid error display view right place popul error list accord mvc insid model insid control first option second option
one handl parent child relationship use mvp convent mdi win form applic one would go like custom manag form never get bound use model view present along depend inject code add abstract layer actual allow set mdi parent view form main mdi form main view ui handler ui handler main view ui handler main present see nowher set form mdi parent properti view present handl expos properti might break abstract tight coupl win form sinc platform use hierarchi differ user interfac although applic destin simpl exampl use mvp along di wish make clean possibl thought creat singl interfac would use parent terminolog compos view within window form applic platform would inherit useless properti idea go along
make mvc app extens multipl busi market suppos creat singl global e commerc applic support multipl market differ region world use asp net mvc although busi logic applic reusabl differ market market want implement view client side valid logic depend control action call control logic remain view alter depend specif market need suppli view use short need provid way mvc extens situat recommend anyon provid best handl best practic around extens mvc control view within context bad idea overal hope someth clean reduc risk break rest mvc code base
static control built php mvc framework meet need pretti much core class static stumbl upon idea static control know reason static class perceiv well programm howev class make sens instanc realli see good reason creat one exampl system class b k app framework initi whole framework includ configur file call front control cannot two instanc class system initi yes function well none relat instanc get client ip handl except handl error etc follow path logic control properti general use per request howev think never seen framework static control static librari class yes static control never good reason static control mvc framework p yes know thing static class php yet basic call static class class privat constructor static method
avoid global state without larg function signatur good answer question name global state evil specif question altern mikera propos answer second vote seem like would good way avoid use global state want know altern best perform wise obvious depend languag use particular question ask java script howev think could appli languag like java say java script function call java script function seri e g use node js async librari async seri block scope rule async make difficult serial oper requir share variabl handl state entir oper state inform longer use parent function return one avoid need share state practic good design write function specif case determin need read possibl modifi share state follow mikera approach instanti new function everi time parent function call use functor creat closur exampl defin function insid parent function second option scream bad code use well make difficult test step1 altern add extra context object pass function call anoth argument tri figur thought extrem clunki ugli add extra argument share state variabl everi singl function state singl context object per mikera suggest mean add one extra argument function much palat howev feel unnecessari pass around sinc share perhap way obsess extrem minor detail anyway question use either possibl way creat closur functor defin direct parent function seem extrem ineffici creat brand new function everi time call parent function mean function alreadi defin seem realli ineffici would feel way languag like java creat new instanc object time get share state context argument best perform wise tear hair tri decid whether use functor function ad extra context object argument function signatur none realli seem like great solut focus micro micro optim need focus write code
valu object static factori assist inject first let assum everybodi agre noth wrong inject valu object inject object servic inde servic get anoth servic inject could along way get configur inform well configur inform would repres valu object let talk use di framework valu object direct intent say let appli depend inject valu object see critic come depend etc red everywher use di valu object wrong useless newabl real depend general would first disagre idea newabl think good practic use factori anyway leav control exact object creat strategi may use behind etc factori could configur etc one could even think chang implement instanti given interfac valu object base oper system constraint whatev condit may think let us assum agre use factori valu object creation build would like develop follow point di use simpl factori tool come valu object ask want use factori expos want scatter around valu object creation legitim mean definit use assist inject time creat valu object way would use static factori code essenc use di factori contain valu object mean like pass factori paramet servic allow creat valu object one use would one prefer use static singleton anti pattern middl servic code would rather inject factori weather via di factori non static
follow good design thought process abp framework overkil finish one project start anoth small time window come architectur new come follow design web applic receiv domain model amp dt os send dt os applic configur applic specif dt os map applic specif servic amp control core librari receiv entiti model send domain model amp dt os domain model map amp repositori entiti map dt os map amp servic vendor specif interfac implement like asp net ident anyth els want data librari receiv input databas adapt odac case send entiti model entiti model special compani data context wrapper use code represent schema extens pars respons databas infrastructur librari receiv noth send noth common interfac adapt wrapper extens thing use project layer initi segreg becam thing got messi segreg took signific refactor time even segreg still design issu tight coupl vendor implement like castl windsor auto mapper n log awkward difficulti generic repositori implement duplic contain action etc logic applic difficulti determin order process flow amp servic call see final project structur adequ support well design architectur final product howev design well plan like start definit architectur time big chang would abstract everi substanti implement direct call thing like auto mapper n log unnecessari would requir commit depdenc inject implement di system io c contain abstract requir avoid direct inter layer depend result granular project structur granular help someon modest skill level forc consid new compon belong problem may know optim set bucket taxonomi project compon standard abp librari seem like promis way get start provid much abstract direct depend abp would least structur could design would definit provid solid foundat cours develop main concern implement abp potenti engin wast time implement rigid framework first question worth use abp base person experi given worthwhil embrac abp would also like know abp integr project produc mirror project structur includ correspond base abp version abp defin layer
better manag servic bus quota azur tri determin best accomplish follow scenario use azur servic bus million devic desktop softwar mobil phone app etc need messag sent base subscript pretti easi howev servic bus limit number subscript per topic filter per subscript etc list said wonder someon solv problem best practic whatev assumpt custom applianc applianc one custom id applianc id applianc manag devic devic devic id requir discov applianc custom id filter custom id custom log need ping applianc belong custom command specif applianc filter applianc id know applianc use custom execut command specif applianc command specif devic filter devic id also provid command specif applianc specif devic none difficult realli bump servic bus quota seen filter topic subscript topic total topic queus per namespac first inclin singl sb namespac singl singl topic singl subscript applianc could simpli add util follow sql filter applianc custom id would allow messag applianc belong specif custom applianc applianc id would allow messag specif applianc applianc devic id would allow messag specif applianc specif devic use assumpt state would 20k filter filter per applianc let assum million potenti million filter obvious work could even go far disregard would still leav million filter specif quota bump import two thing send messag applianc own custom second send messag singl applianc applianc devic communic back issu queue may figur equat simpli replac topic queue certain scenario reliev part problem anyhow let know anyon idea
convert app harbor azur think switch cloud provid app harbor azur main reason love abil abl scale number worker traffic cpu usag get realli high question coordin transit user still point apphb com instead www mycustomdomain com saw seo friend ur ls blog post proper respons code navig old url path perman ad guess return instead tell googl bot crawler perman redirect map index new url code add line check see url process request assum leav app harbor site run without custom domain point app harbor issu correspond crawler go new url notifi human user better way
diagram give good represent mvvm pattern realli hard time understand basic structur model view view model pattern honest pretti ignor design pattern convent recent formal educ web media got program javascript late though build complex game design scratch exercis build skill interfac need rather extens numer output control requir control may need affect model view arriv mvvm research mvc suggest friend mvc look like would get rather messi differ view control first impress mvvm simpli mvc mani view mind hard time nail definit even liter structur said creat follow diagram effort visual thought meant repres basic structur amp event propag mvvm pattern per understand explain understand word would say model hold actual data simul control visibl view model translat inform model view multipl control within input output binder listen updat either model view model notifi item pair partner chang view dumb output given view model modifi control understand goe like compar view model game data exampl game model hold data like player posit state machin loop act modifi data similar view model view control relationship wherein view model would control instanti data storag view control handl state accur represent mvvm good design pattern game design put anoth way way represent differ paradigm might want need alter asid use addit control physic offscreen input keyboard input put view control javascript detect keyboard input tie view surfac anyway ex canva add event listen keyup func ev hope text graphic descript differ implic pleas let know updat see look like mvvm implement requir view control realli get guess anyway glad updat fix diagram anyon help get around vast ignor think great way show design pattern knew actual
intern state leak influenc extern visibl behavior method c generat valu base paramet paramet previous call call paramet may generat differ valu time exampl make sens allow method call const object previous param part object intern state leak sinc intern state affect object extern behavior think method like generat creat seri valu subsequ call rather method modifi object caller suppos depend particular paramet generat specif valu would sensibl chang declar follow
design applic use rest sure ask know simplist understand think rest architectur requir simpli way build rest style communiti standard transfer data rest use verb noun most latter get post put delet read see architectur consum point view creator api consum cannot find applic share anyth anyon moment want build applic follow architectur futur want use type construct exampl put put put applic creat new person use html lt form action someth php method post gt put go use know within applic want put get whatev use mvc action realiz consum might use architectur servic noun know use put form tag right use php page grab queri string base upon rewrit rule edit base upon read answer appear cannot use rest nativ use http verb either use name type ajax hidden field contain rest method like exampl cake php seem done greater good other consum api servic use librari curl use ajax one creat request method wish sinc use rest architectur consum use api would simpli put put delet etc futur architectur might use verb make new keyword put etc w3 spec http well support
db model staf demand suppli tl dr look guidanc databas design concern exist design ineffici abl handl larg number employe go long pleas bear process creat jee applic staf demand suppli usag kind web applic far done follow easi part core db model like employe depart locat etc key point demand suppli structur alloc employe happen new employe automat get alloc pool project need track employe alloc granular week alloc may requir daili alloc track futur employe alloc partial complet demand demand split week actual alloc need track employe week employe alloc demand may alloc fulli partial week demand plan build demand db present tabl demand master dm contain entri new demand creat basic number employe requir durat demand demand line item dli level demand data store employe requir demand demand line item detail dlid level detail keep detail alloc employe week level relationship envis tabl like dummi data set problem statement ineffici way creat track demand number join involv number increas demand dli dlid data increas difficult fast crud oper transpos similar structur suppli structur number week data current employe huge especi suppli structur need accommod least year data futur un use avail alloc fact alloc commit demand need also subtract un use avail pool make complex better way maintain data like week day level data employe mayb better db model differ approach use mysql workbench mysql databas design plan use jpa hibern provid orm
ddd object save whole databas per definit entiti still possibl valu object learn domain driven design struggl question particular object handl entiti valu object possibl surnam prefix kept databas tabl data use combo box sinc record kept prefix prefix seen entiti still possibl handl valu object
domain driven design convert databas tabl primari key valu object let suppos databas schema defin like person mail address bill address denorm techniqu creat separ address tabl time mail address key bill address key singl person valu ie mail bill address key databas address ident address key domain model see compel reason address entiti like valu object ddd option valu object usual group column oppos tabl kind play devil advoc think databas dictat domain model structur make sure address lose databas ident use valu object domain layer suppos keep databas identifi valu object model need persist databas process suppos go process find address field b exist creat new one c updat field
c depend inject placement first time use uniti bear moment sampl visual studio project project two project use uniti follow setup project databas win form project display master detail form databas util class librari implement repositori pattern interfac call sampl repositori cs type call sampl repositori cs project setup read depend inject understand uniti contain code get place start locat applic go run go databas program cs bootstrapp cs class resid databas util project ask program cs technic entri point databas win form project code bootstrapp cs think referenc bootstrapp cs program cs databas project would consid best practic furthermor want make sure shoot foot later let say decid implement anoth form master detail form need perform differ crud oper e updat oper want abl use class implement repositori look right angl
depend inject encourag collabor expos via constructor general approach di see answer like singleton bad encourag busi object collabor object direct creat instanc b pass construct understand b seem occur often respons overus singleton modifi approach singleton longer singleton capit per misko heveri case still enforc one instanc code want access singl instanc still call get instanc without clutter constructor explicit requir instanc pass default still still lazili initi product code test still mock referenc answer first benefit di list violat encapsul realli need know public interfac everyth access singl instanc databas etc assum databas tabl gateway class respons crud oper tabl di approach tabl gateway constructor would accept databas constructor busi logic class would accept tabl collabor use churn explicit depend constructor advis
payload domain event generat chang data captur includ use domain driven design event sourc given tabl column b c exist row data updat row contain valu run tool design captur data chang emit associ event expect emit event payload date new state date prev state new state date prev state new state chang date new state chang date chang data date chang data previous data ideal would like design event support wide varieti current futur use includ data replic audit log event trigger activ retroact event insert possibl thought answer simplest client care column still end react event tell event chang answer cleanest captur differ downsid forc client roll chang display audit log full state chang also event trigger activ may requir knowledg full state work answer perhap general use carri chang contextu inform alongsid answer fall trap assert previous state previous state datastor perhap test environ reject event invalid would retroact insert event mean chang subsequ event previous state field
control pass request object backend logic forward request data good bad current work server side front end scala play app lot grab html snippet json mani web app piec everyth togeth send respons browser sinc lot web app legaci expos nice rest ap need call browser client direct call mean requir thing like session id state key plus various header cooki etc use track authent etc process slowli write system nicer meantim still lot app front end need work play request object pass control immut conveni aforement data want control hold logic call various web app put various servic class question call method servic reason pass request object along data seem like grey area might call code smell case front end app like lot essenti proxi also seem reason get thing start option pass entir request b pass everyth need one one c pack everyth separ object suggest welcom tri find good balanc eas mainten good design comprehens
io c servic locat wonder quit time issu use depend inject layer applic normal inject repositori applic servic use constructor inject problem servic becom complic number depend grow soon constructor becom ugli lot paramet might servic mani thing violat srp better separ sever class think situat uncommon curious other solv method1 use repo b client call servic creat repositori mean depend need address issu see peopl anoth abstract repositori factori inject factori servic class solv problem issu repositori factori use io c servic locat consid anti pattern mani peopl repositori factori depend io c framework might undesir depend inject understand applic littl understand io c except composit root top applic good approach use
effici code design pattern search use singleton pattern difficulti figur effici thread safe code design follow problem time would realli appreci advic input best approach basic search various pattern insid data set would like one master class call class pattern think make class singleton pattern static class wish one instanc master class code class singleton pattern pattern jon skeet time chosen singleton pattern want singleton hold nest class one class pattern want nest class instanc class e static would like singleton instanti nest class perhap use factori pattern need sure whether reason correct advic would great appreci plan add various pattern class nest class pattern make sens outsid master pattern class also pattern interfac pattern list data static want data retain throughout lifetim applic static field nest class begin realli get lost method search pattern point data point would like follow question pleas note fair new c tri learn best e comput effici approach take problem pleas suggest altern approach know incorpor factori pattern instanti nest pattern class done suggest miss anyth need consid consid far
server side client side mvc approach impos less load server best approach develop dynam web app multipl view dynam content regard server load responc time use server side mvc sailsj asp net mvc render display view use api get data server client side mvc angular render view approach impos less load server
separ unit work ef bound context ef bound context like follow tri implement uo w repositori pattern solut seem end creat mani repositori case dedic separ db set bound context therefor mani unit work case repositori lot effort seem feasibl sinc actual model much complic exampl question forc go way separ uo w bound context repo way avoid simpler way thank advanc
decor pattern solv issu aris chang under code understand decor solv problem need mix match behavior suggest could use decor pattern solv issu brittl might aris due chang under base code specif microsoft provid activ directori membership provid virtual method creat updat user updat method updat inform like updat felt creat new class inherit activ directori membership provid could call base implement write code updat extend inform base implement cover suggest activ directori membership provid 3rd parti code might run issu could solv decor pattern seem issu aris chang under code could mitig decor pattern miss anyth
perform datatyp pars string mvc use mvc pattern asum simpl situat want send number exampl number page book control setter set method look like control retriev inform textbox view reciev string would perform convers would control would better setter accept string input control convers convers setter would impli busi logic get control
asp net mvc view model id develop asp net mvc applic allow model updat need way know take updat view model match back model updat seem differ way wonder proper mvc much like control store data model proper mvc view model id pros alway ensur match model con real care none ds chang els user updat row access bare minimum view model id pros far less check need avoid user updat data access con far difficult track view model match model still check view model ds make sure user updat data access view model id pros need check ds updat con abandon stateless two question first correct incorrect choic mean choic matter opinion second question opinion base ignor second correct incorrect choic clarifi comment talk view model mimic databas object think
save entiti relat use unit work pattern use unit work pattern commit new dirti delet entiti db use db mapper exampl entiti student class student regist dirti add entiti dirti pool save db commit call problem student also hold collect class student get class sure integr unit work pattern commit new updat delet one recommend integr
load data thing like sidebar mvc framework seem extrem basic read lot relat question found proper answer use rubi rail similar mvc framework suppos load data display sidebar multipl page option know problem see load everi control method need caus duplic code load method applic control execut control would caus data load even need load direct model view mvc ask elsewher peopl told look insert anoth pattern use ajax call get data although might also work look answer regard mvc framework server
model relationship ddd sens simplifi requir user creat question multipl answer question must least one answer clarif think question answer test one question sever answer may correct user actor prepar test henc creat question answer tri model simpl exampl match real life model express code minim potenti misus error give hint develop use model question entiti answer valu object question hold answer far possibl solut factori insid question instead creat answer manual call creat answer add question manipul answer set properti way question crete answer also prevent answer without question yet control creat answer hardcod question also one problem languag code user one creat answer question person like creat valu object depend develop fill valu sure requir add b factori insid question take say kind method question similar solut method take mandatori data answer creat one also ad question problem duplic constructor answer good reason also question realli creat answer c constructor depend let free creat object selv let also express depend right constructor give hint develop answer creat without question howev see languag say answer ad question hand realli need see constructor depend take opposit opposit situat answer exist without question make sens question exist without answer make sens also languag clear question answer e common way call common way first thing ppl usual loos version two answer sinc answer question may exist without special hint bind togeth f combin combin c e cover way relationship made help develop use whatev best question know peopl may choos one answer base hunch wonder variant better good reason also pleas think insid question would like squeez best practic could appli case agre use case creation entiti similar also let technolog agnost eg want think orm go use want good express mode wisdom edit pleas ignor properti question answer relev question edit text chang constructor need accept necessari properti valu need may question string map string differ languag status etc whatev properti pass focus assum pass necessari paramet unless said differ thanx
granular event record event sourc grow understand event sourc understand provid mean record event happen given common begin state audit log record event event replay achiev final state know sometim event trigger event consid system whole imagin event trigger extern input user anoth extern sourc event trigger process intern side effect call former origin event latter secondari event origin event trigger domino effect secondari event sinc secondari event hing direct origin event secondari event record part audit awar sourc discuss depth pleas cite
inject data depend angular direct current implement angular js direct fundament reusabl widget compris select box tabl popul base item select box point content whether inject data depend direct direct init databas whether expos select box option model allow user popul control select box option alway least alway singl sourc endpoint case tempt wrap data retriev intern direct avoid requir everi user widget inject servic depend control order retriev data seem violat seper concern altern bake initi violat dri one blog read tangenti approach made point actual write declar html ngular js app dsl context permiss mix concern approach data depend scenario follow best practic also creat direct optim given ms dsl
servic layer catch dao except wrap servic except three layer spring web app dao servic control control never call direct dao servic layer right time dao except runtim handl caught jsp show error messag end user servic layer catch dao except wrap servic except let suppos servic except runtim well handl neither differ throw data access except instead servic except thought present layer know data access except see point catch unrecover except wrap
point behind build abstract layer pdo adapt class instead use nativ pdo built pdo adapt class thought time anyway would good idea fight make sens design pdo way keep creat special adapt given databas connect understand seem replac pdo version pdo understand would need extra layer abstract exampl edit found think may overkil could possibl class thing nativ pdo without compel reason
issu static inject spring use spring boot spring xml project wrapper da os data access servic class serv db servic layer servic da os inject spring xml use autowir want xx xutil class provid static use function function need access databas access db servic dao static method autowir static db servic dao xxx util class may good practic even know whether spring support static inject good practic
debug xml annot web contain annot variant xml configur java ee guess better keep thing java manag code control problem howev still remain annot cannot effici debug diagnos issu except thrown give full stack instead head reason happen annot use reflect debug work reflect unless coder place breakpoint alway possibl anyon way around anyon experienc problem fix issu java ee web applic
static member abstract implement polymorph java c php develop oop program experi find ask question static member abstract implement polymorph especi situat involv factori method exampl abstract class resourc public void someth abstract class user lt resourc extend resourc gt want instanti resourc option creat abstract factori user class protect abstract resourc creat public void use creat someth class file user extend user lt file gt bit clumsi overrid protect internet creat return new file abstract static method would get rid abstract factori valid code abstract class resourc public void someth im sure child class would get pass though static abstract resourc creat abstract class user lt resourc extend resourc gt public void use resourc creat someth anyon know kind behavior approv oop sorri sound like silli question
interfac enumer file tri design generic interfac enumer list file iter open file allow consum code access file perform task close file first seem like like simpl enumer pattern consum code actual need know status file open close rather singl move next method interfac open next file close current file method may return failur status addit close current file need way report whether file save close current interfac exampl consum code mayb question care document troubl deal differ possibl state draw state diagram help possibl go everi state everi state consum code call close current file open next file return open fail would close status return even file never open close current file call open next file close automat next call open next file except thrown rather someon implement interfac worri get right problem much simpler singl open next file method respons close last open file open next file yet singl method need report result open next file well close last file also becom tricki consum code final state file determin follow iter anoth way look common design pattern suit tri activ diagram show overal process
object busi layer dto logic let say spring mvc project use dto get data databas pass data ui let suppos user dto busi layer someth need put logic user dto pattern say logic allow simpl logic transform user dto user object order logic make user dto give ui use user dto process busi layer thank
ioc present infrastructur layer question would like set forth depend map config file project refer project contain concret class scenario use term c microsoft uniti visual studio got present layer web servic project winform project infrastructur layer communic repositori core busi logic layer defin interfac infrastructur must implement project present di applic web servic refer core depend resolut project di applic winform refer core depend resolut project infrastructur di applic data communic repositori refer core di applic depend resolut regist depend core data project two project refer core di applic core defin interfac refer noth exampl exampl say di applic core repositori interfac di applic data repositori class di applic data repositori b class fine say depend resolut project regist depend would like webservic web config map repositori repositori winform app config map repositori repositori b webservic winform problem believ neither iapplic webservic winform know iapplic data break final portion call di applic depend resolut error way get around without includ refer di applic data within di applic webservic winform mayb look wrong way know kind break notion separ concern present layer know care data persist repositori also want drive depend base project run
one present use multipl view mvp use mvp creat android applic take data server set activ forc creat one present view view uniqu view differ textview label present read valu model call setter method control view second view need differ present need call setter method view interfac mean view present one one relationship ok view present one one relat mvp approach correct edit use one present view present implement function uniqu view howev pose reusabl problem present lot common code eg call helper load data url etc plan use either abstract factori pattern strategi pattern problem abstract factori pattern tomorrow present need extend anoth class cannot done code java advis use abstract factori pattern java present group
proper model view design read model view control model view present model view view model general under concept seem pretti simpl understand keep pretti visual sciencey gut separ ignor possibl get logic peanut butter design chocol cool like problem still bit fuzzi third part model view one everyon seem idea call proper plain wrong go nut tri figur present becom view model view present job rambl rather ask someon explain differ alreadi done time time know read articl count curious hear thought programm model cobbl togeth said would classifi design perhap import see anyth obvious suck sure love hear good truli solid design much rather given solid advic prais note use bridg mysteri third part model view avoid subconsci suggest model author data receiv inform request chang bridg contain perform logic data relat data inform bridg data chang data bridg express interest word edit allow outsid subscrib know noth monitor state calcul result zero knowledg view view concern provid user way view manipul data receiv inform data updat bridg contain perform logic present data control user inform bridg user perform action possibl affect model inform bridg inform interest zero knowledg model bridg coordin translat model view make appropri format chang inform pass model view retain inform need know knowledg model view addit note complic program common multipl model situat bridg typic take job coordin translat multipl model thus becom author protocal api design model built e g build card game program want build altern deck shuffl model use bridg determin function requir proper communic bridg small simpl program one view model common bridg assum function avail either side howev program becom complex recommend view model report function bridg avoid ineffici buggi assumpt think cover mean welcom question might design tend use likewis encourag suggest alway thank time
reus common code present applic view common field like name icon etc one view list contain field click list next view detail call function view e g load present call load data url url view differ common function includ load xml data url set load progress bar activ remov progress bar method set activ view common call xml parser differ view specif field common action button click doubt shall use present one present view mani method differ mani present correct design strategi shall use helper class shall present base class shall use startegi pattern right way mvp correct
clean composit root anyth object construct poor man di manual inject applic pseudo composit root look someth like var connect set new set sql paramet var data loader new sql data loader connect set var data data loader load data yuck var depend new class lot object construct var data processor new data processor data depend data processor process quit happi code intend contain object graph construct new except final process method call howev unfortun logic esp time consum data load condit sneak correct design pattern case thought chang code data processor public class data processor public data processor data data depend data data dependeci depend public void process logic base data public class data processor public data processor data loader data loader depend data loader data loader dependeci depend public void process data data loader load data logic base data howev prefer solut chang perfect good class impli data must alway load alway case unit test exampl load data creat mock object
appropri valid depend filter paramet mock stub express compil lead enforc tdd project say follow uncl bob robert martin solid principl one rule reinforc call singl cog rule one cog implement chain unit test compon repositori repositori depend mock repositori compon fetch repositori pass predic filter list item return implement stub data get return mock moq repositori execut predic pass compon invoc filter stub data test valid filter accomplish obvious filter requir stub implement mock repositori invok mock repositori implement lead clobber implement replac invoc concern execut express stub mock invok mock test much wonder other felt edit previous state brought hundr line long express visitor util valid express explicit match express turn use
softwar access gsm termin send receiv command valid result current implement softwar use gsm termin perform action action send messag check balanc receiv status report messag set pin communic termin program run serial port send command basic string devic execut return messag depend command limit set differ command need execut return messag ok error wait return valu possibl incom messag notif return instead actual valu program wait arriv later need consid futur gsm termin shall exchang easili command set most standard return valu differ manufactur even mobil oper struggl find good generic design concept task perform follow check respons belong command sent check respons valid command work rest system run well reliabl send receiv timeout retransmit case error etc verifi return valu happen belong sever command sent use event base observ system everi time return valu receiv publish subscrib process result send command serial interfac compon regist observ unregist job done two subscrib wait result expect ok get complic moment appreci help inspir
web form mvc web project work larg legaci project build asp net web form idea add mvc librari project toss around know possibl plenti articl avail wonder recommend anyon done someth similar idea could build new area applic newer mvc pattern keep legaci page run alway edit clarifi consid mvp pattern alreadi use part project someth similar describ articl
entangl inject class use bad practic argument notic peopl prefer readabl code proper structur one exampl show basic mapper class differ mappabl instanc inject mapper use instanc know map data question bad practic suspect problem method static factori wrong class make mapper hard coupl map class uml class diagram
manag coupl model class class diagram game project stuck coupl problem context projet turn base game two user play got unit map play player unit dead predefin number turn reach round player review unit one one move unit unit got movement point left skip unit turn model class irrelev question cut game class hold relev object player unit current turn player alreadi play next turn object hold player turn object keep track unit alreadi play unit left play problem let suppos creat get next playabl unit method class player turn iter current player unit find one play unit list therefor call game unit get unit paramet game turn current player game refer current game instanc let suppos creat move method class unit unit got movement point left call game turn player turn finish either select next playabl unit finish current player turn alreadi play unit turn lot scenario need access class method e g kill method unit check current player still got least unit aliv call finish method game otherwis question think coupl avoid correct wrong though thought two possibl way deal coupl solut construct instanc class could pass current game instanc make sens unit instanc turn instanc belong game could implement method get next playabl unit move kill easili use instanc somehow feel comfort share current game instanc model class even though read principl depend inject solut analys method depend e g kill method depend game unit unit player retriev player own unit game unit get unit find unit own player game end end game unit count player reach find depend common root exampl common root game unit unit game unit game game anoth exampl depend game unit unit amp game unit someth els common root would game unit implement method common root class guarante need access parent class associ hierarchi risk lot method game class common root lot method game class lot code game class method belong right class consid method kill unit expect find unit class direct game class goe move finish solut think would best approach particular case
mvc model use librari librari use model build res tful api use mvc pattern order make control skinni code reusabl outsid api e g cron task put much code servic common known librari router deleg control deleg servic use model wonder make sens servic use model model use servic
event sourc perform penalti tri convinc peopl compani switch event sourc softwar product consist mani modul like modul wiki blog document etc would like use event sourc also allow easi collabor artifact like blog histori chang minim concurr modif issu also featur stage modul stage offlin peopl work appli onlin chang finish one reason one want go direct amount event need persist event need granular sinc varieti action user oper event ad read one point time concept appli event modul need keep track full histori recent one wonder experi persist event may influenc perform system
communic multipl present mvp design applic use mvp pattern edg case system reli communic multipl present view call present oper return result x view view view interest result x respect present respect oper get result x applic main view main present effect hous view present one solut give main present refer present present present present result oper call present anoth implement facad layer hold refer present facilit call handl situat
access logic go control want know logic relat permiss access control belong control applic logic model busi logic current control someth like kind logic applic logic busi logic ps alreadi read put busi logic mvc design still doubt
ddd edit aggreg descend ddd approach suppos order aggreg root line descend order object privat setter properti builder handl creation cluster object far know everi action cluster goe aggreg root right instanc need command hide line simpli hide method line object instead hide line method aggreg root travers cluster object line point imagin scenario like way someon could someth like unknown side effect right side effect clear complex scenario could creat headach could take counter measur accept id paramet hide line mehtd e public void hide line guid line id check hide line line line method line actual order line collect handl consist issu solut meaning complet miss point post scriptum comment songo order aggreg note real scenario order complex cluster start saga process manag life overse order publish process tri imagin real scenario order need publish soon order publish request event catch saga start tri valid order check line valid line hide thus command handler someth like
architectur mobil android chat applic want develop chat applic remind bit whatsapp learn project current android android cours requir user regist data phone number name user write messag friend also use applic messag written db think mani write less read messag sent server written db notif sent receiv mobil mayb futur would also want add web interfac might includ also mani read db messag read want updat db think first use sql store user sql purpos store messag mongo db messag data grow larg scale fast use rdb might problem think right use architectur mongo db problem sinc might mani updat messag written receiv phone accept messag updat sent server indic messag receiv mayb miss someth pleas think think better architectur appreci contribut thank
domain model object attribut good practic simpl question model domain object includ attribut meant persist databas serial specif format understand domain model object reflect data store model tight possibl rather carri topic attribut right track
differ technolog connect form web stack littl confus possibl implement front end use common languag like html css javascript server side process use languag choic say python java awar lamp stack awar rail full stack framework awar use thing like spring mvc grail sure would combin technolog choic exampl java great api lot realli best choic develop front end stuff non enterpris environ python great librari process visual data yes know django suspect want use custom technolog stack creat res tful soap api pass data use xml json would someon abl clarifi understand correct
pass control sub control parent control java mvc design pattern pretti new java done plenti research know mvc howev implement mvc java difficult task follow tutori help realis event listen usual embed anonym class segreg control class make conform mvc pattern come across problem tri add code mvc design code main control take care menu toolbar main panel oper problem main panel becom switchabl workspac compon chang base user action exampl login compon place main panel user log login compon replac workspac compon workspac compon interchang compon depend work done question compon within main panel control pass control back main control vice versa user click login button assum login success best way call main control order instruct main panel switch compon login someth els bonus question need pass control login control say workspac control alway go main control way communic direct uml class diagram depict high level
client vs creator factori method abstract factori pattern page descib one import differ factori method abstract factori differ accord page factori method pattern creator e entiti creat new object client e entiti use creator class precis pattern defin method rest class client abstract factori howev creator client separ class creator purpos creat object separ class client distinct correct creator method factori method put separ class would creat problem similar creator class abstract factori class client would creat problem updat side note shock see ask well known well defin design pattern get actual contradictori answer thread ask peopl search onlin resourc basic design pattern start think peopl actual truli understand even though use daili basi believ understand
encapsul one busi stori use case one class like class like servic bunch busi method aka anem model think instead class per use case inspir cqrs even use event sourc believ kind encapsul would make sens servic layer applic layer would simpl consist command user instanti pass execut would make sens requir exampl user creat poll question least choic user updat poll choic choic ad user may vote choic question updat time must updat etc busi scenario use case howev want call contain busi logic like need least choic etc think use present layer executor inject whatev need inject that
unit work concurr handl read inform unit work pattern one thing clear happen request coupl record thread anoth thread remov one record commit chang remov record first thread given remov state problem approach program check everi time want use record still exist also lock record want use cannot think approach problem solv practic
mvc site entiti framework use db context look coupl mvc tutori asp net websit notic numer make use entiti framework especi ident provid stuff mayb experi bit old school believ websit never direct talk databas even wrap repositori inject servic work general design softwar use n tier approach anyth requir littl bit load web wcf net tcp databas use dapper most entiti framework look ident provid come box seem numer call hit databas direct everi page load seem gain bit initi develop would requir much higher invest time amp hardwar later websit run load use mvc ef way
domain model properti alway set know domain model properti alway set kind code smell design error put exampl app let read internet magazin use rss domain model use case use briefli magazin librari consult profil magazin explor news magazin extract entiti librari magazin magazin profil magazin news class point app explor magazin use magazin profil display list magazin point explor news explor news magazin profil time depend case sometim object magazin properti magazin profil news set empti question design error approach properti establish accord window user brows work object interest case magazin profil news
proper mvc design helper class read model view control wonder someth like xyz client class would fit design split mvc easi view display code handl user interact mayb persist driven databas entiti someth like paypal client date formatt class fit talk model think databas entiti like student cours helper like paypal client model control someth like date formatt helper format date fit prevent class design mvc without would get massiv control code
help improv db model strategi use refactor sql ridden legaci code question design pattern use help refactor legaci sql code separ class goal bring concept data separ databas separ also latest modern techniqu may yet awar bring qualiti spaghetti code test less legaci php code base detail look good model help refactor db code larg legaci php project thought first use tabl modul see sql complex think domain model may better still know implement descript abstract mayb servic layer need honest kind lost sampl sql deal one mani tie databas multipl tabl consid want decoupl sql app decoupl app data handl complex sql queri like suggest current sampl plan find next avail stray sql insid legaci code determin tri e save updat data object model creat add class best encompass sql exampl sql check inventori use item place class call check inventori data happi mayb learn someth make want chang name class exampl e handl item put class directori structur databas handl e db handl code function class say inventori use item item like repeat think work feel confid plan hope find solidif modern industri accept practic find plan question better plan avail model aspir toward
simpl injector onion layer architectur tri find good resourc advic etc project taken work background start applic part mvc part webform separ project solut tight coupl dal busi code place refactor entir solut onion layer architectur almost two year ago use ninject kill soap servic favor web api move vast major webform mvc overtim still left webform day number overal major success regard maintain stabil get busi logic belong late though perform grow issu establish multipl caus surpris bad ninject impact perform research found ninject infact one worst di framework perform stand point mind move simpl injector impress us problem rewrit work gradual move abl know realist blend ninject simpl expect utter chao mind clean code make sure would work ninject simpl final step actual wire whole thing except everi guid tutori exampl found actual ui project mvc refer interfac project inject class exampl onion architectur strive make sure front end direct refer support code handl project separ mvc project handl inject therebi allow never refer ui backend code thus prevent accident bypass interfac di would requir direct refer backend code opinion fundament defeat strive perhap head togeth tire mental holiday alreadi heck time tri figur accomplish ninject simpl injector sure stupid easi beat head hour help would go long way
languag best support stack coroutin various languag support flavor coroutin one way discrimin coroutin whether stack terminolog base ana lucia de moura roberto ierusalimschi revisit coroutin doi cite seer x stack coroutin allow yield suspend coroutin done function call coroutin e nest invoc impli whole call stack preserv coroutin suspend non stack coroutin impos restrict yield suspend done bodi coroutin clear stack coroutin advantag term modular expens implement question therefor languag best support stack coroutin although look various languag includ python rubi javascript lua scheme terminolog languag differ descript often unclear prefer expert advic p awar fact coroutin implement use continu question specif languag nativ support coroutin
transact manag hibern dao design pattern mani tabl everi tabl dao interfac dao implement class exampl dao interfac exampl dao implement class exampl main method question handl transact dao impl pass session object paramet everi dao impl better approach
deal user user own data api question way architect api structur api structur far like class total mani similar reduc class remov field relev question profil id uniqu identifi profil allergi x ray allergi id uniqu id allergi profil point back profil own allergi name allerg x ray id uniqu id x ray profil point back profil own x ray thumbnail compress version x ray imag full imag full uncompress x ray imag use case profil sent wire full except x ray class thumbnail sent instead full imag user wish see full x ray imag make anoth call download full imag done save bandwidth possibl user x ray 10mb user make modif allergi x ray chang would sent back server wast send entir profil object back like send individu x ray allergi object back server concern api return respons format json user download full profil
avoid switch use laravel php framework although question exact laravel structur control method rout order page depend user role need includ differ view differ logic role look like repeat pattern rout access mani role know use repeat els switch kind stuff best solut also function becom quit big much depend logic cours break subfunct lie index admin index manag index custom still sure good could anybodi explain deal prefer use laravel use dev version updat full code
usag mvvm os os develop guilti massiv view control project search better way structur project came across mvvm model view view model architectur read lot mvvm os coupl question explain issu exampl view control call login view control login view control swift model class creat view model call login view model put valid logic network call login view model swift first question simpli mvvm implement correct doubt exampl put login button tap event login button press control creat separ view login screen coupl textfield button accept control event method tie ui element next question also login button user tap button usernam password valu gte pass login view model valid success api call question pass valu view model add two paramet login method pass call view control declar properti view model set valu view control one accept mvvm take valid method view model user notifi either empti mean check result return view control take necessari action show alert thing login method alert user request fail go next view control succeed notifi control event view model possibl use bind mechan like kvo case like bind mechan use mvvm os kvo one read quit suitabl larger project requir lot boilerpl code regist unregist observ etc option know reactiv cocoa framework use look see nativ one materi came across mvvm internet provid littl inform part look clarifi realli appreci respons
precondit check ad remov listen imagin follow interfac check null valu add remov good idea remov check listen regist e g listen b never regist remov behaviour help develop identifi problem without creat new one like illeg argument except
structur angular app end one huge control view angular app concentr function around primari entiti sever satellit entiti ui effect one screen tab one satellit also modal dialog content coupl satellit deserv subview produc click link tab control screen grow rather larg set rest call entiti along function produc dismiss various dialog subview tab stuf main screen well insid tab set split file give tab control view
good practic call control function anoth control case handl logic search one control generat data base search return statist good practic call control function anoth control two control never talk
build calcul use mvc program java month thought good challeng test skill would build gui calcul recent heard mvc idea thought perhap foolish would good fit pet project run troubl design sure proceed model view control class model respons actual calcul view draw calcul display control pass button click view get display valu model pass view ah button want button interfac button instanc uniqu id number name function would control build collect button sure let view model use button view draw model calcul thus revis list control pass click view return button id model get display valu model pass view work figur would come togeth sever relat question view realli respons sort button click correspond done control one type button necessari distinguish number oper equal etc three mvc class need know differ mvc even right way go fundament accept way build oop calcul mvc inde appropri wrong think ad button realli thrown
alan kay big idea messag alan kay said oo messag object drew parallel biolog cell view entic vagu way understand someth like cellular automata cellular automata grid cell varieti state updat event sent cell respons cell updat state base state state neighbor assum start point local differ unless defin neighbor object connect one updat rule varieti messag event object respond use cellular automata awar power awesom global emerg aris local interact think appli sphere object breath take perhap put anoth way extrem event driven system network object form architectur global event defin inform flow interact object defin system behavior understand correct love clarif even exampl code written messag system vs code make concret
mvc model contain subview model background colleagu differ interpret mvc mean given problem come radic differ solut come java background everi compon mvc may tradit model object come haskel background littl experi oop problem space problem tri model act littl bit like desktop environ notion user session perhap login desktop background process desktop say tune finder etc model properti minimis etc agre follow point think hmvc best represent agre two mvc object session desktop process applic want process notion session backlink place disagre howev core mean mvc affect keep list process user desktop interpret argu valid point tradit easi model code render system say list process list process control object within session control turn model separ object insid mean signific amount state within session control session model relev session view need render seem much harmoni abl read internet brief search interpret interpret requir largest architectur chang seem harder implement code believ conceptu correct would like somebodi explain case present differ model mvc align interpret highlight strength weak pattern make inform decis neither us strong background softwar architectur see mvc triad three interchang compon model control view agre abl read internet sourc say thing along line like view control model interfac interchang differ effect way imagin work follow swap model chang way data valid store swap control chang page behav anyth could alter c onceptu data content page swap view chang way page display reason given model view swap control chang data page initi render control chang behaviour content page think align conceptu visualis control station control rail system plan rail road model actual physic manifest look feel track differ flavour say real virtual 3d view disagre argu data display user session view chang differ process desktop model process relev data session model contain list instanc process model mean use random session control session view conceptu show data process desktop argu make sens model never know anoth model mean session control would list process control within control object link model given session view session model differ session control data display user radic differ pleas argu interpret help us reach inform outcom thank time
php mvc backend os app essenti question develop php back end os applic would implement mvc architectur php side sinc client side os alreadi mvc architectur sinc pass happi littl json packet front back end server client employ mvc architectur thus implement privat api key authent secur measur devic level idea suggest welcom
rest backend restrict access human design rest backend work databas want user access data view webpag work mvc js framework without log time want prevent user make direct api call backend take advantag data gather kind statist aggreg mani site somehow possibl think generat session base captcha mayb better solut thought tldr want code run browser access backend p know peopl use selenium scrap site want make difficult good solut
clean architectur user go use case layer domain layer recent read articl clean architectur tri get usual oo habit interfac design everywher program someth describ system instead system built paraphras uncl bob articl get use case layer author mention left user layer user specif applic make refer realli think got board game user would still domain object case order product way see web app light saa user part domain imagin cloud document store like dropbox store document seem document definit domain object also user busi involv store document user without user violat aspect busi get user consid part system way document thing someon clarifi principl reason behind
bad use di inject constructor paramet runtim two class first one inject instanc type engin second one inject owner name ticket engin version version wonder version bad design bad
use reflect vs creat new class friend argument better techniqu use follow scenario applic need test number compon let call egg compon bag predefin sub compon compon input applic way chang annot compon sourc set valid sub compon programat possibl associ egg valid done manual new egg finit number egg map done run valid egg see egg good rotten way config file consist map egg valid eg read file use reflect select appropri valid list class implement valid egg friend avers use reflect prefer add new c class egg everytim new type egg ad class repres egg run appropri valid egg way better prefer reflect method everytim new type egg show need edit config clarifi egg select predefin list sub compon assum sub compon henc need new valid cannot enumer possibl egg mani
develop gui logic team right way plan start small project friend develop gui use java fx mvc pattern respons model logic question achiev save parallel develop compani would write interfac model togeth specifi function need control thus implement thx advanc
reus creat new builder implement builder pattern project work use design pattern creat field compon div tabl panel boostrap director compon class make order builder case input compon builder class director compon builder null make arg gt builder make appli builder arg set result result builder get result return result make input name properti gt builder new input compon builder return make appli argument sourc input compon builder class input compon builder extend builder constructor gt input new input compon make name properti gt input extend properti input set name name obj lt input gt obj attr name name obj val input valu input placehold obj attr placehold input placehold obj builder helper appli properti input obj obj builder field helper appli properti input obj input set object obj set result input return input input compon builder generic input field want creat specif field like email field zip code field etc need creat anoth builder extend input componet builder class director need creat anoth method make zip code field chang recip sent input builder base class base class class builder result class compon constructor gt id null name obj null attr class css extend data gt extend data get object gt return obj set object obj gt obj obj set name name gt name name get name gt return name get properti object compon arg gt result consol log arg argument key arg arg consol log key arg result push arg arg els null consol log result return result abstract class field class field compon abstract extend compon constructor gt super label null placehold null onclick null onchang null onfocus null onkeypress null onkeyup null onkeydown null oninsertednod null bootstrap null onblur null mask null valid gt return true input compon class class input compon extend field compon abstract constructor gt super type text valu call make input cpf field director compon make input cpf placehold cpf mask bootstrap true
make concret factori count famili object accord stage problem program game game stage first stage static goal static shooter game second stage goal move third one move want use abstract factori creat object famili want know follow design right factori factori know whether make concret factori count famili right hand accord problem exampl scenario two famili object product first famili gun second goal stage explain right factori count famili product famili accord stage
relat depend inject singl instanc singleton read singleton bad great explan depend inject solut invers control asker assum singleton singl instanc synonym other point singleton restrict exampl singl instanc question respond go singl instanc talk depend inject state cach need singleton may need singl instanc want avoid fetch data multipl cach instanc mean actual expos everyth everyon di one interfac case cach howev multipl instanc instanc video page instanc account page etc video page implement media cach extend cach di depend class make use cach abstract use cach interfac type paramet list paramet list constructor use constructor inject etc multipl instanc x video page account page etc cach singl thing design pattern instanc sinc instanti interfac singl instanc depend inject separ idea respons confus also know peopl say depend inject altern singleton singleton forc one instanc even tri instanti depend inject singl instanc cach explain earlier multipl instanc class ultim implement cach interfac
approach manag ad user insid hr system want start new hr web applic base asp net mvc amp entiti framework almost case user insid hr system exist insid ad new user join compani creat new user insid ad hr dept add user hr system question integr web applic ad user think follow approach creat tabl insid system name ad user field user id f name l name email defin sync job run daili basi queri ad user popul db tabl accord sync job add new user delet remov user updat user info defin insid ad case mang user insid system easier exampl modul name person display person ad info fname lname email address etc annual leav count hire date sick leav count hr specif etc advic approach pleas
c static practic come dynam background dappl c come sever year php find languag particular difficult although consider construct get use question help chang way think use c specif help think solut static languag spoil dynam one experi creat simpl copi symfoni event dispatch use c replica event dispatch final copi php exampl differ dispatch event error event arg child class event arg fine instanc substitut howev php declar listen make certain correct event given method howev c work match deleg deleg void event listen event arg arg know net alreadi event system look like reinvent wheel also familiar symfony2 know event dispatch typic exampl event usual global could case defin method conform requir deleg use introspect determin whether event handl implement add listen dispatch generic method cost defin dictionari dictionari lt string object gt question boil whether approach wrong way whether type semi dynam program suitabl trueli static way implement pleas bare mind exampl experi real world would look tradit practic implement specif scenario edit use generic object dictionari solut refactor
appli initi demand holder idiom variabl level rather class look idiomat way implement thread safe lazi initi configur collect retriev db insid spring bean decid adapt initialis demand holder pattern follow issu watch adapt approach like apart time issu need valid email address io c contain initialis
use enum creat singleton pattern would use enum creat singleton pattern purpos would serv convent singleton pattern seen use code use enum creat pattern without benefit confus situat enum use store set name integr constant simpli method
produc json object jpa entiti rest api rest servic produc json consum json lot simpl crud oper initi idea simpli use da os direct control exampl car persist entiti save method wrapper entiti manger persist heard general bad idea use persist class control api true altern good idea need servic layer would need assum applic grow oper get even complex would need servic layer
strong type view view model mvc learn mvc book use favor strong type view concept new tri better understand design philosophi strong type view typic result creat view model sinc domain entiti unlik inform particular view may need problem need updat view model whenev associ domain entiti view chang also see view model much use port applic anoth platform say web desktop web mobil better could declar object collect etc popul control abl access variabl direct view control would look someth like view would look like wrong approach make strong type view extens view model better edit strong type view explan edit know code work illustr question concern keep model viewmodel view sync view chang chang viewmodel chang bool nullabl bool model chang viewmodel refer model separ viewmodel everi view web site reason larg lot place updat chang thing one place chang place place thought good program practic tri avoid sort issu
initi field constructor argument know field initi initi field constructor receiv paramet ask best practic three option effect provid result consid happen behind scene think would insignific general question curios sake specif problem moment although past use array list follow exampl case know initi end actual want initi anoth exist array list harm preiniti exampl initi array list initi field initi constructor initi paramet
model simpl traffic simul want write simpl traffic simul one road intersect first thought cellular automata model limit under discret grid system street could independ locat level current think three approach would like get thought street entiti agent part entiti drive intersect endpoint entiti agent drive endpoint b intersect street entiti merg point one system remind somehow benefit moor vs meali machin state vs transit think would best represent go mention entir system limit discret valu would like anim transit agent street b idea appreci
templat pattern vari input type overridden method tri use templat pattern defin generic algorithm java method need overridden take object input object vari depend concret implement decid use inherit input paramet pass parent object overridden method abstract class overrid method concret class downcast child get requir detail said downcast code smell achiev without downcast better solut exampl code show issu
reflect perform iter probabl larg excel file wonder perform reflect situat iter probabl larg excel file let say max go done time time implement mate someth like iter row probabl go perform issu iter like
could avoid singleton case use dart client part web app applic manag contain list applic instanc refer servic use applic follow diagram see applic manag singleton servic contain use app make sens need one instanc applic manag servic easier access servic without need pass refer need preserv state servic almost servic cach found way avoid servic singleton make privat librari featur dart initi servic applic manag make applic manag privat top level librari would appreci thought way avoid applic manag singelton
massiv view control io solut sure everi new os develop follow problem view control get fast crowd code various purpos easili get line code look like two basic common screen form screen tabl view control screen far read two differ solut first solut base notif complet separ view control intent view model thus reduc code view control think downsid break code similar go structur look like second solut keep crowd view control button action execut insid vc use librari like tp keyboard avoid block kit solut base categori second solut code drastic reduc view control still lot respons think solut better better one
mvc insert view sub control parent control control top level control main control sub control main control instanc control sub control subview goe insid main view sub web element good way insert sub view main view think give sub control sub view refer main view append subview return html sub view render function sub control return main control main view render much better way
pattern cach da os strategi decor build php system servic da os domain model pattern time implement cach system da os would use decor pattern mayb strategi pattern up down one ad requir like told comment answer edalorzo need abl use da os without cach moment method sometim accept cach time
appropri map dto back entiti counterpart read implement dto object hold subset valu data model case immut object case need pass either new valu chang back databas work direct data model actual entiti dal present layer creat dto pass present layer busi layer convert entiti updat db via orm call write much code assum need present layer concept data model go approach fetch object bll layer commit chang
eventu consist heard peopl talk eventu consist exampl question answer eventu consist compar transact consist happen sort impact eventu consist design system affect mitig provid good user experi
unsur decor design pattern fair new use design pattern current make small game uni cours use decor pattern creat differ class npc howev think misunderstood decor pattern work moment chang class npc attack valu health speed stat realli unsur way pass valu decor object decor wrong impress decor pattern
possibl save load decor object wonder easi way save load decor object c never done file handl c current object type need save object store valu health damag etc object least decor know could make save function class howev unsur would load object edit way set decor like new champion new monster champion decor
tdd bdd test writen test orm write orm node js use mocha chai test want know test write insert test also queri test check tool insert correct data also organ test exampl begin write test exampl write test organ plan test orm
blank empti valu object instanti structur wonder consid best practic instanti blank valu object java e g assum valu object class foo could blank would creat method like clean solut perhap ad blankabl interfac someth would someth simpl like better lean toward first exampl still sure wide accept techniqu feel bit resist still open use guava option lt class seem like work around solut circumst
key valu observ model view violat mvc mvc control go view model control one observ receiv chang model view updat accord know sure break mvc control regist unregist view observ model view would know key path kind chang valu without refer model object assign model titl new titl view map properti chang action like ui label subclass assign self text new titl break mvc
explain mvc non programm need explain mvc non programm name manag depart context progress report one thing refactor codebas toward mvc separ mvc separ might ask need might ask read fair technic answer like mvc realli entir satisfi sinc talk non programm may nod head probabl understand need realiti fulli grasp mvc separ concern duti function class block task thing order improv flexibl make chang softwar separ databas view view busi logic use techniqu like di oo tool techniqu someth consid mvc separ next time explain mvc non programm background sale account exampl would tell
class tabl inherit child tabl need primari key use class tabl inherit architectur applic read fowler map databas tabl class code realiz need id properti deriv class fact caus issu name hide base class properti child tabl need surrog primari key foreign key relat parent record also serv primari key child record fowler get specif cti use alway surrog key departur convent feel quit right good reason stick take
ad graphic view system current program java simul railway movement essenti train arriv platform pick drop passeng proceed respect signal possibl howev current exist program state actual graphic view happen would much use one could see diagram railway track train everyth x coordin respect j panel drawn probabl use field method would use term depict current state see two princip option throw everyth origin class howev like sinc properti train exist arbitrari j panel happen represent creat visual class everi class need drawn would train visual class platform visual class etc class would inherit generic visual class would handl coordin problem everi time creat someth basic creat origin thing e train visual seem like mvc pattern never quit understood seem bit unid two class pretti much everyth would best way ad exist program
way write code testabl someth wrong miss interfac call context purpos realli matter except follow method look current di contain applic attempt resolv depend fair standard think asp net mvc applic constructor look like rather ad multipl paramet constructor servic get realli annoy time consum develop extend applic use method get servic feel wrong howev way current justifi head mock difficult mock context test control anyway said feel wrong thought abus welcom
lookup pattern way pass global refer look legaci code java use servic locat pattern way pass global refer oppos pass method argument look refactor approach first good approach indic code smell code smell would best way refactor code introduc depend inject either constructor inject setter inject
activ record equival java question fair simpl closest orm activ record abl find java word term think pattern knowledg limt develop time orm use java come rail activ record background one good enough would easi quick enough learn
two user input alter user interfac two numer input box send amount receiv amount valu differ currenc relat exchang rate receiv amount alway send amount exchang rate user allow click either input box modifi valu caus valu updat got simpl system observ chang either valu updat one problem infinit loop valu updat float multipli divid exchang rate alway creat precis valu ad simpl flag ignor updat updat run ad function user updat amount field requir object listen field result object end chang one amount field set infinit loop alway felt like fragil model problem thought anyth better establish pattern approach model two valu updat
best way creat rest api error respons model error code system rest implement return error json next structur suggest creat special respons model pass need valu properti dev messag messag user intern error code return code would similar model look like implement method e g success respons pass text inform code default stuck first part question need implement model good practis return array direct code second part error code system error code describ document problem encount code best way manag error code write insid model would better creat separ servic handl updat implement model class respons similar greg answer logic additionali hardcod written error model look like look cool code return new error respons error respons entiti found easi chang error messag messag one place instead control servic etc whatev place suggest improv pleas comment
thing differ view mvc app multipl view give overview differ angl item let call view view1 view2 view x use model collect basi one control per view view1control view2control furthermor item edit view item edit control item edit window certain interact occur insid number view action done action chain boil click posit button two valu check whether two valu allow make new item open item edit view creat new item action chain check whether item may shown open item edit view edit item action chain check whether item may chang updat base posit drag would best split function control function view2control item click calcul addit paramet requir view1control call view1control item click guess terribl mess would put common function view x control put function view common control
prototyp bean constructor paramet anti pattern read misko heveri said newabl ask newabl constructor inject appear request prototyp instanti run time e g spring contain via applic context get bean pass argument ad constructor argument conceptu equival new ing object code constructor argument e depend run time recent spring syntact sugar form lookup allow paramet pass constructor stem initi describ blog introduc make easier di contain like spring work behind scene avoid run afoul misko rule newabl ask newabl constructor inject record agre great aid testabl support assert beyond misko heveri blog scope prototyp object construct run time constructor argument avoid made use spare interest whether base liken servic locat rather due misko heveri rule mention
implement sql rdbms compat dao would correct way design dao implement first go target ms sql databas star model yet busi requir specifi applic must flexibl enough would abl migrat sql databas futur requir type sql idea confus cannot seem figur could build independ da os star dimens fact tabl could swap complet differ model might even tabl orient riak mongo whatev therefor creat da os rather abstract tabl abstract crud oper exampl creat dao insert implement sql insert dao impl mongo insert dao impl complet differ model logic etc creat typic dao design whose interfac would someth like dao custom dimens implement sql dao custom dimes impl mongo dao custom diment impl respect hibern etc scope question time
know good resourc inform architect os app spent month work os app mine swift realiz realli bunch mv cs massiv view control want start fresh build someth modular scalabl maintain find clear inform good way difficult thought new programm se stackoverflow compet develop mind reput anyon come across good resourc creat well design app term code architectur ui keep thing separ organ easi modifi maintain differ class logic network etc understand find info via googl howev anyon input resourc past experi prior knowledg share would great
id map implement type question model design hope architectur nerd strong opinion develop one post answer typic everi codebas ever seen model integ id type int guid id guid realli correct leaki abstract leaki abstract worth keep
use larg statement insid view creat differ view entir use mvc architectur laravel creat relat complex web applic applic consist websit heavili base whether event occur occur e event futur display countdown wherea past display inform overal entir page markup may uniqu depend whether occur occur question use larg statement insid view display want base futur past occurr yes otherwis violat dri duplic markup creat view contain markup futur event anoth view contain markup past event get control rout applic view yes view dumb display amp rout logic left control would correct choic situat appropri question could ask help determin best approach take futur
best way keep consist data model across devic model app fair larg need user devic time exampl spreadsheet user make chang model one devic want chang propag user via updat centralis server quit sure best way achiev coupl idea chang model result notifi server chang updat databas chang event emit via socket connect devic devic updat model receiv messag server worri option someth goe wrong server event emit lose consist chang model result notifi server chang updat databas tell devic need updat model devic pull new copi whole model server may perform issu associ download larg amount data devic repeat wonder approach address issu might
inject creat new instanc suppos interfac languag two simpl method interfac implement mani class alway implement method noth question make sens use depend inject regist class implement interfac io c contain creat new instanc class requir depend note alreadi use io c contain thing app
model view control creat pattern orient softwar architectur vol p author said view respons creat control head first design pattern p control creat view refer see view niether control creat control refer view vice versa opinion depend
mvc url structur uri paramet creat rout mvc web applic seen two possibl way pass variabl control method first approach variabl pass paramet control method util next approach use uri paramet allow name variabl pass appear url question concern use one case vs guess would approach would res tful web servic approach would web applic serv html crawl search engin
model parallel process bound context data store situat let say background process put stuff data contain run time observ system event popul data accord user may launch control panel applic applic user defin new contain renam delet old one panel separ actual workhors process accident take crash sake exampl let assum background process increas counter contain everi minut lifetim counter need know contain process modifi counter though control panel display list contain current count updat display count need e counter chang meantim need read data write except mayb mutat set contain question process oper similar domain need know contain count differ thing would model term ddd ponder differ bound context sinc domain seem exact indic necessari separ mere technic mayb kind rpc process share data control panel becom read process access data store background process write deleg contain creation background process write unifi cqrs alreadi
repositori pattern vs dao manag entiti new concept like dao dal domain driven design end want decoupl persist layer mysql databas busi object logic web applic like dao concept got stuck implement want creat busi object databas entiti associ repres foreign key db tabl refer aggreg handl use dao pattern everi onlin dao exampl simpl show creation valu object like busi object without referenc entiti valu object done use depend inject depend creat read guess repositori pattern ddd give possibl mayb use da os behind scene handl object aggreg understand provid call root entiti refer load lazi load outer world seem good approach repositori recommend use dao da os give function maintain persist ignor busi object use orm tool want like explor basic pattern direct
java mvc multipl use event differ action work larg java project employ model view control pattern use differ event action let view communic respect control better use event multipl time reduc overhead event talk trigger e carri addit inform tend implement first option lot similar except name event class consid good program practic
php mvc display mani record model logic bet question ask alreadi form thought see titl find anyth work mvc quit time pretti happi say thing work good near perfect eye howev never feel like good job particular task say model user properti method like fine good need display list user say search page someth alway end someth like ad static method get user someth return array model user object give good code feel hope know mean get even wors need get coupl column databas greater number properti empti feel like mess want ask correct way
design databas tabl factori class design databas tabl structur class vari core paramet creat factori method factori like product differ paramet share mani exampl creat product contain follow variabl option either design sever tabl one product think quit wast resourc extra tabl file connect tabl paramet small littl product option class cobbl product option singl tabl spars like one wast way tabl space although see mani option may okay word class differ option share among class design tabl class persist store recov data pattern use
creat variabl method function far creat variabl method function creat one use result variabl one time like alway creat one matter mani time use better readabl call method depend direct like
snapshot chang track break ddd principl build websit mvc entiti framework implement unit work amp repositori pattern flexibl perform would like util entiti framework snapshot chang track rather proxi chang track drawback featur navig properti fix done detect chang call db context ad item collect invers associ updat detect chang call navig properti fix behavior seem specif entiti framework level abstract like see behavior break principl domain driven design detect chang consid busi transact
avoid tight coupl practic everi decis logic check lot distribut state senior develop compani current start move commerci php mysql e commerc solut take data specif erp system procedur spaghetti code use global pretti much everyth littl separ concern oop titl describ basic problem rather well almost everi user interact check lot lot thing state differ thing base avoid bloat control amp servic code structur knowledg everyth class constructor inject servic locat law demet violat etc inform current situat alreadi success develop basic architectur style implement rma modul design brief summari everi basic busi entiti row mysql tabl class data storag retriev well get null version object configur class hold inform field map db potenti altern uniqu key besid db id well name tabl view get data furthermor specif collect class ensur contain instanc data class specif repositori also implement ident map pattern manag basic retriev amp persist well entiti specif method non persist busi entiti need stand alon dyad collect triad collect repositori top quasi front control modul use servic process task case multi step process current rma later also user account order etc modul front control check current step action amp user input deleg valid servic sensibl multipl action possibl view action chang data within view potenti chang view chosen front control pass action present view action chang page display rout valid error progress differ view success input valid busi logic done modul front control help servic servic rather standard php applic applic creat user input via url post amp get input begin construct respons output destroy new user input creat entir applic anew except one two place ajax code put site applic basic creat mini applic integr output browser window interact applic instanc creat page applic cannot updat view lifetim actual creat view ui end applic lifetim mean actual mvc mvvm mvp implement origin conceiv strict possibl partial map tri modest implement describ rma work nice alreadi achiev huge increas separ concern thus debugg use trait field field relat method differ class need fulfil common interfac busi entiti specif collect config data object repositori ident map abl avoid code duplic quit neat mani month read best practic pattern anti pattern architectur style etc tri differ thing still left rather press problem coupl class relat singl busi entiti data object config collect repositori accept fact quit benefici virtu tetrad pattern use trait new busi entiti ad provid extrem power method handl matter minut schema modif mere necessit chang respect field data object descript config two line code everi field plus potenti two non id uniqu key chang happen bother most found way avoid fall prey least one set bad practic relat constructor inject servic locat plus law demet violat tight coupl much knowledg general control servic main pretti much everi singl control check huge amount distribut state main done display certain url certain set post amp get data depend mani thing shop b2c b2b salesperson visitor log form data identifi record act upon match record compani code shop code shop languag code b2b user permiss modul user permiss record content text snippet given code local languag inform distribut differ model entiti wherev procedur concern data object data class meta inform need servic know data class config contain noth oper given collect aggreg busi entiti collect class concern retriev repositori ident map sinc practic everi modul near everi action user perform respect modul depend upon mani differ thing current seem find way avoid either bloat object constructor beyond pale use rma modul configur object curr shop configur contain current shop shop languag provid local text constant current visitor user custom god like helper servic control curr config object implement procedur front control need perform beyond choos action model view link would much like write solid code yet see sinc essenti decis logic modul action mani necessari depend perhap idea approach issu exampl code part rma front control execut save action form return shipment call user input variabl store construct control inject helper access helper curr shop config extract inform need direct via filter var code smell pretti bad far decis logic helper servic access current shop configur user visitor etc perform task public method first 3rds helper servic save return order method see alreadi made mani discret sub process method locat object belong still left huge ugli nest condit explos depend split everi part even part nest condit differ object unfeas unhelp sinc practic everi condit alreadi use method object belong sinc split would like increas usabl littl would done mani dozen situat result class file explos
document object model view told javascript programm dom manipul model code also rememb hear snazzi tune js framework forget one get model dom confus dom document object model sound like get model model js model realli touch dom someon set straight model v model
mvc dumb view creat mvc structur ponder view add button click send request control use pub sub view realli know talk done view disabl add button receiv data ad event control pub sub realli know point updat list enabl add button question view contain logic enabl disabl add button control thought far perhap control control whether multipl add handl one time whether need serialis method describ howev easier implement current scheme view expos mani method control view prefer way mvc compliant thank
templat method pattern could someon tell whether follow good solut problem repeat code b exampl templat method let say one tabl name vehicl use store differ type vehicl e g car van bus bunch repositori class retriev type vehicl see repo almost code get method dri think better solut might common base class repo like repo would need defin get type method seem reason meant templat method pattern
control mvc alright essenti part oop one class one thing make sens practic seen class obey rule get thick clutter think kinda wrap head around control fit method control repres differ page websit realli make much sens yes page may relat user edit user view control go display one page load method possibl mani complet pointless probabl miss someth sinc peopl use approach major framework help figur
potenti abus observ pattern meet room object contain list employe function employe call set meet date method take account state employe meet room particicular readi meet properti individu employe exampl success call set meet date date date everi employe chat room readi meet set true thought coupl way implement function someth employe check state employe go via meet room object like seem respons wrong place second approach use set observ employe class inform meet room object set meet date meet room class rais except meet room employe readi fals thus move respons meet room object code employe would look like meet room would method like use observ met opposit develop team see think better way implement requir easi differ approach use situat
good practic exampl demonstr architectur advantag interfac depend inject need help prefer way practic exampl understand follow implement io c di case use ninject provid architectur advantag far see pattern realli ensur greater probabl use interfac use interfac di could easili achiev guarante interfac use plain inherit interfac within tax calcul class would simpl readabl way call calcul tax method interest unit integr test benefit pattern right tangibl exampl even abstract justif pattern help achiev benefit exampl loos coupl way achiev without use di
user control view xaml mvvm applic wpf store app use caliburn micro new xaml store app sure call nowaday appear call window store app longer document see simpl navig section advoc use user control view contain shell experienc wpf develop hesit user control xaml make reusabl control e g date time picker design whole view applic use page window split view sub view make life harder want communic would view model extra code file suspicion user control abus come develop use user control asp defin section view xaml user control use like
pattern use implement one method handl multipl way scenario creat applic allow creat map redirect url point request url url old ecommerc solut target url multipl implement multipl ecommerc solut move new one work laravel creat control action current return json redirect url one current ecommerc solut implement method go differ great one solut next could dirti creat abstract class like store abstract store extend look store type sent control use correct class alway done look expand horizon deign find design pattern fit situat anyon suggest design pattern use would implement laravel would great appreci exampl would seem basic better way
overrid equal method java short question java allow overrid equal final read effect java 2nd edit joshua bloch bit baffl conclus way extend instanti class add valu compon preserv equal contract say equal final method book give exampl class equal method class ax extend equal method differ equal method go detail equal equal ax suffic say differ therefor inter operat problem guarante violat transit symmetri mayb even someth els equal mix differ implement context especi hash set hash map type think think agre conclus someth like wrong think precis proper way deal overrid equal java make possibl java allow overrid equal reason taken account liskov substitut principl strict sens would allow overrid equal implicit make implement equal final compil level thought think case composit simpli suitabl overrid equal best option case class made persist databas context impli collect implement subclass ax
beginn unit test mvp present class applic user set form rough checkbox control check state enabl state text control bound properti present class draw inform model class busi logic wrote unit test method test load data load data method present class call call load data method model notifi present assert properti present class follow assert properti model class enabl properti present want check everi valu correct load real big line test method think bad test design number approxim better write one small line test method properti much wors big test method realli make differ perhap lazi write small test method set form depend one present class hold small part properti
design pattern decor object may ask thing like status updat decor perform role situat haunt one open sourc project quit time imagin could repres everi front end input form singl backend object object contain properti anonym function bit logic perhap call databas repositori queri bring valu drop etc class would basic would decor decor would add featur need decor take decor client class repres form provid featur make thing like input cascad input id prefix avoid name collis xss protect etc breez give html input backend server side function easi howev concern case decor class need know status decor ack code smell coupl get around provid extra properti factori class provid status see simpl long enough real world exampl decor decor class lot repres input form factori class investig use cascad status status decor set true decor client class need know status perform decis anonym function whole solut act sort decor mediat factori pattern correct approach use pattern
factori make context concret strategi object strategi factori pattern typic strategi pattern prefer use context factori correct strategi inject strategi factori leav inject caller seem context factori prefer less work caller factori manag lifetim strategi object facilit design chang strategi pattern latter chang anoth design say inherit client code chang factori
mock repositori vs test databas unit test start question one com php background experi cake php framework support unit test set local test databas handl special class call fixtur let crud data test db test suit via code howev new net framework intermedi tutori suggest use unit work pattern order either use real repositori mock repositori via interfac come unit test much differ way handl data oper issu encount load relat data real repositori use framework orm mock repositori use someth similar list interfac implement keep data memori abl eager load lazi load relat data point see possibl reason step onto issu mock repositori code somehow get relat data test whether model acquir relat data test whether control abl acquir main model repositori like know would mayb 3rd one advantag disadvantag mock repositori vs test db
event store event sourc plan event applic creat run problem design believ appli event sourc concept correct take bank account exampl applic receiv command deposit cash accept creat event cash deposit base busi logic higher account balanc trigger interest rate increas creat event interest rate chang record event event store upon restart event replay cash deposit event trigger interest rate chang event interest rate chang replay twice event store result cash deposit replay
pattern option depend inject sound lot time work legaci code base find hard move manual creat depend constructor paramet varieti reason sometim amount refactor need signific time object creation alreadi handl mean mean hook class contain feasibl exampl joomla codebas inherit pervas pattern get singleton core joomla static method inject app joomla framework voodoo magic instanti control method base class name get around enabl depend inject make option code continu function within current bound imo get basic benefit di mock j applic cms unit test depend list central place downsid still reli static method case
use control mvc studi mvc5 asp net wonder general rule use control busi object like employe creat control name employeecontrol benefit control first place want understand creat control benefit look mvc5 tutori say creat control
best approach php mail templat work webshop use one product expand multipl product multipl shop hook one backoffic use presta shop compat send kind email fill certain data first send order notif someon order pay see list order process contain order detail includ full list product price send anoth email mail order includ pretti much order notif except detail contain extra also receiv email peopl use contact form use style right happen system grab item order creat string contain tabl item work fine sloppi also complet email script use php mailer copi past differ spot possibl email sent need better way think write wrapper php mailer automat thing mayb includ helper function stuff like item tabl realli sure best go smarti templat engin look bulki one perfect way
circular depend inject good practic tri depend inject pattern new class specif transact system stumbl dilemma person class creat new transact method transact class repres transact pattern dictat inject class transact constructor also want inject origin receiv object transact class access public name account paramet hurt design implement creat high coupl two class
good servic locat servic locat pattern ok work zend framework use zend registri store object could replac control unit test want store closur could execut requir rather booostrtap even use request registri seem guess prior closur around built servic locat class thought extend zend registri prefer someth use outsid zf1 plus pretti basic anyway bootstrap within control action anyway good implement servic locat also could either zend registri use way regard servic locat like understand pattern better read servic locat pattern good idea read anti pattern think time depend pattern implemtemt whch make good pattern anti pattern appreci advic thank
valid polymorph vote control model question want someth wrong polymorph relat call vote well want save vote need valid user alreadi vote even case user vote multipl time depend type said polymorph relat set data config file valid vote thought could model static method retriev config file model also return multipl error someth like alreadi vote vote hour kind error code pass control view inform user seem wrong would right way
use singleton pattern class function field go start say understand program most class function variabl harm object orient time instanc prefer use java languag question appli languag make distinct class instanc scope still time singl instanc want call singleton pattern public class singleton1 privat static singleton1 instanc privat object object privat singleton1 object new object initi public static get instanc instanc null instanc new singleton return instanc public object get object return object non static public privat method use singleton1 singleton1 singleton1 instanc singleton1 get object method call like singleton1 method arg pattern forc programm use singleton1 class get instanc via singleton1 get instanc instead usual new singleton1 sinc constructor privat main benefit guarante one instanc singleton1 use one modif ring true everywher program question go rigamarol keep constructor instanc privat static modifi take care alreadi see exampl counterpoint public class singleton2 privat static object object static object new object initi privat singleton2 noth public static object get object return object static public privat method use singleton2 get object method call like singleton2 method arg seem like less code easier keep
event sourc rest came across event sourc design would like use applic rest client need res tful precis howev fail connect togeth rest quit crud like event sourc task base wonder design creation command base request rest server consid exampl rest put new state resourc call file one request send new file name chang parent folder chang owner file construct server use event sourc think possibl determin server field chang creat appropri command renam file command move file command chang owner command dispatch individu howev setup command fail leav other transact thus atom chang resourc dispatch one command updat file command command handler precis aggreg determin field chang send individu event instead file renam event file move event owner chang event one like request server would specifi header command use ui still task base communic done via rest howev fail use rest communic e g extern app bound chang one field one request also bring quit big coupl ui rest es base backend one would prefer better way handl side note app written java axon framework event sourc
non interrupt autosav work mani app save state progress automat background mobil app save page even app clear ram one note word os save document automat elementari os app suppos open user left last time non interrupt save possibl auto save desktop word processor requir user wait save finish process seem instantan reason scroll posit safari reader mode bit press home button scroll non interrupt autosav work
best method return db queri addit inform method new mvc tri continu learn base best practic tri return data multipl sourc one sourc mysql db queri anoth sourc anoth method pull data facebook far model control view question right approach better method framework currenti use codeignit hope learn rick
consum rest api expos nest object seri nest object expos rest api like object access rest api follow end point design pattern use design data access layer client side pleas note client read object write dao repositori bit confus two sure would applic
reason use decor instanti singleton python suppos class like happen foo singleton numer way write singleton python realli feel python someon els particular strong reason instanti subclass class see reason go way make thing unreason difficult beyond minim part public api might break everyth hint hit upon idea write singleton oper call thing strang reason obvious still type foo instanc instanti hand lack public visibl class make obvious realli suppos much way suppos mess around type enum enum think look cleaner underscor prefix privat class class foo reason way go make class singular
shall project cqrs command queri servic wcf got direct site conceptu question issu im design applic use cqrs expos function higher level stack look like top web api rest wcf clientsid wcf serversid cqrs command queri servic separet interfac domain level web api dtos get web client command object call command servic like keep cqrs relat stuff web api project think servic group command queri part communic group servic wcf separ command queri servic would server side wcf good design anyon recommend eleg approach
domain driven design valu object behavior recent finish steve smith juli lerman excel pluralsight cours domain driven design appli train project think good candid valu object measur specif problem domain measur specif alway nomin valu minimum toler maximum toler model may look someth like entiti follow struggl class respons valid measur valu within spec first inclin assign behavior measur specif sinc entiti might also measur specif valu object one properti updat model might look like could also see widget entiti might behavior valid measur valu specif approach includ behavior place complic thing miss someth
proper mvc practic hierarchi element tri develop first major mvc applic new larg scale read much onlin continu strive make code clean possibl introduc bad practic right start question setup way would done real world right main contain class sub class appear insid let pretend view would look like main main view contain insid element b c inner view dynam let say mvc b c well wrong class connect one like mean connect two way get b might call someth like get get main get object c indic design problem web thing travers back forth bad practic pass object chain done assum null sake exampl okay unreason make static singleton main object class access static getter know practic bad know main window never meant instanti twice prevent exampl would get c someth like main get apolog vagu said new would love noth cut bad habit anyth wrong right done anyth wrong would
use ddd solv common address situat simpl exampl show situat find hard solv ddd consid properti e g hous address address complet partial countri countri state countri state citi end user search properti need display list countri countri select need retriev relat state state select need retriev relat citi easili done use data driven approach queri relat model tri model think domain driven design fail obvious constraint citi exist without estat estat exist without countri conclus countri aggreg root enforc constraint suppos address anoth aggreg root address refer aggreg root refer partial address need think anoth root need queri citi need bring whole countri aggreg root need search citi avail given string need queri countri transvers relat situat obvious solut aggreg root citi state countri address anem model avoid anem model look like way solv differ model one insert new citi use countri aggreg other retriev associ entiti smell bad ts hard find sampl cover situat like someon give direct ts fine recommend book would love direct insight read lot ddd know term aggreg entiti servic associ valu object
mere parameter depend meet requir invers control find concret depend insid extens method attempt remov concret depend parameteris like idea would invert control collabor class address repositori make sure could pass code use method anyway colleagu saw said code still reli concret implement use ioc although see downsid code sure agre invers control sinc code depend abstract address repositori call code provid differ implement principl violat respect ioc part code particular violat principl simpli put paramet inject actual thing
layer generat command depend servic busi work truck driver make pickup deliveri contain locat contain need track driver use mobil devic generat driver report log trip locat time contain pickup drop off etc current work most crud design want maintain good c built two servic driver servic inventori servic driver servic take depend inventori servic new driver report insert would generat dto base report data could sent inventori servic use cqrs yet consid transit struggl understand relationship servic command bll seem lot question would respons call inventori servic would good design new trip command handler generat send updat contain inventori command would updat inventori new trip consid busi logic yes domain entiti trip generat send updat contain command mobil client generat trip inventori specif command send appropri servic would make sens take part specif driver report inventori merg driver servic depend broken still good c layer might start think inventori would updat inventori simpli becom db repositori concern still inventori specif command busi logic get lost detail seem read topic confus get
domain model offer vs usag question issu alway seem run build domain model issu come whenev domain object use call offer scenario usag scenario exampl let take small school school offer program studi program requir student enrol complet certain number classess certain type word one program may requir general educ type classess one math type corus domain model fine far let consid student enrol program student option select general educ classess one math class class select need associ program student enrol domain model domain model seem fine howev add togeth get someth clear get follow confus cannot tell relationship appli scenario offer usag word offer program one student enrol look like program school offer might alreadi select class altern might think even student enrol class still class option general way deal issu find present busi therefor softwar project domain model pattern thing like thank help provid
asp mvc model data store use view model class order structur data popul insid control question exact data model store popul via asp mvc control
appli depend invers principl current tri figur solid depend invers principl mean two class communic via interfac direct exampl class method expect pointer object type class b method actual expect object type abstract base class b help open close well provid understood correct question would good practic appli class interact tri think term layer reason skeptic pay price follow principl say need implement featur z analysi conclud featur z consist function b c creat facad class z interfac use class b c begin code implement point realiz task z actual consist function b need scrap c interfac c class prototyp write separ interfac class without interfac class would need replac word chang someth need chang caller interfac declar implement python direct coupl implement would need chang implement
observ pattern prevent multipl fire chang intern properti object foo public properti b properti chang outsid applic work use data bind architectur front end client code also communic server fetch data object listen chang b chang b trigger updat method trigger request server also piec logic object foo say everi time chang b reset initi valu problem deal updat b without trigger updat method twice look imag green path alway trigger updat red path end sometim trigger updat chang b chang initi valu alway trigger updat add everyth asynchron observ properti notifi immedi chang object design choic platform languag work polym js make harder set flag chang b tri work watcher method get trigger chain chang execut come front end world background graphic design knowledg necessari spot mistak might want learn like point refer materi book read correct applic observ pattern pattern deal particular scenario possibl solut observ pattern right choic anoth pattern could use intern allow expos two properti b outsid world third option would appli right pattern platform support tri achiev like know post question stack overflow right tag
share code logic control model layer origin conceiv model layer suppos hold data code receiv dt os web servic map model object model object usual end either compos special view model object case control call web servic creat view model object hand view realiti sometim creat class model layer next data object hold busi logic reason logic share control code specif requir much configur creat short static method understand one common call helper creat helper folder level control view model view model folder right term project structur know happen need share code requir configur control exampl point busi code call web servic various paramet relat ongo comput among those paramet session key session key therefor configur busi object treatment begin busi code job control hand model view model vari term object class could use data built various busi object case partial view show tree data tree come differ web servic requir differ input yield differ result result model constraint object type begin control retriev data web servic build tree structur treatment structur hand view model object hand view need access code build tree structur control isol code instinctivelli call builder object initi control need call build hierarchi method need creat second tree build logic base data anoth web servic wish use view display data general point view current imagin structur code two question read bit builder pattern understand call object builder pattern well suit case pattern correspond wish accomplish project structur actual put busi object right put model layer somewher els
php mvc model method fetch model databas crazi question consid develop blog websit two model name post comment wanna add method fetch comment databas model choos add method post comment approach approach
encapsul busi logic goe beyond valid mvc pretti clear busi logic goe model question refer busi logic pretti much low level valid user sign ask e mail busi logic goe beyond valid exampl right work project user abl generat quotat form submiss submit applic process sever data relat said form creat databas row process involv differ model entiti clear indic place code process insid model entiti class would wrong right use unit work pattern encapsul crud oper databas mock test somewher read call servic pattern encapsul said unit work possibl process like describ pattern use kind logic
librari design better leav potenti destruct featur warn cut complet recent creat red black tree c better understand work implement order enumer howev quick realiz enumer tree destruct result consid code tree requir generic paramet implement compar interfac order correct determin order item person class compar name chang name enumer might broken order e g randi node compar randi node right lt might fals break fundament bst properti left child smaller parent right child bigger case better remov tree enumer altogeth keep huge warn modifi item enumer
put util class php mvc work first mvc websit put util class like secur date nativ date class model
event action abstract trigger control think abstract event action order make alter implement mainten easi sinc project current work volatil requir thought follow concept creat implement event action ex handl close plan applic made event action extend event action manag event action use generic collect use factori get appropri event pass keypress key factori resolv correct event shown code problem manag lot key press frm main key press use key sever time differ purpos problem cant figur proper way handl problem keep action abstract possibl thought regist name action resolv name also never use techniqu anyon better way implement problem thank
hierarch view model track dirti properti chang event set view model depict like pictur coupl command accept command cancel command top level view model bound appli cancel button respect view would like enabl appli cancel button child level level level view model dirti current think two possibl solut achiev behavior view model child level rais properti chang dirti event handl event parent level mark parent dirti continu process reach top level view model could child level view model post messag indic dirti clean state mediat messeng top level view model listen messag mark dirti clean base count top level view model depend mani dirti clean messag receiv though second option look better first one feel two approach optim better altern pattern approach solv problem
best practic mvp pattern android team great success introduc mvp associ unit test go present wonder granular make interact view present exampl screen display load icon make request data call return remov load icon display data scenario could make view realli dumb deleg present start told display load icon present would make request return tell view remov load icon make anoth view call data display anoth way could activ display load icon call present present would make call receiv callback return call view result activ know remov load icon display data first instanc view told explicit everyth second deleg busi logic present peopl think better approach
mvc post redirect get question mind mvc pattern long time use post redirect get principl make sens use one model sens mvc right modifi data model use anymor miss someth need one model action control one data view current pattern control call init model use action handl action use action model action execut use p r g reload call init model use view call view templat pass view model point want load data view possibl need due redirect care much
handl duplic event replay event store two aggreg listen event event store event store twice aggreg instanc entri item load event store locat vehicl case much expect seen two toy exampl might alreadi seen read event sourc one exampl anoth exampl product system probabl differ axon framework event store tabl like choos jpa jdbc implement event store type field string use differenti differ aggreg type given event appar mayb persist multipl time want recreat view scratch add new view model would replay event return exampl consid view model like amount count twice replay event naiv add new aggreg futur event count twice other count three time prevent project denorm doubl count event save event store multipl time
implement anti corrupt layer domain logic build applic compil singl pdf document multipl sourc pdf document follow take first page sourc document stamp certain inform top page combin first page output pdf document assum sourc pd fs alreadi exist use third parti class librari manipul pd fs e extract first page appli stamp inform combin page output result pdf goal keep pdf manipul oper independ domain logic layer easier swap third parti librari need futur like make use anti corrupt layer imagin domain consist one class point pdf document domain logic layer load collect pdf document object file anoth type input stream make use servic expos anti corrupt layer produc singl output document characterist mention earlier envis two possibl way architect expos follow distinct servic anti corrupt layer extract first page pdf document e return pdf document one page stamp provid text top provid pdf document e return new pdf document contain stamp text combin multipl pdf document object one pdf document e return new pdf document page provid pdf document combin expos singl servic anti corrupt layer take collect pdf document return singl pdf document aforement characterist first approach seem line separ concern second approach would take lot domain logic consider mani page extract stamp everi page extract page includ output howev first approach much less effici servic return pdf document third parti librari use document class intermedi class page repres page belong whole pdf document use first approach third parti librari would bundl everyth document output pdf document servic howev use second approach effici oper pdf input pd fs broken page object stamp could direct appli page object could combin result document return pdf document consid ad pdf document page class model one solut model take concern necessarili need notion page model facilit effici use third parti librari defeat purpos anti corrupt layer pleas help work
singl page applic automat download depend html current develop applic use asp net mvc5 knockout typic architectur foo control cs get foo cshtml look way exclud view model instanti html e drop use razor call server side control would return json data instead full view would allow full html java script cach instead download view html solut would allow app download necessari html script relat specif action mean particular script download next time need cach client side knockout plugin mayb relev pattern
programm use code first approach relat asp net mvc rather relat mvc framework support code first approach one advantag often see asp net mvc tutori blog support code first approach work net consult various project old new never seen anyon use code first approach see mean mean peopl use code first approach one main reason team never favor store procedur faster use orm like entiti framework understand code first approach make write data acess logic littl easier expir would never use code first work complex project complex project mean cross databas queri secur right etc right assumpt kind project would one use code first approach
function program viabl altern depend inject pattern recent read book entitl function program c occur immut stateless natur function program accomplish similar outcom depend inject pattern possibl even better approach especi regard unit test would appreci anyon experi approach could share thought experi order answer primari question function program viabl altern depend inject pattern
decorat pattern strategi pattern construct c serversid applic tri way easili maintain aswel extend need differ request need done soap httprequest combin chunk differ action like import export updat think everi request strategi much like switch algorithm descript strategi pattern want extend strategi decor ad new function request need contain separ class soap request import http request updat think last one contain everyth class seem take away flexibl said wrong first question done better pattern okay combin think strategi differ client decor command ad functionalit overdo last would look codewis combin understand need least one interfac decor need one strategi
log next implement srp violat think agil softwar develop principl srp ocp ask treat log log next implement srp violat would say yes implement also abl run without log implement log better way check pattern came conclus best way violat principl user defin way use pattern known violat principl use decor pattern let say bunch compon complet without srp violat want add log compon compon b use want log creat anoth compon decor implement interfac interfac compon l log compon system compon implement compon implement decor use use l log compon b use advantag use without log test mean need log mock test simpler disadvantag compon test know seem anoth open discuss question actual want know someon use better log strategi decor srp violat static singleton logger default null logger syslog log want one chang implement object runtim
put busi logic model declar differ dll new mvc start work small applic basic idea want use mvc entiti framework want creat separ busi layer want put model declar busi layer want put entir busi logic mvc web applic control make request busi librari pleas guid possibl wrong direct
design idea valid base condit outsid domain face interest problem like see design idea domain driven design perspect make easier express need follow hypothet situat bound context name custom use handl creat new custom updat custom search custom custom class look like straightforward logic entiti valid data canadian social insur number valid rule indic valu begin use canadian govern might use reason possibl valid rule busi requir one singl applic major situat user enter social insur number make sure valu cannot start valu must valid sin uniqu situat must allow valid sin start domain servic code look like add boolean paramet custom class valid function make look like valid bool allow lead zero could make code work think look ugli design perspect would suggest eleg way deal requir
unit work pattern relat monad program look definit unit work pattern seem much like programm would get implement monad io transact monad make unit work concept fundament differ use monad assum work languag enough power implement common monad fulli implement unit work pattern similar may find java c especi one type system scala haskel one chosen pros con approach
observ pattern without state chang question whether similar pattern observ impli state chang observ object follow concret exampl connect factori class respons creat jdbc databas connect need someth everi connect right creat specif need set user defin variabl sql session want connect factori class sinc feel someth goe beyond respons consid make connect factori extend java util observ observ class notifi everi time connect creat howev seem approach incorrect sinc observ pattern impli observ object observ state chang state connect factori chang connect creat see go around issu simul state chang call notifi observ otherwis observ notifi synchron two statement order make sure state chang flag set first statement still activ second statement execut kind workaround increas suspicion taken wrong approach object want observ class must someth observ object fire certain event event state chang observ pattern applic would correct approach
share state depend object orient design suppos defin two interfac want implement reader interfac like want defin higher level class implement two interfac notic use composit implement reader interfac need inject instanc reader person class also need share person book data reader instanc problem want solv far provid way share list book reader interfac option come mind first option creat reader factori interfac implement creat instanc like good inject reader factori person constructor instead reader downsid requir extra definit reader factori reader factori second option add anoth method reader interfac like work person constructor call method pass book seem eleg rememb call method method call mani time someth want want use di contain resolv instanc reader insid person constructor hide depend person class best way go kind situat without violat depend invers principl
depend inject ef map requir implement repositori pattern use di ef6 creat databas inherit db context object visual studio wizard ado net entiti data model generic repositori lt gt domain assembl implement differ assembl base data sourc problem come map object ef domain object almost code write thing like opposit cours map creat big amount problem eg updat necessari order add sql databas dll depend ui assembl way map object ef assembl depend well
model state leav enter home two sensor one detect door open close anoth movement detect corridor want detect person left enter home usual person left movement detect door open door close movement detect door close time problem overlap state door open person also move think design pattern state appropri struggl find better structur help
rich domain model encapsul problem constructor inject refactor e commerc web applic current work user basket class handl ad remov item chang quantiti get total amount total number item etc display basket item name descript main imag filenam also need user basket know price item given quantiti differ method calcul current applic price swappabl could employ strategi pattern either sort item price getter user basket would construct leav item unawar construct item price find strategi reserv complet anem domain model item abl tell price certain custom quantiti certain date abl tell filenam main imag avail etc essenti databas item domain entiti multipl n relat sometim complex vari logic find current applic one among price imag descript etc want anem domain model differ strategi get right relat inform avoid constructor inject multipl n relat item strategi chose right one need item class tell data relat item perform busi logic center around make abl tell price given custom quantiti main imag filenam seem like violat singl respons principl anem domain model would logic neat divid encapsul say itemlist find avail price name imag item would need item also item price finder item avail finder item imag finder cohes would seem suffer thing proper belong item longer encapsul rich domain model item item price strategi item avail strategi item imag strategi similar seem stuck either inject lot depend lose coher make domain model anem latter case would still class e g need lot info item would construct domain object servic get relat data best practic deal situat specif differ way get filter relat inform one kind busi entiti base contextu paramet encapsul integr maxim coher avoid violat singl respons principl
separ view logic winform applic know pattern like mvc separ view logic howev know common winform applic c winform applic may start form gradual add ui compon event compon click textchang call function direct write logic know bad habit know best way start project visual studio templat framework start point mvc solut project would like receiv guidelin lightweight framework get start
check valid state insid function outsid common occurr program languag agnost function need someth case mayb featur toggl mayb function need data pass left two choic check state insid function check state call function exampl java script illustr mean pros check insid easi call caller function awar certain requir state simpli call get back empti data pros check outsid function call state proper rais except alert dev possibl bad state possibl silent exit check insid function idempot reli state outsid general help maintain function
handl destructor mvvm make model view view model mvvm applic use delphi xe6 sinc use pascal rather c need manag destruct sure handl form destruct form associ form view model form view model respons form behaviour would expect includ destruct also form destroy must form view model destroy make sens handl thing togeth problem destroy form view model method within form view model sinc destroy hand handl job anoth class control class get form tell control form view model instanc destroy would involv form know form view model compliant mvvm misunderstood someth mvvm way unmanag languag without violat mvvm
multipl method call constructor depend inject ask refactor almost uread spaghetti code object orient architectur doubt regard class design class skeleton class initi like class role prepar data display display use extern carousel class instanti display carousel method may major aspect refactor pleas note alreadi implement method need focus implement question method requir generat data display triger one one constructor method generat privat properti requir method call next therefor method fail realli point call subsequ method address possibl method failur display carousel method instanti anoth class respons actual render html content moment carousel class requir instanti method call carousel class inject class use
ok mvc view request data sourc model work asp net mvc question pretti much applic mvc framework mayb even other typic mvc applic request arriv control prepar model object call view pass model object paramet view use data model generat respons origin request data thew model object freeli use view wonder ok view request data elsewher like direct call servic someth first moment answer seem clear would need add everyth view need model object arriv question work practic project situat caus doubt view need lot data abl display notabl data actual form field also data dropdown form list potenti valu differ field hand project view themeabl differ custom custom bought websit use busi view custom suit need differ custom need differ field display sometim data sourc dropdown differ signific well one possibl way would queri possibl data everi request add model object signific perform penalti better necessari data queri howev control know view need see option allow view call extern function return valu list dropdown model object add deleg actual add method model object perform queri view ask neither approach seem eleg altern one better
store data rare chang memori good candid singleton cach class call data point defin like follow current goe properti object base data point format like pad trim etc save record databas current implement make databas call properti slow first step get everyth memori collect els good candid singleton sinc data rare chang possibl cach
hidden depend hidden depend hidden disadvantag last need chang class later need anoth depend chang constructor argument chang constructor need also chang everi file use hidden dep chang would need two place constructor registri class anoth fail 2nd method possibl lazi load depend alway pass instanc disadvantag hidden dep bigger disadvantag hidden dep use true invers control need need add anoth depend class look back class perhap need sub type instead ad depend could indic break open close princip program open extens close modif ok depend hidden principl principl cute solv realiti besid violat principl break open close principl bad assum ad anoth argument constructor
c subject observ architectur question make c applic use subject observ design pattern slight differ way pass provid class implement observ next method notifi class subscrib observ class constructor implement observ act next method post provid class way everi singl observ class capabl execut next method notifi class chang well simplist look sampl project goe like drawback modifi subject observ design pattern way
domain driven design design aggreg root imagin design applic organ workshop workshop quit complic act state machin multipl possibl state transit use ddd cqrs event sourc use case one abl assign todo item workshop perform crud oper one abl submit addit resourc given workshop slide photo zip tar gz archiv etc also perform crud oper one abl add possibl term lectur date room specifi workshop also way modifi delet later vote term system tri book room term let say two term vote user split term follow solut model todo item resourc possibl term part workshop pros everyth conceptu belong eventu consist big problem probabl con workshop aggreg clutter crud method stuff accord implement domain driven design vaughn vernon creat huge aggreg root antipattern creat aggreg root hold item e g todo item list possibl term list resourc whatev gonna call pros workshop aggreg smaller relat list connect would exampl possibl term list hold refer workshop id con creat workshop command arriv forc creat workshop also addit aggreg need exist workshop creation avoid could kind creation saga listen workshop creat event produc proper command creat relat think good idea model possibl term resourc todo item aggreg root pros need creat aggreg wrapper con clutter workshop least factori method hard implement term choos featur count vote later assign user particular term need queri repositori term match workshop id lead oper multipl aggreg within one transact question solut sound best mayb differ idea bonus question need perform crud oper individu resourc todo item rather model valu object identifi
creat model effici answer question place db interact code write seek right model store retriev data work specif class keep mind bigger pictur detail sql code one class would like use separ concern c remov deal direct databas specif code class simplest thing creat db code one specif class class think global may end mani class think creat db handl class busi logic wast need find way consolid db access function proper recal advic book refactor sql specif pull sql code entir codebas consolid singl space away non direct sql deal class recal specif presum sql code go separ folder perhap kind strategi philosophi keep happi medium extrem creat singl separ db handl class class entir codebas creat singl separ db handl class busi logic class question help fill specif space extrem heurist model way could use make decis structur db handl class pretti much immedi know handl question place db handl code current find write busi logic class right seem solv question case case basi either sql right insid class separ class made one class group sql aspect end end various model mix good think mayb may need help defin aspect identifi clearer boundari domain object perhap mean identifi larger move part codebas structur db interact class around part satisfact answer depend whether abl get closer answer question put n sql write specif new featur specif class support c principl without wast specif creat big ball mud general
best way creat dt os entiti updat entiti dt os layer architectur option first would make call servic layer serv api core domain get domain object list domain object pass assembl would construct dt os need view problem approach case domain object larg want load whole object copi field need dto ie show list summari entiti option next approach use wire repositori read purpos assembl could queri databas field need dto also use repositori get dto need use updat entiti exampl dto fill valu need updat entiti come assembl assembl look entiti repositori overlay inform dto entiti return entiti control call servic layer save entiti assembl return option could wire repositori direct control someth expos repositori control seem wrong servic layer handl transact secur put repositori assembl basic thing thought welcom want understand pros con work well other
best way creat dt os entiti updat entiti dt os layer architectur option first would make call servic layer serv api core domain get domain object list domain object pass assembl would construct dt os need view problem approach case domain object larg want load whole object copi field need dto ie show list summari entiti option next approach use wire repositori read purpos assembl could queri databas field need dto also use repositori get dto need use updat entiti exampl dto fill valu need updat entiti come assembl assembl look entiti repositori overlay inform dto entiti return entiti control call servic layer save entiti assembl return option could wire repositori direct control someth expos repositori control seem wrong servic layer handl transact secur put repositori assembl basic thing thought welcom want understand pros con work well other
mvc crear sub folder view work small erp applic use mvc5 sever modul applic modul contain sever web page view say e school applic librari manag hostel manag view folder want creat folder structur follow view librari physic folder book manag control add edit delet book detail action base view issu book generat librari card hostel physic folder room info control name add room action base view edit room action base view list room action base view assign room control assign room action base view manag fee edit fee info action base view pleas help creat structur mvc
kind base decor interfac abstract class non abstract top inherit tree decor design pattern mean base compon decor non abstract class data field implement method abstract class data field abstract pure virtual method interfac data field abstract pure virtual method abstract class amp interfac interfac base decor abstract class base decor compon simpl exampl text interfac declar get content method abstract text abstract class declar get content method defin txt data field text non abstract class general also use base class hello world non abstract class specif text hello someon non abstract class extend text data field name decor abstract class decor might redund prefix decor decor class prefix get content string prefix suffix decor decor class suffix get content string suffix get content method return txt option addit data suffix prefix decor name field hello someon class base class chosen non abstract class abstract class interfac abstract class amp interfac code last exampl
unix way filter map mapcat record via pipelin home use linux decad work use window find power shell familiar linux unix fanboy heart greater success grokk power shell pipelin model pipelin object use come right data process often process entiti thing key valu pair e attribut clear someth unix forev suspect tool like sed awk may play part less intuit unix pipe raw text stream want pipe oper person address book first consid conduc format incom data pipelin process suspect record would appear singl line know communiti favor data format protocol write record easili pipe unix program obvious format dictat program use use e g filter map mapcat power shell sure could spend day figur might accomplish unix interest someth idiomat equal power shell legibl choos right data format csv xml etc impact legibl pipelin logic would feel awkward logic kept line text abstract intact would prefer abstract logic bring greater focus key valu e feel object line text unix could store record data format format would pick order facilit clear concis pipelin process bash counterpart exampl would appreci
architectur web mobil client applic work need web interfac asp net mvc mobil interfac android phone nativ featur mobil applic web applic might overlap featur similar differ moment think way structur applic like top approach need one web server server web mobil client mobil communic server json serial asp net mvc servic layer plain class librari referenc web layer pros faster sinc cross machin communic web servic layer simpler con secur secur concern less flexibl scale scale web servic layer one unit bottom approach need one web server one applic server wcf web api mobil communic direct applic server json pros secur web applic server separ extra layer protect applic layer applic server expos mobil anyway right scale web applic server independ con slower complic due wcf web api middl first time applic web mobil like approach common use scenario user tend favor bottom approach think case might overkil follow bottom approach
design entiti mutabl gui protect programm error set entiti repres simpl class simplifi exampl go repositori class access ad persist day account entiti pretti much end user abl modifi properti entiti gui need edit oper pure data analysi read entiti also persist read updat orm serv model mvvm pattern bother entiti pass around heavili would like protect unintent modif properti code first implement type protect worth unintent modif happen case programm error poor usag class mayb entiti left fulli mutabl code well document deem safe long thorough cover test pass educ purpos suppos protect unintend chang mandatori enforc make object complet immut clone might pose difficulti work orm provid simpl mutabl immut switch mislead multithread context introduc immut interfac expos mutabl object like answer enforc immut hide object explicit user code fulli protect programm error use c net framework updat okay realiz littl know domain driven design concept anyway base two answer thread came follow design repositori class hide orm persist logic orm work dt os setter public valid default constructor user repositori see dt os abl queri immut domain object repositori creat base dt os ad edit entiti viewmodel creat properti popul valu domain object viewmodel fulli mutabl valid logic save new domain object creat valu viewmodel save updat repositori pose two new question immut domain object repres valid entiti thus valu valid constructor viewmodel hand hold incorrect valu valid exampl data error info implement avoid duplic valid logic view model domain object second question store updat domain object repositori need track id valu dto creat orm set domain object bother strict persist detail relev busi logic okay persist detail seep domain reason design even think right direct
pick dynam right factori class invers control tree view want enabl context menu click right mous button compos item differ class share base class consid creat factori class differ item class simpli return custom context menu interfac later use part program actual render menu current workflow mind tree view intercept right click request anoth class let call context menu factori creat context menu item type context menu factori redirect specif factori class associ input item type like foo item context menu factori foo item context menu factori class actual creat context menu instanc make difficult task second step know organ code order make dynam solut mind implement switch creat factori class recogn type ideal way would use contain find configur implement way modifi everi time creat new item type switch previous suggest
one use depend inject even class use code review start bit dilemma whether use depend inject would like hear thought kind ongo theme would help futur code review well start want say knowledg di most use depend manag better much easier unit test correct wrong pleas scenario class use depend probabl good mean stay way class use reason refactor legaci code much done separ anoth class least first good step follow srp also anoth thing hypothet someth import hit databas base inform think okay new depend class oppos use di sinc depend manag argument kind fall sinc go use amp unit test also fall sinc would rather integr accept test see method interact databas real life applic person inclin toward di consid good practic second felt like blind follow rule think sinc alway except rule thought would love hear ps think generic use di question specif particular situat unit test use class go use need central depend manag even though good practic general
ddd use orm activ directori server persist domain driven design one would model domain one would use orm sort take care persist say product entiti name sku owner model new product get creat need pass field paramet constructor persist fluent n hibern use postgresql databas owner product type account account entiti hold id first name last name email phone usernam password address account need persist two databas need persist applic databas postgresql server link product account howev also need save activ directori server ad server hold user record inform want duplic data store activ directori server save applic server applic server want save first name last name email id user choos chang account detail updat activ directori server field store applic server e g user log want chang password password field store directori server use novel ldap directori servic librari access inform directori server infrastructur layer project implement access ad server exampl chang password talk ad server password save applic server question domain creat model contain id first name last name email phone usernam password address id first name last name email screen ui one chang account detail
event sourc good fit databas sync master multipl slave look good way maintain sync local sqlite databas could offlin master one invoic app read event sourc log structur storag wonder could better way maintain sync data howev never use event sourc exist master databas invoic info custom invoic payment etc local databas mobil devic full copi must stay current possibl time line mobil internet unreli could offlin like edit record common even invoic salesman common subset invoic good idea use event sourc similar pointer well use local sqlite hard requir total free backend
databind view differ model entiti custom custom collect account correspond class custom class list lt account gt two view first page show custom name address etc field data bound correspond properti custom object link show account click link get second view grid data bound account properti custom object need provid account label first view problem properti custom busi object approach like either add properti account count custom object artifici tomorrow need show balanc highest account use count properti account list need list popul user rare view whole list account see point load entir account tabl show count databind complet make seper call ui direct data layer let queri fetch detail defeat whole layer tire architectur soon everyth fall chao everyon maintain code fire queri rather data bind busi model custom data bind custom view model class class artifici count account properti keep ui specif code separ bl problem view model class depend bo layer bo properti popul account list fetch count fetch tabl get count seem overkil question ui want thing differ busi model
clarif mvc architectur overview mvc architectur diagram report sinc relat new mvc wonder could one clarifi rest httppost etc view control control model also model drawn server side view control client side mock up atm
busi logic involv sql go question bug day function like know put web applic struggl figur good mvc locat put look beg put user model involv sql bad thing make model awar databas resid ok someth like user action class contain sql script databas relat thing would deal user tabl function would use varieti place modular testabl import thank
handl busi logic valid race condit work train enrol web applic follow simplifi featur mainten add edit deactiv train student sign student enrol activ train employ onion architectur busi logic valid domain layer data access layer consist ado net compon store procedur busi logic whatsoev problem sinc busi logic valid domain may race condit follow scenario scenario train allow maximum student train current student enrol web applic two user attempt enrol simultan point two thread spawn two concurr request web applic abl queri user valid succeed domain layer user abl enrol scenario train creat student attempt enrol train student attempt enrol train train admin decid deactiv train race condit occur domain layer follow happen thread user valid whether train activ succeed return true time thread thread train deactiv valid enrol yet valid succeed obvious solut add busi logic check enrol count check whether train activ store procedur hesit break design valid logic singl point entri add lock valid logic becom critic section one oper valid db persist happen time reduc concurr altern approach solv system work
transient life time constructor inject work littl light weight depend resolv found current get new instanc call get correct transient lifetim manag expect behavior use constructor inject let say chain depend constructor argument class one class two class three class two class three contain get lt class one gt class three class one class two edit question think user expect behavior transient life time coupl constructor inject one call get lt gt edit ninject castl uniti seem creat new instanc probabl that way work that way work right edit hmmm interest structur map actual reus instanc output test number hashcod code test edit actual specifi lifestyl transient castl default behavior structur map mean instanc per resolv
depend inject vs depend lookup layer architectur given layer architectur busi logic isol packag layer like persist storag user interfac interfac various vendor remot servic etc think manag depend follow way within librari depend inject manual via constructor advantag opinion big make test explicit increas valu document sourc layer plugin think inject manual one object use depend lookup would make mock easier doubt would one object subsystem mere think realli specif small interfac factori instanc implement one interfac mani interfac factori implement implement detail guess would start one factori implement interfac system evolv would pull factori refactor accord yagni interfac e signatur constructor would stay refactor thank interfac segreg busi librari get command outsid via command think ddd think advantag disadvantag welcom strategi depend manag prefer situat
maintain atom servic like pattern imagin rout mvc web project handl edit user product thing like chang name email group role forth data put form sent server imagin user manag servic handl action make sure rout atom process could fail arbitrari number action function would alter email password fail group set avoid
open id connect flow right deal net mvc5 web applic move open id connect standard also would like abl access control method mobil app much like api send receiv json data understand correct implicit flow client retriev id token open id provid sake authent case mobil app retriev id token client id match client id web applic abl use authent app web back end right author code flow give access token allow retriev refresh token retain author longer period time author automat appli web back end must also ping web site order assign author code retriev say googl last hybrid flow combin two give id token authent access token use immedi access web applic resourc offlin access code allow web applic get refresh token user behalf even use applic think wrong method authent web applic nativ android client realli open id connect problem would use situat
react simpl ui state start play around react basic question regard state understand react state contain data may chang cannot comput elsewher howev simpl ui state determin particular data need persist long term exampl mobil menu collaps small screen via css initi state menu close simpl click handler attach toggl button insid handler either use get dom node class list toggl element includ state properti call set state trigger render second option appear like react way overkil especi app potenti lot menus drop down etc best pattern handl kind basic ui
name argument replac builder pattern use languag support name option argument builder pattern longer practic use builder option name argument
keep persist servic mvvm architectur mvvm applic need use servic persist e g network servic like p2p wcf main engin server endpoint must remain run lifetim applic current code singleton abstract function use engin server instanc intern anoth exampl central messag queue like main loop block collect need queue various task need process sequenti defin access servic mvvm context read servic locat pattern singleton often describ anti pattern
partial model updat view hope topic sinc bit new whiteboard current develop applic use asp net mvc web api one domain entiti huge store document databas mongo db case reason larg resembl field paper form use use process logic make sens entiti larg current current brainstorm best way handl updat entiti current use model entiti go explain process implement noth set stone point view current split section larg model user click section section appear form use java script magic end user updat field properti model sure proper current implement send entir model web api control via ajax updat databas chang success updat view client side display current valu feel like realli leverag asp net mvc framework though except initi display view sinc perform updat client side proper way partial updat model least use asp net mvc realli want refresh entir page request new view one partial submiss use server side process form section partial view along smaller model updat larger entiti case believ util server side process form sinc send new partial view even understand use partial view bit confus tell
state mean state view model mvvm read xaml pattern state view model accord read noth differ view model descript exampl state view model creat isol busi logic present data remov view state view model pattern move data view model use xaml data bind allow view model test without construct view allow view chang minim impact busi logic special call state view model call view model link
static consol object depend inject current project creat consol class wrap c usual cout write output file use consol write line depend environ current setup code base inject consol object class use make extend base class debugg seem like great plan first pass consol everi object ensur creat second thought usual consol seem handl static object consid chang implement use static instanc consol object use feel remov element control one potenti consol differ format target understand lot discuss depend inject interest specif case util consol
factori creat singleton instanc legaci code bunch singleton place written c singleton fair classic implement pattern note thread safeti concern lock use order make code testabl without make mani modif like modifi code deleg creation singleton instanc anoth class factori similar pattern assist creat test instanc test purpos real version use common practic could find refer pattern use
use mvc softwar engin cours project design web applic decid read softwar architectur pattern read lot mvc structur also know advantag break applic layer find answer question appreci anybodi tell use mvc pattern web applic
mvc check data model control current creat web applic rubi rail face conceptu problem mvc pattern need check exampl name data want add databas exist given array need control model read everywher model care databas stuff guess control job rail model seem stuff like data valid valid presenc wonder final model model job mean need pass control attribut model array come api weird ask give detail applic get list item api includ list form like select tag form submit get id select item final add databas inform form ad data databas want sure id item valid need check present array case user modifi manual html browser
inject collect constructor depend use constructor depend inject applic follow approach inject everyth use inject contain abl replac depend mock colleagu complain procedur say inject collect type go far inject prefer call new insid constructor think procedur follow use depend inject one exampl real use case dictionari special behavior allow add key sever time increment intern counter decreas counter remov element remov element memori counter class simplifi bit think get idea
share core repositori object map logic unit work method wonder better way anti pattern like say subject tri share repositori call object map logic unit work method exampl see get envelop bodi method use
approach applic program databas background lot databas experi virtual applic program experi work edmx model generat entiti databas transform t4 templat creat assum class think entiti framework applic c take data use mvc structur bind data xaml silverlight applic assum xaml embed webpag use javascript contain html struggl find generic top roadmap onlin explain data get pass around structur wonder anyon good solid explan general work get clearer pictur data pass figur area need improv knowledg wise
mvc control use case control grasp control use case control defin use case control use deal system event use case may use one use case instanc use case creat user delet user one singl user control instead two separ use case control see similar mvc control howev see standard guidelin design mvc control time peopl say develop design applic wonder whether use guidelin design mvc control specif let say applic page display list product tabl product display row row button restock product busi oper make sens see page use case busi oper list product restock product guidelin probabl use case control use case map mvc control need one product control action use case need one product control page mani busi oper page soon control becom big cours page mani oper might good ui design sometim develop choic client want way conveni
mvc charg handl observ write larg matlab gui make signific use mvc exampl written matlab howev believ question languag agnost pleas correct wrong class model obvious model mvc applic suppos follow object object b object c object observ etc say want view respond chang model particular want view respond object event event two way let view direct subscrib object event event coupl view intern model believ violat law demet pretti sure also violat concept mvc definit let model forward event view follow view direct observ model model pass event associ data view suppos kind point mvc coupl object model direct suppos model ought know object still feel clunki approach correct altern cleaner either answer may exampl oop languag familiar matlab
class interfac multipl class depend inject note question titl realli even know phrase titl someon edit make articul would realli appreci question basic tri creat main app class privat access databas config object provid interfac access config properti well use databas method new whole interfac thing use previous may go wrong appreci help anyon give point right direct interfac may way go know seem like right way also tri integr old code use depend contain sort interfac guess includ crucial tri phase new interfac want includ complet case matter way current get error abl access privat properti app cfg sure work interest know right track good practic way go tri summar code clear possibl without past wall code thank help pleas let know question
necessari anymor extract logic api control work mvc web framework sinc start get popular ro r asp net mvc alway care never put busi logic control sinc coupl framework logic day like mani realli use mvc part framework sinc return view framework artifact instead use rout control action build api return xml json past coupl year tri move closer cqrs busi logic end packag command handler dispatch connect two real busi logic actual entiti command handler drive oper also start allow multipl servic expos differ bound context micro servic start think outsid box outsid least bother dispatch command command handler framework network layer bound context let control command handler let dispatch rout system framework let content http request command
mvc pagin massiv search criteria current work project fair larg search form form field cours map rout applic pull paramet handl usual imagin mani field grow url near max charact limit becom difficult manag question suppos mechan peopl general deploy store search criteria session expir way see get around forc pagin post variabl via javascript etc continu search criteria look keep manag possibl search criteria privat applic room flexibl built php java script css use specif flavor framework although use tradit mvc design pattern thought help past experi handl appreci
model relationship valid construct imagin devic class repres physic real world mobil devic field like enabl platform model imei etc oper class someth need done certain devic like devic enabl oper lock oper one devic mani oper relationship oper cannot exist without relat exist devic model way system allow certain type oper devic certain platform exampl android devic would allow devic enabl oper attach window phone devic would current model start consid android devic time creat concept oper poor man event sourc could track done certain devic via api later start support os devic introduc platform field use enumer class differenti like public enum platform type short lt summari gt devic android lt summari gt android lt summari gt devic window platform lt summari gt window place name os lt summari gt devic os platform lt summari gt io point time requir met correct need restrict certain type oper certain platform current model automat restrict current implement consid hardcod list support oper platform use reject creation oper certain devic like chang model restrict robust enforc thought use inherit creat android devic io devic window phone devic class still fail see could restrict relationship oper cover requir devic oper devic support oper model oper straightforward inherit like public abstract class oper protect oper log new list lt oper log gt public date time creation date get set public virtual devic devic get set public int devic id get set public oper status general status get set public int id get set public date time last updat get set public collect lt oper log gt log get intern set public date time receiv date get set deriv oper type like one mention public seal class lock oper oper lt summari gt get set valu indic whether devic must lock lt summari gt public bool lock get set lt summari gt get set devic lock password lt summari gt public string password get set public seal class enabl oper oper lt summari gt get set valu indic whether devic enabl disabl lt summari gt public bool enabl get set possibl model better reflect new requir want somehow need way tell given oper support given devic allow relationship exist oper support suppos could tri someth use generic inherit devic oper class exampl public abstract class devic lt oper gt public collect lt oper gt oper get set public seal class android devic devic lt android oper gt public abstract class oper public abstract class android oper public seal lock oper android oper particular approach would need multipl inherit work sinc use c possibl could tri use interfac differenti oper suspect would problem map databas later use orm also realli break everyth complet isol class need general concept devic oper regardless platform oper type base class exist current model
design pattern navig page mobil platform like ask best way handl navig page activ mobil platform specif handl state complex app handl back action etc begin worth mention look solut fit mvvm approach window phone cours first page googl give answer exampl simpl case like c mix pseudocod look pretti clear right interfac navig view model defin two basic method simul move forward back chang page method execut may think everyth work ok let take look realist situat dev like use static class data contain handl page state ok good situat key unwant differ valu mani activ case need write mani condit statement complex app near imposs handl variat launch view model program world mani design pattern believ idea mayb research good enough problem navig mobil app without write method hundr case would great see someth like strategi pattern encapsul case base interfac realli clean activ method etc possibl
use inherit differenti object even field consid simpl class model real world mobil devic lt summari gt model repres devic lt summari gt public class devic public date time creation date get set public bool enabl get set lt summari gt get set devic hardwar identifi lt summari gt lt remark gt common fill data like devic imei lt remark gt public string hardwar id get set public int id get set public date time last communic get set suppos new requir arriv need start differenti devic platform like window phone android os common option think would creat enumer class lt summari gt defin type devic lt summari gt enum platform type lt summari gt devic android lt summari gt android lt summari gt devic window platform lt summari gt window lt summari gt devic os platform lt summari gt io add new properti devic class public class devic public platform type platform get set anoth approach would creat inherit hierarchi devic class public class android devic devic public class io devic devic public class window phone devic devic choos one approach alway choos second one reason
bad index php zend framework mvc applic mix definit side effect introduc code qualiti standard check via new project particular php fig recommend project use zend framework fair simpl entri script pass mvc applic run php code sniffer get warn file declar new symbol class function constant etc caus side effect execut logic side effect first symbol defin line first side effect line essenti psr like constant definit return statement later instanc matter long rest mvc framework applic okay problem
repres model n relat task associ n document record hardwar tabl file could warranti whatev sql server set file stream group made tabl file requir column id intern id guid varbinari max column anoth tabl store file inform name size mime type file id file tabl call tabl document info good name describ relationship hardwar tabl document info tabl struggl consid store hardwar id document info tabl creat anoth column repres document relat would help integr futur tabl also need relat n need store file well specifi new type good id long id type differ relat hardwar model principl model field repres tabl column yet store hardwar document somewher question
polymorph repositori interfac local remot oper process design facad api client class would abstract crud oper local databas remot one rest web app said api client class depend implement class let call local repo remot repo whose respons interact local databas driver http client respect said resourc let call resourc save local retriev network cannot save network exampl would retriev list resourc save item local creation resourc updat server side point local repo implement save resourc oper remot repo question class implement differ interfac local repo interfac remot repo interfac implement singl interfac save oper remot repo throw invalid oper except
singleton style class work access session multipl mvc control question background e commerc site develop requir multipl control method access singl session variabl idea idea creat singleton style class let call session checker would instanti constructor control call method call check session status turn would check see session variabl null null creat new session variabl potenti issu would creat session checker class static would creat new instanc control session hold state access multipl page app would ok e access session state new instanc session checker class would better singl static session checker class access control constructor
correct approach dao layer presenc orm framework use jpa hibern probabl limit question current write data access code web control class thank jpa case code simpl basic simpl queri trivial setup tri move method separ class improv code reus encount import problem although similar method especi appli fetch join class tabl control need fetch class control need follow variant move method even slight differ separ method dao class make dao complex method name long would hard find correct one forget fetch join setup applic perform load need lazi load reduc number method databas access much less effect transact must span across entir request control code put complex logic method need e g suppli boolean paramet fetch someth method tweak queri accord paramet method implement complex would either build queri string piec use cumbersom criteria api method hard read understand leav general like approach lead code duplic much queri declar see much problem main problem lack testabl test control would need prepar databas found complex jpa mock implement suppli memori data wonder approach use complex project saw th approach saw complex hous orm base hibern talk call repositori pattern realli understand peopl mean servic layer never saw need current question data repositori class
iter list expens iter array net accord answer post list lt gt back array accord articl list iter consider slower array iter list array hood take longer iter especi foreach note assum list implement array might interpret inform wrong
call iter return current previous next sibl node list call iter given list b c return object form prev curr next iter e g undefin thought tupl use think tupl usual item list undecid edit tripl could work also wonder mention type structur literatur familiar link list differ edit generat implement java script
ast process use visitor pattern know visitor pattern typic use travers hierarchi heterogen object inherit abstract object dissoci process object data within classic use visitor pattern often quot process abstract syntax tree compil inde structur tree known runtim program pars one want travers tree modifi node accord semant pass implement visitor visitor pattern look like overkil sinc allow doubl dynam dispatch function ast node type visitor type one static know order visitor use process ast semant phase code c done spot without compil would doubl dispatch true visitor figur would need doubl dispatch note wikipedia page list use doubl dispatch ast
role base access control model object orient want prepar swing applic design role base access control model mvc design view want request someth control request realiz object orient manner request session inform user sent model control exampl model method like method model class session object paramet role inform user also role right store class check user right therefor everi model roleright object includ role right map correct design
oo design data process pipelin wonder design fair simpl class whose properti complex comput also properti depend upon comput exampl use graph graph process think node edg chart scatterplot motiv problem class communiti graph set collect communiti instanc communiti graph set initi input graph larg social network graph along basic paramet describ known graph communiti subgraph input graph along structur descriptor initi communiti graph set contain communiti subgraph sever major process step contain set communiti subgraph major process step e function call trigger gui human tune paramet algorithm run step human set paramet process result visual continu refin paramet result accept accept paramet button click result saw return method trigger gui problem design communiti graph set state contain communiti subgraph right function call right order process pipelin monolith process pipelin grow chang maintain becom unweildi face grow number variabl use increas mani place inde problem inher data process pipelin problem solv note none communiti graph set coupl gui logic coupl iter optim interfac step describ gui clever optim algorithm could implement interfac
develop mvc framework use knockout js current use laravel php mvc framework develop web applic go along quit nice comfort expect framework applic structur problem problem front end ui interact side use knockout js amp j queri encapsul lot front end ui amp data interact sure use former correct knockout js pride bind element dom event handler function javascript view model layer allow send request away server via ajax fetch new data add templat html current dom alter present page understand within singl page context mean discret page need user amp data interact probabl end creat singl page view model js file handl sure even whether knockout js view model use across page right creat view model near everi crud oper page applic correct design exampl creat user view model js user signup page edit user view model js user edit page home page view model js applic land page control ui correct follow one viewmodel per page philosophi wrong meant one viewmodel per data model philosophi draw line view model risk encapsul much function one object risk separ everyth broad creat duplic file structur knockout js view model
top menu bar drive sidebar sub menu applic written c asp net mvc razor view bit stuck menu structur per imag one see top menu side menu standard menu bar know logic menu item sub item need top menu contain menu item sub item relev item appear side menu green yellow section imag part layout cshtml page white section render bodi happen one would select item side menu white section get updat think render section layout cshtml render base view use gut tell better approach perhap better defin sub menu item layout page static keep ad new featur come along better approach load element dynam
layer would audio player servic fall mvp system tri complet overhaul app wrote back play audio learn mvp pattern organ work sure audio playback servic would fit design pattern could break pattern without disrupt benefit come work tutori exampl get head around topic first exampl second exampl realiz mvp pattern complet system architectur struggl figur continu good practic set patter thing like audio play servic download servic sens neither fall strict would think data present someon could point right direct would grate
motiv behind implement annot guic recent read implement annot avail googl guic allow programm specifi bind interfac implement futur use depend inject exampl time bind quit use defin explicit bind modul use follow syntax accord document equival follow use implement annot gain see code margin shorter time approach drawback right point doc use implement care add compil time depend interfac implement depend may problem mani case person see code smell use case make implement annot worth use one possibl way seem employ code librari framework describ doc annot provid default bind easili overriden explicit one type bind statement first argument implement annot bind statement use annot suggest default implement overridden bind way develop librari provid user box bind custom somewher client code reason annot exist someth miss gain anyth use code applic take care busi logic librari framework extend
php mvc access current user best way tell user alreadi log access page seen mani peopl talk recognit servic valid user tri login check alreadi log assum store user state session check applic also requir whitelist top need redirect user page whitelist oppos login page whatev page request log main roadblock implement whitelist logic router domain object check user log control get current user role log acl call recognit servic index php recognit servic return user role pass along acl control use note realli fond control decor user access method control handl
present view interact model mvp pattern learn mv pattern mvp case tri refactor old android applic mvp pattern make thing less tight coupl struggl one one concept know present get data domain layer connect data layer view communic data direct indirect exampl tri figur got long run download servic assum data layer need start stop depend user interact ui would communic signal servic data layer domain layer seen look like ui talk back data domain layer someon would will explain grate articl work first resourc second resourc third resourc
advic architectur wcf mvc first basic n tier applic present busi layer databas old net wse win form applic bit tight coupl like requir upgrad newer architectur time elimin less ideal design choic made year ago e g use dt os instead datat db view direct client etc think go follow design broad stroke creat busi logic layer class includ busi logic valid etc use data access class crud oper expos bll use wcf servic layer wrapper method consum wcf servic new client wpf probabl central wcf relat oper client project creat helper class handl connect wcf servic act like fa ade servic oper time new web applic mvc use oper defin bll howev due outsourc reason scope question particular want mvc control develop use even know e g bll assembl wcf method convers want wcf servic develop abl use bll assembl web method guess case cover use condit compil symbol bll assembl e g web wcf cours mean two differ version one project question given fact singl bll order maxim code reus optim approach referenc bll wcf servic mvc control wcf servic hard refer bll much say relat certainti client side helper class refer wcf servic interfac implement proxi way wpf client affect intern chang bll mvc control hard refer version bll assembl well use wcf servic mvc project discuss break soa overkil product server project mvc control refer interfac instead actual bll assembl would still need instanti actual class implement interfac cours somehow assembl pass mvc project could use wcf servic see abandon notion common bll project altogeth thank advanc advic
visitor pattern valid scenario goal task design small system run schedul recur task recur task someth like send email administr everi hour pm monday friday base class call recur task sever class inherit recur task one call send email task email servic help send email last class recur task schedul respons load task cach databas run task problem put email servic option1 inject email servic send email task alreadi discuss whether inject servic entiti peopl agre good practic see articl option2 els recur task schedul told els cast like oo bring problem option3 chang signatur run creat servic bundl inject class recur task schedul run method send email task would see big problem approach option4 visitor pattern basic idea creat visitor encapsul servic like servic bundl also need chang signatur run method run method send email task typic implement visitor pattern visitor inject recur task schedul summari among four approach one best scenario big differ option3 option4 problem better idea problem thank updat think andi answer summar intent realli well still confus problem suggest read post first found problem similar messag dispatch problem lead option5 option5 convert problem messag dispatch one one map problem messag dispatch problem messag dispatch receiv messag dispatch sub class messag correspond handler rarr recur task schedul messag interfac abstract class rarr recur task messag extend messag addit inform rarr send email task messag b anoth subclass messag rarr clean disk task messag handler receiv messag handl rarr send email task handler contain email servic send email receiv send email task messag b handler messag handler handl messag b instead rarr clean disk task handler hardest part dispatch differ kind messag differ handler use link realli like approach pollut entiti servic god class
domain object model queri id vs object let assum two simpl model class product brand obvious queri method product class like want queri product brand assum brand id databas assum 2nd way write make method easi test mock brand class unit test right
getter data convers java v os work standard spring applic dao layer return entiti servic layer servic layer return v os servic control certain scenario vo look like confus whether method get child map contain vo move util class know busi logic vo opinion get child map method return data contain contain vo differ format thus qualifi busi logic could find answer programm deal scenario busi logic v os hit class creat close coupl bad practic kind suggest best approach scenario pleas point link explain detail
updat entiti via servic layer best way updat entiti use servic layer perform singl atom action understand like blog servic publish blog id edit multipl valu map databas entiti consid follow code could pass viewmodel kind updat compani method tie viewmodel servic sound super icki could edit valu entiti direct save chang without access context context inject servic via context scope mechan allow nest dbcontext atom multi action transact could edit valu direct entiti call save chang servic direct rather let servic dictat context save option
repositori pattern activ record pattern compat current develop webapp defin model implement activ record pattern model also defin interfac specifi entiti properti make easi inject class special use unit test look forward implement model repositori pattern abstract databas implement e g articl pattern popular today web develop framework clear integr activ record pattern definit wrap row databas tabl encapsul databas access map object properti databas tabl integr model repositori model implement ar altern use model implement ar inherit databas method inject repositori wrap ar databas method best practic scenario add context question use laravel eloqu
class repres json respons dto domain object someth els consid rest servic spring mvc wonder packag respons class e name contain packag first thought domain object actual bit differ wrap true domain object like respons class map top level json object thought may dt os actual far understand dt os use applic layer output object use separ applic question kind object special name yes definit state dto domain object e name packag differ use one seem better like
solut static inherit seen lot post recent singleton avoid howev see problem follow solut common problem static inherit exampl recent work librari scrape html sourc websit pars content object problem site differ type content articl video etc initi code sever differ static supplier class e articl supplier quick found share lot boilerpl code e argument check could made class instanc base seem pointless new articl supplier state method depend argument pass instanti anoth one wast memori brought think use singleton pattern base class could perform boilerpl code check call deriv class implement deriv class could control access singleton simpl exampl c focus implement within articl supplier without write boilerpl code time control instanti object like emphas complet thread safe singleton state method static first place appropri use singleton pattern still pitfal miss
share servic instanc amongst control taken code net mvc project relat inexperienc mani mvc design approach work get good understand design choic one aspect caught attent control class initialis use exist instanc servic non mvc past usual kick servic need servic instanc control instanc show exact mean think code caus init control requir servic guess improv perform need fresh instanc servic class time need even control design make code bit unwieldi chang servic method requir keep interfac class sync make bit overhead code chang two option see creat instanc servic control see could becom problem heavili use applic see issu make servic method static need creat instanc class seem pretti much alreadi mind seem like nice altern suspect general distast static method day reason still learn option compar miss someth code pattern seem fair popular net mvc look like depend inject bunch read see design depend inject use structur map librari merit effici decoupl code quit compel seem like code shown better two option primarili design standpoint also perform standpoint
best shard key user authent access api user send login password get generat token access suppos size account tabl larg larg need shard usual prefer shard rang exclud shard tabl primari key id shard key case shard key string login last best practic use task consist hash guava exampl reshard k n key case chang structur node may practic without shard someth els
decid form system test ok start initi version art unit test unit test class everi test cover one aspect one method drawback high mainten cost brittl test seem second version art unit test point take bigger unit test right size one use unit test heard test public interfac provid modul project work relat small public surfac big back offic sure would work arrang test would realli big probabl difficult follow set boundari sut decid form sut
combobox boolean valu code behind viewmodel ran disagr cowork mine implement repres boolean valu combo box use xaml mvvm current viewmodel simpl bool tell set enabl nullabl use way mark valu inherit current xaml simpl tri state checkbox howev user friend way convey full mean instead want show combo box valu inherit null yes true fals seem work well disagr properti boolean option come agre read dictionari lt string bool gt adher strict mvvm pattern properti part viewmodel part view code behind caveat realiz part view code behind bind adjust point view data context item sourc bind path boolean option mode one time relat sourc relat sourc mode find ancestor ancestor type x type control
hash code like method use state check thought simpl effici way combin state event make event handl effici idea state check involv state object hold refer mutabl variabl object figur use sort hash code object check two state would effici iter content state object compar target state problem hash code calcul per state basi method similar hash code use compar two state without compar content direct cheap cpu usag edit realiz hash code per state basi
mvvm model contain complex object let us say book class book object anoth class like author complex object like list genr question mvvm model make complex object properti use simpl object like integ contain refer complex object like id
java unsort set implement iter sort map two aspect question felt close relat ask separ question sort map implement iter lt map entri lt k v gt gt need perform action everi key valu pair map iter entri set seem like way go provid direct iter method sort map unless worri iter order inconsist hash map lead implement iter impli stabl order iter order collect list sort map sort set great way reliabl implement equal see note thing produc result everi time iter unsort set map could yield differ order call multipl time unsuit purpos especi compar hash set hash map two could contain object order iter would differ guess aspect question histor reason design decis today correct answer question mayb order iter extend iter guarante order note origin suggest need reliabl order implement hash code sum hashcod turn need reliabl order hash algorithm commut addit common use hash code commut b b b even overflow addit still commut integ max valu integ max valu still need reliabl order implement equal compar first item one first item etc p question interfac iter set sort set map sort map fine bring interfac exampl think collect interfac relev question quirki potenti distract
deal depend separ project know talk one composit root set depend alway prefer constructor inject type sometim make sens pseudo code special consider fake model fake depend sit class librari project reus mani project project use class librari know even know fake depend exist alway one test implement fake depend reason replac fake dependci run test test class librari would rewrit code differ make sens consid requir edit seem confus depend servic locat use class librari think model public interfac class librari everyth els hidden project undocu subject chang anytim ever use method defin model servic locat live insid class librari project purpos make possibl test class librari absolut inject new depend librari want make possibl replac depend would cours use constructor inject like public fake model string name fake depend depend case use class librari current like class librari self contain mayb use word depend confus someth need provid class librari
tri separ state implement right work code combin state oper look someth like note actual deal car truck abstract busi logic apolog advanc analog entir make sens truck impl field properti int mileag bool mission accomplish mani mani constructor truck impl truck impl rental agreement agreement method void drive set whole bunch field properti subsequ use make decis park get car dealer haul void get car dealer void haul return rental compani done otherwis park home void park car impl field int mileag bool mission accomplish constructor car impl car impl rental agreement agreement method set whole bunch field properti subsequ use make decis park void drive set whole bunch field properti subsequ use make decis park get car dealer race void get car dealer void race return rental compani done otherwis park home void park use code look similar follow pseudocod rental vehicl handler vehicl impl factori factori handl rental agreement agreement impl factori creat agreement impl drive impl park main true var agreement get agreement foreach var agreement agreement handler handl agreement code get batch rental agreement still process individu want handl car truck slight separ truck still drive park individu car want get car dealer individu race entir batch car park might want someth similar truck futur mayb thought would help separ state implement like start batch relat stuff ad yet one per rental agreement rental vehicl properti rental agreement agreement int mileag bool mission accomplish truck impl propertii handl number rental agreement mayb multipl car driver rental vehicl drive rental vehicl vehicl rental vehicl park rental vehicl vehicl truck driver rental vehicl drive rental vehicl vehicl rental vehicl park rental vehicl vehicl help reason thing bunch extra work gain advantag think help problem hand help refactor also tri thing dead end want spend bunch time refactor reason
c depend inject adapt pattern follow code sampl client work control specif case control establish session address gpib bus instanc inject client class case devic client class know say devic use control pass messag devic get troubl various way talk devic creat far text reader text writer binari reader binari writer may futur implement interfac done adapt assembl assembl know talk adapte control client refer control api assembl client ask instanc adapt text reader refer figur combin use factori pattern io c contain use uniti come design client get instanc reader writer implement adapt assembl control api assembl control assembl client assembl edit make clearer tri 3rd parti librari adapte low level function read write open connect etc high level class establish connect read write refer control adapt adapt 3rd parti librari control made addit interfac repres low level reader writer like adapt reader adapt writer client work exclus control know noth low level adapt stuff current design plan servic read config file find adapt instanti address devic creat instanc adapt inject control class inject control object client call control class session repres connect specif address bus idea client know say devic command control know say access physic layer client actual talk devic think would ask reader writer instanc clear depend inject client ask reader writer would know adapt high level reader writer wrap low level one implement adapt guess question client get reader writer think crude way inject client session text reader text writer binari reader binari writer interfac may need way inject session make session resolv lt gt type type method implement resolv could io c contain could chang design around adapt object creat also regist implement interfac io c contain pass servic layer
mvc question consol applic multipl control question concern administr consol applic requir around administr abl log type user cannot abl thing like look request user assign request ban user temporarili perman grant revok permiss user activ log consol style applic like unix rather option style interfac e ban user view request user select number prompt whatev info need tri draw class diagram attempt time past want well extens follow mvc pattern e g decid add gui view later like easili abl make addit think appreci feedback line think could differ init control handl method run first init control view object interfac current realis class consol view init control send consol view string pleas enter usernam get back whatev user type password init control object goe check credenti correct databas return true fals assum credenti correct init control call handl method insid main menu control main menu control send option view print view return select option option might ban request privileg someth similar option press handl get call ban control option get press handl get call request control requir main menu control ban control request control permiss control sound bad avoid okay control know mvc meant kept separ control would logger object call logger log log activ view current take option figur display user case print send back user respons appreci guidanc thank edit control pass option view could send option object option int option string descript option print control option get select view call option get control handl would someth like better would stop control know right view know control edit anoth line think thought instead control first thing run class call initi consol view print prompt usernam password pass login control return true fals depend whether credenti valid initi consol view call method main menu view end lot view object time view would know instead control know would previous sound like bad thing read lot materi mvc realli stump
build larg applic activ record pattern recent saw inspir quot secret build larg app never build larg app break applic small piec assembl testabl bite size piec big applic seem realli great want follow found use activ record pattern provid framework everi piec busi logic tight coupl activ record databas schema mean matter small piec build depend activ record entiti feel make stand alon enough deal thank
virtual method return uniqu collect ensur hint virtual method return collect item must uniqu want make sure obvious overrid method best way exampl two return twice erron think return someth like uniqu valu collect would throw except duplic attempt ad way develop get hint name descript error still tri misus good idea ps need access element key enumer collect although uniqu valu collect lt might use dictionari lt hash set lt behind scene pps mayb set lt behind interfac would great order though
handl authent asp net webapp offlin capabl client code hesit write question sound like opinion without tri anyth yet case want go wrong rout architectur need plan well advanc want fall victim xy problem web app thin html javascript client make ajax request asp net mvc solut well need add offlin capabl app make use localstorag html5 applic cach mean go provid form let user submit connect post server point authent authent http post request pretti new mvc understand web form carri lot behind scene stuff view state may use authent know pass authent data mvc control import know approach requir right separ offlin form never even attempt send data server send later differ section common check user authent ajax request
inject strategi oo work refactor project busi logic look much like use strategi pattern would benefici depend valu three properti let say age gender salari differ polici discount valid appli first idea put logic respons decid polici appli strategi factori return differ implement strategi interfac concern relat use di strategi factori need di call servic strategi object end either annot almost everyth servic compon factori send servic strategi via paramet look even wors miss someth normal could applic layer tangl right case way use strategi pattern need brief answer anyth sound obvious wrong
mvvm vm valu type recent strong influenc two lectur gari bernhardt boundari andi matuschak control complex also learn work mvvm paradigm lead question view model immut valu type sometim think yes other struck notion view model link imper shell function core think confus link two imper function natur
differ consum produc observ observ work design applic consist three part singl thread watch certain event happen file creation extern request etc n worker thread respond event process worker process consum singl event process take variabl time control manag thread error handl restart thread log result although pretti basic difficult implement wonder would right way concret case java higher abstract answer also appreci two strategi come mind observ observ watch thread observ control case event happen control notifi assign new task free thread reusabl cach thread pool wait cach task fifo queue thread current busi worker thread implement callabl either return successful result boolean valu return error case control may decid depend natur error happend produc consum watch thread share block queue control event queue control share two worker task queue result queue case event watch thread put task object event queue control take new task event queue review put task queue worker wait new task take consum task queue first come first serv manag queue put result error back result queue final control retriev result result queue take accord step case error end result approach similar slight differ observ control thread direct task attribut specif new spawn worker overhead creation thread may higher much thank cach thread pool hand observ pattern reduc singl observ instead multipl exact design queue strategi seem easier extend exampl ad multipl produc instead one straightforward requir chang downsid thread would run indefinit even work error result handl look eleg first solut would fit approach situat found difficult find answer question onlin exampl deal clear case like updat mani window new valu observ case process multipl consum produc input great appreci
complex iter c note origin ask part current project involv iter sequenc necessarili exist exampl someth similar relat databas memori say three array want abl iter part given car exampl specif want part car part current solut two function return iter set part index index part part car index car select first paramet car part index privat variabl use track progress car part list similar function get next one move next car part return iter still valid final complet check current iter still valid use loop like sound like good solut came trial error also experi function return iter first result next function would return first result use loop good pattern assum known one name pitfal see note general question ie made general stand bother also point valid function strict need loop allow natur loop also sometim use outsid loop
depend inject view model unmanag paramet person edit view model need two object person id person repositori person repositori obtain servic locat privat final int person id public person edit view model int id person id id person repositori servic locat get person repositori class would like use depend inject di io c obtain person repositori prefer via constructor public person edit view model person repositori pr person repositori pr problem pass person id constructor di pattern make setter id di chang logic person edit view model person id field cannot final insuffici di pattern cannot pass data object constructor switch mind design view model way probabl use pattern pass data object edit chang question use person id person repositori closer common situat
creat file wpf mvvm build wpf mvvm applic take input user generat output document save temporari folder open display nativ applic e g ms word document data cours repres model well logic construct actual document includ interact third parti librari work document file format question actual file save disk oper model pass kind object stream possibl back view model save disk someth like belong
java rest api check duplic insert record develop applic java pars upload record csv onlin databas via rest api know sure duplic record csv file cannot sure csv file process see clarif need check duplic insert clarif cannot implement solut check csv file process csv file contain bank transact record download bank therefor know individu csv file contain duplic howev multipl csv file could download date rang overlap date rang etc need check duplic transact level rather file level unfortun control back end databas use method avail via api mean usual solut use sql e g question suitabl method avail api list transact edit transact insert transact method avail probabl relev list project list write project get balanc get tag new project delet project list tag transact delet transact list currenc user data huge databas four column thousand record seem like option iter record insert compar record databas seem ineffici option effici way compar thousand record use java answer comment question happen call insert transact transact alreadi exist duplic fail transact success insert duplic csv file id column avail column date descript amount balanc combin make record uniqu could potenti creat id base list record allow pagin return record return record xml format
constructor inject vs ioc factori today work collegu discuss follow basic rule engin work follow way rule executor get rule execut constructor like public rule executor collect lt rule gt rule execut execut rule call rule appli rule rule execut rule provid method appli rule execut rule want rule executor execut cron job discuss retriev instanc rule executor think correct way via constructor inject collegu want use ioc factori static method get instanc lt execut method cron job would someth like var rule executor ioc factori get instanc lt rule executor gt kernel standard kernel ninject think constructor inject better allow easier test mock etc couln convinc use think ioc factori work well use would argument convinc use constructor inject instead ioc factori
best practic track multipl piec data program project c ask need c need track multipl piec data command differ modul action program take depend interact differ piec data eg foo bar x otherwis piec data struct group togeth similar inform primit wonder best way implement would person think piec data variabl like one cowork suggest instead manag everyth super struct reason everyth pass around need make easier track everyth rather bunch lose variabl idea someth like sure agre reason would prefer way handl upsid downsid method one list
dto jpa version db tabl repres employe depart server side java ee contain jpa entiti repres client standalon client communic server use dt os case singl dto contain employe dept detail want implement optimist lock use version annot entiti issu client send dto updat valu server method webservic server method creat entiti use valu dto find entiti use find method jpa call updat much gap find updat issu valu come dto might stale sinc use standalon client context server jpa entiti jpa cannot find valu old version find updat match overwrit entiti stale data way solv issu
choos use framework caliburn micro etc given mvvm applic start mvvm wpf project eventu built deploy studi lot caliburn micro mvvm framework fact end use caliburn micro end implement mvvm concept specif view model base rout command class assign somewhat larger project along line singl user rich client offlin desktop applic say decid use caliburn micro problem begin read famous blog post whose titl say use mvvm need framework tri someth like mvvm without framework huge amount work ton duplic code reinvent wheel retrain peopl think differ least framework avoid duplic code hope reinvent wheel allow focus retrain peopl retrain part general unavoid framework provid plumb code structur make process easier would agre upon first read actual experi caliburn micro cm actual applic clueless disorient framework make process easier quit opposit read ever repeat exampl provid rob eisenberg rather inform document tri infer usag pattern convolut provid sampl utter indirect class interfac relationship thing seem design work base side effect seem human imposs unless season genius sorri rant guess know mean mention trivial scenario seem involv io c contain someth never work seem solv problem might even feel like spend project hour learn thing instead think problem applic domain want banana cm gave gorilla io c hold basket banana consid move back homespun mvvm framework compos hand mvvm specif class actual want implement would like least give cm chanc case lose someth plain thing wrong way sheer inexperi ignor question widespread consensus framework make thing easier natur happen experienc quit opposit mean use framework tri learn wrong way clue even use framework first place right way figur use cm simpl mvvm develop
serializ singleton impli valu refer semant time read effect java came across passag talk way might implement serializ singleton perfect normal thing java immedi baffl intuit say serializ necessarili impli valu semant singleton necessarili impli refer semant valu ident semant mutual exclus effect java author even appear share least intuit read later passag correct rule thumb valu class date big integ implement serializ collect class class repres activ entiti thread pool rare implement serializ search book site blog post found lot exampl read resolv littl return instanc mayb realli bad java class like look say deseri object class ignor serial data complet return exist instanc would impli object actual serializ meaning way yet answer seem say use read resolv make serializ singleton gave start write question huge misunderstand said far would legitim use case serializ singleton class would semant
make object class inaccess reflect build api minecraft call quantum api know reflect use nasti stuff class even caus undefin behavior use without care way make class object immun reflect perhap secur manag vice versa restrict certain list class object use reflect use would prevent mod load api use reflect chang runtim permiss secur manag prevent modif minecraft base class object runtim well api class object
php inject databas connect multipl object suppos two class defin object vast differ function datastor inform requir divid two separ databas exampl class employe steel extrud may place databas human resourc capit respect rather hard code connect respect databas see advantag flexibl come inject databas connect constructor howev fail see implement proper read singleton databas class librari bad practic sinc mere mask fact realli global variabl hand altern seem fantast either declar necessari connect global loader file function ident databas librari class smell wors b creat new connect everi time new object creat unless sort optim awar seem careless ineffici c store object librari object take singl connect look bad feel wrong sure rare problem accept way
n hibern session consid implement unit work pattern debat n hibern session offer proper correct unit work use without transact absenc transact everi sql command would wrap databas server differ transact still chanc batch sql command flush session object commit 8th meet error rest includ 8th never finish thing happen flush mode auto use without accompani transact queri forc dirti entiti flush databas point applic thrown except chang previous flush roll back would imo almost alway need implement unit work work make use transact along session
design pattern retri error handl tri find good design pattern perhap seri pattern inject error handl retri handl get data webservic instanc tri figur way inject mechan discov deal error well mechan handl retri work wait retri enough modifi request paramet etc would guess first person face way discov yet look chain respons strategi possibl solut seem quit finagl work
refactor singleton use contain refactor class requir initi take depend refactor old app use depend inject n pretti new di class use singleton refactor non singleton class use contain manag lifetim singl instanc initi use done constructor seem general frown di world srp say method one thing constructor depend read somewher class depend could creat instanc call initi regist instanc contain singleton class depend prefer resolv use contain go wrong way miss pattern
return slim domain entiti view model wonder handl view model tradit sens includ properti method anoth view model simpli properti perhap view model would return view entiti someth let explain domain model view model perhap desir view entiti would also need someth similar say workout detail view model requir differ set properti view model like guess question mvvm wrong view model also desir properti get exist workout realli suppos return list lt workout histori view model gt case bunch object repositori method realli want data creat third class like workout histori view entiti typic call view entiti realli sound right
model complex event event sourc let say user like super hero want see war go world stop prevent need sleep sometim war happen asleep want know punish one start exampl war start want see happen also event war like battl exampl want softwar present inform war tabl see war still react way softwar need write let say softwar monitor state base lower level event generat event like war start war end battl start battl end war chang locat etc problem puzzl time war start war process event war still go war end event say process end event concret let say sequenc event war1 start locat x1 war2 start locat x2 war1 chang locat x4 war2 chang locat x5 war1 new battl start locat x3 war1 new battl end locat x3 war1 end user want see sequenc want see someth like war1 go locat x1 war2 go locat x2 want first row chang accord next event war1 go locat x4 war2 go locat x2 war1 go locat x4 war2 go locat x5 war would end war1 locat locat war2 locat differ locat see war1 war2 event war end super hero still want know inform want war tabl basic want see current inform war process right solut think war process process still go alreadi end problem case would want monitor event differ war simpl like switch would model process start time stop time strang think thought differ solut instead display process display lower level event group subject like war start war end subject war process event system would process subject kink lost mayb someon alreadi done someth like could correct approach
write back end api heat discuss today mvc applic websit written mvc asp net usual follow pattern someth view hit control control build model call manag get data build model control method model goe view rins amp repeat said code tight coupl exampl want desktop applic well would abl use exist code solut best practic said build api build websit top api build desktop applic mobil app etc simpl seem like bad idea various reason anyway seem find anyth googl might discuss practic anyon inform pros con read reason think bad idea way abstract run backend api tri make flexibl make unmanag mess stuff built mvc seem useless like role authent exampl author attribut secur roll api call requir secur inform attach develop token system whatnot write complet api call everi singl function program ever pretti much everi method want implement need ran api get updat delet everi user plus variant oper eg updat user name add user group etc etc one would distinct api call lose kind tool like interfac abstract class come ap stuff like wcf tenuous support interfac method creat user perform task want creat user call time decid method api local webserv name pipe connect problem desktop client hit sudden bulk user creation involv hammer api internet time good creat bulk method realli creat desktop client way end modifi api base integr direct integr b lot work creat extra function yagni unless specif plan write two ident function applic one web one window applic exampl huge amount extra develop work debug much harder step end end lot independ oper requir lot back forth exampl code might get current user check user administr role get compani user belong get list member send email would requir lot api call write bespok method specif task want bespok method benefit would speed yet downsid would would inflex probabl reason top head seem like unless realli need two ident applic realli worth never seen asp net applic built like either write two separ applic api code version control well user page get new field updat api consum code simultan ensur ill effect put lot extra work keep robust edit great respons realli start get good idea mean expand question would structur mvc app follow api structur exampl websit display info user mvc view cs html page display user view model control call get user creat user view model pass view manag class sort api get user method control get user want desktop app mean get user need expos via kind api might want tcp connect either wcf perhap remot also want mobil app res tful sinc persist connect flaki would write api one wcf web servic method get user code return new user manag get user mvc web api method thing continu call get user direct mvc control method would choos solut would work three web api rest servic build everyth three app make api call mvc one local machin theoret perfect scenario see larg overhead develop way especi develop way let oper res tful manner think cover repli edit read stuff put comment think might explain question bit trick question think write back end api confus think singl webservic everyth mvc app desktop app mobil app call stuff conclus come realli make sure busi logic layer correct decoupl look code alreadi control call get user manag creat view model render view realli busi logic layer api want call desktop app though need write someth like wcf servic facilit call even wcf method call get user contain code return busi layer get user would suffici api busi logic wcf web api etc titbit code let extern applic call overhead wrap busi logic layer differ ap depend need write api method oper want app plus need sort way authent part stick busi logic separ project class librari probabl issu hope interpret correct thank discuss comment generat
data access layer singleton good ideea work project web applic data manag idal contract dal implement class stuff data retriev databas save databas question reason idal contract object pass constructor singleton
use guic effect api design creat base api java se includ modul like mvp architectur servic amp repositori layer event model fire event present etc tri implement best practic softwar design recent read depend inject amp advantag decid use guic di framework spend two day learn guic still confus design issu creat injector use guic creat injector modul core modul api make injector instanc avail api class injector inject good practic make injector instanc avail api user use injector creat instanc even make avail api user may bad practic henc use aop approach like custom inject creat injector heavyweight oper injector per applic injector creat startup stage applic could creat without affect applic perform edit understand usag provid instead inject injector short mvp exampl understood answer use provid lt x gt instead inject injector provid class
jee mvc control call interfac instead interfac implement follow tutori creat basic web applic eclips use mvc pattern resin web contain part understand model creat pojo interfac interfac implement data repres book get control creat simpl servlet call interfac instead interfac implement interfac execut implement class also two impl class would interfac know call
cleanest way repres three state one hold key valu pair two empti marker write hash tabl use linear probe resolv collis look linear probe work seem like allow delet simpli remov element sinc may prevent previous collid element found post delet sinc search end unoccupi cell thought wrap key valu pair class repres state state say delet un occupi act marker hold anyth third state howev occupi need hold pair goal differenti cell alway empti cell data previous delet illustr want write haskel set need pattern match tell state cell easili extract pair cell occupi write java though start write set class state inherit base class cell state thought sure would even use sinc pattern match support java second idea defin class key valu field enumer state field getter use check state cell user attempt get cell state occupi except would thrown similar behavior option user could use either tree switch act cell base intern state second idea seem imperit style still seem clumsi also allow possibl inconsist state key valu avail mark non occupi mark occupi contain pair possibl haskel solut way homework simpli use linear probe sinc assign requir better way go
messag orient middlewar applic intra applic communic recent develop applic lab view although pretti happi design realis might abl improv one part make various compon particular subsystem collabor use publish subscrib model go road think best develop messag bus lab view librari reus various project includ one made get good idea design look messag orient middlewar solut like rabbit mq read gregor hohp enterpris integr pattern focus sort area thing keep talk mo ms use integr separ applic may may run machin irk littl seem find discuss mo ms use simpl mediat class exist pure within scope one instanc run applic serv facilit communic object within run instanc essenti question whether sensibl develop messag bus sort thing middlewar like rabbit mq use mediat object run within applic
joshua bloch enum singleton third parti ap book effect java give best singleton pattern implement implement enum doubt implement pattern third parti api use third parti api provid interfac irc api lot method like question code snippet valid implement design pattern benefit cite joshua bloch multi thread support facil chang etc use way irc api singleton get connect make enum implement irc api encapsul method irc api implement method like use instanc direct
get item list view without break mvc paradigm got arraylist special part special part object hold bunch inform name id date creat etc got list view present user name special part arraylist user select one part list stuff problem list view case swt widget list hold string name even though rather refer special part uniqu id field list view hold info everywher els refer part uniqu id like continu could creat anoth column list view store id set invis user pull feel gross total mvc contract go refer part uniqu id list contain string name think problem correct last note vagu awar mvc paradigm pro anyth said wrong sorri also java help
load aggreg root databas valid similar question valid domain model rule depend databas content ask new question descript want chang previous question mention problem form aggreg root field collect form set custom field fieldnam valu method also default properti form e g date birth first name last name work creat form want edit view form valid kick throw except field empti invalid valu perhap chang db load excel expect behavior allow form show updat admin correct field cqrs read cqrs far think would solv problem want edit form form aggreg root still need load modifi updat sinc need reconstruct model cqrs read model might help use cqrs would reconstruct aggreg root read model thank contribut
handl incompat configur builder pattern motiv answer separ question builder pattern use simplifi complex initi especi option initi paramet know proper manag mutual exclus configur imag class imag initi file size use constructor enforc mutual exclus obvious class simpl enough public class imag public imag size size thing stuff int rang initi empti size public imag string filenam thing stuff int rang initi file assum imag actual configur enough builder pattern use sudden might possibl imag imag new imag builder set stuff stuff set rang rang set size size lt set filenam filenam lt compat build problem must caught run time rather compil time worst thing problem consist comprehens detect problem within imag builder class could get complex especi term mainten deal incompat configur builder pattern
use constant paramet unit test mock depend method wrong unit test case want assert login oper sut abl call method one depend depend navig manag expect call navig manag navig string point mock navig manag isol sut test method see navig screen next screen constant make us think depend ergo inject mock mere test sut login call depend call method said constant confus time write unit test navig screen next screen yet defin made test depend exist made us think reason inject mock propos argument sinc depend sut must exist mean use constant test case perfect fine exact thing call navig manag navig next screen way method exist time test written issu must exist question would use constant test case wrong make non unit test
pattern communic nest usercontrol parent form c winform tri decid best way handl communic user control nest within anoth user control parent form form insid form user control tab control tab also repres user control object bind get instanti form pass properti first uc pass properti nest uc uc use bind sourc wire actual input control daisi chain behavior get cumbersom want send save command back main form need daisi chain event back form feel entir object own parent form object pretti much drive entir applic form ui grow mainten nightmar start break ui compon user control guess question would good place sort servic locat pattern keep simpl static singleton instanc object access control pattern could help could recommend
mani view control need one angular js app rather complex multipl nest tab multipl nest view amp control need ng router quit tricki implement browser base code usual thing ask code someth friend column button left size button click correspond content shown page conceptu seem previous project although yet clear whether nest could singl view singl control sever lt div gt ng hide ng show someth make think ought use multipl view amp control although certain implement
differ factori method entiti translat entiti translat provid function take one data contract class paramet return specif busi entiti within implement function new instanc busi entiti creat initi use data data contract class new instanc busi entiti initi return applic made request sourc descript sound similar factori method would safe assum differ type paramet use creat object
cqrs queri write model context user want edit entiti detail say user name assum fact read model eventu consist write model conceptu wrong queri write model order get recent state entiti page choos queri read model typic implement accord cqrs journey book deal optimist concurr thank advanc
authent servic endpoint expos servic charg typic model servic separ endpoint exampl compani project domain dll logic requir complet servic domain order access either refer librari expos servic endpoint hit compani project endpoint url api wutevz com blog messag mention seem unfortun mayb wrong one seen major servic domain creat direct insid endpoint project like wcf web api know setup key question also separ logic endpoint weird feel free chime think separ correct jade mani year consult see join question methodolog sound authent live backend unrel question ask backend vs client question endpoint servic web api endpoint domain servic method real biz get hung whether aspect use owin middlewar line method auth call horribl implement goal intercept point authent requir live endpoint servic method
mvvm strict view referenc model cowork differ view strict adher mvvm concept tri follow close possibl take shortcut almost everi chanc get one biggest annoy view bind model justif viewmodel would reimplement model ad complex catch rethrow event model viewmodel implement notifi properti chang exampl one case view model expos model properti view datacontext set view model view contain tree view item sourc collect model child item tree view type model contain properti direct bound tree view note simplifi version real program may ommit trivial detail user control two child element properti setter getter believ correct think collect expos view collect viewmodel rather collect model especi consid model correspond viewmodel end select item transform viewmodel via convert everyon think ok view bind model case like collect viewmodel need good argument either convinc cowork chang convinc current implement right approach
strategi defin domain data use integr test job work data driven web applic perform import busi featur queri model tier frequent larg contain much busi logic result mani integr test reli xml dataset use test framework abstract db unit popul data model migrat script contain ddl data domain chang execut test framework clean tabl execut test consid chang behavior clean domain tabl anymor would continu defin applic data specif test xml dataset regard domain data continu defin xml dataset pros test break case domain data chang impact busi logic defin small subset domain data suffici test busi logic con may necessari creat mani tabl row repres relationship test need would expens fix dataset case chang data model data duplic mani xml dataset project clean domain data insert script script would execut one time integr test data would common test pros test break case domain data chang impact busi logic would easier creat data test need creat applic data con test may break case domain data chang impact busi logic care test thing like number row return text attribut domain entiti test busi logic need specif characterist domain data cannot assum true product need chang actual data domain execut test rollback end chang someth mutabl unpredict
hash map replac singleton consid follow control view client applic run pure client side control must exist first thought implement everyth singleton realli feel right reason instanti like view certain thing base control got control need paramet set upon initi speak class rather singleton cours could object set whatev neither clean nice idea creat simpl mutabl hash map control store class key exact one correspond object valu upon initi check hash map instanc one alreadi return instead seem hacki though cours could stick class way sure good way mean instanti new control everi second game talk alreadi lot calcul go
gotcha use entiti framework ident dapper db access net mvc applic fire mvc project realli like use dapper orm like close databas possibl perform sql tweak reason yet still power orm howev one big snag ident amp role manag mvc scaffold make nice quick easi implement reli entiti framework need abl implement role well accept login third parti servic e facebook amp twitter unfortun time yet aptitud rewrit scratch date yet find concis guid tutori complet replac entiti framework insid ident scaffold want get wrap around axl tri reinvent wheel mind consid leav ef ident code place data access need use dapper wonder come known issu gotcha could trip anyon see issu build mvc project base approach
use generat list python often find cleaner write generat return list exampl prefer answer say encourag use iter everyth func gen better mayb like caller even know whether get list iter caller think exampl iter sliceabl use python nice clean syntax use itertool islic ignor advic use iter everyth get habit use slice behavior avail iter run list iter time might want use featur list support generat use list sometim generat other relat code user wrapper class make iter sliceabl work quit way might think though look foo look foo give differ result
mvc kind design pattern tri concret concept design pattern came question ask titl mvc model view control architectur kind design pattern
c iter best practic repres end rang last beyond last write librari deal lot sub sequenc order contain exampl contain user want access provid subsequ pair iter point first last element respect e sinc librari written c afaik std convent last iter point beyond last element wonder good practic wether return pair iter point first beyond last element respect e also program perspect complic thing use std function exampl count number element
iter interfac look redund java definit pre iter would say iter depend iter interfac shown standard recommend implement implement iter interfac becom iter syntact class implement interfac iter enabl implement class iter without explicit mention class class implement iter ad iter lt gt iter behavior iter interfac instead iter interfac would simplifi present one interfac iter iter hold respons iter ration behind ad iter lt gt iter behavior iter redund interfac instead iter interfac clear purpos introduc iter interfac pleas help understand duplic question answer talk violat srp
introduc new pattern codebas recent discov builder pattern step builder pattern essenti like object initialis step builder pattern add mandatori field class lot constructor ton paramet constructor variat paramet use lot duplic difficulti find constructor right one use give us flexibl creat immut object lot differ place want lose believ step builder help mandat particular field allow flexibl object initi give howev team work familiar builder pattern cannot see benefit realli want continu refector code base told complic see instant us remov mean spend anoth week work question introduc new pattern exist project work team even know question ask introduc new pattern code specif want know affect team need gain buy might worth note senior develop anyth close junior develop term experi rest team
akka obsolesc jms amqp messag broker spent last week deep dive akka doc final understand actor system problem solv understand experi tradit jms amqp messag broker exist provid follow asynchron process produc consum messag deliveri guarante includ persist retri fallback akka provid without requir infrastructur oper overhead akka actor communic asynchron non block akka supervisor strategi exist accomplish retri fallback escal actor configur persist virtual type store requir wonder app use akka ever need bring jms amqp broker e g activ mq rabbit mq kafka pictur word ever use case new akka base app would also warrant introduct new jms amqp broker cluster argument would perhap akka app integr anoth system case akka camel modul allow akka tap camel exhaust almost infinit list integr capabl tcp ftp zero mq list goe thought
put domain mvcs read understand mvcs model view control store design pattern let follow view applic view user see control manag view call model model busi logic store call db crud oper retriev put data put domain design domain mean actual class repres object db exampl user insid model differ layer
integr legaci applic new function legaci applic among thing abil creat instanc class within vb6 dl ls dynam call method vari signatur way access legaci applic code way remov product right requir build small plugin type applic would call legaci applic applic histor written vb6 push creat newer one net reus exist vb6 code feasibl use encapsul hide vb6 implement eventu replac far discov net applic creat without issu make com visibl boiler plate code thing control paramet pass new applic signatur would like new applic bypass boilerpl architectur becom one possibl come legaci applic pass assembl class name paramet json xml object contain paramet target class would need anoth paramet new applic would instanti dl ls need use reflect altern would creat net applic similar way vb6 one parameterless constructor method serv entri point draw pictur imagin legaci applic datagrid contain mayb row id target app need row id whatev need design sound longev mind net applic design reusabl mind start slight worri legaci applic phase left poor architectur result thing need done also miss anyth obvious
depend manag real world exampl see watch anyth depend manag hit consid holi grail depend class interfac ioc contain inject cours exampl trivial time constraint present that great client worri hydrat class real world exampl work class varieti calcul constructor see data structur go prevent ioc contain abl hydrat class automat say class complex function call calc foo calcul valu record retriev save databas result calcul need display user type new entri even get save databas also recalcul user chang core data save databas confus way someth wrong way construct class would think would common scenario must run complex busi logic even save databas therefor must hydrat busi object set data would prevent ioc contain abl fulli hydrat depend
domain driven design eventu consist domain aggreg struggl simpl busi logic feel like model incorrect architectur right use domain driven design event sourc domain aggreg produc event get digest subscrib eventu event queue empti view store complet updat struggl larg collect object aggreg need coordin domain one aggreg chat aggreg allow peopl add comment howev user add one comment per hour one comment entir life time domain object cannot keep comment memori still need chat aggreg appli busi logic eventu consist natur view store cannot let aggreg queri busi logic ddd handl aggreg need access lot data second issu domain command process want queri aggreg process command target aggreg exampl creat new chat comment aggreg instanc would like queri chat aggreg see chat still open
event sourc find aggeg differ properti id mechan best practis find aggreg differ properti aggreg id tri explain question exampl cart aggreg event sourc product aggreg rule bussi cancel sale product must disappear everi cart aggreg find cart specif product insid without rebuild cart aggreg thought use read model find cart contain specif product use ds command
defin stateless method keep togeth object c method stateless current creat class hold stateless method would call method place like view control user use log co worker mine pretti adam even though class hous class method need sort state implement use singleton pattern call see point implement singleton pattern need co worker abl get point view design pattern miss way creat class hous stateless class method correct
understand factori know hundr question probabl read fifti differ question blog post textbook problem gotten differ answer seen follow describ type factori follow muddl terminolog get confus pros con vs vs vs probabl other think right abstract factori pattern factori method pattern thing concret eight differ subclass abstract class need return one base user select repres either string int enum best go
php mvc concept larg control custom mvc framework php control file line question big concept flaw structur code kiss method quit maintain rule specifi larg control offcours could bad influenc web perform
vo entiti convers applic multipl layer ui jsp json result api control mvc servic perform singl busi oper per servic da os data access layer includ connect db layer two type valu object form valu object close view entiti replica row db sinc entiti db relat expos layer sinc form valu object relat db expos dao layer need popul form valu object entiti vice versa layer done dao layer servic layer creat adapt layer two pleas suggest good design
cqrs restor read model interest restor read model system base cqrs regular mode system process command creat domain event post messag bus anoth part system call rm subsystem process messag save read model mode good enough regular purpos repair read model exampl storag read model corrupt chang locat storag want system restor read model initi queri begin tri read data want know end repair process imagin two way creat rest control throug rm subsystem abl queri domain event messag form restor synchron creat special mechan call rm subsystem abl start replay messag way good cannot control time finish repair process second consum messag probabl corrupt data way prefer
templat function pass iter struggl make design choic follow setup write c function take pair iter templat contain comput return valu type iter point let say want implement sum function exampl illustr point way see two option downsid option make function templat paramet defin type contain store need one paramet use function iter contain option function take arbitrari iter rang templat class second class u determin return type iter sourc contain need two templat class even though return type alway type point iter option cleaner altern offer benefit option bonus question one initi sum variabl
proper handl indefinit generat python let say generat indefinit new element arriv moment signific indefinit delay exampl generat tail f command python omit various edg case could implement follow obvious problem generat may caus caller thread sleep forev therefor provid caller side way break iter solut came follow way get behavior python know send function allow way data transfer use make solut python
benefit io monad pattern handl side effect pure academ sorri yet anoth fp side effect question find exist one quit answer limit understand function program state side effect minimis kept separ stateless logic also gather haskel approach io monad achiev wrap state action contain later execut consid outsid scope program tri understand pattern actual determin whether use python project want avoid haskel specif poss crude exampl incom program convert xml file json file io monad approach effect absolv respons actual call step let interpret put anoth way like write expect someon els call inner say job done main pure whole program go end contain io monad basic code actual execut everyth read file depend file state still suffer state relat bug imper implement actual gain anyth programm maintain total appreci benefit reduc isol state behaviour fact structur imper version like gather input pure stuff spit output hope convert complet pure reap benefit cachabl threadsafeti etc also appreci monad type use especi pipelin oper compar type see io use monad unless alreadi pipelin addit benefit deal side effect io monad pattern bring miss
possibl avoid lot use statement let say simpl code like fiddl link goal want achiev encapsul use logic client somewher els specif data servic adapt class way write use statement repeat everi singl method p specifi data servic may wcf client servic db context entiti framework short lifespan cant open connect work p p reus specif data servic real case wcf proxi client entiti framework db context implement case contain dozen method call write use statement everywher first want free client class implement servic work short live servic long live one anoth thing tri achiev write method without use bore copi past everi singl method
put api request mvc build web applic use mvc pattern follow kind architectur see method use interact databas implement model happen call servic expos other web exampl would like access facebook api order get follow page put method obvious view good idea modul dedic present control use retriev data model usual dedic interact databas give hint pleas tell make mistak mvc architectur
mvc web applic write file local go web applic use mvc framework differ modul model view control talk sever databas ap implement individu model lot data get enter user accross sever differ screen data goe session data meta inform valid success process stuff want keep data suppos written file file system path file meta inform store databas confirm page display user struggl put write subset data accumul session file specif format sever thought matter sure one right view take data alreadi user session present specif way ndash file format xml relev format write file implement reason default html view render data websit user browser webserv interfac set stdout channel likewis would json view present stuff case api call made write file stdout view format file set local file handl write view bring data xml format model write data file reason write file anoth websit display one view end chain thing stuff lifetim one request handl data format view appropri return format data rather write sink stdout model deal data reason model data sourc data sink although sourc part absent still data sink fact need format also negleg talk e g res tful api sort would also first format data either part get request simpl mayb json represent bodi post put request code format data xml alreadi built stand alon class tie webapp yet question applic use class write file disk break mvc pattern exampl case specif process would happen includ user feedback survey form multipl page like stack overflow anual user survey e commerc order funnel back offic data entri talk third parti file base api send happen asynchron later unrel time
avoid use servic locat use depend inject tri use depend inject wpf applic realli figur avoid use servic locat consid anti pattern mani articl use mvvm light framework interfac properti n integ end interfac class privat sub new end sub sub work n end sub end class class b implement properti n integ implement n end class class c sub someth rem anti pattern dim instanc simpl ioc default get instanc instanc work end sub end class modul sub main simpl ioc default regist simpl ioc default regist b dim c new c c someth end sub end modul need use instanc class c anti pattern use io c contain servic locat way autoconstruct instanc requir depend
inject depend compon base framework current develop small compon base framework android platform framework readi use abstract intern logic develop need add code make fulli function compon communic compon satisfi use interfac question know compon depend framework automat provid e g compon need b compon first thought two solut framework creat inject b compon automat develop instanti compon b abstract compon would creat provid default instanc framework explain api compon need b compon leav develop instanti b compon pass depend second solut develop could also creat new compon respect contract interfac compon use solut would lead better mainten flexibl expans framework develop code accept solut
propag event applic long time time discuss propag global event applic could differ server solut find perfect one background suppos applic applic b applic c applic app access user e g shop book applic b app creat report real time applic c tool aggreg sale report internet book shop stationari shop kind crm infrastructur look like exampl scenario user buy book applic caus ad order user account applic creat event e g book bought inform purchas expect applic b listen book bought type event anywher book bought event dispatch app generat report applic c also listen book bought type event anywher book bought event sent app creat sale order record question handl situat pub sub mechan handl infrastructur network problem one node like applic b applic c reliabl pattern tool use mani thank advic ps yes look similar question found often relat propag event one applic also found pattern would hear reliabl enough make sure propag event consum later applic
usag factori pattern vs depend inject okay question better use depend inject vs factori done bit research goe like dip provid loos coupl io c class need know got depend io c contain take control provid depend factori creation pattern use generat depend class also provid loos coupl sinc class direct creat depend seem like di use situat inject depend factori left altogeth use spring year time class need particular depend spring make stuff quit easi take factori one scenario think wherein di would turn littl cumbersom class need certain depend base condit someth like case di would straightforward factori ideal solut kind shed thought mani articl web mention di kind replac factori pattern still concret articl one would better choic circumst articl mention di next big thing follow
di creat depend new object specif within framework code basic requir make framework learn purpos like usag person site use depend inject class tri design would good place instanti depend object note framework front end templat etc class depend anoth class configur file config file class need instanti depend object somewher abl pass new class di manag creat logic place thing within framework cannot seem work design logic purpos place instanti depend object framework structur basic structur framework htaccess send request index php index php includ bootstrap php bootstrap php load framework compon compon thing like spl autoload regist set error display ini set thing compon separ file call bootstrap php number system compon bootstrap php load much lot requir depend inject pointless exercis littl return current bootstrap php current instanti depend object bootstrap php prior instanti new system class howev feel make bootstrap php bit messi clutter thing perhap live els e g depend layer depend namespac bootstrap namespac exampl exampl system class depend bootstrap php class manag error display class autoload bootstrap php display error php depend case valu config file either config php bootstrap php instanti class hold depend config class call depend class method get depend pass object class requir depend note way actual retriev config data work irrelev object ask instanti config class get object way mean bootstrap php full depend bootstrap php base opinion design idea could wrong bootstrap php loader file load system ie set error display instanti manag depend depend inject contain could use depend inject contain dic read advantag etc far current knowledg dic show resolv instanti depend object dic would move issu around instanti dic within bootstrap php instead depend class direct question term applic architectur design would good instanti depend object even dic keep thing clean organis tidi need add layer bootstrap php call depend object instanti within layer feel instanti depend object within bootstrap php ok pleas let know interest anoth view person make bootstrap php smell bend purpos
abstract display build embed text editor consist keyboard lcd display pic32 microcontrol program c applic look exampl like gnu nano editor display 40x16 charact big current wonder would good abstract display could conceptualis simpl termin follow ad function pointer termin type basic model view termin control append discard function termin could make simpl termin stdin stdout howev enough nano like editor text insert remov anywher screen end current data made follow type screen hold screen content well visibl section determin left top coordin make scroll easier function write screen posit would complic direct relationship posit content coordin actual display easier work type would hold array row char array differ line screen content would array char array e char content basic ask problem suggest approach easier approach sum requir screen easi scroll possibl add remov text point screen
ui design pattern non screen base project work small project code python use singl button input rgb led feedback respond button press asynchron event network feedback becom complex lot if els timer becom evid ui design pattern mvc mvp would help segreg function code alreadi most mvc style button input tie control thread led view thread anim load control control model exist interact remot devic exampl button initi http request call control initi async request model return view blink led let user know request inflight struggl deal respons model http request complet view could poll model seem wast perhap slow make wonder model updat view either rais event use control suppli callback would technic tie model view also wonder mvp would better approach use present arbitr view model thought approach total engin gadget would appreci
promis web mvvm mvvm present model web view listen click event call function present model ask result clarifi present model live browser side present model calcul result asynchron ok present model return javascript promis view consum updat resolv reason would need view listen event present model make sync call
convert static util class singleton compani work lot util class lot code insid thousand line static one static method call anoth problem want test class lot pain test function use static util class insid overrid static use mockito test powermock option break bytecod sometim much slower mockito decid move singleton step step test mock singleton instanc test method want even test util method also need cover autotest simpl small class case line class line class line class convert singleton manual lot pain way automat mayb helper least exampl untest code let imagin chang someth method b want test chang want method call relat test chang method mockito case howev possibl insid method call singleton method mock static convert someth like make spring util return mock object real method b make almost chang exist code use git blame remov static modifi chnge method name import legaci allow chang code use util class
domain model intellig must servic oper build web app licens servic domain model licens two type moment server client licens almost except server licens softwar id field client licens hardwar id array client licens regist multipl client base model licens children client licens server licens bring addit field model type fetch respect repositori use typo3 extbas framework standard recommend way come interest part licens addit info persist well temp cach instead fetch rest servic e g expir date may chang outsid web app type licens addit info may differ may fetch differ method rest api also licens type differ activ rest method time common rest method like get licens file decid hide intern stuff licens servic class recommend communic control class need licens info licens servic communic licens rest api contain low level function perform rest request come question know licens type specif function f e control ask servic get licens user servic determin type licens perform call respect repositori appropri method rest api licens know everyth call rest api new class like client licens processor server licens processor licens servic communic communic rest api within processor case licens servic act factori method creat appropri processor goal hold specif type logic one place spread sever class
well known busi id entiti repres dedic type ddd oop practic term mean use custom immut class string primit type exampl publish intern standard book number financ intern secur identif number advantag ensur format identifi becom first class member model disadvantag add persist friction e g entiti framework code
mvvm model vs viewmodel tri wrap head around mvvm model behaviour getter depend environ variabl model viewmodel make differ getter specif one viewmodel vs mani also complex setter might side effect logic automat mean belong viewmodel updat sourc model respons get data save data separ user interfac concern view busi object behavior view model data persist layer model model hold inform behavior base look guidanc separ logic model viewmodel
ddd design question question model entiti aggreg root ddd refactor project use entiti framework busi logic servic servic contain lot logic believ entiti ddd tri model contractor entiti problem face contractor site properti contractor one site associ model contractor entiti includ properti includ mean everi time want fetch contractor detail databas creat entiti fetch relat site well question boil includ relat ship domain entiti
differ event sourc servic layer pattern read book architect enterpris applic book event sourc pattern introduc use command part command queri respons segreg cqrs architectur event sourc describ martin fowler fundament idea event sourc ensur everi chang state applic captur event object event object store sequenc appli lifetim applic state use applic use servic layer pattern would describ chang ui call method trigger appropri servic call middlewar layer deleg call backend inform updat notifi caller result descript servic layer seem differ event sourc differ event sourc servic layer pattern
event sourc saga bus eventu consist current learn event sourc via book microsoft net architect applic enterpris event sourc word architectur pattern store event instead current entiti current entiti creat loop event belong problem perform creation current entiti mitig creat extra storag period current entiti snapshot creat previous snapshot event happen book architectur belong event sourc setup follow event relat waterpolo match store sql raven db store also see bus keep track event saga belong group event question event sourc decid ask sinc question relat descript book wonder way event would store imagin data event chang time extra properti new event name event need easili relat actual structur databas data access code look facilit chang data retriev saga call saga persist bus work advantag write event direct event store architectur command queri separ cqrs command implement use event sourc queri read snapshot happen data need display initi command e g show bank account data user want make deposit base data practic make sure data display date
use trait compon object packag object scala ad depend scala tend use mixin trait compon inherit class exampl dao generat extend generat howev trait compon like file io less straight forward dao generat class requir tend make judgement call feel like either trait compon object packag object part class respons add trait compon generat class like need access file object project add trait compon class tend like add either object packag object simpli cross cut concern choos object packag object log configur use packag object feel right rule thumb case
mvvm multipl view model share model applic inventor model whose data would like display differ differ area applic therefor like creat differ view model back one model instanc one section might display list inventor first middl last name anoth area applic might display inventor initi clean implement mvvm would seem dictat one model everi view model howev one notion model inventor contain lot data common across multipl usag area applic feel though one concret model share multipl view model abl locat anyth seem address though surpris feel like would common question beginn mvvm standard accept answer
caller respons ensur thread safeti gui program seen mani place canon wisdom respons caller ensur ui thread updat ui compon specif java swing event dispatch thread event dispatch thread concern view mvc mvp mvvm handl anywher view creat tight coupl view implement thread model view implement specif let say mvc architect applic use swing caller respons updat compon event dispatch thread tri swap swing view implement java fx implement must chang present control code use java fx applic thread instead suppos two question caller respons ensur ui compon thread safeti flaw reason design applic loos coupl thread safeti concern yet still appropri thread safe let add mcve java code illustratr mean caller respons good practic tri purpos minim possibl caller respons public class present privat final view void updat view new data final data data event queue invok later new runnabl public void run view set data data public class view void set data data data compon set text data get messag view respons public class present privat final view void updat view new data final data data view set data data public class view void set data data data event queue invok later new runnabl public void run compon set text data get messag author post highest tag score swing stack overflow say place also seen caller respons place
refactor present logic model seen pattern use consider amount mvc applic let assum user model method session expir display session expir first method session expir look databas user session expir return true fals second call first method return html string basic say expir red font activ green font depend output session expir control call user object fetch user return array user object array sent view view array iter method display session expir call everi object array someth smell fundament wrong approach sinc model present logic display session expir method outcom logic base outcom databas queri made moment cours make model class thousand line plagu mix present busi logic long run make applic difficult maintain refactor clear separ concern
manual depend inject exampl still tight coupl use auto fac time take care depend inject use web project well want demonstr di outsid auto fac context reason irrelev question read manual method achiev pattern exampl tutori work obvious issu tight coupl object still exist take exampl constructor depend class take interfac instanti busi facad still requir concret implement pass mean implement need instanti question know somewher point someth whether contain manual written code decid implement choos come term benefit move decis outsid depend class cours busi facad class longer tight coupl still explicit implement choos gain pure fact mock depend
os best practic handl model object differ level ask question case let think typic drill design say tabl view control array custom object tap cell push view control allow user modifi object repres cell case push view control custom object properti use data sourc deleg protocol edit custom object case similar slight differ situat use singleton store handl array bank account app view control show list account wonder array account properti view control get array via store array account access quit often guess differ singl object vs array object curious heavi array whether faster load array store time properti view control case local file system use app exampl bank account access quit often unarchiv set properti upon launch app much bigger data load file system display edit still sure right way
shell command bash python much encapsul much think decid whether better encapsul work behind well name function name expos help develop understand go quick name studi sort problem specif run bunch bash command ultim signific complex logic around command point make sens write high level languag like python even though obfusc actual bash command run detail problem current tri write jenkin build script project rough follow step pull code github compil sass file css pull sub folder differ github project zip project upload object store uniqu id think write easi futur develop possibl code never go seen end user develop like definit go fair good python definit pass familiar command line like unfamiliar complex bash script first iter build script list sequenti command someth like howev set command quick becam complex start thing like clone git project alreadi otherwis updat speed build knew line fair condit first thing encapsul bash function e g updat git dir build script look like one level encapsul develop would understood git clone etc command direct actual see go look helper function sh howev time went realis mani helper function consist condit statement variabl assign function call actual command condit statement quit opaqu someon familiar bash script start migrat code python build script look like look builder py much easier understand logic statement function call much readabl even away real shell command python code closest get direct run shell command look like develop need work exact command run much difficult wrap decid best architectur maximis transpar encapsul complex problem seem similar work depend inject depend inject rather encapsul complex initialis code get similar problem draw line name field studi
better applic design place interfac place interfac typic multi layer app data access busi logic endpoint modul propos option case depend abstract first one place interfac modul implement second move interfac separ modul pros con first approach stupid simpl shall need extra modul complic etc second approach tdd friend allow us complet separ modul implement contract mock di friend succeed complet isol modul yet second option lead greater overhead requir effort develop question approach general better appropri option
spring store procedur inject declar paramet work one colleagu ask chang way spring store procedur subclass class initialis inject paramet depend inject mechan constructor inject straight forward simpl way actual code di initi look like sub class store procedur inject constructor opinion construct store procedur di bad idea sinc chang store procedur signatur declar paramet without chang code applic chang xml think remov di mechan case make sens could good altern
c class observ depend say class foobar use depend class widget good ol day widget wolud declar field foobar mayb smart pointer polymorph behavior need would initi constructor set done unfortun today java kid laugh us see right coupl foobar widget togeth solut seem simpl appli depend inject take construct depend foobar class c forc us think ownership depend three solut come mind uniqu pointer foobar claim sole ownership widget pass follow advantag impact perform neglig safe foobar control lifetim od widget make sure widget sudden disappear safe widget leak proper destruct longer need howev come cost place restrict widget instanc use e g stack alloc widget use widget share share pointer probabl closest equival ot java garbag collect languag advantag univers allow share depend maintain safeti point uniqu ptr solut disadvantag wast resourc share involv still requir heap alloc disallow stack alloc object plain ol observ pointer place raw pointer insid class shift burden ownership someon els pros simpl get univers accept widget con safe anymor introduc anoth entiti respons ownership foobar widget crazi templat metaprogram advantag think abl read book find time softwar buil lean toward third solut univers someth manag foobar anyway manag widget simpl chang howev use raw pointer bother hand smart pointer solut feel wrong make consum depend restrict depend creat miss someth depend inject c trivial class depend observ
dto valid believ dto dummi easi possibl howev hint made friend opportun valid data set dto sound tempt let follow exampl think
mvp mvc role model anem one clash present control role respons right place model present problem look mvp implement process design good domain model anem say domain model behavior simpl data model like dto case applic turn control architectur follow model architectur player model player control game model game control think model anem model object contain refer model objet defin lot accessor method get amp set final core method modifi object properti integr model handl busi logic mvp architectur manag kind action present architectur follow model architectur present access part model present listen model modif react accord concret resourc net exampl solut creat structur model inherit behavior link relat model object like collect properti anoth model object final listen model event modif control send request onto network case role control small model handl almost everi modif better flatten model hierarchi depend other confus exampl current app architectur follow case think model anem context multiplay game applic network let say two player certain amount ball throw barrel player barrel turn base game domain model would properti type game player turn player name score number ball thrown ball color weight barrel distanc point list ball thrown mvp represent would creat three present game control player control barrel control exampl use use case n player real one throw ball resum player throw ball event dispatch game control valid action network respond back deleg event specif control code generat modifi diagramm use case n thrown ball fall barrel princip action dispatch valid perform potenti relat action parent control final barrel updat barrel control add ball player model updat player control updat score code generat modifi diagramm
singleton instanti everytim use use class extract data one known object distribut known object persist configur need class instanc decid whether set class singleton instanti everi time need
use command execut exist wpf want question use execut function wpf defin command interfac think achiev function thing without featur ask first place question build new ui framework like wpf scratch decid whether includ someth similar execut argument favor featur moment opinion favor simplic featur exclud similar function easili achiev addit view model properti repres whether command current execut mayb assumpt wrong execut realli eleg featur case would ask provid convinc argument
mvc control decoupl explain articl see view use aggreg control concret view concret model consid classic mvc go f see view awar model vice versa mean put model pointer view use control problem strategi pattern see articl plus much know mvc view know model model view refer view model mean know
activ fragment alreadi present activ fragment handl logic updat view model data howev tigh coupl android framework class alreadi present bonus overengin design exclus present class coupl framework consid scenario class like rest api client local databas manag singleton inject via io c contain depend present
mvc net app program structur build mvc net applic eventu use entiti framework repositori pattern structur program first releas howev call job run report go make interfac report anoth project call matlab implement way abstract report take away matlab replac need anoth system produc report question question therefor presum good architectur structur put interfac simpli put separ folder web app project seem like simpl question tend struggl project layout want make sure correct
benefit depend inject case almost everyon need access common data structur plenti reason global evil oop number size object need share larg effici pass around function paramet usual everyon recommend depend inject instead global object howev case almost everyon need know certain data structur depend inject better global object exampl simplifi one show point general without delv deep specif applic number virtual vehicl huge number properti state type name color speed posit etc number user remot control huge number event user initi automat chang lot state properti naiv solut would make global contain like access anywher oop friend solut would contain member class handl main event loop instanti constructor everi class need member main thread given access contain via pointer constructor exampl extern messag come via network connect class one connect handl pars take parser access contain via pointer refer pars messag result either chang element contain requir data perform action handl without need toss around thousand variabl signal slot wors store parser later retriev one call parser cours class receiv access contain via depend inject part thread differ thread direct access job send signal main thread slot main thread updat contain howev major class get access contain make realli differ global mani class need data contain depend inject way disguis global one answer would thread safeti even though take care abus global contain mayb anoth develop futur pressur close deadlin nevertheless use global contain differ thread without take care collis case howev even case depend inject one could give pointer someon run anoth thread lead problem
see entiti framework code asp net mvc softwar architectur viewpoint let say start web applic project use asp net mvc b entiti framework term softwar rchitectur correct wrong could place entiti framework code data access layer folder dal furthermor would correct say entiti framework code within data access layer folder dal part model asp net mvc softwar architectur perspect
design class relationship need build ui enter valu databas stuck class design achiev need ui abl enter name system system mani option option associ tc technic chara tc anoth set valu describ cset instanc let say tcset tc tc1 valu tc1 tc1 tc1 variabl describ row cset mention name properti alon simplic come back system option defin system multipl option valu option valu abl enter valu name properti cset associ tc option would like achiev would someth similar ad system defin option ad valu option valu set val base understand design follow class diagram still find exact map option set val unabl design class could add valu tcset particular option someth miss get right current class model work foreign key conflict made add anoth class set val solv problem tri lot get relationship right noth work brief relationship use edit point stuck generat tabl would take option valu id give option add valu tcset option valu ab1 need tabl give valu like follow option valu ab1 abc1 abc2 option valu pq1 pqr1 pqr2 pqr3 option valu pq2 pqr1 pqr2 pqr3 connect miss realiz tri make tabl way made answer edit ad exampl main issu want give valu csetnam option result tabl would follow databas schema screw motor look correct datamodel accept last tabl
depend injector look like java script studi depend inject java script learn need accomplish accord wikipedia client deleg extern code injector respons provid depend client allow call injector code inject code construct servic call client inject mean client code need know inject code client need know construct servic client need know actual servic use client need know intrins interfac servic defin client may use servic sure done java script could probabl set creat sort way inject depend java script match servic client code structur technic satisfi term depend invers principl mean would best correct way exampl let say wheel servic everi car client need along servic gas pedal break clutch stick proper depend injector look like java script one inject depend without call inject code client note none answer far cover manual know use librari ask challeng aspect injector creat scratch structur one would actual look like use librari support tri learn function injector would structur like sake truli understand depend inject core function implement inject ask complet function work code good explan even over simplifi pseudo code exampl
structur satisfi term invers control principl tri test creat depend inject scratch java script consid follow code structur output alert satisfi term depend invers principl technic depend inject structur chang necessari one structur aspect structur sure fact code client constructor know code inject depend wikipedia say pass servic client rather allow client build find servic fundament requir pattern client allow call injector code howev answer site explain name depend inject mention constructor inject depend let say sort repositori class repositori respons hand data data sourc repositori could establish connect data sourc allow pass connect data sourc repositori constructor note shorten work code omit code involv defin servic order make code sampl simpler also omit strict error handl case miss depend overal structur appar correct incorrect focus question specif implement
thing servic fit depend inject pattern wikipedia explain depend object use servic inject pass depend depend object client would use studi angular js di implement notic includ mani differ structur inject servic valu factori provid constant thing servic fit depend inject pattern
delet subtre hierarch agregg work file system like applic use cqrs event sourc handl state folder file creat move renam etc node folder file repres singl aggreg standalon unit id implement delet node system capabl cours delet whole subtre node delet folder contain folder file quit know handl cqrs style command learn oper singl aggreg one idea creat saga would creat folder delet start event respons saga would creat command child node result cascad creation saga child folder saga would ensur delet parent folder command child folder would finish would block saga would run separ thread initi command delet folder still async howev realli like idea cascad saga new cqrs still learn basic would love know would solv similar situat
tdd test domain model practic tdd test domain model test account code coverag want coverag much possibl despit hour train video cannot find best solut updat given domain model want write user properti id primari key first name last name tenant id foreign key prefer creat model without test coverag start project code coverag right get rough start pure tdd write code without test would let take step behavior littl user id primari key first name last name tenant id foreign key birth date method function calcul age base birthdat feel write test age calcul model would account paradox
respons set color mvvm os app exceed certain limit part user interfac chang color alert user use mvvm accomplish divis labor look like odel fetch limit valu storag v iew odel compar limit current valu pass bool limit flag v iew pick color base limit flag set requir view work done control start wonder select color view view model job divid mvvm vc vm mayb fit ui view subclass instead ui view control place select actual color
view perform valid read mvc model handl valid curious valid logic go mvc websit one line top answer goe like control handl valid model handl verif like left wonder data valid view sever reason view typic robust valid support js librari html5 tag view valid local reduc network io ui alreadi design data type mind calendar date spinner number make one small step valid valid one place contrari mvc concept isol respons seem inappropri data valid control truli domin approach
server respond ui logic string represent data string flag think larg enough degre separ busi logic data present product tri explain collegu find difficult think exampl link back feel specif instanc think break mvc version api return data like get api v1 product id status field would expect state contain unpaid paid delay ui develop direct output field ui experi tell field bring back represent field ui interpret state act accord wrong anyon resourc read use exampl data interpret possibl reason use integ flag display string follow internation consid could implement futur perform string comparison vast less effici basic type comparison valu size string take space messag integ data logic ui divid etc divid logic data present reinforc possibl string paid status may mean paid right could chang futur data would stay mean might chang ui
observ two independ event observ class observ pattern aim observ class respond chang observ class state problem differ process insid observ class observ event independ state singl valu rather set differ process might bad design observ class big split smaller one cannot refactor class observ question singl observ state chang process event creat one observ state chang process event mayb appli observ bad idea anoth design pattern bu use exampl exampl might look artifici observ pattern view minim exampl consid search form user look author titl author titl reader class respons get paramet addit task store word user look file simplifi logger want store author valu one file titl valu anoth want add respons reader class extend want observ inner state one state chang event happen author paramet read form second state chang event happen titl paramet read form event independ interest whole reader state author titl titl author interest state paramet reader author read titl read one observ event observ notifi know event happen addit properti state introduc observ must check valu search author search titl updat method code lt php class reader implement spl subject privat observ public author null public titl null addit properti determin state observ public state null state const search author author const search titl titl public function construct gt observ new spl object storag public function attach spl observ observ gt observ gt attach observ public function detach spl observ observ gt observ gt detach observ public function notifi foreach gt observ observ observ gt updat simul read form public function read param array param array key exist author param true gt author param author gt state reader search author gt notifi array key exist titl param true gt titl param titl gt state reader search titl gt notifi class param observ implement spl observ public function updat spl subject subject subject gt state reader search author author subject gt author r n file put content author txt author file append elseif subject gt state reader search titl titl subject gt titl r n file put content titl txt titl file append reader new reader param observ new param observ reader gt attach param observ file put content author txt file put content titl txt simul receiv form reader gt read param array titl gt php reader gt read param array author gt zandstra reader gt read param array titl gt php author gt zandstra gt two observ one event observ duplic insid observ class one collect author observ titl observ method attach author observ detach author observ notifi author observ method attach titl observ detach titl observ notifi titler observ code lt php class reader privat author observ privat titl observ public author null public titl null public function construct gt author observ new spl object storag gt titl observ new spl object storag public function attach author observ observ gt author observ gt attach observ public function attach titl observ observ gt titl observ gt attach observ public function detach author observ observ gt author observ gt detach observ public function detach titl observ observ gt titl observ gt detach observ public function notifi author observ foreach gt author observ observ observ gt updat public function notifi titl observ foreach gt titl observ observ observ gt updat simul read form public function read param array param array key exist author param true gt author param author gt notifi author observ array key exist titl param true gt titl param titl gt notifi titl observ class author observ public function updat subject author subject gt author r n file put content author txt author file append class titl observ public function updat subject titl subject gt titl r n file put content titl txt titl file append reader new reader author observ new author observ titl observ new titl observ reader gt attach author observ author observ reader gt attach titl observ titl observ file put content author txt file put content titl txt simul receiv form reader gt read param array titl gt php reader gt read param array author gt zandstra reader gt read param array titl gt php author gt zandstra updat solut specif solut base robert harvey answer code lt php class reader implement spl subject privat observ public author null public titl null addit properti determin state observ public state null state const search author author const search titl titl public function construct gt observ new spl object storag public function attach spl observ observ gt observ gt attach observ public function detach spl observ observ gt observ gt detach observ public function notifi foreach gt observ observ observ gt updat simul read form public function read param array param array key exist author param true gt author param author gt state reader search author gt notifi array key exist titl param true gt titl param titl gt state reader search titl gt notifi class author observ implement spl observ public function updat spl subject subject subject gt state reader search author author subject gt author r n file put content author txt author file append class titl observ implement spl observ public function updat spl subject subject subject gt state reader search titl titl subject gt titl r n file put content titl txt titl file append reader new reader author observ new author observ titl observ new titl observ reader gt attach author observ reader gt attach titl observ file put content author txt file put content titl txt simul receiv form reader gt read param array titl gt php reader gt read param array author gt zandstra reader gt read param array titl gt php author gt zandstra gt
never use model view model start new mvc project scratch use ef databas first ident solut consist differ project data edmx db context resourc local purpos web web project use view model view default everi time creat new view first thing add view model view model connect keep file exampl view model relat user account keep account view model far made thing simpl solv sever issu wonder make sens use model one use right one ident creat default contain applic user applic db context specif necessari ident outsid everyth view model would data project consid model applic thus fact use model instead bunch class keep web model separ project model bl object creat entiti store think sure right approach could potenti issu road first take web program would appreci advic
interfac use depend inject work simpl di librari subject use servic interfac find use perhap dont fulli proper understand interfac use process inject depend think understand di consist primarili client servic interfac allow injector tell client variabl method avail specif servic wrong seem interfac could pass avail properti name type client know function valu seem use sinc without interfac whether method valu util via interfac via inject servic know type use typeof operand java script regardless check type properti use think must proper understand interfac interfac use depend inject
domain model vs present model vs general function build app compani join past year use java spring hibern javascript j queri kendo ui structur say someth like backend frontend backend pojo dao bo servic web servic ui model view model html view well think know code earlier today senior ask say word jeez need know concept ask present model differ domain model general function look hour combin articl articl got confus anyon explain easi explan also pojo domain model java view model present model mvvm
organ action mvc control develop asp net mvc applic lot client side interact ie lot ajax call control action current control contain action part control return view data json xml consid good practic action return data view one control exampl one way think would second way offer easier way find avail action could use client side interact action avoid duplic could also reus call differ control call reus either way two would like know general practic design mvc applic
test system object difficult mock work follow system recent issu updat version librari use among thing caus timestamp third parti librari return long chang millisecond epoch nanosecond epoch problem write test mock third parti librari object test wrong made mistak third parti librari object exampl realiz timestamp chang precis result need chang unit test mock return wrong data bug librari happen miss someth document problem cannot sure data contain data structur cannot generat real one without real data feed object big complic lot differ piec data document third parti librari poor question set test test behavior sure solv issu unit test test easili wrong addit integr system larg complic easi miss someth exampl situat correct adjust timestamp handl sever place miss one system seem most right thing integr test deploy product lot data problem becam obvious process integr test right test essenti tri keep unit test good add test thing break deploy test server make sure thing seem sane deploy product timestamp issu pass unit test mock creat wrong pass integr test caus immedi obvious problem qa depart
di object client servic simultan reasearch dependendci inject far seen exampl object treat client servic mean servic valu factori etc depend compon client servic without break fundament aspect di normal di clarif ask compon depend depend make client servic depend inject
potenti problem write busi logic code gui mvvm pattern current implement mvvm pattern wpf applic code behind sometim put busi logic code gui potenti problem thank
iter pattern import expos intern represent read c design pattern essenti current read iter pattern fulli understand implement understand import see use case book exampl given someon need get list object could done expos public properti list lt gt array book write problem intern represent class expos outsid project intern represent fact array list lt gt realli understand bad thing consum programm call know book say pattern work expos get enumer function call get enumer expos list way assum pattern place like certain situat fail see
modular filter architectur wpf creat littl stock manag tool privat use differ view need similar differ filter exampl current stock list filter supplier product group name list addit filter certain boolean flag go creat littl statist view need mention filter like date rang last least creat littl csv export similar requir statist view much enough think decent architectur right small scale chanc right bigger project use wpf mvvm far thought way tackl problem individu filter view cours flexibl variant also lead work someth concern filter chang filter generat control get generat accord configur sound good loss flexibl style filter accord view could add configur would still lose advantag xaml realli preview xaml design time creat singl view model contain possibl filter control view model filter type checkbox combobox textbox approach would allow simpli style filter xaml use filter control view capsul filter vm one implement option look prefer never done anyth alik look feedback problem usual approach relat pattern exist
could view call function model direct fundament question mvc particular use angular js found similar question exact problem could view call function model call function control exampl model function delet item collect like control instanc model includ function like want call funciton user click certain element html page legit would better implement function control pass delet request model like classic layer architectur like
array vs object view laravel first yes question similar array vs object view templat question sort expand decid whether use object array pass data view would better approach look view use data pass eloqu object data manual creat control origin eloqu object exampl let say piec code view simpli foo model control control use view convert foo eloqu object array convert foo array object use option object foo model anoth foo class
return implement interfac method request interfac implement interfac class class implement iter suppos return object implement everytim call next iter goe follow cours omit stuff howev get error requir found return new line know happen someon help
c net mvvm softwar architectur name convent current work softwar use c net wpf mvvm pattern though softwar almost done discuss architectur long time would like get opinion advic convent good practic side current architectur follow project data context model engine3d util convert static view model grid menus window view grid menus window model folder contain model mvvm pattern model folder organ featur mean nest folder name featur context exampl model engine3d everi model relat 3d never append model word suffix file name featur cs exampl project cs model3d cs anim cs etc view folder contain view mvvm pattern view folder organ wpf control mean nest folder name wpf control exampl view window everi view relat wpf window view grid etc file name featur control type xaml featur featur implement describ view exampl creat project featur creat project display3d model grid display model3d use 3d librari etc control type type xaml control repres file window user control grid etc exampl window display system prefer would call system prefer window xaml grid hold list project would project list grid xaml exampl creat project window xaml system prefer window xaml display3d model grid xaml project list grid xaml view model folder contain view model mvvm pattern view model folder copi view folder term architectur mean nest folder name wpf control exampl view model window everi view model relat wpf window view model grid view model file name relat view file suffix view model file name featur control type view model cs exampl base view view model creat project window xaml creat project window view model cs open project window xaml open project window view model cs etc data context folder contain data context file ie file relat certain context softwar class neither view model model most access static correspond specif context softwar execut flow realli belong util folder class exampl session class hold session valu concern user like web technolog session util folder contain set file class tool various goal definit class give system mechan overal softwar observ object cs deleg command cs relay command cs permit mvvm data bind etc util convert folder convert class util static folder contain static oper class take input return output exampl file oper cs x window cs bother name project specif regroup system window oper like invok window close window easier manipul system window code model3d import cs import 3d model easili serial manag cs serial oper etc class constant class need constant valu sinc valu must access pretti much everywher code store constant valu relat class sister class sister class follow mention begin messag would like idea advic architectur name convent sure miss someth know complet opposit done correct c net mvvm softwar use wpf flaw stuff modifi hesit particip debat neither even ask question unclear descript
depend inject push test burden chain learn depend inject see appeal write function librari fail see solv anyth also one use librari make test librari much simpler much test eventu test inject function use librari deal mock stub function standard librari concret case deal node js trivial test inject mock object spi tex compil pdf merger piec cake function realli much test function call right sequenc save test tex compil pdf merger function eventu though look someth like real thing bigger pain test mock child process spawn spi make sure get call right argument actual anyth want actual merg pdf file run test mock emit right event function stuck problem would inject depend first snippet use function instead realli feel like push problem without solv misunderstand depend inject wrong
multi user websit mvc project one multipl solut start new mvc project ultim consist websit depend kind user one intern compani employe one agent independ contractor work compani one extern salespeopl one custom could one home intern websit consider function other sinc access employe kept privat network solut structur like data project model class kept done use entiti databas first resourc project string imag web project mvc stuff control view plus css js etc given one websit intern access public ip first thought two separ solut one intern web one one chang view base log user deploy differ server downsid see would ton duplic code solut data project would similar even resourc view would lot common stuff wonder would make sens one solut data project resourc project intern web extern web project mayb even three differ project instead extern web agent web custom web sale web littl experi buld mvc applic deploy would like know way seen best practic kind situat
session stateless rest believ question discuss death read rest say stateless yes understand applic state resourc state take exampl normal web servic say log pc perform transact without log log pc b perform anoth set transact howev point seem web server abl know set transact perform previous mean server store session detail servic even bring back page previous look pc possibl suppos stateless
dynam queri view layer current job defin new corpor architectur java develop someth like project view jsf view layer use deleg project client layer project client defin deleg facad de lookup ej bs busi layer project busi implement facad defin client layer remot ej bs also contain model dao layer busi layer map entiti dt os client view know dt os clase concern let say entiti car attribut hors power number door engin type releas date need view search car door 120hp initi vision architectur write function need layer take argument need door 120hp diesel engin answer build anoth function that one deleg facad interfac facad impl dao entiti field like imho go chao peopl die start write full app hundr function place chang model option solut creat prototyp inspir queri dsl creat dynam queri view follow layer pattern could write someth like manag bean jsf one class need creat project client layer prototyp keep layer separ dao layer choos queri builder use given generic queri question aproach make sens found anyth subject state think mayb anti pattern kind bad practic make sens framework librari pattern look upload prototyp github share link ask
need framework depend inject read invers control principl depend inject implement pretti sure understand seem basic say declar class member instanti within class rather instanti pass assign constructor inject class outsid sourc simpl seem need framework like spring guic implement annot miss someth fundament realli struggl understand use depend inject framework edit possibl duplic believ question uniqu ask di framework general spring spring di framework mani reason someon would want use spring relat di
hydrat whole domain model unnecessari concret oper model exist set valu pass valid perform load model one valu need action seem littl overhead hydrat model one valu action model need expens auction model titl descript owner current valu date bid particular oper like bid need current valu bid model popul howev model theoret cannot exist valu receiv valid constructor separ normal common ddd trade off cannot avoid
deal stub extern depend sut two kind depend stub 3rd parti depend mongodb amp co depend js possibl two stub depend rewir sinon stub modul still physic instal dev machin e say pleas load sut load depend stub execut requir mondodb depend js control
di happen composit root go whole point depend inject use depend inject net mvc web applic three basic layer web app servic layer data layer inject data layer servic layer servic layer control web app fine confus regist class take place research told composit root within web applic specif global asax file project mean refer data layer within web applic order abl regist seem go exact di want web app know care data layer servic layer refer
usag mvc web develop fundament differ origin usag pattern recent read answer regard mvc web develop most origin design older system sinc appli poor web develop said sure everi pattern use poor web develop still like make sure make mistak appli pattern web develop lead potenti team bad experi mvc deal obscen web mvc hybrid aw buzzword status ill definit semi illiter programm target demograph make realli bad public softwar pattern general mvc thus becam separ concern distil peopl realli want think much someon learn mvc consid use web applic like know object perspect mvc pattern appli web develop occur web develop pre exist method render content via dom java script loos type languag mvc probabl relat differ web develop older system use first popular fundament speak usag mvc pattern proper usag web develop differ usag non web environ strict type languag dom browser rule easi gui render alter word fact usus java script loos type differ languag one use mvc pattern design use dom css predefin simplifi method render content wherea web develop applic use render engin render librari display content perhap make mvc pattern necessari chang way defin use mvc pattern web develop environ fundament differ origin usag mvc non web environ use mvc web develop
queri aggreg root react event ar want creat littl gps track program simplifi user creat track make thing scale track user two separ ar track contain author user refer user id follow rule appli user creat unlimit amount track user remov system case creat track user need remov want use ddd es know ar creat load id delet modifi track user remov event trigger pleas note queri model complet decoupl might lag time sinc async event base updat
simpl explan mvc need tri understand mvc q amp seen descript great cannot quit understand think work like scenario thought user registr sorri wrong order control user input data usernam password model user registr class take usernam password deal request view success messag pass user exampl right think goe languag c c php etc tri age understand look talk like child monkey look mvc realli found help
creat class function use databas php applic pretti simpl allow user creat edit read post basic stuff databas class handl connect queri execut thing want model use self built mvc framework clean creat databas function creat post edit post etc contain sql need call nice model databas gt creat post post data keep function databas class put elsewher let say class mayb even give function idea write code explicit model edit answer probabl opinion base still tri figur peopl would accord well accept modern convent
c return persist object current tri learn best practic c come c background understand three way handl object valu object copi move pass function refer share uniqu pointer raw pointer frown upon unless realli need general see good practic avoid use share pointer develop lot code recent find initi defin someth valu type end make share pointer situat occur frequent almost everi object system share pointer seem wrong class look somewhat like initi class would contain valu object type thing class need access object avoid copi get return getter function put share pointer mean chang occur object state consist contain object current access thing feel wrong improv approach correct c way
mvvm viewmodel view correl adapt ui make mvvm applic uwp platform look advic follow matter take exampl window e mail applic full screen display e mail list e mail content one page smaller form factor content display separ page best way correl view viewmodel scenario thought big view model data context view scenario two view model one e mail list one e mail content set data context differ part page differ page three view model two view model previous point anoth one coordin think best problem most stem fact one case actual navig anoth page put logic navig event exist case
reus logic anoth repositori asp net mvc repositori pattern asp net mvc4 web applic entiti framework data access applic two repositori follow exampl real code public class custom repositori custom context db public custom repositori custom context db db db public void deactiv custom int custom id var custom db custom singl x gt x custom id custom id custom activ fals db save chang public class item repositori item context db public item repositori item context db db db public void deactiv item int item id var item db item singl x gt x item id item id item activ fals problem new custom repositori deactiv custom item custom id db save chang item repositori want use logic deactiv custom custom repositori without copi code coupl repositori like exampl also want make action deactiv item deactiv custom execut one transact mayb one call save chang design pattern achiev requir
role public folder mvc web applic must control model view place privat folder role public folder correct terminolog role comput scienc gui relat concept otherwis control view distribut across privat public folder case script direct invok via post interfac control interfac view interfac
depend inject field inject vs constructor inject know hot debat opinion tend chang time best approach practic use use exclus field inject class start read differ blog ex petrikainulainen schauderhaft fowler benefit constructor inject sinc switch methodolog use constructor inject requir depend setter inject option depend howev recent gotten debat author j mockit mock framework see constructor amp setter inject bad practic indic jee communiti agre today world prefer way inject field inject prefer switch constructor inject field inject last coupl year find lot clearer use wonder examin viewpoint author j mockit rog rio liesenfeld clear well vers di feel oblig review approach given feel strong constructor setter inject
combin licens data event sourc hypothet problem inspir queri aggreg root react event ar event sourc applic handl data licens data expir exampl model includ sensit bill inform account close bill inform client need scrub system exampl data licens 3rd parti vendor agreement specifi end licens period data need remov
use dao effect mmo server work small multi player game final year project current work server tank battl game two main entiti use server side player player detail like usernam password current tank statist tank detail tank like veloc rotat veloc turret turret detail turret like rotat veloc fire rate etc statist stat like total kill total death total shot etc recent read dao separ databas concern thought use project project good amount data persist also due fact want learn techniqu read dao realis need map dto domain object busi logic go quit bit logic object well method realli need dto exampl map player dto player object whenev request player move tank queue direct queue contain player tank show need domain object need movement queue databas need tank object queue movement let say movement servic server loop player object list log player updat player tank posit call player move tank updat posit accord movement queu movement queue insid tank object contain player object understand till point need question save player object back databas need map back player dto effect way thought player log logout servic use player dao servic get player dto use player object id updat object detail save back databas feel make extra databas call get object extra select call save back rather updat object use updat queri also feel updat let say posit databas use queri overwrit everyth better way right note use orm project p search lot find similar question know put code long question anyth clear let know
lookup tabl leak domain model build system keep track compani compani contact contact often specialist answer certain type question bill payment sale order custom support use domain driven design onion architectur model follow type compani contact contact contact type contact type enum compani repositori interfac ef compani repositori defin extern assembl use entiti framework implement compani repositori team split opinion model databas applic side lean dd der job domain defin contact type valid contact ad tabl databas valid unknown contact type save sign leaki domain spread logic far ad static tabl databas correspond code wast applic databas solv one problem persist thing give back write extra tabl correspond crud code wast chang strategi persist easi possibl like chang busi rule decid sql server cost much want rebuild valid put schema side b traditionalist probabl fair name db centrist bad idea data databas make sens without read code report consum repeat list valu much code load db type dictionari demand worri sourc code data deploy bit instead simpl sql script chang neither side right wrong one probabl effici long run count develop time initi develop bug etc side better compromis team write style code
model view control design question one vs multipl model multipl view control issu share code mvc applic applic control view abc differ class use common framework singl class reus multipl time let introduc exhibit show mock applic main window two main point interest left tabl view show number avail rubber duck rubber duck number attribut edit main use sort tabl right screen case edit appear select rubber duck tabl use select entri shown real tabl view lot complic standard q tabl view control class view class right model class also applic control view model tabl view model initi main applic model applic init remov insert item use case let introduc exhibit b new applic share tabl view applic b contain listview right view use compos imag rubber duck race mean add one rubber duck tabl also applic number calcul result column tabl cute valu use sort tabl sinc applic b enter scene model need adjust contain valu mean share code applic whose model clutter useless uniniti entri use applic clone code differ model leav us seper class code redund modifi tabl view use applic model cost need check tabl view role exist current model display also plan applic c build pair rubber duck matchmak assign similar score duck shown tabl instead singular rubber duck applic model vari great previous one make option probabl rather difficult implement prefer option colleagu disagre prefer separ model accomplish want imag attribut disclaim cyber duck imag common wikimedia org wiki file cyberduck icon png duck race imag common wikimedia org wiki file leichlingen entenrennen rennen ie jpg
happen super handler instanc variabl happen extend class control b instanc variabl privat protect main control control handler sever method modifi user modifi think permiss success error build array error messag specif control admin control user control extend control work well need question instanc variabl control know handler singleton bad idea put instanc variabl handler even super type
io c contain lifetim attribut ioc framework net use concret type attribut choos lifetim simpl exampl
ddd cqrs per queri per command author summari author cqrs ddd implement per command queri develop first time onlin applic use less strict ddd cqrs pattern bump problem realli get head around applic build ledger applic allow peopl creat ledger well allow peopl view edit delet employe creator ledger abl edit access right ledger creat could even chang ownership domain two aggreg ledger user read lot post ddd cqrs keyword concern secur author etc state author generic subdomain unless one build secur applic case core domain certain account domain interest transact balanc account function abl manag fine grain access ledger also requir wonder design ddd cqrs term state ddd tutori around place command part ubiquit languag meaning concret action repres real thing command queri actual action user would execut real life implement author coupl command queri user would author execut ledger add transact ledger remov transact exampl user would allow execut queri get summari get transact tri dimension map would exist form user ledger command user ledger queri determin access right decoupl way name permiss would regist user permiss would map specif command exampl permiss manag transact would allow user execut add transact remov transact etc permiss map user ledger command queri permiss map user ledger permiss command queri first part question brief author cqrs ddd implement per command per queri author decoupl command second concern author base permiss user abl manag permiss ledger ledger allow manag author manag command happen ledger thought ad event command handler ledger aggreg grant permiss revok permiss etc case enforc rule would happen command handler would requir command includ id user issu command would check ledger permiss exist user execut command exampl author manag command user way around would includ permiss user user would set permiss ledger command handler would retriev user check permiss execut command would requir fetch user aggreg everi ledger command anoth domain servic anoth possibl would model anoth author domain complet domain would interest access right author etc account subdomain would use servic access author domain form author servic author user command decis would ddd cqrs way
databas integr test bad peopl maintain integr test kind bad wrong everyth must unit test mean mock depend option various reason alway fond find case unit test simpli prove anyth let take follow trivial naiv repositori implement php exampl class product repositori privat db public function construct connect interfac db gt db db public function find keyword keyword might queri builder keyword process etc total naiv exampl illustr db depend mkay return gt db gt fetch select product p p name like keyword keyword gt keyword let say want prove test repositori actual find product match various given keyword short integr test real connect object know actual generat real queri queri actual think mock connect object unit test prove thing like generat expect queri mean actual go work mayb generat queri expect mayb queri think word feel like test make assert generat queri essenti without valu test find keyword method implement prove actual work problem limit repositori databas integr seem appli lot case make assert use mock test doubl prove thing implement whether go actual work deal situat like integr test realli bad case like get point better test one thing also understand integr test lead myriad code path cannot test case servic repositori whose purpos interact anoth compon realli test anyth without integr test
model control write data view mvc use model data store read sever articl watch video read question read learn mvc includ mvcs mvp addit make even wors broader pattern seem apolog question broad long realli want figur understand combin first model write render updat data view control seen place develop use first approach latter use make sens view control pair sinc model better separ think even simpl block diagram vari lot second generic logic code two exampl exampl example2 one exampl better approach person guess example2 logic model rule confus even peopl say sql model instead put repositori store model contain logic better contain sql would consist empti method call function repositori make unnecessari add complex whole design apolog post mani question broad thank advanc
api dt os shape client univers project intern desktop client app server side client api servic talk relat databas seem two choic shape dt os client view e g account overview info dto account full detail dto master detail gui scenario optim amount data transfer server side databas queri optim less object convers map need domain dto dt os coupl differ client gui paradigm desktop larg screen vs mobil small screen client api coupl client app term chang deploy make dt os univers keep close domain model shape gui via viewmodel object non optim amount data transfer server side databas queri less optim object convers map need domain dto viewmodel dt os decoupl differ client gui paradigm desktop larg screen vs mobil small screen client api decoupl client app term chang deploy best practic choic
switch complex win form app wpf mvvm question connect older question c applic gui design depend configur built quit big win form applic work industri year communic mani hw devic applic configur use use devic gui modifi configur even devic applic possibl configur go ad need refactor whole applic mayb even write pain work general first bigger project final decid start learn wpf go rewrit applic use wpf part feel complex win form applic easili extens maintain part want learn wpf anyway futur want use proper separ busi logic ui came across mvvm tutori use wpf simpl applic quit complex menus data grid view pixtur box draw measur stuff onto said applic communic lot sever devic well sql server side cours mani thread also quit lot miscellan dialog moment win form version mess logic ui mix togeth suggest approach start separ logic ui kind complex project read mani wpf mvvm tutori exampl simpl cours abl think mvvm enough yet
put common busi logic ddd mvc provid follow scenario web applic user deposit money account wire transfer user deposit money account click refresh balanc button refresh balanc busi logic behind refresh balanc follow refresh balanc exampl call bank webservic new money subtract fee thing would like allow refresh balanc without proceed new deposit fee two servic mvc control action follow right see control busi logic would like move domain layer best place put busi logic control creat new common logic servic implement account model refer account servic instanc account model di
listen interfac nest java observ pattern implement least one interfac often end listen observ interfac place nest insid class separ exampl name nest interfac one charact longer prefix name class avoid simpl name conflict argument either one variant besid person prefer
persist model event sourc intrigu event sourc pattern struggl design event sourc model put concret form first want make sure understand main use case pattern understand one use event sourc captur state chang app differ point time replay event rewind app previous state replay event anoth environ recreat product point time troubleshoot first misunderstood main use case event sourc miss major one pleas begin correct assum less track real mental roadblock lie event persist model mani databas event sourc system two databas one store main entiti anoth store event one databas entiti persist event captur event persist thing total outsid app control exampl state 3rd parti api app integr messag broker state messag queue app integr runtim command line argument pass app etc replay mechan actual work entiti event describ state chang entiti read event entiti repres databas need someth actual write event somewher els replay treat subsequ event updat exist entiti best attempt thus far entiti ie event ok good step right direct still help figur replay mechan abl load order event databas actual replay put anoth databas particular state repres singl point time
mvc web app easi find mani descript mvc instanc video curious mvc precis mvc use app everyth els apart form mvc see tendenc start explain mvc form separ applic three part seem suggest tri fit much design either model view control yet easi see explen mvc primarili describ user interfac design situat treat non ui element bend definit non ui element tri figur whether could fit either model control separet descript mvc design deal non ui element descript mvc interact element model control exampl wonder treat part applic use monitor local network store inform databas ui relat function sole pupros fill databas file relat inform turn present user web interfac
python cach function decor play cach function use decor first use generic function use decor function call test get follow result see second test decor actual calcul alreadi cach result want understand defin thought get result call test cach howev answer function test cach rememb calcul valu result see second test cach calcul result would like know two approach give differ result e first approach success cach result second fail
aggreg root mani field struggl problem long time let say tri model busi custom compani contract invoic etc look like good candid aggreg root problem let say contract would huge list field would requir time end big aggreg root lot data logic invari huge constructor even though break valu object minim damag instead argument time valu object super artifici event make much sens busi vise kind data contain second problem updat data add singl method updat let say updat junk data write one method also feel aggreg like crud kind much ddd also believ need persist data somehow system even though use process logic histor display purpos user make decis base valu let say move kind data differ ar vo ie contract data also option paranoid fine ar would appreci thought
mvc framework defin data display think control bring data view model howev control duti tell view display data view know data display specif write websit sever databas data model control written python view written angular js view side code data display java script side python side e g maintain json file store person info js person info js read control via ajax
best practic extend model view model face issu model want implement gui explor mvvm wpf cours use view model view model also need add coordin model class repres object drag abl gui time addit particular model class need least moment time almost inform contain model object interest view import model class tabl column depend tabl know column column know tabl belong column know depend depend know column repres depend would cours possibl modifi object know need real question though make model class avail view time ad coordin tabl column depend one way might creat someth like prefer way forward extend model object view pattern specif engin task would regular inherit object model view model work sure though like coupl would caus creat view model class tailor fit view map properti model object view model object would complet remov coupl view model creat two object memori case might big model garbag collector drop model object sinc refer map view model
cqrs privat command cqrs saga precis process manag accord cqrs journey book send new command chang aggreg ensur command possibl send anywher els e g programm ui part command intern usag saga handl situat command privat saga write app java axon framework relat implement even c came one solut store command class file saga packag make class constructor packag privat thus saga instanti command cannot make whole class privat must visibl aggreg command handler better way
updat event log case new event cqrs event sourc current domain lack featur extend new command sent new saga event sent aggreg handler command deploy featur alreadi run applic command never sent even event never part event log deploy event essenti correct aggreg initialis need event event log everi possibl situat past command event sent sinc event log append way add event past event stream deploy featur requir ok manual way exampl precis problem consid file system applic aggreg file file folder folder individu file folder call node aggreg root cannot store whole file system tree singl root perform old version creat new file folder command file aggreg set parent folder aggreg properti came realize would like list ds node folder contain featur part origin version folder idea node store folder solut creat saga start new file creat event would send new add file folder command parent folder aggreg command would appli event file ad folder folder would add file id set children node deploy featur would like correct children ds folder restrict absenc event origin event log way updat old event log case
confus organ servic follow servic user servic various method fetch id creat etc session servic session handl creat destroy various getter answer servic answer entiti repres answer question servic relat problem like add method get answer user given put user servic answer servic number method similar entiti struggl figur method belong advic would appreci
deal constructor larg data class sever time come across situat kind set class simpli contain mass data often class simpli valid without least data howev constructor like public dataclass int v1 int v2 int v3 int v4 string v5 doubl v6 string v7 int v8 internalclass v9 string v10 doubl v11 doubl v12 int v13 int v14 v1 v1 v2 v2 v14 v14 feel like good code practic could tri group variabl togeth often variabl make sens context data class good way design data class
generic way provid variabl amount output rust function current write api machin learn algorithm rust would like singl genet algorithm artifici neural network bayesian network provid multipl output instanc may redund algorithm benefit intend use produc mani output amount output trivial small vector c want return multipl variabl output would like add vector pass refer function high restrict assum user intend valu place vector need move data structur afterward overhead incur copi result output trait sinc use rust trait system full mani trait implement implement sever standard data structur wonder trait work like iter call add valu structur generic way also avoid overhead use rust monomorph closur altern also consid make fn mut paramet pass closur pass valu consum howev desir method power well sinc valu consum direct need place data structur downsid assum sure overhead function call everi time method use iter anoth way consid use rust iter think possibl return iter machin learn algorithm lazili process part algorithm need produc output valu request yeild iter next call think method provid highest flexibl highest perform also seem like might egregi abus rust iter although see similar thing standard librari think possibl implement iter store intermediari state comput insid iter struct may caus issu borrow learn algorithm struct long iter scope though think problem one method use generic program fit rust best practic method consid might perform better provid better support generic program also critic advic improv method glad welcom accept
crud oper ddd design applic ddd move flat poco object strong domain model question would call basic crud oper locat repositori layer control direct without pass domain layer see ad valu sure insid ddd practic make direct call
proper way work mvc got debat work today hope help settl colleagu want separ ui model db network like creat api level ui control allow ui queri model app anoth control break model db represent ex user tabl model score tabl model singleton call db control also provid util method queri db ex insert tabl name valu model tabl use event hub notifi ui state chang updat network layer use db control refer like idea creat coupl unrel model control layer think would wiser allow ui direct access model mayb make singleton model offer proper api access data provid event callback notifi state chang event hub like part model need direct updat network layer also like name tabl model think db need servic access model one model access multipl tabl proper way work mvc
configur file web applic build mvc applic app core interfac abstract class oper logic situat also contain directori call modul applic base modul exampl modul user contain control model view stuff relat user oper current use json string configur applic rout class cheek control belong model check modul activ control activ mani stuff question apart json xml configur format
convert data setter dto wrote simpl dto transfer data one point anoth initi thought caught act various thing dto simplic sake like convert data dto setter make sure fit format even valid throw except reduc method call simplifi point actual hydrat dto inform dto definit know behaviour except storag retriev data look better structur dto use main transfer data one sourc class control class e g payment gateway name data e g price transact price gateway process accord anticorrupt layer front payment gateway sdk provid vendor current setup realli line dto definit look architectur clean match design pattern exampl non dto compliant dto would look like perfect world
resolv mean program see mani place word resolv use depend inject resolv implement interfac packag manag ex resolv packag depend web ex resolv hostnam make logic code special make someon choos word resolv simpl convert transform even get
domain model databas sustain solut start new job databas develop medium small size compani base microsoft technolog notic earli much practic deviat taught school regard best practic design pattern test project manag bug main databas develop henceforth call john keep model schema databas magic tabl one databas schema one tabl one column insert record tabl tabl generat databas trigger actual correspond tabl insert row row tabl updat referenc tabl row turn read homemad c program generat c model use frontend develop control outward apart develop done accord asp net mvc framework see coupl flaw approach need maintain orm rare time job secur good trigger tabl row tabl flaw support tabl updat check constraint advanc featur could sure improv yet sure way go keep programmat logic databas feel weird restrict although possibl extend model c c model generat run manual one peopl among one yet matur enough includ autom build process sever peopl suggest phase true test product like entiti framework dismiss clame keep busi logic code layer suitabl small scale applic bootstrap project startup post lead toward someth could look like opinion discuss intent want clarif regard architectur approach keep domain model databas sustain solut compani growth
rest without put support optimist lock use e tag rest without put model immut append event sourc state chang favour post ing new reifi chang resourc put ing updat origin exampl make chang coffe order tradit rest post order type latt creat order put order type mocha ok rest without put post order type latt creat order post order chang req type mocha creat order chang req question work optimist lock use etag match tradit rest post order type latt creat order e tag put order status deliv match ok e tag barista quick put order type mocha match precondit fail rest without put post order type latt creat order e tag post order deliv req match creat order deliv req post order chang req type mocha match precondit fail make sens allow etag sent match refer origin order resourc state reifi chang resourc deliv req chang req
intern state differ state intern state ok question ask still clear exact intern state far state clear function contain behavior variabl state valu state typic mean current valu data someth like variabl contain simpli said right chang valu chang state correct let know intern state clear almost seem peopl mix class object definit clear te either object contain intern state right object state actual intern state class creat object object intern state consist valu member var func name intern state chang exampl chang clear intern state includ privat variabl well cannot chang part intern state understand correct misunderstand someth quit confus caus name intern state typic state
factori pattern violat open close principl shape factori use condit statement determin object instanti dont modifi shape factori want add class futur doesnt violat open close principl
cqrs ddd terminolog sinc cqrs ddd impli one anoth curious term belong ddd term belong cqrs two concept much use togeth literatur usual mix came list term think go one camp ddd domain model aggreg aggreg root valu object entiti servic bound context ubiquit languag event cqrs command command handler event event handler saga process manag read model write model project differ read model eventu consist could anyon correct explain
pattern use comput involv similar yet differ object subtyp design code two qualiti use similar differ subtyp object use similar differ type comput object exampl refactor legaci code els statement differ object type one file els statement various comput task object anoth file use oop rewrit somewhat like later question consid goal get rid els statement mainstream code encapsul comput one group formula singl comput getter put price object e mimic line still deal differ option want group array e name quantiti option differ
handl data fetch circular object refer oop domain model tri put togeth basic model oop c appar got wrong idea workman comp case appli patient also one patient visit appli case patient visit though also patient associ cours patient number visit associ origin thought creat basic real world reflect busi model someth like naiv thought nice load model everyth hand semant repres domain real world right go opposit rout fill parent object store list ds relat model cours allow load everyth demand get id grab object get method seem bit step away idea nice repres real world model like mirror databas tabl represent guess must middl ground sure like advic find anyon give basic exampl model without go nut refer circular etc thank advanc
abstract decor class need exampl need shape decor design red shape decor implement shape direct inherit shape
alway better use construct code ignit model view even need sometim model control function construct anyth sit top method code ignit model control lot code ignit book teach way follow exampl construct anyth remov applic break instead use like follow without construct applic break better good practic case use construct use
webdesign mvc go right direct tri learn webdesign use mvc design pattern right stuck point code get complex unsur structur put code part start index php file control right much load slim framework render differ view built complex content php lot form data logic read server directori echo result mix html tag sure violat mvc pattern right general approach put logic insid index php store result array pass framework render function like prevent index php becom complex differ approach take
better way transform data context imagin complic servic provid info bank product fee imagin complic ui deal ui servic data format chang time month activ develop decis make life ui develop easier transform data format ui develop want e g put object anoth level tree add field like broker fee agent fee instead provid map fee type etc current solut use java code transform servic dto data transfer object ui dto back problem code look good time consum maintain xslt transform option even harder maintain idea introduc groovi syntax easier read question option pattern librari approach simplifi data transform code
dri decor pattern deleg java refactor java use decor decor inherit class thing decor let say consist entir mayb method form like write thing decor drive nut dri enthusiast everi addit activ class need addit class es form basic un decor behavior decor alway thing still decor way express object deleg non overridden method member field
busi logic model use repositori pattern data handl dal folder user repositori user repositori user context insid model folder class call user like id usernam etc read internet less possibl control mean want determin put busi logic exampl want page login page would happen put login function alongsid model call account model login method control
templat method pattern abstract class vs interfac deleg templat method pattern common implement abstract class use languag like swift support abstract class implement templat method pattern done interfac deleg obvious languag support abstract class way go use interfac deleg templat method pattern implement either way second implement advantag term good oop practic vs first one
ok use servic locat ubiquit use depend strict adher invers control codebas creat hellish constructor yes know mean class cohes enough work progress thing sometim depend quit silli like date time wrapper enabl date mock logger task factori wrapper direct relat busi class think requir explicit introduct could eas load ctor use servic locat item pass system would disadvantag
factori pattern distinct abstract factori factori method recent phone screen ask describ factori pattern ask screener meant factori method abstract factori said factori pattern know factori pattern except context aforement go f pattern research sinc phone screen noth found indic third factori pattern closest came question still seem distinguish factori method abstract factori distinct third factori design pattern factori pattern alway mean factori method
php call helper class mvc helper class laravel static method calcul week number date week etc static need max instanc helper class need logic view use mvc pattern question quit simpl may view call helper method direct control respons call helper pass result view
event sourc updat multipl aggreg tri learn event sourc potenti applic book system build think understand core concept troubl understand handl case updat multipl aggreg stream requir case model two aggreg event track number avail seat book one seat singl event record detail attende everyth read indic transact updat singl aggreg howev save book need updat event track remain seat event book record chang attende detail creat potenti inconsist updat book event need handl case updat event fail seat longer avail happen even add reserv seat next minut step point need updat book detail confirm seat convers updat event first need handl case someon manag concurr modifi book conflict case unexpect error leav book event inconsist unsur could handl tri look similar problem domain handl e g transfer money account clear strategi ensur eventu consist realli sure appli case updat multipl link aggreg handl
mvc set read view compon often see follw exampl read mvc exampl java question adapt oop languag control someth like realli consid good far understand everi gui compon add get set method control must know everi method make reusabl anyon tell correct e wide accept way updat gui compon mvc thank advanc
someon give good definit term busi logic kind get mean enough explain key concept talk mvc pattern give problem explain concept
could class consid factori class recent work reusabl network servic class servic aggreg os app class retri fail request caus expir user token plus class use multipl contractor creat aggreg servic sinc contractor might use differ authent method creat interfac protocol class manag user authent sampl work swift base network servic swift authent network servic swift authent protocol swift read design pattern work creat factori like class creat authent network servic aggreg servic someth around yet revisit go f book found factori pattern meant return subclass instead main class sinc return main class authent network servic authent network servic factori could consid factori helper class
pass mvvm object class use c wpf bind model view display state data need display spread across coupl differ class instanc class read digit io valu need display main interfac red green light better simpli pass model object class updat properti direct seem easier short term smell weird edit think better word ask encapsul encapsul seem import concept oop case model encapsul main class object interact model direct deleg method use seem verbos bit messi solut look keep data encapsul case model pass secondari object argument constructor act model concurr origin instantiat seem break encapsul rule could confus shear number place model may access especi true various class data need view could entir opinion base see benefit pitfal approach case lend reus wherea case could implement elsewher practic one prefer import encapsul maintain expens readabl msdn implement mvvm pattern well design view view model model class encapsul correct type code behavior also design easili interact via data bind command data valid interfac end edit solut work use deleg instanc case main readibl standpoint seem like would easier pass demo class model updat log text direct case2
altern singleton cach list data project abstract cach class allow popul seri list global persist throughout applic cach object thread safe manipul necessari allow cut massiv overhead queri extern third parti ap direct seen serious hate singleton bit curious option current use case seen depend inject mention quit bit know quit adequ use scenario exampl cach abstract class exampl implement
pipelin step two output use differ later step creat java packag offer api base pipelin pattern seri step plug togeth combin provid input match output step initi sourc final sink fix unfortun step feed output two later step step n output pair valu one use step n step n step n howev requir pair valu first come step n second step n pseudocod look like problemat step look like current use static variabl something2 obvious poor solut howev unsur proper quit possibl get step futur consid split step n one step someth run need unfortun two valu retriev extern servic outsid control comput cost extern servic want twice also consid creat kind data store everi step write retriev howev break pattern introduc global state also consid chang everi step step n step n accept pair well via overload forward something2 chang basic everi step everytim need addit input realli cut either last thing consid allow multipl path pipelin less bad idea introduc lot addit complex need anyth els
multipl control resourc base user role troubl design role permiss base applic come figur handl action differ per use role instanc control app resourc control edit resourc role admin user admin allow edit everi field resourc user restrict struggl figur best approach implement singl control handl case rout request differ control resourc like app admin resourc control app user resourc control issu singl control approach show differ form restrict field base role also valid differ field control bodi would pretti much look like big els statement multipl control correct approach differ one use permiss instead role
type check factori bad practic work exist code base tri reduc lot duplic gain polymorph behavior right type domain object abstract base class two moment subclass domain need sometim creat pdf document object send mail attach write http etc appear pdf cours differ bit subclass feel like domain object know pdf file render extract interfac build pdf document object interfac implement one class per subclass domain object also factori method decid implement use current make decis check runtim type object noth match return null builder creat empti pdf think someth sens achiev c delet lot duplic sure design sound kind get knee jerk reaction check runtim type one thing someth tell fact happen factori null implement return make ok write scratch today would gone differ rout entir like everyon els limit time wanna go minut better code approach mean improv small step everi code improv time familiar pattern think mayb visitor pattern could use
exact ingenu unix pipe heard stori dougla mcllroy came concept ken thompson implement one night far understand pipe system call share piec memori two process one process write read someon familiar os intern concept wonder exact genius stori idea two process share memori implement ps awar util pipe use shell question concept implement
event sourc write rare read event sourc stop ask make sens exot situat write rare militari grade audit requir non except system signific usag might produc hundr thousand write per day translat say million write thus event per year oper merg million object event get current state sound like ludicr proposit compar straight read tradit storag yet event sourc behind perform system think lmax miss restor state event stream even common done idea rare instead use differ storag altogeth normal oper e use queri storag cqrs restor event except case like replic audit etc
singl respons principl proxi pattern refactor howev case test forc separ smell rigid fragil becom strong design refactor use facad proxi pattern separ two respons agil softwar develop principl pattern practic understand facad use abl get proxi would help someon provid exampl proxi pattern use refactor thank
factori vector smart pointer design question busi code need object know much object need know exact type polymorph involv sound good reason go factori pattern code look like prototyp factori creat method look like good news work factori read config decid mani object creat concret type well lot search find exampl factori return singl object contain thus question good style think yes way whole pars creation process hidden busi logic logic know contain bunch object mayb opinion pleas note project learn good oop habit ok imagin approach ok learn raw pointer evil ok evil per definit tri avoid want move smart pointer lack boost c machin start auto ptr ok new approach factori look evil compil moment get crazi stl compil error imagin compil good never seen construct factori return contain smart pointer expert want ask think relat note smart pointer shall use busi logic owner object guess uniqu ptr howev sure uniqu ptr contain return share ptr easier implement think
avoid constructor mani argument factori creat object differ class possibl class deriv abstract ancestor factori configur file json syntax decid class creat depend user configur achiev factori use boost properti tree json pars walk ptree decid concret object creat howev product object mani field attribut depend concret class object attribut futur mayb even sure constructor object look like think two solut product constructor expect everi attribut paramet thus constructor end paramet ugli lead long unread code line howev advantag factori pars json invok constructor correct paramet product class need know creat due json configur need know json configur involv product constructor expect one argument properti tree object pars need inform inform config miss bound product class react proper factori need know argument need sever product factori also need know react case wrong configur constructor interfac unifi small disadvantag product need extract need inform json thus know construct tend prefer solut howev sure good factori pattern feel somehow wrong let product know creat json configur side new product introduc simpl opinion
anem domain model domain servic inject anem domain model describ anti pattern domain driven design martin fowler busi logic domain model often domain servic use inject domain servic domain model consid harm vaughn vernon see implement domain driven design page opinion opinion contradictori true point consid realli rich domain model domain servic inject vs anem domain model normal domain servic
legitim real work constructor work design keep hit roadblock particular class model def essenti owner complex node tree built pars xml schema think dom want follow good design principl solid ensur result system easili testabl everi intent use di pass depend constructor model def easili swap need test struggl though creation node tree tree go made entir simpl valu object need independ test howev may still pass abstract factori model def assist creation object keep read constructor real work e g flaw constructor real work make perfect sens real work mean construct heavi weigh depend object one might later want stub test pass via di light weight valu object node tree tree creat somewher right via constructor model def use say build node tree method realli want creat node tree outsid model def pass via constructor di creat node tree pars schema requir signific amount complex code code need thorough test want releg glue code relat trivial like direct test thought put code creat node tree separ builder object hesit call builder realli match builder pattern seem concern elimin telescop constructor even call someth differ e g node tree constructor still feel like bit hack avoid model def constructor build node tree built somewher object go
creat item two differ tabl auto increment c sql first let apolog know question confus sinc english pretti bad work project compani main creat system take care good use mvvm c ms sql databas look like auto increment bike id contact id time want retriev databas tabl make join linq get data use webservic pretti complic sinc use lambda toffe work mess furthermor get complic want creat bike contact dont want tell peopl hey time creat bike give contact id im current use max first get recent id flexibl could implement peopl click list contact want use contact creat new bike click button system know chosen contact id also peopl creat new bike let go page full text box fill cours could new contact id new item differ tabl let know creat item contact id im sorri confus guy sinc question unpercis pleas help
string builder applic builder design pattern builder pattern restrict address telescop constructor anti pattern said also address general problem complic creation immut object string builder class word builder name noth telescop constructor simpli help us collect data need pass constructor immut object appear like answer clear yes appear disagr topic hope someon could perhap clarifi answer question programm se legitim real work constructor op want creat presum immut object contain complex tree idea builder pattern pop research found q amp seem say string builder style object creation applic builder pattern reason clear stackoverflow string builder builder pattern answer question fail make convinc point far tell
use ddd crqs exact one event per command look way design ddd applic convent configur say aggreg client command defin fill profil logic rais event profil fill case command rais event command rais differ event base logic alway relationship command alway rais none singl event given type ask fact command alway rais event build convent system fact know rais event result event rais
separ queri modifi return valu heard said keep queri modifi function separ one anoth agre sentiment tri appli often run two issu question anyth modifi return return indic success failur instead return noth throw except upon failur constructor treat modifi creation object side effect suspect sinc constructor creat object return refer would pretti annoy
true observ pattern work probabl poll mechan underneath short question true observ pattern work probabl poll mechan underneath updat network situat quit amaz macbook pro save file hello world txt dropbox folder actual see appear macbook within second even amaz macbook search hello name match hello world txt show search result go macbook pro renam file hello world hi hi txt second new name actual show search result macbook search result probabl observ folder chang folder observ dropbox state chang remot dropbox websit guess dropbox app probabl way tcp ip connect dropbox server initi messag macbook dropbox background app say hey folder content chang server dropbox background app macbook renam folder object model data object notifi search folder object hey content chang search folder object notifi folder view object say hey search result chang probabl want updat view screen think mayb rough work question tcp ip two way connect true dropbox background app poll dropbox server everi second ask someth chang busi dropbox server howev true even though two way communic set beneath tcp ip layer osi layer kind poll exampl dropbox server low level cannot push electron router notifi macbook firewal somehow side must kind poll low level els dropbox server cannot push firewal view way use wi fi macbook probabl mechan dropbox server push someth wireless router use electromagnet wave push macbook notifi macbook constant ask wireless router thing new macbook ask macbook crash macbook wireless firmwar crash ask realli push data wireless router macbook macbook realli constant ask similar case java script browser two way connect html5 somehow still web server notifi browser java script code kind poll underneath written java script simul two way connect updat mean poll necessari server mean kind mechan constant look see anyth new versus observ pattern insid code app cpu jump code execut observ code therefor observ realli noth observ pattern network mean say notebook comput use wifi turn wifi observ pattern work turn wifi wifi firmwar hardwar realli constant sens whether someth new come wifi signal way forc comput like intel processor jump chunk code either firmwar hardwar constant sens whether someth new mean poll observ cannot total wait mechan constant check someth
differ adapt deleg design pattern confus adapt deleg design pattern adapt pattern bring intermedi class interact anoth class deleg pattern also bring intermedi class refer interact anoth class
unit test api client wrapper go round circl tri figur best way unit test api client librari develop librari client class basic map api addit wrapper class provid user friend interfac top client first wrote bunch test client wrapper effect test forward appropri function whatev oper wrapper oper client client oper http connect start feel uncomfort howev feel like test implement class rather interfac theori could chang class anoth perfect valid implement test would fail function expect call call sound like fragil test thought interfac class test verifi class actual job meant rather first thing come mind stub extern api request howev nervous oversimplifi extern servic lot exampl stub ap seen give can respons sound like realli easi way test code happen run correct fake api altern mock servic infeas would need kept date whenev real servic chang feel like overkil wast time final read anoth answer programm se job remot api client issu certain call less therefor test verifi issu call less less convinc test client need test make correct request api cours alway possibl api chang test continu pass integr test would come use sinc client map api concern chang one valid implement anoth realli appli one valid implement method client howev still stuck wrapper class see follow option stub client class test appropri method call way treat client stand api put right back start give uncomfort feel test implement interfac wrapper could well implement use complet differ client creat mock client decid far go mock creat complet mock servic would take lot effort work gone librari api simpl servic quit complex essenti datastor oper data keep mock sync real client test appropri http request made mean wrapper call real client object make http request actual test isol make bit terribl unit test particular happi solut would right way go
microservic isol data storag model look microservic concept new communic lightweight manner excit howev question sure answer microservic suppos isol data storag model complet consid note probabl good exampl seper done base read write wherea good approach would separ busi concern product write servic respons deal creation edit product know mongo db write data product lookup servic respons deal retriev product identifi provid basic list product base categori etc know mongo db read data product search servic respons deal search request product know elasticsearch read data two separ data storag tech three servic howev product write servic product lookup servic work data storag model tri relationship two servic end day process etl mongo db elasticsearch product search servic function sens three microservic data storag model middl process know two model say model separ complet wrong
good idea defin one big privat function class maintain valid state updat object data member although code simpl singl item purchas e commerc site use general question updat data member keep object data valid state time found consist state evil relev phrase discuss disadvantag mayb better way recur issu real world applic back relat databas use store procedur extens push valid databas think data store store data code run time state maintain work edit relat question best practic recommend regard singl big function maintain valid state edit2 although eignesheep answer best answer fill line eigensheep answer want know code process global state substitut di enabl pass state object
class repres properti might invalid valid done product class among other attribut ean13 encapsul ean13 code prototyp product class first implement ean class follow see way implement constructor throw runtim except object instanti invalid code explan product class particular case use class hold inform product crawler applic crawl web site collect inform product one inform ean code case product ean object instanti servic class ean code applic grab web site valid ean code anoth code string first want save product without code creat way store first valid ean code persist see code implement valid method valid call constructor way implement valid work less follow would way valid make implement public method ean13 class follow could still done follow put valid extern util class certain mani way implement would work would like implement valid correct way clean eleg possibl promot discuss way implement kind valid
interact review data modal insert db look conceptu approach problem build web app import data sourc control data qualiti pretti high occasion data make sens want expos except base data rule user modal accept funki data chang commit app develop far behav like import data transact valid transact valid accumul php array aka except arr case intellig code propos solut bad data field base relat data add suggest except record replac origin import data complet import except record propos fix expos user modal one time record user decid skip accept origin data edit record save cours valid secur reason goal creat user experi modal display except submit user decis edit record data backend send confirm messag serv next except replac bodi modal bonus under page updat counter stat base decis made question loop except troubl approach far set display modal empti structur done issu b creat tbodi tabl first except data done issu c captur appropri data none old propos edit user submit decis done issu current approach current pos ting user decis data host page via ajax handl result user decis post fine problem post back page launch modal blow away accumul except arr search loop data one record time halt process except found pop open fresh modal collect user decis ala jqueri javascript php code easili halt resum user decis pos ted launch page still restart begin use session storag good approach read except dom process
map domain model view model asp net mvc5 applic structur like core domain project infrastructur dal project util ui ui project contain view model moment probabl put separ project expect applic grow time work unit work generic repositori inject uniti question strict tri use view model ui view put logic map domain model lt view model control perhap put map logic view model creat method view model domain object domain object domain object view model domain object view model view model etc
builder pattern seper construct represent read go f intent builder mention separ creation complex object represent understand represent mean context mean text pars exampl provid motiv section seem separ construct represent algorithm interpret textual format creation represent convert format
use python method resolut order depend inject bad watch raymond hetting pycon talk super consid super learn littl bit python mro method resolut order linearis class parent class determinist way use advantag like code depend inject natur want use super everyth exampl user class declar depend inherit log servic user servic particular special interest part use method resolut order also mock depend unit test code creat mock user servic inherit user servic provid implement method want mock exampl provid implement valid credenti order mock user servic handl call valid credenti need posit user servic mro done creat wrapper class around user call mock user inherit user mock user servic mock user authent turn call super valid credenti mock user servic user servic method resolut order sinc offer concret implement valid credenti implement use yay success mock user servic unit test consid user servic might expens network databas call remov latenc factor also risk user servic touch live prod data feel quit clever good valid use python multipl inherit method resolut order think inherit way learn oop java feel complet wrong say user user servic user log servic think way use inherit way code use make much sens use inherit pure provid code reus think term parent children relationship seem bad wrong
test context test method instead depend inject work legaci code base need find way write unit test project project three layer architectur ui biz dal call dal total implement use ado net type dataset full sql script biz class method respons busi logic stuff depend helper class dal class know use di inject class biz class think chang lot code solut think test context class act contain contain mock object test anyth come run actual code real object use instead exampl see resolv method accept argument type dal use case run test first would like know think solut second still think way test sql script hardcod code base test
altern anem domain object simpl exampl provid want model tv event remind wonder best way model requir rough event remind remind creat event remind remind delet icon shown event separ screen exist present remind remind store backend multipl properti obvious real domain larger also contain channel record basic need function creat remind delet remind get list remind check event remind seem relat simpl problem struggl collect number possibl option would great appreci feedback option event creat remind event api remind api delet creat remind symmetr function henc would expect singl api event remind interfac backend big fan static function remind seem indic higher order object exist option remind api advantag event api chang ad remind function good wrt extend guess creat remind event check whether event remind seem function event would expect event api option event api get remind seem function remind option creat remind manag remind servic singleton follow api prefer option result anem event remind object getter setter logic seem discuss whether anti pattern
ddd repositori expos entiti domain object understand ddd appropri use repositori pattern aggreg root question return data entiti domain object dto mayb code explain question entiti someth like someth like addit question repositori return queryabl enumer servic repositori someth like get custom last name get custom first name get custom email make method someth like get custom func lt string bool gt predic
angular js alreadi take care mvc would use react js need view part heard angular js becom quit popular time react js also angular js alreadi take care mvc way bind model view would react js actual need thought react js bind model view bind view model say form text input field valu chang go model fact react js seem js reflect model build templat whenev model chang view automat updat need anyth angular js alreadi
bad practic control call repositori instead servic bad practic control call repositori instead servic explain figur good design control call servic servic use repositori sometim control need logic need fetch db pass view call repositori need call servic bad practic
circular depend recurs grammar parser e g json tldr build parser recurs grammar composit individu parser e g parser combin framework often circular depend individu parser circular depend general sign bad design valid case circular depend inevit solut would prefer deal circular depend parser combin bad idea altogeth tldr question ask depend inject circular depend typic answer chang design avoid circular solv circular depend handl quot circular depend quot depend inject circular depend inject good practic come across typic case encount circular depend want differ servic inspect recurs structur think exampl far best come parser recurs grammar let use json exampl simpl well known json valu string object array string simpl pars children object made key valu surround object syntax array made valu surround array syntax key within object basic string go creat number parser object valu parser depend parser object parser depend string parser valu parser array parser depend valu parser string parser want manag parser depend inject contain even want contain still figur order creat differ parser chicken egg problem known solut observ exist parser librari far most seen stub solut avoid circular depend pass valu parser argument object array parser pars method work taint signatur pars method imagin want someth like parser combin reus grammar would want parser interfac generic independ specif grammar requir specif parser pass around use stub instead requir depend constructor could use set add method one parser e g first creat empti valu parser stub add object array string parser via add method use proxi instead creat actual valu parser creat proxi object refer contain pars method call first time proxi valu parser real valu parser creat fine suppos matter tast solut prefer fit typic high hors respons circular depend sign bad design exampl seem total valid entir class problem like
constructor paramet mvc control get set construct inject work follow code employe control code get set pass constructor magic happen
event sourc cross context aggreg idea differ write model use differ bound context aggreg instanc event exampl consid user aggreg use administr user context admin user interfac part applic domain model say user user context cannot action chang email chang password chang address whatev unless log action permit hes log administr context howev action need user log basic admin chang user detail behalf model event sourc singl aggreg instanc id depend context differ object model would built event e admin context model verifi user log user context model way event would share context good idea smell issu complet sure
exampl implement observ pattern well written seem exampl implement observ pattern drawn book headfirst design pattern reilli current read uml diagram book clean visibl method compos subject interfac regist observ remov observ notifi observ skeptic last method would client interfac know specif way call imho place method insid concret subject implement concret subject
correct name data object need understand proper name object crop two project convent represent mvc pattern howev anoth model normal present mvc pass data control view back second model object call heard refer data transfer object valu object model object object typic necessari data present view almost never form data store data store four five da os may pull togeth servic control popul object may use updat one dao way back data store proper name second model object imag creativ common shane brinkman davi
make one instanc factori suppos singleton howev class one instanc sometim factori use creat object system one factori exist cleric control creat object may compromis agil softwar develop ppp cleric control uncl bob talk would compromis
client check persist item exist modifi develop mvc web applic rest interfac rest control perform action persist item servic class translat except come persist layer request involv item exist databas would like return code actual possibl due except translat oper servic prevent control know reason problem servic class return particular except case convers control check item exist action
creat asp net mvc web applic work differ oper system develop deploy mani asp net mvc web applic window server r2 amp window server r2 use ii amp ii time know deploy asp net mvc linux unix without need chang code today creat consol applic call asp net mvc web applic consol applic repres long run process call 3rd parti system generat report start asp net mvc web applic run time basi task insid window task schedul mean web applic run oper system window
parameter vs subclass exampl taken agil softwar develop principl pattern practic new employe ad receipt add emp transact transact contain employe name address assign employe number transact three form propos employe class add employe transact question would better instead subclass add employe transact factori salari classif pay schedul better vagu term disadvantag design one propos uncl bob say insid employe transact salari classif factori call salari classif factori get salari detail
prevent parallel call model command run call method model prevent concurr call critic place model multipl request come maintain execut order could put call command synchron queue approach practic could appli model wonder critic section protect right action happen seen peopl use lock monitor rais doubt question queue particular command would good enough action model interfer queue everyth
static method helper function control go work piec function simpli allow guest user perform action certain number time requir login creat account instanc vote photo galleri time app ask creat account solut rough follow initi load set cooki vote count retriev increment vote count time user vote vote count redirect user page ask login sign cours user delet cooki use anoth browser etc concern right problem implement code even though call featur one rout feel control wrong place add quit bit code chang number time user vote chang code control mayb bad thing believ live helper php file need anywher els app guess could creat class could live static method feel static method best left function alway return valu result regardless call put good question good oop way implement fit line laravel
api design dilemma rest rest like design rest api support login temporari token generat reason number client side rest librari would speed develop use take care serial connect etc use would code part separ need rest perform load balanc cach involv server side login token generat quit common yet hard time tri figur rest instanc login read lot login rest appar right answer end mani peopl end use auth mainstream actual need check user exist password correct oper api pass user name password author purpos still stateless side problem envis login queri user collect server respond filter list singl user like pass password queri string look ok connect made use https addit step url encod odd charact decod server wont post also ur ls frequent log payload could also get password server respons return json object would contain field user id password etc could check password client one better altern token generat regist user abl generat temporari token struggl tri forc token resourc generat fli oper idempot subsequ token request return differ token make thing wors oper state temporari tabl backend token store period time would rest version could put client one generat server tl dr difficult succeed creat rest version api client code shorter clearer use well known librari extens test honest look almost imposs forc state stateless mayb give provid straightforward state api could explain extra time would take manag probabl argu nowaday everyth rest
idiomat way write java script class maintain state tell state chang experienc c develop new java script want write es6 java script class maintain state tell state chang think two way one way inspect instanc class see dirti sinc last time mark clean e mark instanc object clean chang data member class mark dirti abl compar two instanc class incom state equal known state state chang know built java script best way java script work typescript make differ
structur qt project py side project work start grow point becom larg enough step back think overal design spent time flask django familiar mvc design pattern conceptu advantag mayb disadvantag mani great exampl structur layout flask django project realli give lot thought tri slot project type design pattern first time find tough envis everyth laid spend time read mvc pattern littl pleas see part gone path without conscious tri made thing unnecessarili complic coupl noth particular special program user interact ui retriev data databas either view process tri map mvc structur came control actual applic function user interact widget ui control take input action appropri oper retriev data model send view display ui run oper send back model updat databas etc qt speak widget signal connect control method involv pull data model usual process view via view model insert updat select data databas direct control view actual ui work done updat widget stylesheet core function program also format data pass view control model specifi control taken various option user select ui display user via display widget individu object class would come play main differ list structur program current model view compon less overlap model retriev data also format data well right track
optim iter queri extern argument use c exampl question languag question framework compil perspect e solut implement given idea insid compil consid code let say sequenc hold million item condit execut pretti fast nevertheless singl check either iter move slight chang sequenc iter million item result oh yes least item question could optim way excess iter made hand would like avoid pollut framework plethora optim method count count least sourc count exampl anoth aggreg queri come mind consid express wrong exampl keep histor reason collect sum gt ask c specif optim question complet general iter sequenc present lot languag iter sequenc come generat well question optim aggreg queri extern compar queri argument
intellig builder pattern differ paramet depend type generic let say famous joshua bloch nutrit builder want chang bit like dynam builder restrict visibl setter propabl use generic would like builder build two type nutrit fact let say instead would like someth like know express clear wrote generic proper place plea advic show detail begin generic love
inject depend requir implementor interfac interfac whose job communic repositori implement interfac seem make sens implement interfac without receiv repositori like inject ask receiv repositori sinc requir almost everi method call seem reason inject depend constructor practic everi method interfac lead volit dri repeat principl hand way enforc everi implementor would depend constructor moreov implementor even know also thought abstract class instead interfac soon rule option limit option deriv anoth class situat receiv depend
option function type implement scenario ever implement option lt gt function type discuss basic use enumer lt gt one element instead potenti nullabl object refer c empow linq function streamlin process reduc cyclomat complex null condit anymor adopt idea look way bad use argument return type automat convers necessari consumpt exampl might look like creat basket singl basket entri two milk box follow defin use general enumer lt gt extens well pretti function far see question make sens cyclomat complex low shop basket class time still three virtual path execut test add replac place method also need test null product argument problem almost invis say would person prefer maintain kind code c
intent servic implement command pattern accord wikipedia object orient program command pattern behavior design pattern object use encapsul inform need perform action trigger event later time inform includ method name object own method valu method paramet accord professor schmidt text command time independ execut applic logic encapsul applic logic allow queue execut differ point time context independ execut applic logic separ applic logic context allow execut applic separ context differ thread use differ state exchang applic logic separ applic logic context allow easier exchang applic logic encapsul inform intent handl intent work abstract method command executor like describ command processor pattern text thus instead explicit implement executor order invok command simpli deleg command execut oper system question intent servic framework implement command pattern affirm case android mvp implement explicit implement use thread executor consum runnabl command instead use one provid framework
tcp client server good solut system control gui run multipl platform consid softwar run dedic system basic linux box control machineri system requir hardwar interfac task softwar also gui control said machineri howev system later abl use extern devic softwar use similar gui run various p cs smartphon etc central sw contain tcp server extern devic connect central devic softwar develop first control extern devic later add propos central softwar would split two separ program one would server without gui handl control hardwar interfac stuff separ softwar would fulfil sole role gui cours good mvc separ possibl even within singl program main advantag see split program gui part much easili portabl system actual case pc extern devic softwar use system guess would much easier port program port gui part complex program main disadvantag solut initi system complic gui need communic via tcp control part instead direct insid program major advantag disadvantag split applic two separ program communic tcp scope project year small person team
java script angular js modul implement techniqu structur im build app tri implement structur app robust scalabl futur app most divid java script modul reveal pattern main issu want use angular js within app angular js angular modul like way plan app develop http call server done within java script modul clear within filter js file see return data http call server sent back angularj control case app js file see control app js file respons updat view html file reason function connect server handl data within privat scope filter js modul one access function kept global scope pass data filter js file angular app js control use callback complet code describ scenario filter js app js see code structur use callback send data back control question question descri scenario see code implement structur right approach implement adher good clean correct javascript code someth els improv app code structur
rewrit condit oop without generic let say set object also string json data depend object type json string need transform either foo bar baz ok cool method want avoid write someth like feel like either good condid almost good candid factori pattern someth feel quit right simpl solut overlook set condit switch case realli ok way solv
interfac necessari mvp design pattern tri understand mvp use winform found exampl user model user view need implement user model user view interfac
far take tdd test servic object write phpspec test zend framework applic left wonder far dig consid simpl case domain servic domain url sens word abl list foo object work make head tail test simpl domain servic fed via di domain mapper domain mapper doctrin mapper transform sql row doctrin entiti theori would want cover code instanti domain servic done zf2 factori complet bypass factori process use phpspec let tailspin separ test factori need function servic locat object test find foo object mean invok doctrin run sql queri test databas depend assum want extern data modifi test test success return empti array semant queri error could creat empti array condit failur simpli accept test cover draw line test di ed servic interact databas automat limit
common mvc framework violat lsp mvc framework work framework implement mvc architectur pattern like know framework usual implement contain base control class extend part name control indic begin rout method method develop add newli creat control repres rest e rout wick requir user control class extend main control filter method accept one paramet name introduc new public method extend control class public interfac idea framework break lsp say want someth like follow substitut properti object o1 type object o2 type program p defin term behavior p unchang o1 substitut o2 subtyp see also work area link offici document barbara liskov base control class p user defin user control mvc framework must implement term base control framework know rout implement base rout perform kind magic lookup find control method suit need otherwis redirect error page updat respons includ enderland answer make intent clear go provid code exampl explain thought process imagin two class demonstr purpos go use common duck toy duck exampl concret piec code c believ simpl problem understand long oop background cite barbara liskov also enderland answer intuit idea subtyp one whose object provid behavior object anoth type supertyp plus someth extra pretti much cover done took supertyp extend ad new function alter public api ad new public method intuit approach code reus correct one awar chang pre post condit quack method chang implement thus rule broken imagin would method perhap facad use toy duck class fair straightforward pass toy duck object method make sure toy duck alway quack call charg batteri method quack bring us back first paragraph cite ms liskov want someth like follow substitut properti object o1 type object o2 type program p defin term behavior p unchang o1 substitut o2 subtyp see also work area base program written term supertyp base duck class make toy duck quack method present use subtyp p instead fullfil ms liskov term let swap tighter bond detertmin toy duck class generic approach code compil duck class know charg batteri method exist broke code constraint use supertyp still remain fix code forc remov call charg batteri method problem toy duck never ever quack matter hard tri simpli one call quack method toy duck object throw object away creat make quack extend class extend public api fact introduc method never call unless kind magic runtim lookup perform would even introduc method useless yagni connect control said mvc framework cannot know extend base control class core framework must program term base class might method like use base class would never access new public method children definit know mvc framework care method look runtim base request mvc architectur work unabl know rout defin front would consid violat lsp person think might believ extend class never introduc new public method base class know violat anoth question mvc framework break perhap use composit inherit tri look without luck clarifi know violat lsp complet wrong lsp mere mean make write code easier use ide help code completit downcast variabl access child method cover mvc framework probabl care consid rout lookup dynam point
c extend entiti framework class entiti framework class deriv databas layout wonder problem extend class creat anoth cs file use public partial class add addit properti much like would creat file data annot test work mvc applic allow pass dynam properti view model still use origin model ef addit file creat pose problem better solut
mvc creat joint layer deal multipl model new mvc differ layer architectur current model user compani servic layer user servic compani servic interfac abstract databas layer servic layer user compani databas layer user db compani db scenario function updat user compani tabl databas updat compani succeed updat user fail rollback databas compani henc think make sens method put method handl model normal creat user compani db databas layer user compani servic servic layer purpos even user compani well sinc new everyth chanc may think misconcept layer base current way think would like take opportun rectifi oh help main tri follow exampl link
domain driven design cross domain interact relat ddd newbi read anyth everyth get hand boil distil knowledg came across ddd question one answer intrigu ddd bound context amp domain one answer poster give exampl ecommerc system product least domain product catalog inventori manag ok make sens e ecommerc front end interest display product inform interest inventori manag may want display inventori level web page may want display edit number inventori stock imagin inventori book magazin etc inform come inventori domain would handl would load product domain inventori domain aggreg b would hold properti product domain entiti number stock edit stock use domain event updat inventori entiti updat one final question know meant forget ignor persist domain think domain think exampl would end potenti db tabl product catalog product inventori use identifi product could use tabl tabl row data simpli map relev data onto aggreg properti
use getter xaml view model bad thing recent argument colleagu use getter without setter view model class use xaml exampl argument ever creat get set pair use privat field setter rais properti chang event valu inde chang exampl hand think fine use getter calcul output fli provid updat time via mani properti chang call think colleagu approach bad think way busi work might simpli need howev sure approach bad avoid cost counter exampl point mvvm base class dev express rais properti chang rais properti chang refresh multipl properti method readi use need properti get set pair dev express base class also expos set properti method use setter also includ properti chang call argument well peopl stubborn keep wrong dev express simpli ad method make sure peopl happi found odd say least take bad design use getter view model design use xaml edit forgot mention colleagu also made claim use get set pair alway faster seem true far updat ui concern also use argument getter ever use whole argument start bit perform issu popul data grid e 12k row vm use quit getter
junior programm add tdd test mvc project junior programm near month probat follow initi career chang month assign ad tdd test wonder whether add test current work senior programm say want want document system whilst learn system larg mvc web servic page util number technolog young old instanc project migrat mvc use dal generat written hous vb net code unit work design pattern amongst other work mani programm number year provid code work want question realli add tdd yes
child class access parent method ancestor method find right bang head follow issu php abstract base class non abstract method inherit unchang inherit chain tier right first tier abstract non abstract method contain logic calcul disk path done take account class name children grandchildren adopt method algorithm modif howev desir implement function grandchild specif path disk attempt use parent path parent calcul path parent know name want use reflect store parent name variabl would also like work homogen inherit chain longer tri go inherit chain ask ancestor place aforement path parent method call php oop languag tri call parent current class parent class object run time php one reflect less persuad break principl oop awar work job allow pseudo recurs sort stop first ancestor provid us need someth must less wrong along way possibl solut whereof think constructor chain class add name array would impli forc child call parent constructor also add name array also pretti mayb issu lie tri use inherit way encompass ever intend would like hear thought refactor way break rule perhap would consid given use case use foundat redefin code permiss edit apolog let question drift away month shirk respons ad exampl answer question part base sloth continu vein origin post three tier rough look like simplifi much possibl almost ident recognis use inherit someth inherit suppos howev function implement widget borrow view parent relat parent locat disk whereof child unawar necessit cheat littl bit
pattern use co ordin loos coupl class strong interdepend collect cooper class whose behavior interdepend upon one anoth wish keep loos coupl creat appropri interfac want determin appropri pattern instanti specif implement object outlin interdepend servic dispos listen messag expos listen method call messag client get next messag iter invok deleg creat new messag handler instanc new thread messag number thread concurr thread servic monitor lt servic gt monitor servic expos start method invok servic listen expos stop method dispos servic expos paus resum method respect zero reset servic number thread call creat remot config client get client everi second remot config client get config notifi configur chang messag client servic subsequ messag handler messag client dispos expos get next messag long poll messag queue next request messag handler dispos expos handl messag someth messag request way xyz client factori access servic remot config client dispos expos get config retriev remot overrid current configur state led creat factori follow member creat monitor return new servic monitor lt servic gt get servic return servic creat accompani recent servic monitor new servic nb servic abl obtain without monitor creat creat messag client return new messag client either creat messag handler return new messag handler messag handler deleg creat new messag handler invok handl messag creat remot config client return new remot config client implement core interfac accept factori constructor servic call creat messag client get singl messag client dispos done servic monitor call get servic allow coordin monitor servic messag handler report progress back via messag client factori cours start ostens implement factori pattern began lean toward builder pattern realiti none feel right creat ing object get ting other certain thing like fact subsequ call creat monitor modifi result get servic feel wrong right name convent class co ordin other actual pattern follow engin analyz
better method clear mean dual use method simplifi interfac better get balanc method pass charg float c give result mayb make note javadoc leav class user figur get balanc
multi screen mvvm architectur design screen view model contain sub view model get beyond simpl mvvm program like sens check current architectur make sure go right path everyth structur around screen screen kind tree breakdown top level home screen drill relat screen made simplifi exampl applic track employe compani three screen compani overview screen let see compani click go employe tracker screen let see employe compani locat click go employe screen let see inform employe screen open like tree question screen view model creat store creat store one place everyth employe tracker screen view model creat employe screen view model store collect properti also use share view model view data ui properti screen display collect item exampl employe tracker screen view item collect direct bind observ collect store properti employe tracker screen view model quick sketch structur employe tracker screen view look like question line mvvm pattern go right way love comment structur thing perhap advic whether go sensibl way hope question provid enough inform appropri new kind softwar design alway made smaller app past inexperienc proper architectur use caliburn micro mvvm framework wpf use know
separ rout control mvc backend applic dabbl mvc framework like rail ilk notic file defin rest rout often go separ control hold action execut rout exampl let say rout go user control creat action would expect defin part control often defin
project structur put object factori work c program project visual studio creat various vs librari project insid vs solut contain various compon solut without give much thought put factori compon correspond vs project need reus one compon insid anoth vs solut realiz factori insid compon vs project may correct way sinc new project differ requir factori construct object e g paramet etc would suggest factori form part compon vs project hand factori appear close bound compon object construct rais question put factori part solut use compon librari part librari
autom data process bpmn bpel order run complex simul need preprocess data various data sourc done bunch postgresql script howev unsatisfactori intellig maintain etc want express data preprocess use bpmn bpel would allow graphic visualis differ data sourc sink flow data filter data accord condit merg data transform data usual simpl comput possibl attach postgresql snippet bpmn bpel model run bpmn bpel order execut data process
find type type script use lot implicit type script quit understand deciph tsd file order get correct type build librari like express angular way learn type someth runtim go back fill type later anoth way figur type base exist code
comput price product option base user option select price per option build servic price option product price product product various option exampl user select x option option avail x lt servic comput price select option use cost option use pseudocod goe someth like total price number modul come user input deriv price per modul come databas product price price modul number modul total price product price option select come user input option one select total price price option one question decid deal option deal price exampl inject select option price class complic price sinc busi logic insid price class need awar select option use comput price perhap class option anoth class price kind third combin class know combin option price come final total complic model sort thing general problem statement general problem given user input e add option b product specif e number product sub part deriv elsewher user input servic c price sub part price option comput total product price oo
smart creat method name everi class model applic creat method framework give default implement creat creat db sometim need perform extra action creat numer way achiev overrid creat call super thereaft subsrib signal possibl overrid hook method creat never problem problem actual want perform action everi time e action actual part creat procedur part high level compar origin creat procedur call smart creat one biggest project ever work proceed want give idea smart creat method usual exampl creat entiti user may want notifi email may want notif test may slow stand alon script repair someth broke entiti creat via admin panel whatev reason temptat name method creat notifi work need action creat notifi add bonus credit appropri name question like name method smart creat realli tell name better tri still like smart creat two untrivi way creat entiti name second one wise creat develop know method call need go smart entiti creator class actual whole class instead one method noth realli chang still unclear creator better bare creat name control know dirti problem approach clear abl reus logic creat user method realli actual want mention user client model suppos know believ lot develop encount situat want know usual approach problem
dri est factori pattern instanti subtyp base one properti valu take follow class hierarchi client facebook client pinterest client twitter client client must defin valu enum properti name client type string properti url origin version question henc accept answer client factori abl instanti client type client type could static properti subtyp subtyp could select valu factori howev sinc static member abstract sure way ensur client type set dozen subtyp way forc client type set would anoth way e g switch statement better option
event sourc replay version design system use event sourc cqrs microservic lead understand uncommon pattern key featur servic need abil rehydr restor system record microservic produc command queri mq kafka microservic respond event command queri persist s3 purpos audit restor current thought process purpos restor system could extract event log s3 simpli feed back kafka howev fail acknowledg chang produc consum time version command queri level seem go way toward solv problem wrap head around version consum could enforc command restor receiv process exact version code perform process first time command receiv pattern use solv anyon awar system advertis featur edit ad exampl buyer send question seller auction site flow look follow ui gt web app post question text text seller id user id web app gt mq send command send question arg text seller id user id mq lt audit lt command arg append log s3 gt mq lt question servic record question db email seller question result new busi requir adjust question servic consum persist count unread question db schema chang notion whether question read seller last line becom mq lt question servic record question db email seller question increment unread question count two command issu one chang one chang unread question count equal system crash restor replay command new code end restor unread question count equal even though contriv exampl result catastroph state restor previous
determin equal dag given fair tradit node class best way implement equal given graph node look like sever special given two node assum root determin two graph correspond root logic equal like avoid overrid equal possibl recogn might necessari evil current solut thought travers graph manual look counterpart check relat cumbersom requir manual type switch node type determin equal though mitig will simpli use default equal let node overrid equal method far perform least quadrat even cubic graph approach complet graph believ reason eleg intuit solut exist use work list fix point algorithm sure code altern could use multi map build adjac matrix assert row exact one correspond set equal row other tabl feel realli heavi hand
implement repositori support orm valid ddd abstract repositori pattern handl save fetch find entiti storag db extern servic matter question repositori pattern bring object system put away basic exampl object databas driver like mongo orm like jpa point implement valid hunch say implement valid constraint factori aggreg use implement mechan howev plenti ms requir get constraint field properti might caus code duplic
proper way place appli decor pattern view layer mvc array model object contain data state repres integ view state shown icon tooltip tooltip need view present object model originali believ decor pattern appli also two decor class two differ view appli decor iter collect control assign smarti logic add model obj tooltip modeil tooltip b properti model object instanc array properti contain tooltip text use view display find iter two control appli decor best solut puzzl would proper solut modifi retriev abl appl appli decor seem good idea also smarti propos option may introduc anoth class work factori
gradual move codebas depend inject contain larg codebas lot anti pattern singleton util class static method class creat depend use new keyword make code difficult test want gradual migrat code depend inject contain case guic gwt project understand depend inject noth either class manag spring guic none sinc codebas larg cannot transform code night need way gradual problem start class need inject class cannot use simpl inject class class manag contain yet creat long chain top class inject anywher way see make injector applic context global avail singleton time class get manag bean contradict import idea reveal composit root applic anoth approach would bottom start high level class includ depend inject contain slowli move smaller class wait long time sinc test smaller class still depend global static would way achiev gradual migrat p question gradual approach depend inject similar titl answer question
mvc web applic mq subscrib web net mvc5 applic look start offload heavi process web applic distribut servic layer part process look way notifi web applic load balanc chang need deliv connect client client connect use real time signal signal r dashboard guess real question issu thought other dealt run web applic subscrib messag queue one thing need keep mind load balanc solut fire web request notifi webserv sort question unless notifi web server individu obvious first hurdl web applic need keep task thread run continu subscrib topic
implement truli global variabl rail app best implement global counter rail api app central compon system sever basic transact id need increment roll past maximum valu custom logic attach need manag simpli auto increment infin think use redi keep fast memori transact persist afterward postgr audit purpos sound reliabl approach peopl need state across multipl process rail app consid configur app server global class variabl mutex etc done lot research ask question differ yesterday think character proper
increas code duplic simplifi busi rule view process write rubi rail web applic univers depart resourc web applic e g project complex view layer logic project creat admin faculti user submiss faculti cannot updat attribut project student user view project particip updat attribut view new project hide field visibl show action field updat admin submiss form mani rule current singl form type action new show edit problem busi rule lodg view complex manner origin prevent separ form user control would render base user role lot code duplic busi logic get complic time make singl form approach complex develop maintain time separ form role specif view caus increas code duplic question would creat separ form user role make sens given would essenti code duplic better solut actual attribut allow updat actual control via rail strong paramet pundit gem allow scope resourc base rule user role talk sole present layer asid alreadi tri work partial share form field howev eventu need move x field partial back complic singl form busi rule chang restrict access certain field certain role also look mvc question pretti similar asp net might differ rule could separ view never work asp net know general mvc question also answer question busi rule alreadi present model pundit gem howev best present data discuss
sort unit unit work read unit work pattern ton mvc ef unit work exampl tri encapsul multipl unit work larg set mayb pattern alreadi exist somewher unawar keep ef db context clean broken differ domain howev sometim domain overlap also need non db type unit work like save file hd rollback delet know differ pattern want someth like uof commit fail would roll back curious pattern like type improv thought etc etc
communic databas mvc mvp build small applic want save busi object databas busi object model act contain busi object provid method creat delet updat busi object done direct alter object attribut also user interfac present user interact databas communic know insert delet updat busi object databas want constant updat databas busi object creat delet alter easiest way would give model refer databas communic call insert delet method busi object creat delet model call updat method present user alter busi object attribut via user interfac accept way handl databas mvp mvc scenario usual tighter coupl databas model layer best practic let model know one busi object chang use whatev languag im use offer
everyon put control one folder view anoth get readi take bend asp mvc framework asp net mvc nanci wherev go see folder control modul folder view pavlovian reflex tidi thing away type deeper wisdom oper littl proof concept project store togeth file like open togeth consider comfort sinc file also like call shorter less brittl relat link pattern challeng mvc folder path longer automat correspond url path asp net mvc project templat rout enforc view control schism microsoft page introduc concept area read admiss unwieldi larg app becom artifici separ peopl object separ concern separ concern alreadi achiev separ sourc file concret gain seem take sourc file tight coupl send opposit end folder structur anyon els fight tip
would depend inject entit consid srp ask question stackoverflow earlier someon point previous post state inject depend entiti violat singl respons principl save click link give context entiti discuss would thought valid factori abstract valid type entiti exact srp pass valid concern anoth class also adher open close princip allow polymorph extend rather edit exist client code real valu entiti must requir differ type valid base valu happen item type id use obtain correct valid refer complet misunderstand solid princip edit question flag possibl duplic realli answer entiti class encapsul valid otherwis head anem domain model anti pattern territori specif ask depend control valid go solid princip
design pattern limit cross modul logic web applic shop cart cart item cart item ad user session must serializ checkout class take cart item save db special type cart item howev requir pre post process action exampl one cart item may event ticket mean purchas must actual generat save ticket question add logic one modul ticket generat complet unrel modul shop cart ensur shop cart unawar exist ticket generat thus avoid pollut domain exampl note backup plan howev organis stack made spaghetti may difficult ensur cart item checkout complet method call scenario present futur
mutual exclus decor design pattern exist know decor design pattern would someon go implement mutual exclus decor let say decor pattern implement weapon modifi game decor would exampl poison fire enchant ice enchant etc let say want weapon fire ice enchant would go implement logic decor pattern would need break pervert beyond recognit best idea get decor method interfac use new decor class ensur new decor violat restrict seem go decor principl know decor
consid good practic alway method return valu sorri terribl titl hope snippet give gist method class person def init self name self name name def set name self new name self name join upper new name split def main person foo set name foo bar method class person def init self name self name name def set name self new name return join upper new name split def main person foo name set name foo bar relat simpl exampl method achiev result question method would consid better practic readabl perform reason simpli person prefer
use zend form librari correct effect duplic work control view brief summari question ask guidanc deal zend form librari allow specifi construct form element control side render element view side essenti creat 2x amount work compar non zend form approach form element dealt exact view zend form thing control side use zend form build form element note code want show build object orient html element popul valu even attribut includ css attribut want render later insid control code programmat exhibit zend form control side creat checkbox checkbox new element checkbox construct checkbox gt set label construct checkbox gt set check true checkbox gt set attribut onclick return fals disabl checkbox set list price new element text listpric list price gt set label list price list price gt set valu list price gt set attribut disabl disabl list price gt set attribut style color black text align right list price gt set attribut size assembl form form new form form form gt add checkbox form gt add list price return render html return gt partial form phtml array form gt form view want show first view zf2 sometim take bulk actual html form render much sometim e could use gt form gt render form render entir form would abl place custom style element desir also element render singl row rare want case next code block go deeper semi autom form render abl add html element lt p gt lt p gt render process e use thing like open tag close tag form row method exhibit b zend form view side insid view templat custom html custom html one contain form row class render use gt form gt form form render complet form one go var zend view render php render var form zend form form form gt form gt lt style gt form row margin bottom 14px margin top 14px lt style gt lt fieldset gt lt php render lt form gt echo gt form gt open tag form loop form element pass formrow method render full element html foreach form element form content lt p class form row gt gt formrow element lt p gt echo form content render lt form gt echo gt form gt close tag gt lt fieldset gt deeper go code write desir custom style element would manual refer element view render individu element custom style use zend form lt label gt lt span gt lt gt form label form gt get list price gt lt span gt lt gt form input form gt get list price gt lt gt form element error form gt get list price gt lt div id custom form div element gt custom div would render insid form left zf2 auto pilot like previous exampl lt div gt lt label gt imagin form element essenti write code programmat defin form element control write code render view doubl work doubl code question bother often write code twice way control view deal form element could instead better place everyth view script like e exhibit c exampl use zend form render element exhibit full real code select exampl use zend form question summari zf2 let use zend form code creat form element control popul valu use various zend facil render element view depend detail want get e want custom style element quit bit work element feel like duplic deal element control view grant work easier e lt select gt lt input type radio gt element deal hack php html make sure select box display particular valu select zend take care great use nativ default zend form facil output whatev give work control moment want custom style addit work view sometim pretti much code much code element form view control bonus question problem zend form solv split control amp view code use correct 2x work justifi better someth like move zend form code control 2x code live view
use depend inject contain root applic normal use depend inject contain uniti c like exampl yesterday read articl correct depend inject di contain know exampl total bad depend inject someth like servic locat okay solv think constructor inject solv problem easili correct implement depend inject principl wire depend caller class resolv requir decenc class class exampl still use depend contain servic locat bad near everi articl read depend contain use applic root entri point correct mean class abil resolv depend servic locat fli like logger inject logger near everi class constructor avoid problem correct way feel realli bad take logger mayb class everi constructor use depend contain complex dependenci graph someon give exampl look like use depend contain root applic
far separ model code control code write mvc code control depend model case model act like databas access object use fqdn model class control var fqdn model privat model function set model model model gt model model function show page model set inject constructor data gt model gt get data return view model data first previous code iter model inject control told inject model invers control point control depend model like class control var array privat data control specif data function set data array data gt data data function show page data alreadi inject control control creat via factori method popul data return view model gt data control awar model model outsid control entir control factori control builder instead creat control invok model popul control control specif data want ask clear guidelin mvc follow far control depend model specif depend model even depend inject first code exampl still code construct insid control make awar model henc depend konw degre separ defin degre separ tighter coupl looser coupl model instanti insid control hardwir model inject insid control via constructor setter inject model instanti insid control factori data extract model pass control separ work help decid one best particular case clear guidelin
understand mvp pattern usag android current android project use sqlite db store collect structur data databas access content provid call loader updat ui look like app old school piec code sinc rx java becam frequent use standard popular mvp pattern increas provid reliabl applic read understood model data busi logic store present fetch data give view final view almost empti call present requir data display one featur present exist even view stop exist mean activ recreat e g screen rotat data still need load see guid present creat creat method activ mean new present alway creat miss someth
constructor ton paramet vs builder pattern well know class constructor mani paramet say probabl code smell need reconsid class satisfi srp build object depend paramet eventu end set paramet builder pattern imagin build person type object person info work info friend info interest info educ info alreadi good somehow set paramet right two case consid
use spring java project got question correct usag spring know peopl use di aggress alway use spring complet elimin usag word new product code hand know spring suit better integr exampl like state realli look reason tend agre approach project usag spring realli well defin peopl use integr other use everyth inject heard lot lectur clean code art unit test know order write good unit testabl code use di contain sinc unit test cover code level class bean make sens use di framework project effect mean follow extrem first approach question general rule thumb given fact want organ code easi unit testabl
stop use depend inject keep object debug printout small say larg object think entiti manag orm doctrin custom dao object object output requir use insid class object could transient job go scope alway matter object larg necessari part class howev byproduct exampl use di big terribl databas object use get data discard use di big terribl databas object becom perman resid small class despit inject inject stay issu sometim print r statement debug purpos object like di class print content small also content big terribl databas object big terribl databas object part small flood screen sometim even crash browser case doctrin entiti manag huge unwieldi without di get nice printout small class think cleaner pick nice small debug printout di use di suffer larg unwieldi debug printout question much prefer smaller printout mean discard use depend inject techniqu use someth els necessari evil di ing larg transient object
put user interfac domain model manipul logic transfer data view domain model start greenfield project asp net mvc use mvc pattern stack php rubi keep run problem place busi logic ui logic system interact remot system e web servic e mail read advantag view model mvc author state kind logic applic busi logic part model databas logic one non spoken layer mvc mani peopl creat separ layer invok busi layer model keep insid model user interact logic written insid control present logic present logic logic handl present ui exampl valu greater display green color basic part view data transform logic situat data us want display differ format exampl date birth want display age transform becom part view would add one addit kind logic user interfac domain model manipul logic transfer data view data method call domain model believ first kind logic defin area alreadi busi logic goe domain model databas logic goe repositori rm layer user interact logic goe control present logic goe view model data transform logic goe essenti class format data date number last kind logic must take data view manipul domain model accord seem place read two possibl servic layer applic although mention made web servic use servic object encapsul unit work object especi frustrat databas transact implement unit work pattern recent variat pattern augment databas transact actual manipul domain model action executor object action executor pattern command object command pattern creat new blog post easi insert post databas creat new user straight forward might want send welcom e mail insert user databas addit oper perform unit work complet small code exampl let say blog applic blog mani post blog post cannot exist without blog blog post must titl bodi publish date lead two domain class blog blog post prevent accident creat blog post object ad incorrect blog constructor blog post class mark intern forc add blog post blog object belong public class blog public blog string name name name post new list lt blog post gt public int id get intern set public string name get privat set public string descript get set privat list lt blog post gt post return read collect post public public enumer lt blog post gt post get return post creat new blog post object ensur attach proper blog public blog post add blog post string titl string bodi date time publish date blog post post new blog post titl bodi publish date post add post return post blog post class public class blog post constructor intern code outsid assembl must call blog add blog post creat new post intern blog post blog blog string titl string bodi date time publish date blog blog set titl bodi titl bodi publish date publish date public int id get intern set public string titl get privat set public string bodi get privat set public blog blog get privat set public date time publish date get privat set public int blog id get return blog id public bool publish get return publish date lt date time public bool unpublish get return publish public void publish date time new publish date publish date publish date public void set titl bodi string titl string bodi string null empti titl throw new argument null except titl string null empti bodi throw new argument null except bodi titl titl bodi bodi view model blog post might look like public class blog post form public blog post form public blog post form blog post post id post id titl post titl bodi post bodi publish date post publish date blog id post blog id requir public int id get set requir public string titl get set requir public string bodi get set requir public date time publish date get set requir public int blog id get set note publish date nullabl date time user might submit form without fill publish date furthermor properti public get set unlik domain model user might submit form without fill field someth need take data blog post form object find blog databas call add blog post blog repositori blog blog blog blog find model blog id blog post post blog add blog post model titl model bodi model publish date valu blog save blog put logic manipul blog blog post object base valu blog post form object especi work includ commit databas
generat id applic use databas generat one write small app manag coupl recip sql databas use data persist layer need kind id busi object repres recip use persist layer current call select last insert id databas insert new recip assign id project part time job use differ approach generat id applic insert use think current approach better generat int applic use id generat factor time etc faster lookup scale system multipl applic put insert last insert id call transact easili roll back someth goe wrong execut transact reason right someth im miss
sql design concept relationship referenti integr cascad scenario learn basic databas design concept basic crud oper referenti integr relationship etc year ago mess around databas use knowledg unoffici capac year learn c wpf find begin first offici databas design project design write wpf applic compani applic replac old foxpro visual foxpro conglomer current use new wpf applic use mvvm design pattern repositori pattern data access sql databas back end convert seven fox pro tabl new sql databas design custom custom multipl piec equip right foxpro custom tabl custom id field identifi field repeat throughout tabl includ test type tabl equip along equipnumb field primari key foreign key intend creat primari key tabl set standard one mani relationship custom equip tabl equip test type tabl want right also store custom primari id test type tabl know would make queri easier proper design work coupl shop seen databas design look like set relationship enforc referenti integr use sql think c vb code setup thing like cascad delet updat etc let sql server handl mainten nightmar isdelet field initi thought want incorpor undelet featur new program sure want go delet date delet field tabl record wpf app updat delet field true enter date record delet admin util real purg featur purg date delet ask troubl scenario good idea bad idea metadata store ds actual data one final question come meta data e test type name result code etc store actual meta data valu data record metadata id link back metadata tabl latter seem like would cumbersom queri becom mainten nightmar advantag store refer id back metadata tabl hope broad advic suggest truli appreci
condit creat object runtim use spring net coupl class project work regist event handler event logger either run base run time status check program startup initi factori class spring net config sinc return null factori method tri follow valid use dummi object pattern feel weird adjust intern class fit depend inject contain use unabl find anoth way also tag spring creat spring net tag
abus static method coupl month ago start work new project go code stroke amount static method use util method collect csv string collect lt e gt element also plenti busi logic kept ask guy respons rational behind said way escap spring tyranni goe someth around think process implement custom receipt creation method could servic guy said dislik class unnecessarili manag spring basic impos restrict client class must spring bean end everyth manag spring pretti much forc us work stateless object procedur way less state instead code could argu point avoid spring manag class possibl see benefit everyth static static method also stateless also oo would feel comfort someth claim static method extra benefit name easier read import static method need care action class obvious method free db call perform wise cheap good thing make clear potenti client need go code check easier write test feel someth complet right would like hear season develop thought question potenti pitfal way program
good practic access databas map object situat receiv messag 3rd parti messag use creat updat databas inform messag data updat de serial object form exact ident need use object map properti incom messag object result entiti trick properti must result object retriev databas set dao handl databas oper exampl java code public class car messag public string car type public string car owner type public string car owner id pubic class car entiti public string car type public person car owner question code map queri databas databas inform retriev done outsid map code word public class car mapper privat person dao person dao public car entiti map messag entiti car messag messag car entiti entiti new car entiti entiti car type messag car type entiti car owner person dao retriev person databas type id messag car owner id messag car owner id return entiti public class messag handler privat car mapper car mapper privat car dao car dao public void messag car messag messag car entiti car entiti car mapper map messag entiti messag car dao save car entiti public class car mapper public car entiti map messag entiti car messag messag car entiti entiti new car entiti entiti car type messag car type return entiti public class messag handler privat car mapper car mapper privat car dao car dao privat person dao person dao public void messag car messag messag car entiti car entiti car mapper map messag entiti messag car entiti car owner person dao retriev person databas messag car owner id messag car owner id car dao save car entiti person inclin second solut dao handler make error manag doubt would like hear pros con communiti
way take advantag portabl view model asp net microsoft support portabl take advantag mvvm pattern mean creat view model reusabl term differ client e univers app wpf silverlight xamarin os xamarin android larg depend view model applic one client work tradit mvvm pattern websit asid use client side mvvm guidanc primari worri thing logic data valid place view model want duplic control read thing mvvmp help solv busi logic data valid happen present instead view model control view model control use serv properti execut point present come thing data valid repeat code exampl decor first name requir attribut even though present know requir otherwis view notifi user bound textbox issu sure work control
mock third parti web servic work project creat wrapper librari use interact web servic provid client team reason librari interact servic across multipl project want creat singl librari interfac servic plan structur librari class abstract away web servic insert mock unit test howev read want use di need setup project use librari rest team would prefer need make mani chang exist project tri build exist project need use di one librari want exist project concern pass librari instanc web servic anoth thought use factori pattern creat instanc class would constructor regular paramet constructor paramet mock object first constructor call would use web servic second constructor call would use mock web servic factori implement describ feel like correct way want way want di way
data pipelin fallback callback refactor current design download static data mess deep class hierarchi callback hell want convert eleg straightforward design two exampl step take download static data json file exampl one download main manifest attempt load manifest file local disk fail download internet fail download bail error success return string data success deseri manifest file file manifest attempt load local disk success deseri return fail download internet download succeed return string data deseri return download fail bail error file deseri return result list exampl two download specif file ask manifest manag get specif version file manifest manag store memori return manifest manag store local attempt download download succeed deseri return download fail bail error current everi step method class hierarchi subclass overrid step accommod special case e g use manifest manag attempt donwload etc almost everi step use callback due natur download stuff internet end even overrid callback class hierarchi result complet unread mess first attempt refactor use either decor chain respons design pattern thing step requir co r moreov step use callback feel like pattern design use yet anoth problem step chain would transform one type data string anoth deseri object final idea would translat take download manifest yield file separ everyth end continu chain closest got mix decor co r class includ last part split download file individu also look intuit goal end someth like kinda read chain respons decor futur promis pipelin tri wrap head around part problem done basic collect manipul linq select etc someth like map reduc still new part quit sure callback fit except mayb futur promis fallback part could singl get file attempt everyth local case process alway use local data duplic logic read bunch pattern tri figur decid one best fit need glue togeth goal need use callback ideal configur fallback appropri type safe probabl use generic step relat interchang e g www reader local reader love hear thought recommend materi read would great thank p apart actual solv problem intent learn implement scratch rather avoid use exist librari p p solut need run uniti use custom mono runtim async await option use librari might introduc issu compil mobil devic
visitor pattern violat liskov substitut principl use visitor pattern observ follow visitor weak depend concret type visit method concret element paramet method correspond concret element element supertyp concret type weak depend visitor accept method visitor paramet mean element supertyp transit depend toward concret element supertyp know subtyp violat lsp purpos decid behavior naiv understand principl
logic valu view control applic built use mvc framework argument sake php yii2 question regard carri logic generat valu inject exampl index view us view instanc us page display rout us hit browser call action us method site control simpli call method control render templat caus templat php file pars output fine content templat dynam way static html content howev dynam content understand mvc comput control pass render method truli mvc correct hard fast rule exampl page like output number post class method post get number post could call view direct output call control assign variabl variabl inject view valu variabl output first method go mvc pattern homepag like output one two differ messag depend log status current user user log generic welcom messag log call method generat user specif content moment handl view follow manner could case handl mvc manner tl dr logic control pass view
merit di abstract factori implement review write brand new system tri stay true solid principl specif interfac depend inject stick close microsoft stack use c uniti contain relat immatur shop far solid concept go tri keep thing simpl possibl everyon includ style prefer use constructor accept runtim paramet valid field object might need front make simpl constructor base inject difficult led abstract factori path also depend need list interfac someth uniti eleg support abstract factori seem right start lofti idea generic abstract factori honest difficult time figur get contain registr right hard go much harder explain sell team step back came pattern interfac correspond factori interfac depend contain registr becom super simpl ever need chang depend implement under interfac minim ad step implement correspond factori well find simpl understand explain depend chang implement line code factori seem like small price pay oppos modifi everi spot system type get new depend creep interfac factori feel like overkil worri pushback sure merit justifi pattern sure right thought great appreci
depend inject class instanti practic limit depend invers good invers depend good simplifi unit test reduc coupl allow softwar compon use interchang keep instanti logic given object fewer place prevent repetit code reason avoid instanti object within class prefer instead pass factori class depend howev wonder excess type object valu object except valu object definit simpl object simpl construct experi rare complic instanti logic unit test compromis valu object regard data type coupl concern class must reli data type descript caveat see concern collect object special associ case collect object opinion collect object like valu object requir real instanti effect specialis form array valu object exampl concern general avoid type coupl may well want chang packag provid data type use exampl may use valu object provid dixon chang provid staedtler type refactor could expens question instanti valu amp collect object factori inject depend instanti class
review refer code review sent code job applic got follow review regard project structur physic separ absent logic separ present best practic thing seem separ order need solut regard code convent white space inconsist outsid convent disregard immut explicit referr self etc regard readm document practic readm best practic regard usag assumpt explan solut setup regard maintain extens scalabl perform architectur sign architectur app describ massiv view control consum servic bunch helper class regard dri solid principl duplic code sever place term solid principl view control hold sever respons god observ regard use packag manag depend cocoapod use error handl log concern error handl log degre someon give detail explan issu present review case someon curious respons challeng github link sorri long text think help peopl share experi
mvp pattern view instanti model object base ui content pass content paramet present use mvp pattern android app develop basic element add user view new user ad add user present user info pojo user info manag busin logic storag manag question press add button add user view get content textview instanti new user info pass present add user view get text view content pass add user present fact instanti user info pass user info manag
use status field reli calcul bit long overal question status field tabl calcul status memori inform record pro con ps gray area alert realli databas design question background take exampl subscript e subscript onlin servic exampl could databas record like initi record say record start subscript observ status tell us trial current date today mar today trial start trial end confirm status tell us truth b presum scenario let us say time pass may date outsid rang trial start trial end trial period howev due error system background job fail run exampl status field still set trial observ status field calcul trial period current date trial end agre current date later trial end mismatch listen status trial start trial end rang avoid problem consid avoid use status field think wise skip status field
use mvp pattern embed system defin architectur embed system provid lcd touch screen interact user describ problem use wash machin provid lcd touch screen exampl system user action lcd mere paramet chang like wash temperatur cycl type etc user action lcd result trigger particular action exampl press start button trigger begin wash cycl process defin softwar architectur evalu possibl use mvp pattern implement interact touch lcd screen wash cycl assumpt view repres touch lcd screen popul various graphic widget clear map present model particular circumst understand model comprehend behaviour data correct believ case model map wash cycl data wash cycl logic wherea present role coordin lcd touch screen event start button press model interpret correct
model better place set http status code mvc usual control set whatev need sent back client view includ http status code e g problem way control method becom litter els set differ http status code encount problem someon model creat get return model control know one creat fetch store set http status code code becom duplic control would better make model pass http status code back control e g basic model set last status appropri http status code one success client error server error code control get status code good better way common problem logic web applic know http status code deeper control realli like see exampl multipl possibl http status code return control someth like put request one bad request conflict found creat content
manag db context multi user applic put togeth first line busi app use wpf mvvm ef6 db first mssql realis multipl user could see other chang use one dbcontext keep open read load articl dbcontext whether dis connect whether eager lazi load say depend question manag dbcontext common scenario user open datagrid fetch list employe filter employe type edit row1 save chang select row2 instant chang show edit anoth user made select row1 new row appear anoth user ad sure common use case everyon done time time could build ms access minut
encapsul complex queri tri ask question first stak overflow concret manner point realiz rephras general term howev still review origin question want concret detail specif use case assum relat complex report interfac sake simplic assum present result data tabular form display aggreg map exist domain object user select start end date calendar limit report specif criteria order result specif column option request process sever layer code process end singl sql queri contain filter condit sort direct join statement order aggreg data sever tabl databas end use orm n hibern handl persist coerc implement strict entiti domain object clear work fine alreadi end toward user view present stuff user control interpret data also clear proper handl question happen layer recommend approach toward proper encapsul intuit approach allow busi logic bl call various queri helper gradual build various part queri object depend user input start rais red flag end handl joi ns condit bl obvious kilter agre fr ric answer previous question stack overflow move code build queri deeper closer persist layer keep bl free knowledg model certain cleaner approach could easili defin data transfer object dto carri databas result upward persist level toward control ultim view layer howev user fill lot option input mean also need auxiliari class carri data way around control layer servic level bl live way queri helper persist layer know call let call qt os queri transfer object queri sens user queri sens sql persist level would therefor interpret qt os sql would execut sql would convert result set dt os bubbl back problem approach ad coupl intermediari class data transport handl would differ layer still need add joi ns condit add criteria condit add sort direct condit put extra effort fill qt os condit control well futur refactor easier chang qto structur would affect control model layer almost guarante relev chang databas structur would result chang qt os dt os well experi good way design engin complex concern address design use suggest benefit see counterbal ad complex
angular js vs modern mvc framework might wrong thing recent though modern framework mvc asp net mvc cake php java spring etc logic clear separ model view control specif handl present layer asp net mvc razor view cake php ctp view java spring js ps come angular js break vision mvc framework general would ever need angular js mvc architectur client side sinc mvc robust technolog one list could actual job think one use case let rest api need consum angular js would great idea use question web becom anoth platform consum api like os android case noth consum api talk notif locat servic etc say mvc framework die
separ data retriev view seek good argument good idea emb data retriev code view exampl somewhat theoret understand thing like compartment individu code construct respect box creat class individu view persist storag benefici code place also benefici see everyth right one place data pull place select box render see local code creat select box one place good thing proper separ e refactor code mean creat model control data storag view construct boilerpl code goe along liter class must come togeth execut function
repositori pattern overkil modern ms ef n hibern better abstract recent read lot argument use repositori pattern power orm like entiti framework incorpor repositori like function along unit work function well anoth argument use pattern situat like unit test repositori pattern leaki abstract sinc generic implement leverag queryabl argument use repositori pattern make sens altern method abstract suggest often confus appear overkil problem jimmi bogard solut seem mix blow abstract away also introduc architectur anoth exampl repositori unnecessarili use architectur anoth found clear replac altern over complex repositori pattern approach architect
repositori pattern depend inject without orm want implement repositori pattern old legaci project alreadi research found without orm complet accept method like get special properti skip creation generic repositori current setup problem realli like interfac class abl inject busi class test reduc coupl feel wrong foo repositori interfac method plus realli know would make factori repositori caller would know special method insid repositori want ps access data current use ole db switch orm option rest team know use se question alreadi brows
mvp pattern present must control call flow model method present room present model room model room model method like void creat room room data room data list lt user gt user void add user room int room id list lt user gt user void join room int room id creat room implement user want creat room abstract view present method call present call creat room method room model question would good practic make present model implement creat room method e present creat room model add user room join room method way abl call view method e g show toast load status call add user room join room method
mvc architectur generat view model display everi page build greenfield applic three layer data access domain model present present layer vmvc cleanest applic ever built far everyth fallen place architectur well howev one fli soup aggrav code ocd deal basic inform pass around everi page exampl name current log user reput point whatev applic clipboard say get top bar view model pass common layout view layout cshtml domain model user object current user referenc app context object work well author ect turn view model get layout view mvc way put stuff everi singl view model seem bit ridicul app context generat view model seem realli realli dirti sorri question littl petti realli like see peopl sort eleg solut miss especi applic come togeth clean far clarif architectur data access repositori refer domain model present refer data access domain model control make call repositori return domain model domain model map view model pass view follow one view model view rule
reason use di framework standalon project research technolog new pet project analyz well establish project sourc code notic hard use depend inject framework instanc hazelcast cassandra seem use big name could find seem use one elasticsearch wonder type framework use big standalon server project perform reason avoid coupl code particular framework use framework becom danger
depend inject ioc contain know implement use use io c contain like io c contain choos implement ship servic instanti call replac equival code assum product locat price servic etc call constructor paramet interfac concret class io c contain know implement product locat price servic etc instanti io c contain smart enough use config provid depend requir
mani inject accept one class use depend inject use uniti c depend inject question applic languag framework use depend inject tri follow solid principl therefor got lot abstract wonder best practic mani inject one class inject exampl repositori inject hard read anoth develop inject follow respons db context factori creat context databas mapper map entiti domain model clock abstract date time help unit test perform factori measur execut time specif method log log4net log collect wrapper factori creat collect extend enumer queri filter factori generat queri base input queri db ident helper retriev log user fault factori creat differ fault except use wcf realli dissapoint deleg respons start get worri readabl question limit mani inject class avoid mani inject limit readabl actual improv
class prepar string http request php control level librari web follow want creat new class prepar string insert pass control pass model insert gt request gt get param id call point http request check valu id key retriev request header want cleans string want process testabl control current mockabl requir figur servic categori class could offer servic howev mention later requir across control need creat new class escap string remov special charact remov html sound like multipl respons wonder anybodi could suggest suitabl way achiev straight difficulti even name class es servic need usabl across control prefer keep class es web namespac
use factori method design pattern correct creation pattern use studi creation design pattern past week common use case keep come figur pattern fit bill simplifi scenario differ type notif e g email sms text messag etc want client know type creat creat e client know anyth implement notif attempt factori method approach would use client like know factori method approach suppos involv one method take e g enumer order determin type return object seen refer use approach multipl special method call wrong pattern wrong way e use differ pattern also consid use depend inject di contain understand pattern make test easier altern reorgan various factori design pattern ultim would issu believ di contain figur take complex input decid sub class output mayb need combin factori builder know builder use output singl type contrast factori output certain deriv type interfac implement fact multipl method involv creat certain special instanc seem like builder help would much appreci
keep redirect method control control repositori question line instead renum posit within control remov question defer execut direct model repositori layer call control function defer model repositori layer perhap realli subtl question note intent save extra function call align program philosophi exampl make argument control cogniz action public method control may make call repositori intern action mayb call repositori direct without make separ method call control make sens goal concern legaci code start control code most storag relat move repositori class end control look said function control sole purpos call anoth function indirect code clutter cognit screen space total complet elimin call repositori function direct remov control redirect function entir ask right thing tri figur question
visitor pattern replac object program translat dsl c use visitor pattern intermedi represent quit often need replac current process node one differ type e g replac unresolv type type definit good pattern tri store pointer place current object referenc massiv ugli keep standard visitor pattern visitor keep state member variabl visit method return valu difficulti fair error prone forget store pointer descend tree may overwrit wrong refer return replac object visit method next layer respons replac current object newli return object delet repres return null pointer chang repres return old object signific easier get right get diagnost accident drop return code think still somewhat ugli better option
observ pattern suitabl observ independ class car properti int price boolean stock also hold list abstract class state empti class state appli car repres class class upgrad extend state class ship extend state car hold number state state follow rule upgrad add price state appli car ship least ship state list stock set fals exampl start price stock true think observ pattern add remov oper notifi observ someth like mind obey rule pose obvious work ship remov someth check anoth state set stock fals remov ship stock true upgrad increas price call ad constant default valu attempt recalcul base mean tri impos pattern tri find solut requir note practic car contain mani properti mani state appli manner thought way sinc observ receiv car look observ current regist make chang base know smart entangl observ like observ ad remov car recalcul howev recalcul done observ regardless one ad remov extern manag class call add remov method recalcul good design pattern implement describ behavior would work
depend inject use clean code robert martin robert martin clean code encount follow method p page earlier p book advoc use depend inject di order structur program better facilit test isol would exampl case depend inject use order test given class isol e without also test argument marshal class could factori object would creat appropri argument marshal need would consist di recommend also facilit test mock doubl perhap misunderstand someth depend inject appli good idea
use mvc style best place put sql function wonder best practic mvc model view control pattern involv separ compon program model data manipul model display result user usual ui way function take model data insert databas exampl object call game board also want abil insert state board sql databas storag histor purpos class hold queri function would call function would sort function make sens make method game board part control class exampl got game board class sql datasourc sql helper class call model sql class method take care queri android also activ class event take place call control view take place via code bind activ xml said normal instanti game board activ class right also call queri function class accept game board argument
would best techniqu websit local mvc current work big websit publish almost domain differ languag question would best way local internation interest program techniqu found far store liter resourc file store liter databas store liter client side concern proper found anyth big site local everi comment welcom
mvc subset client server architectur say mvc subsystem subset sub architectur client server architectur
mvp supervis control view updat model read mvp specif supervis control one thing difficulti wrap head around view interact model understand present updat model view read model present also updat view interfac martin fowler articl seem show howev articl blog show view updat model direct know pattern differ implement view updat model seem like much say instanc person class contain name phone number view display name number submit button chang name number person submit button click would expect updat handl present view howev articl referenc propos view direct updat model view ever updat model handl present edit code msdn articl
constructor inject vs field inject know topic discuss lot alreadi want get one best way use field inject coupl year recent discov mani peopl prefer constructor inject collabor class explicit set creat instanc class one argument use constructor inject make think mani class actual depend look class one project see mani depend notic class mine depend provid via constructor get realli ugli constructor make think may depend much think howev think make sens case split class smaller one case servic class one method creat contract take input form make contract provid data form dropdown choos certain code type contract one correspond separ entiti store anoth databas tabl later servic want creat contract use xyz repositori class look entiti id one select form sure could chang design abl remov depend idea
model return data direct client control instead disclaim first time use node creat rest api tri mvc server side statist speak probabl someth wrong work creat video share platform use univers go singl page applic client side rout plan make ajax request rest api crud function basic structur go far control receiv rout request call model function interact db exampl control cours js model cours js less right way forse run issu road gut say model code pass queri result back control rather direct back client correct would go tell would differ
solid principl generat mani object file solid stand depend invers exampl blacksmith class depend hammer creat hammer extern pass blacksmith rather blacksmith creat hammer make easi give blacksmith delux magic hammer instead without modifi behavior make sens depend defin instanti code depend defin data instead exampl json xml schema like hand war cart blueprint xml blacksmith read use inform creat wheel axl cabin etc put togeth war cart seem like creat tight coupl blacksmith various compon satisfi solid need separ depend somehow would need wheel factori axl factori cabin factori look war cart blueprint xml build compon respons pass blacksmith assembl depend wheel factori axl factori would need communic accomplish respect task exampl wheel might central hole diamet blueprint specifi diamet axl specif dimens cabin determin complex calcul base length axl number wheel seem like would much simpler let blacksmith creat assembl compon especi one ever go use
without use singleton good way manag global resourc unlik mani librari sdl open gl design provid global resourc access time class justif written c meant readili cross platform design fast object orient though global state suppos bad idea normal add dramat number input everi function code let say work c object orient languag one librari know function need point good idea encapsul need x class say everi time need work librari use x exampl sdl seem like good idea class call sdl init constructor clean everyth destructor manag class allow creat window render sdl activ good caus singleton perhap rather googl test blog give good exampl case singleton realli question encapsul part librari good idea pure mad approach manag global resourc without singleton edit paul k answer give realli good concis introduct depend inject remov need singleton howev still unclear deal state unfortun made global librari open gl sdl extens global state provid librari easili pass refer unless collect togeth manag wrapper class even done client still use librari direct
promot use builder pattern team codebas old new programm like quick learn way done sake uniform think start somewher took upon refactor data holder class remov setter method made field final take final good axiomat setter use constructor turn side effect introduc builder class builder class necessari constructor prompt refactor first place span line code lot paramet luck would team mate mine work anoth modul happen need setter valu requir becam avail differ point flow thus code look like argu use builder instead get rid setter allow field remain immut heard rant immut also builder allow object creation transact sketch follow pseudocod except fire bar corrupt data would avoid builder teammat retort except question never fire fair enough particular area code believ miss forest tree compromis revert old solut name use constructor paramet set everyth setter need rational solut follow kiss principl mine violat new compani less month fulli awar lost one question anoth argument use builder instead old way chang propos even realli worth realli tip better present argument advoc tri someth new
save differ object result random chang keep state object follow form state chang mani time run program serv record event later play forward backward similar save chess posit current save chain state file size get larg fast sinc whole state effect go deep copi one state next properti remain want save chang state sure take less memori space calcul case general solut suggest want save action command lead one state next chess analog equival save move play problem case random effect action effect recalcul time action appli caus state differ time action appli one figur need save result action action appli num1 random number save random number save differ object result random chang
advic switch mvc webform web design vs ui design last two year taken web applic develop group focus first two year build team get technolog updat place fix custom pain point begin move forward recent start build new applic mvc find junior mid level develop struggl build interfac sinc drag drop given deep pool true html talent tri determin need ui design web design creat interfac applic also want design bore tear either job someth typic situat better bring develop speed html css train
algorithm implement qos proxi situat make proxi moment run laptop deal http request incom client moment one client e chrome browser laptop work without troubl best effort proxi e give prioriti type traffic stream smtp exampl thought three class prioriti minimum medium maximum sinc traffic two direct lan gt proxi gt wan wan gt proxi gt lan thought six queue prioriti like fifo natur queue caus starvat packet pseudocod c like algorithm made deal incom packet lan wan post part deal lan gt proxi gt wan sinc wan gt proxi gt lan reason instead queue remot x use queue local x smart observ might object insert first packet issu first time algorithm call queue empti everi packet pass push first packet prioriti queue break switch statement order unlock other sound stupid reason thus algorithm wrong use wrong data structur
code structur third parti framework api alway return ok issu
mvc databas search logic view model special note ask similar question stack overflow sinc decid problem solv design standpoint rather implement standpoint remov lot code detail origin problem well concern individu bit logic go think close question stack overflow also welcom advic critic would like comment decis help futur thank would like make sure code proper organ design accord follow paradigm pattern model view control rail convent configur skinni control fat model list order think import issu use rail develop current project stand applic logic control model contain inform defin relationship tabl read sever articl particular one one start move logic control model howev decid whether move search logic explain depth later control model even read post articl like mvc think model vs control separ concern mani list scenario part websit allow user search thing let call thing neat object user know exact result match input similar way mani search work take tube exampl enter search input video shown match input video probabl input titl may also see video whose titl exact match input input probabl test video descript tag author result may influenc recent watch video search well mani factor point user know exact video found happi work scenario happen develop design team decid match neat object user input poor full stack develop given job implement decid organ logic control model import focus detail particular case abl talk concret exampl describ detail view view consist two page user input string search page view result match view page control control serv view need make list result avail view page model model least defin relationship neat object tabl databas databas databas store id descript address date creat neat object tabl match test neat object match search string search string contain within descript address ignor case lead trail whitespac definit guarante perman sever thing may chang definit may need test attribut address descript perhap databas guy add new import attribut ui ux guy decid user abl search id cours opposit scenario would mean need remov attribut list attribut test mani situat could chang definit match could even add remov logic perhap decid test first word descript attribut perhap longer ignor case sampl implement search function easili implement either neat object model control serv view want get caught code want includ step process outlin includ code sampl individu part either implement may referenc anyon respond question need search logic control search logic model concern see pros con model method control method thing still unsur read articl referenc sever time like logic model defin function return recent ad peopl control articl implement logic determin person recent ad make sens control depend data might complet differ implement recenc test messag recent peopl might includ peopl ad week recent messag messag sent today test chang feel control abl say peopl find recent messag find recent know got correct result also abl say peopl find time peopl find time right need handl sever case put togeth one method right author articl also point someth brought lot confus concern said could alter find recent method take paramet specifi recent like find recent ignor fact find alreadi defin rail make sens mani differ argument account recent recent recent last month last year realli old point becom search function right back problem post biggest concern question think match logic belong model certain specif attribut use test attribut differ depend data might differ attribut differ tabl attribut definit defin control sinc data depend control know control depend model way around model must defin attribut even rest logic control model defin attribut use search also defin entir search function control abl find match user input neat object get match search string control handl search logic still need send user input model clean send remov lead trail whitespac downcas string send exact input got user model concern data one justifi pass user input especi model clean input even use search match process simpler would code place chang exampl search simpler attribut test address unlik chang would handl search control complic make advanc search featur user decid attribut includ search also control factor would lot user input defin argument search function would much logic user input place model conclus alway sure put logic right place mvc guidelin follow find gray area unsur logic belong import least answer search logic belong control model
possibl dri paus mechan background current work architectur futur softwar design design one long run task hour long thousand sequenti call various librari current method paus long run task would first like discuss ask question flow control paus work follow user oper click paus button manual reset event set run task describ first paragraph observ manual reset event stop track task might sequenti look thing paus methodolog involv follow wrap librari method order observ manual reset event follow note manual reset event adher timeout addit wrap librari method look like henc dri thing problem use method wrap librari method almost becom dri problem wrap everi singl method come along question way thing work huge issu fact creat illus concurr howev tri stream line somehow
put peripher use case android use clean architectur tri work clean architectur bob martin respect android applic seem like use case encapsul domain layer belong outer peripher layer exampl open imag take pictur turn wifi put view present someth els come term peripher use case peripher interactor still doubt
get data databas mvc model creat applic larg databas draw inform student registr system exact databas creat microsoft sql server matter plan implement mvc pattern unsur handl access databas current understand work pleas correct better way model exampl user contain attribut busi logic need view edit data tabl get relev data put model chang save chang databas exampl need chang student name search databas student id number instanti new user object would chang name properti user object run save method upload data databas guess two question first understand mvc pattern work data driven applic second code get data databas instanti model go go control said model go static class constructor model
creat client side databas store consum web servic develop android applic current first develop ui compon mean time web api develop complet web ap requir web api done design databas accord field receiv may lead problem alreadi creat creat model dt os need ui compon get realli hard pars receiv respons web ap map field local databas question best practic thing creat databas schema first use databas schema client server design dt os accord better way sort thing
decoupl ui state written new shini todo servic favorit front end back end framework minim coupl return data standard format like json protobuf leav client interpret display way feel suitabl user select multipl item select show differ ui compar normal item done ad select field object soon receiv client set initi fals later would need sync applic state server want send origin data select attribut henc send back server must remov select attribut object sinc javascript current choic deal front end code seem pretti trivial add remov field fli suppos need add state front end need augment origin model need know correct approach deal situat
would merit disadvantag oop languag forc generat pattern oop languag program defin static method generat object differ paramet includ subclass pre generat object common use also constructor take paramet even though constructor forc synchron return singl instanc object immedi languag permit privat constructor wish creat object extern generat instanc class might defin like anoth class would request like could class subclass construct would becom construct take argument object make base object rather alloc new spot heap memori construct defin new object extens would probabl come kind marker place method return object guarante object exist start method could thus doubl overlaid would definit exist perhap someth like public static new foo make place one thing see benefit constructor object follow rule method follow good name pattern program convent overcom limit constructor yet construct base allow inherit instanc creat object asynchron still subclass think add desir qualiti oop program make robust less robust
design mvc java fx respect perform non gui task work huge applic got serious troubl regard perform softwar want bother mani detail short one jvm run gui java fx anoth jvm run logic two jv ms communic eachoth socket fast transmiss http logic jvm period 10s data analysi creat structur contain number imag rgb gui need visual data speed display imag current gui request time second data logic jvm http wherea data sent socket connect circumst came idea abl attach multipl gui one logic time show furthermor perform realli bad soon data main due imag get bigger 250mb seem bottleneck put imag data bytebuff send state probabl ever multipl gui use one jvm speak current solut set prioriti applic window logic realli need run smooth given high prioriti gui applic also run smooth nobodi care would skip frame two gui view properti simplic simpl object properti logic alter e java fx text field bound bidirect simpl string properti logic part updat string insid logic alter textfield vice versa gui hope get feel situat final like state question best design problem thank much advanc
da os separ packag encapsul servic question understand pros amp con keep dao servic separ packag consum servic consid micro servic architectur let say differ servic constitut system databas sql amazon dynamo db servic communic appear way design data access layer design separ packag encapsul dao tabl servic add depend dal talk databas would result chang restrict packag would result deploy micro servic sinc consum dal integr dao within servic itelf would lead relev servic chang case databas layer chang occur except thing like architectur system wide chang approach seem fine could guy share input one pick scenario pros con appproach
recommend approach initi command two command view model one initi use lazi load use eager load approach good go use lazi load eager view model view use within os app develop use xamrian os mvvm cross
abstract factori nest di accept still tri get experi di let illustr situat give advic whether use di abstract factori correct need creat model runtim go use di inject model factori object concret implement model depend data manag fine inject data manag factori model factori implement moreov sinc data manag implement depend repositori inject repositori factori data manag implement kind abstract factori chain accept design warn go wrong path exampl see onlin basic factori creat object paramet depend none gut tell go either way write ton extra code ad complex etc someth feel right hand gain abil trade implement along chain good project time frame get prototyp front custom custom see work time flesh implement refin use method simpli trade messi ineffici implement refin thorough implement move forward project question good use abstract factori di wrong explain
help write generic code php mvc project use code ignit two model b class contain four function insert delet updat view implement almost friend suggest put generic version four function insid util class two model access function exampl generic implement insert howev introduc data direct program recent found php array function think make better would like class go creat global array hold four code ignit crud function specif class key insert add delet updat rather creat four function crud oper go creat one util function one general execut function class note extrem new php php code might work implement direct yet thing complet sure good idea done might awar drawback prefer way array function stick implement four crud function
valu depend inject mvc skinni control depend inject often recommend mvc project easi implement pattern add host potenti benefit inde actual come bundl default mvc project visual studio read around mvc howev also see lot peopl recommend use skinni control word control littl act bridg display engin busi logic process work instead done model helper class use skinni control need di sure case handl thing like repositori file helper done outsid control put anoth way ask got skinni control need control extern depend depend need mock test need di inde seen argument unit test skinni control almost logic valu adopt approach
use cqrs es build slot machin app app build simpl slot machin app user deposit money buy credit use credit play teh slot machin withdrawl earn get event sourc make sens sinc need proof transact must audit regulatori bodi immut singl sourc truth think use datom howev clear cqrs ddd would need troubl justifi increas complex project use ddd instead singl user tabl credit money balanc column get ahead appli ddd use cqrs pattern sure would benefit separ command queri simpl slot machin game seem limit featur exchang money credit play game withdraw win definit road might ad constraint depend app deploy countri might addit regulatori process need ad build crud app record log everyth happen must use es cqrs ddd even need datom need second opinion
avoid crazi amount interfac ui depend inject problem recent read lot singleton bad depend inject understand use interfac better implement part callback interfac di adher interfac segreg principl end quit mess depend ui parent basic children combin hierarchi ui element bloat constructor way top ui hierarchi applic class hold info current select refer 3d model need reflect chang applic class implement interfac roundabout fifth product interfac come current work singleton hold current select ui element function updat function trickl ui tree ui element access current select singleton need code seem cleaner way question singleton mayb appropri project fundament flaw think implement di make cumbersom addit info project type shop basket apart bell whistl size man month code ui mainten run updat mayb version later environ use c uniti use entiti compon system almost case user interact trigger sever action exampl user select item ui part show item descript need updat also need get info 3d model order calcul price ui overal total price need updat correspond function class 3d model need call order display chang
net window form app custom mvc custom user control view implement non anim logic strong link two question control know view amp model vice versa well one particular one part answer third one mention way window form user control class creat data class instanc made wonder make window form app mvc architectur microsoft built mvc framework window form user control class either know anyth except basic draw instanc two specif case come mind data class pass around way view control organ thing simplifi thing like method interfac say button click form control handl sort event direct event listen event listen intern view simpli call callback set control noth els either lean toward control handl event general question whether view anyth accord instanti except present user two case exemplifi quit abl take advic given question complet follow appli question updat answer recent question pretti heavili link first point
set data multi level object may use java reflect want possibl use java reflect set data run time problem figur get sub class inform use part reflect want use reflect keep generic function futur flexibl java structur class amp field field data type bracket follow bullet setter getter method field present sampl represent see multipl level object structur restaur top object within restaur object employe menu within menu object ingredi object requir get class name field method name set valu e g get someth like class restaur amp field method set restaur citi valu set citi may also get class menu amp field method set menu item let say class ingredi amp field method set ingredi name respect valu provid sampl java code tri test could see java code work fine set valu restaur object howev would like set data anoth object actual two level restaur r estaur gt menu gt ingredi valu object2 want use instanc would need verifi everi object current structur level much deeper someth like go upto level total class object count upto look solut match name class set respect valu get valu object3 respet class amp field sent futur solut work open solut well reflect java code
good formal pattern manag state mvvm start learn redux react web world learn realiz pain state manag desktop world wpf mvvm style architectur use caliburn specif bind view view model redux simpl principl dictat state manag make ui updat event handl state chang much predict principl singl sourc truth mutabl state store singl share object state read cannot modifi compon code typic happen wpf state modifi pure function wpf mvvm architectur allow build interact view quick debug issu various viewmodel event chang state nightmar exampl event fire chang view tri set default tab data finish load asynchron web servic tab exist yet noth happen spent hour draw diagram tri understand complex interact inter relat view model compon updat one anoth understand redux aim solv state unpredict someth similar architectur pattern would fit nice wpf help manag state better sure well redux principl would work net tri yet perhap somebodi experi give advic
databas design processor vs inconsist wonder tabl store let say user transact need fetch user current balanc would go use sum like select sum valu transact seem redund php sql world user refresh page time second wish user use servic year hundr thousand transact go calcul everi time page request hand creat kind cach anoth tabl call someth like balanc store current balanc user updat trigger transact tabl seem much ration look like would wast resourc howev broken code sens start tingl bet someth go wrong eventu set transact get lost record without affect balanc tabl someth anyth realli one would better approach
mvvm approach mahapp metro dialog want use show messag async method first sight obvious way view model bind even though alreadi certain number answer exampl classic standard status text block would usual properti view model think abstract viewpoint would make sens keep alway make text block visibl hidden believ way messag shown view word go manag ui event handler critic conceptu reason fine well reserv light attach properti simpl text bind could cleaner replac text box unless realli part view design
export file code belong mvc implement design main html mvc websit set base view layout php contain html header footer code view car view php extend class one method class car view gt display would like add abil output spreadsheet car data would exact data use display page sinc car view extend html foundat layout class think put export code file creat new view call export view php previous told view base object name action sinc export action sound quit right
name keep multipl copi variabl bad practic softwar engin singl piec data held valu multipl place exampl fps locat player could held ai class input class main class graphic engin multipl problem aris synchron issu increas code complex lock variabl till class updat increas code complex provid setter class becom vast difficult multipl input point make sure input output updat time code chang obvious best practic would singl class contain inform player would referenc cop class want talk bad practic pretti sure name seem find anyth heard term data duplic data mirror use sure correct anyon call term
servic locat anti pattern altern use uniti io c c guess question realli realli limit uniti c io c general tri follow solid principl mean got depend two concret class need creat new instanc model best way usual use factori creat instanc altern wonder better simpl factori servic locat factori func factori depend class foo factori use better option exampl conceptu level tri find balanc solid maintain code servic locat actual exampl use factori sometim need creat new model various scenario necessari eg mapper mapper longer lifetim object map exampl factori usag
ambient depend inject static servic locat googl found debat whether constructor inject properti field inject better yet anoth altern strike benefici program environ someth call call context inform implicit pass caller calle sometim context simpli thread local storag sometim case cross thread asynchron program complex case context store inform cultur user web applic current request type inform rare carri around explicit access global method access said context use case depend inject mean static global form servic locat exampl c usag would call function depend set chang calle like think pattern superior type depend inject case depend uniform requir larg part larger call subtre exampl repositori logger configur interfac rare requir singl function also subsequ nest call especi contructor inject lead clutter complet avoid function call function get depend automat also chang depend case actual necessari want address concern think read somewher question would anyon think other depend sl strike fundamentalist object softwar also depend integ string list without thing proper abstract away pass around proper respect pure church depend inject clear low level thing one need depend direct hope well design ideal resid runtim librari respect languag may still lesser evil requir depend explicit realli explicit form di contructor inject pass depend directi method call unfortun also verbos unflex way depend ad later chang constructor method signatur requir refactor potenti sever layer function call noth pass object verbatim static languag tedious dynam one even sourc bug furthermor depend requir respect featur fail whenev use anyway make like miss depend bug accident go product ideal yes requir depend explicit alway tradeoff realli one think constructor inject folk prioriti straight one reli magic call context thread static magic mere advanc perhap technic cover typic program cours univers also implement hidden behind static servic locat user know work use question object legitim real world reason di static global servic locat would bad
observ design pattern complic object tri current get good grasp observ design pattern stuck wonder one specif issu exampl abl find implement rather basic term specif design state instanc subject class observ singl state variabl report class observ question happen class repres larg complex data structur let say multipl variabl singl class implement observ setup someth watch chang specif variabl observ class need notifi everi time someth chang relat interest write updat method type variabl could potenti observ write observ everi singl variabl class could observ clariti matter appreci
composit happen matter feel like abl regist compon applic composit root contain matter current state environ even case environ lack part configur requir proper work compon current sometim run code exampl use castl windsor depend valu function allow custom code contain suppli constructor valu custom code fail applic start fail composit phase even class initi kick feel like everi failur composit phase io c framework concern like circular depend detect fact symptom improp separ concern issu tempt refactor usag depend valu configur compon still may fail later hand fail fast rule would suggest nice system even start function without import environment prerequisit fulfil would suggest edit code exampl unit test like fail need mock configur compos two one thing
protect event sourc aggreg user generat event storm let say build social web app aggreg root f e blog post could like unlik consid malici user wrote script perform endless amount like unlik aggreg mayb hijack multipl user account parallel would mean aggreg would requir lot event order rebuilt event log would contain thousand useless event collaps project one state chang pattern event sourc collaps event respect anti event order reduc amount data
java script templat trick treat recent look use java script templat wonder legibl use approach understand java script templat common much accept form templat see benefit use techniqu question stem curios store html text insid script break away script actual feel wrong java script origin design use templat techniqu browser understand type script trick peopl discov began use html text holder templat purpos also read unknown script process script left text block compat reason newer browser support addit languag without older browser break mayb reason leav unknown script text block tri understand browser behav way unknown script found intent behind behaviour
php mvc pac log admin check placement set mvc pac like structur web applic unsur fit design pattern fulli short rout index php select control method use url control method request data model assign view wonder best spot log check let say page requir user log administr check whether user actual rout control model pleas note control model might contain method differ right note model call authent contain method call log return true fals base whether user log anoth method call log admin return true fals base whether user log administr best locat call method log log admin control contruct method model contruct method
ubiquit languag matur level rest api accord richardson matur model sever level matur rest approach sinc ddd use ubiquit languag wonder level matur recommend rest api present layer ddd project use ubiquit languag could let interest name insid bound context expos outsid world could translat appropri level matur
mvp implement android activ fragment present custom view late team start consid implement mvp pattern applic follow sever guid tutori basic end regular present interfac view interfac latter implement activ fragment present interfac creat implement inject activ dagger present implement would keep track status execut logic behind activ behaviour could success publish applic base pattern everyth seem work quit well late thought start question way implement mvp pattern seem extra logic layer ad without mention view actual view mean activ use set content view find view id get instanc class view repres actual view pars xml programmat built view view activ actual present mean activ concept repres logic behind view present keep status well number way keep status insid activ like instanc save instanc state share prefer etc view listen e g click listen method view invok present compound custom view may creat expos method set valu sub view interfac regular mvp pattern use far seem activ access view sub view port present command idea would someth like structur main view main present main view impl main activ final xml resourc layout could main activ layout xml main view layout xml way main view impl view activ present notic implement counterpart alway access interfac activ keep status map put save instanc state need retriev back creat question make sens realli mvp actual role activ class android mvp could flaw present implement case someon wander unit test present logic activ done main activ test
would type coupl builder recent delet java answer mine code review start like stop red flag person builder would build person know person person class know anyth person builder immut type creat circular coupl depend b depend person intak paramet client will creat person without build abl slap downvot told quot red flag implement shape joshua bloch demonstr effect java book item appear one right way implement builder pattern java make builder nest type question though make product class object built take depend builder like wikipedia page builder pattern wild differ much flexibl implement c see product know anyth builder class care could instanti direct constructor call abstract factori builder far understand product creation pattern never need know anyth creat serv counter argument appar explicit defend bloch book builder pattern could use rework type would constructor bloat dozen option argument instead stick thought knew research bit site found suspect argument hold water deal come engin solut problem even exist first place take joshua bloch pedest minut come one singl good valid reason coupl two concret type call best practic reek cargo cult program
handl work video stream asp net mvc want play video use asp net mvc understand model deal video file store file system data databas control retriev path video file model send view handl work stream video actual find search onlin found code sampl think part html file belong view say view actual stream video system
domain object use dao within transact consid good practic start transact servic applic layer object domain model make dao call particip transact
advantag observ iter futur recent came across reactiv x pattern asynchron data flow studi inform provid also watch talk netflix engin use observ redesign web api architectur reactiv x certain seem like clean power abstract see differ observ lt gt iter lt futur lt gt gt first case could someth follow second case would success error complet function defin elsewher advantag first exampl second p curios current use python java script job use reactiv x paradigm anytim soon
project design separ js c task risk vs benefit rfp phase work outsourc vendor rewrit fulli oper prototyp asp net app wrote make commerci viabl idea project design like feedback whether make sens summari write js server softwar parallel background may help understand respond question mani year kept skill amateur program skill lot inform project manag lot work high technic peopl drill bare metal modern softwar develop team leadership detail requir document tasti partial ui ux design prototyp softwar everyth rewrit applic multi tenant saa subscript base app overal function like high structur group forum app formal singl page app howev heart applic fact singl page call main page creativ main page prototyp take 20k line vb net 10k line javascript littl jq otherwis raw js target environ asp net mvc ef jq heavi client c server ajax way earlier propos call two programm month plus project manag plan hire short architectur design phase lead three person code team develop lot communic bandwidth goal new approach whole project month three coder instead two keep cost get done faster pm work challeng see experienc wrote prototyp main page dozen transact format need process boil small set json format sent server get start write complet simpl client server data cycl add one transact time go back forth write client code server code transact new design idea general plan move lot server code e g prep filter client display onto client clear defin json data set cycl client server build write two applic temporari js develop applic nbsp nbsp throw away crud load json tabl consum client server mayb field per tabl max nbsp nbsp minim server function send jso ns client respons ajax request nbsp nbsp write js main page use applic c server develop applic would becom full app nbsp nbsp throw away crud load json tabl consum server client nbsp nbsp minim client function initi consumpt jso ns server nbsp nbsp write main page c busi control data model layer use applic put two temporari applic togeth larg complet main code phase one develop would write client code anoth would write server code third would work non main page function server applic hope get feedback whether approach crazi riski difficult pull never done b ho hum use time big deal approach feasibl would risk critic success factor look
better illeg state except silent method execut let say media player class play stop method best strategi use implement stop method case play method call see two option throw except player appropri state silent ignor call stop method general rule method suppos call situat execut harm program general
separ interfac depend data provid attempt refactor compon larg project current lot depend global state project environ goal tast solid architectur everyth proper test sometim depend may simpli string valu specif directori machin name sometim mayb array howev depend inject simpl valu construct time valu might avail yet valu might come depend inject contain configur system etc current class call legaci function static method subsystem get respect valu bad global state depend compon know much subsystem idea idea creat one data provid interfac per depend differ implement real fake interfac express one need compon depend thus one method reus lot main function also split sub compon interfac cach buffer decor one part split chain processor implement name processor interfac problem mani class interfac work great everyth super testabl use style time project would hesit choic huge oss project larg communiti develop need convinc want way rest code part look like number class interfac get high lot intern meant part public api one exampl class go add big post origin simpli call drupal get profil cours make test lot difficult either wrong need better way sell question summar main question problem interfac meant public api intern use problem mani class complex measur number class averag size individu class way reduc number class still benefit solid architectur answer feel suffici convinc anyon thought altern would generic interfac e g string provid interfac instead profil name interfac would lose semant specif return string make exchang mayb interfac reus often code transform style updat discuss go major repeat concern hear everi new interfac need backward compat even meant someth intern technic agre think could said class public method wonder realli valid concern mayb real problem awkward one interfac dangl around
idiomat pattern match equival java build simul pars event stdin run background most function program day seem natur someth like simul would etc idiomat way sort thing java googl point direct nest class visitor pattern seem rather heavyweight attempt type erasur seem fight hard could show outlin would look like done correct
could rest api consid present layer ddd read lot question concern present vs applic layer ddd applic layer vs domain layer question top layer rest api need ui rest api consid present layer applic layer updat sinc receiv comment question noth ddd present layer ddd etc confus applic layer osi etc decid add appear also distribut interfac layer would actual handl scope basic present layer part ddd architectur heart architectur also web servic form net web api rest would exist distribut interfac layer
design link two model class differ multipl usual well known deal model class n relationship classic exampl order item client order everi layer softwar appropri typic solut sort prepar templat classic exampl gui order user enter grid product sake simplic let assum exact situat softwar alreadi develop e window univers app ask introduc chang sort relat product order standard way achiev goal good suggest minim rework detail clarifi user fill order mani product certain special case want reus product alreadi enter anoth order consid partial order whole one cours oversimplifi real requir realli batch product code uniqu quantiti link order ad compar sum quantiti batch point also strive figur visual repres correct approach find fast solut
deal legaci data integr issu rewrit softwar work project rewrit exist legaci softwar legaci softwar primarili consist crud oper creat read updat delet sql databas despit crud base style code legaci softwar extrem complex softwar complex result complex problem domain also result poor regular border insan design decis poor code lead data databas lack integr integr issu sole term relationship foreign key also term integr within singl row e g mean column x outright contradict mean column ask answer yes analys problem domain correct understand mean purpos column better origin softwar develop seem write replac softwar use principl domain driven design command queri repons segreg primarili due complex domain e g design aggreg root enforc invari write model command handler perform cross aggreg consist check queri handler queri intent denormalis data manner appropri various screen etc etc replac softwar work well enter new data term accuraci eas use respect success howev exist data full integr issu oper involv exist data regular fail throw except typic occur aggreg read repositori data pass constructor violat aggreg invari deal legaci data break rule old softwar work fine respect perform next valid lack valid easi inexperienc user enter nonsens data experienc user becam valuabl year understand idiosyncrasi data import cannot discard tri sort integr issu go work case other near imposs e g data outright miss databas origin develop decid save sheer number data integr issu overwhelm note question move stackoverflow
call cross cut concern valid excus break solid di io c colleagu like say log cach etc cross cut concern proceed use correspond singleton everywher yet love io c di realli valid excus break soli principl
depend inject use framework recent work python project depend inject heavili must order app testabl use framework time littl tedious wire depend manual overal work great object creat multipl place simpli function sometim class method object creat product instanc function call whenev need object test thing multipl time need creat test version object e real instanc back mock object function creat test version class use test said general work fine enter new java project decid whether use di framework di manual like previous project pleas explain work di framework differ manner better wors manual vanilla depend inject edit would also like add question wit profession level project di manual without framework
strang builder object getter method fair complex immut data type use builder object instanti current setup pars file set various field builder build object howev file use error prone want verif unbuilt object first import note want throw except object pass verif mean invalid incorrect way accustom see builder though write exampl guava immut list builder class allow view data submit lead use array list builder occas need edit data freez altern suppos could go ahead build object error creat new builder pre load data built object inspect data edit rebuild seem wast ineleg though consid code smell put getter method builder object intuit seem littl strang face type problem often prompt keep access copi data pass builder look later simpli getter would make thing easier
use ninject class librari look help get head around ninject di use simpl exampl found onlin everyth work nice tri someth complex caus headach class librari receiv file analys store result databas librari call various part busi window servic websit window applic etc pleas see exampl code stuck would get depend file type processor irrespect type applic use keep kernel aliv applic throw librari setup servic locat use creat new kernel root librari look wrong help would much appreci
anyon good di registr pattern done mani time never end like code turn ask anyon els problem offer solut convent use make cleaner code build c servic get top shelf log4net ninject instal set insid servic project end class like part interest super larg static class thing regist depend kernel super larg static class thing regist depend kernel method end huge ugli monolith name hundr line bind interfac type sometim get away convent base registr make shorter feel like alway solut either method huge seem unwieldi sometim certain depend need swap chunk enjoy see differ categori depend regist togeth feel like better way stuck find one like anyon suggest pattern solv problem huge unwieldi registr method
rail mvc vs microsoft mvc put logic time ago switch microsoft asp net web form never knew microsoft mvc rubi rail learn mvc approach thing asp net mvc seem weird ro r best practic put model logic various orm queri model notic programm seem avoid asp net mvc best place put orm entiti framework queri control
good way use front control pattern command line applic php develop use build web applic one php file per page long time result duplic logic messi code even though know time one day co worker introduc mvc methodolog organis web applic code base also learnt front control pattern time amaz simplifi everyth whenev build web applic rout web request singl php file use front control pattern creat request respons object dispatch request appropri control action satisfi way everyth work feel though code cleaner recent start write coupl command line applic fun php within tri use front control pattern feel quit right concept rout request one file littl bit redund one entri point call php f myapp php argumenton argumenttwo also feel though concept rout use control action littl bit odd well stuck mvc pattern command line applic almost alway end one control one two action seem like signal use front control possibl even mvc pattern correct better way handl rout dispatch request within command line applic front control mvc pattern appli web applic better design pattern use command line applic thank advanc apolog long wind rambl tldr pattern similar front control pattern develop command line applic moment front control pattern seem like odd fit
pattern maintain consist distribut event sourc system read event sourc late realli like idea behind stuck follow problem let say n concurr process receiv command e g web server generat event result store centralis store let also assum transient applic state maintain memori individu process sequenti appli event store let say follow busi rule distinct user must uniqu usernam two process receiv user registr command usernam x check x list usernam rule valid process store new user usernam x event store enter inconsist global state busi rule violat two distinct user usernam tradit n server lt rdbms style system databas use central point synchronis help prevent inconsist question event sourc system typic approach problem simpli process everi command sequenti e g limit amount process write store
valid state aggreg scenario custom place order receiv product provid feedback order process assum follow aggreg root custom order feedback busi rule custom provid feedback order someon els custom provid feedback order paid assum busi want new rule custom provid feedback supplier order good still oper place implement first two rule within feedback aggreg feel comfort especi given feedback aggreg refer aggreg ident e g properti feedback compon indic know exist aggreg feel comfort know read state aggreg well howev base properti feedback aggreg knowledg exist supplier aggreg knowledg read state aggreg altern solut implement rule move logic appropri command handler howev feel like move domain logic away center onion base architectur
global differ databas ran across old question ask evil global state top vote accept answer assert trust code work global variabl code somewher els might come along modifi valu know behavior code data differ look help think realli weak explan differ work data store databas program work data databas care code system chang even entir differ program chang matter care data entir point matter code deal correct data encount obvious gloss often thorni issu cach let ignor moment data work come extern sourc code control databas user input network socket file etc noth wrong global data within code program much greater degre control somehow bad thing obvious far less bad perfect normal stuff one see problem
consider decoupl refactor busi logic rest api got net solut consist mvc websit bunch librari busi data logic past websit way interact busi logic find share logic various system decid expos via rest api typic flow inform current architectur ui gt model control gt model busi logic gt entiti data logic gt db move busi logic librari rest api obvious need retrofit mvc websit consum continu busi usual leav exist method signatur busi logic model object paramet consid refactor public list lt claim search entiti gt search claim search request request someth give idea depend layer someth els thought might help regard return meta data api request expos model field json someth like jira need find balanc get job done quick get done proper suggest altern approach
cqrs es command creat anoth command cqrs es command sent client server rout appropri command handler command handler load aggreg repositori call method save back repositori event generat event handler saga process manag listen event order issu command command input produc event output feed back system command input common practic command emit event rather enqueu anoth command approach could use forc execut extern process edit specif use case mind process payment detail client submit pay invoic command whose payload includ user credit card detail pay invoic handler pass make invoic payment command separ process respons interact payment gateway payment success invoic paid event generat reason system crash pay invoic command persist make invoic payment command persist track manual payment gone system crash make invoic payment command persist invoic paid event persist may situat user credit card charg invoic flag paid case situat would manual investig invoic manual mark paid
altern depend inject stateless class work applic wherebi design class fit sever group immut initialis constructor use copi swap idiom inc move deep copi e clone getter setter implement comparison oper servic stateless class method take immut servic perform desir function builder factori etc build immut unit test immut straightforward use depend inject constructor mean swap test class ensur unit test oppos integr test use builder construct product object element design happi term test product howev servic seem abl keep class stateless unit testabl use depend inject via method argument servic exampl function chang mean servic class testabl instanti depend outsid class use code product exampl led larg number servic class need least argument class method note approach current use code question altern form depend inject allow unit test stateless class without depend keep class stateless reduc hide code instanti depend particular object multipl depend note also perform integr test test real depend object
broad definit depend inject essenc depend inject idea dynam swap core logic structur aspect program runtim tradit done code via di contain exampl use structur map c howev written sever program inject code via configur xml someth like config iter startup various class instanti use throughout program fair say form di depend inject configur di requir configur code use contain system philosoph convent aspect requir say someth depend inject complet misunderstand
use id primari key green field dapper contrib mvc site creat new site base asp net mvc amp dapper contrib want go technolog get time save convent configur ters code advantag avail design databas sql server histor alway name primari key tabl id rather id rather avoid ambigu sql avoid join primari key field foreign key differ name good clariti howev think rubi rail activ record start ms dapper contrib requir less configur id tabl model call id indic best practic encourag dapper contrib opinion recommend best practic said exampl site code found beyond dapper document use dapper use id use tabl id advantag beyond add key attribut tabl id properti model get map best practic green field develop yes question ask mani time direct relat ms specif asp net mvc amp dapper contrib new ish factor flog dead hors pure person prefer import even ms taken account
master slave cluster make sure master realli dead slave take hous messag system similar messag broker one master messag broker one slave messag broker messag broker receiv messag send node slave act node receiv messag master build state take case master failur problem detect possibl without human intervent master dead master may look dead slave might tempt take might end situat two master system tri understand cluster system implement master dead detect look like human manual kill master turn slave would much prefer process automat
composit data transfer object let say want creat shop order system order dto map data request result databas object consist order number custom number list articl order number pretti simpl use int store number custom also custom dto could use insid order dto instead save custom number int case custom number consist store store custom regist custom store intern custom number seem cleaner structur look like instead problem custom dto lot inform custom number like first name last name address user name flag thing care want save order order custom store cust case use custom dto insid order dto seem much goe articl best practic creat dt os encapsul dt os repeat inform differ dt os
got confus design aggreg design applic store sport statist show differ diagram oper allow user mock draft etc choos build domain first creat databas via code fist approach entiti player name team id list stat team name list player stat begin date end date player id lt differ stat separ column divid aggreg know player aggreg know list player aggreg team team part player aggreg separ one confus caus player definit foreign key team team make total sens without player like stat without player make sens part player aggreg could show statist team team separ aggreg edit domain look like
depend invers expand api result unnecessari test question bother day feel like sever practic contradict exampl iter test would fake foo connect bar connect use depend inject di instanti foo dao chang implement without chang function iter write builder imagin thing foo dao refactor obvious chang function test still pass foo builder intern sinc exist work librari e part api problem longer compli depend invers rewrot fix problem might look like iter chang constructor test need chang support way around issu though work di foo builder foo builder need public mean write test foo builder sinc sudden becam part librari api problem client librari use intend api design foo dao test act client follow depend invers test api clean word care client test get correct foo built solut simpli care write test foo builder even though public pleas di support iter realis expand api downsid depend invers clear chose compli support iter put much emphasi clean api support iter edit want make clear problem test intern rather someth like keep intern still compli dip
condit factori need perform payment two payment method first payment token payment implement payment interfac accord specif condit payment request need choos whether use first payment token payment client ask payment know implement use two idea regard could anoth implement payment interfac like gt first payment gt token payment instanc first payment token payment respect henc client could simpli factori use like opinion option pros con think
asp net mvc control seem like mess develop program asp net mvc feel like wrong part popul process control know put model call read refer peopl say must put process model mani action process repetit exampl mani view load data sql tabl repeat process call data mani view part control pleas tell right wrong etc
depend inject multipl instanc one inrequest scope tri understand happen depend ninject interfac inject multipl class specifi request scope bind understand alway singl instanc let say unit work singl http request way check mani instanc unit work current open insid one http request would confirm deni question made simpl mock sampl use question question singl http request two instanc unit work one unit work implement interfac method also servic class implement interfac consum control servic take unit work constructor control take two paramet constructor unit work servic pleas mind architectur decis know inject servic control easiest way show question final use ninject di need bind unit work servic
depend inject di depend invers principl dip built function extern librari question apolog question alreadi post tri search find answer often find tri use di dip need open file socket use di come natur tdd sometim hard ugli test someth written correct file socket one use di dip built extern librari even proper way thing overdo thank advanc code simpl key valu store creat one file per key write valu file
dao singleton develop res tful api think conveni use da os resourc although plan use memori store want close door whoever use librari decid use databas implement dao question whether dao singleton servic instanc dao would look rough like dao singleton guess much differ first line would still use event schedul dao instanc guess singleton work like right reason alway correl singleton static method instead singleton instanc visibl user get instanc would hidden would use event schedul dao get name etc static fashion thing singleton da os side question alright approach open door user implement da os
res tful servic dao decid respons develop res tful api use da os serv data servic troubl decid certain respons fall whether servic dao contract respons decid compon scenario crud part api let focus creat function exampl resourc creat respons expect servic serial object creat true fals messag noth mean go dao return dao creat method return boolean return creat object null creat void want figur usual expect res tful servic decid best divis overthink implement make sens good
mean inject data vs behaviour class constructor consid bad practic read book learn type script remo jansen one section author describ creat simpl proof concept mvc framework includ creat model class say follow model need provid url web servic consum go use class decor name model set set url servic consum could inject servic url via constructor consid bad practic inject data oppos behavior via class constructor understand last sentenc particular understand mean inject data seem almost introduct java script class use simplifi exampl data introduc inject constructor via paramet exampl certain think name data behaviour univers includ sort exampl constructor paramet never mention bad practic thus assum misunderstand someth quot either meant data inject someth els answer could includ explan use decor java script type script strong suspect concept intim connect understand seek howev import want understand general meant inject data via class constructor bad give context quot situat model class creat exampl use creat stock exchang model one nasdaq one nyse model requir path web servic static data file provid raw data book state decor use inform rather constructor paramet lead follow understand add servic url via decor rather simpli paramet constructor e g
composit model class edit featur model class like need edit item model know object modifi also need provid often object insid view go eventu edit need edit method know proper way
access i18n object differ scope build person framework mine start way learn mvc pattern progress someth like framework probabl add like chang like nevertheless good bad use project problem come decent way access i18n function realli i18n translat includ full i18n support least yet way work use configur file languag file figur would pretti conveni use config class load sinc framework config file load dynam load unless need grab glanc singl configur file would look someth like allow php cach file load becom fast translat said configur file differ directori name lang go around call config get lang en lang file everi time need access translat invent invent huh translat class repres singl translat file super conveni beauti access translat lang class use set user prefer languag among littl thing figur would use factori translat class order grab translat case wonder much static stuff class make sens instanti like singleton design pattern prefer static class even though support php yet far good got translat go let get problem final view render like go print text user need translat object avail insid pretti inconveni pass control would go put method would hell furthermor control call view without correct translat object stuff go break make sens add complex program point top everi view construct translat object work guarante view work regardless call basic cost near noth term perform instanti translat copi array contain inform unless chang introduc sinc code constructor assign guess problem bug reason correct thing furthermor need use translat class model valid occasion would need instanti singl execut may instanti translat object multipl time solv problem would need start put object registri think would get far would like see thought approach could blind possibl get use advic stuff thank advanc anyon chose spare time problem
inject factori multipl constructor paramet initi need one queue creat messag queue factori requir chang need support sever queue simplest thing add path store app config factori constructor provid method queue poor design refactor
design unit work like use net entiti framework ef back end would like advic unit work uo w implement creat unit work one entiti multipl servic need execut singl transact follow class want insid uo w project file reader use open xml pars excel file workfront object builder creat big complex json object workfront api servic net make web request expens repositori ef repositori want set uo w pseudo code correct approach take
mvc design cocoa game possibl work creat game os x use cocoa framework probabl best way util capabl oper system sinc cocoa mvc frame game around style problem frame game use mvc design make game develop easier effici cocoa particular method creat game display game view compon game render use game view exampl 3d game gui menu etc would 3d view gui view menu view etc game model logic game data logic coupl togeth separ object much cocoa exampl tetri clone made class tetrimino object method affect object cocoa appli game object global game object game view need certain data render game model need get input somewher global object made model view read affect
stateless vs state view model two link briefli describ differ two stateless state short stateless scenario bind view direct model view model expos whole object properti need synchron model view model state scenario make copi model object bind view downsid stateless scenario seem like way go default stop us implement notifi data error info inpc stuff level model
prevent endl event recurs use event driven data view consid graphic interfac repres data structur exampl text field field connect data structur event tri make diagram cours may mani gui element structur complex happen gui valu chang user structur updat structur chang sourc notifi gui chang prevent connect loop thought silent setter function look dirti model correct look like
need abl adapt type mine situat extern librari short need abl adapt type mine librari collect like let start explain straightforward solut regular adapt collect regular adapt extern intern solut requir adapt type extern adapt adapt intern adapt intern concret type wors intern interfac method extern interfac mani ish code need design interfac need cluster interfac order abl creat extern adapt figur sure better way read 2way adapt look like allow write collect adapt like call like work need adapt type design api pleas howev extern librari creat object type extern call get extern collect might return pure new instanc extern make cast two way adapt fail last solut allow access adapte like chang collect adapt see requir intern interfac object adapte get properti smell realli realli bad imagin situat come mani time effort internet vain would like solut keep api clean extern method need prefer one adapte stay hidden edit ponder bit issu come solut seem live requir e clean api includ stuff need expos adapte combin previous iter goe follew adapt type mine use regular adapt adapt type back creat two way adapt collector adapt look like might notic solut problem name cannot get one type convert mine convert back add collect solut work case project get retriev new instanc add use new instanc new e object get ad reason made edit answer solv general problem propos question clarifi ask would love know articl blog book solv issu techniqu pattern would also appreci someon could refer done previous situat
mvc display request content via view tri learn mvc pattern work play around bit wrote make sens want display array content collect control class via view class output method updat found onlin seem suggest view pull data model confus paul hegarti tune u develop app os lectur video say model view never communic inform flow alway travel via control exampl show direct communic view model
good convent standard applic messag stdin stdout design applic spawn anoth process handl special work applic process spawn communic standard input standard output standard error given task never know handl question simpl good convent standard write protocol use stdin stdout littl specif protocol design result least error somewhat effici common familiar protocol alreadi specif stdin stdout
read result command command pattern current look develop new system util hexagon architectur commandpattern facilit commandbus like tactician php system realli like idea commandpattern get yet get back actual result command done let say issu regist patient command follow field name address birthdat etc command fill data say http interfac given commandhandl execut everyth goe alright creat patient object persist databas commandpattern let return construct patient object part possibl ad middlewar return command get valu separ read write applic practic get data datastor command execut read queri general would unwis inject repositori interfac certain model direct control want generat index view instanc practic way handl error command help much appreci
incopor j queri ui asp net mvc project offlin system issu tri incorpor j queri ui project cannot use nuget anyth els goe internet download develop packag j queri ui websit tri includ file download mvc project visual studio follow creat mvc5 applic visual studio built full download j queri ui websit differ comput onlin access unzip download folder locat sampl provid html index html within folder creat html page use widget practic back offlin comput content folder vs project creat folder call css move file download relat style e imag folder file css extens includ self creat one script folder vs2015 project creat folder call jqueryui move js file download well js file creat sampl widget page still within script folder vs2015 project move jqueri js file extern folder unzip download folder move sampl html code new view cshtml creat vs2015 call jqueryui cshtml view modifi style script link follow updat path html tag within html tag ad code appropri control access view run project tri access page ie8 get error follow debugg object support properti method follow line code first sever line code show error tabsuseradmin tab past breakpoint get page back style j queri ui widget whatsoev result similar latest firefox download cnet com today would great appreci assist get j queri ui run vs2015 mvc project connect internet believ cover step attempt stuck sampl creat comput onlin work fine know irreleav onlin context sampl page creat make believ mess path inform move file differ directori structur vs project step best way includ jqueri ui offlin vs2015 project thank
class librari communic object awar tri improv program skill knowledg read various design pattern youtub video etc one subject thought interest singleton anti pattern lead problem quit sure solv allow explain let say creat gps class librari librari class call gps sensor util class everyth process gps data work speed distanc etc fire event inform think hey mayb want see gps info visual creat user control librari listen event gps sensor util issu think wire gps sensor util user control user control listen event gps sensor util normal applic would look depend inject mayb uniti would need find way initialis configur uniti contain entri point class librari think creat like singleton static refer contain read good thing head follow need consid gps sensor util know user control need user control need know gps sensor util event fire anyon could use librari want constrain one io c like uniti best way approach someth like
ubiquit languag resourc base rest api post question regard ubiquit languag matur level rest api ubiquit languag matur level rest api extens code realiz question deriv post exampl use resourc base api api endpoint look like basic get case want updat resourc look like put expect payload order use capabl ddd ubiquit languag domain model contain method updat product name chang avail block product sale etc api expect payload think two possibl solut split singl updat endpoint multipl nbsp nbsp nbsp b addit logic applic layer order compar current domain new payload detect valu chang need updat call appropri domain method base chang valu recommend way handl scenaio
two way data bind differ simpl auto sync angular js document mention consid one way data bind bad two way data bind good howev look definit two way data bind use seem auto sync put place view model diagram sure perform hit use addit resourc miss someth two way data bind someth mvc auto sync aspect data bind theori would caus two way data bind alway prefer seem impli document diagram sad smiley face instead word seen
domain model instanti domain model read domain driven design moment tri understand go servic go domain model say applic reserv seat concert certain amount time pay ticket reserv invalid method reserv seat servic user yet made reserv concert reserv invalid new one creat otherwis user reserv updat main logic method one els statement could move concert domain model pass old reserv return new reserv concert domain model would creat reserv better approach move creation seat reserv domain model
net server object instanc singleton vs per call vs per client context tier architectur note theoret question weigh pros con server object instanc tier architectur topic question question simpli whether thought correct miss anyth miss anyth miss given context mmorpg tier architectur net c client present busi logic tier server data tier maintain data state charact game server object instanc would appropri would two appropri thought follow definit singleton singl server object servic client client typic execut call differ thread server object server object creat initi first access client server object destroy termin ie manual termin server program server object store data state client data state store server object termin per client server object client server object creat client connect server server object destroy client disconnect server server object store data state client data state store client connect client disconnect data state lost per call server object call server client server object creat client call server method server object destroy call finish data store call call execut call finish data state lost mind justif question singleton would appropri server object would store data state charact regardless whether client charact connect per call would appropri data would retain particular call process thus lose data state call process per client would appropri per call less singleton client disconnect charact data state lost apolog layout question best first post
make dao independ two class getter setter constructor omit two entiti relationship model relat databas use tabl compani employe employ want write dao class manag persist two entiti relationship easi way would make dao one compani dao use employe dao intern accord stackoverflow answer read design smell refactor servic method use da os without depend way would implement servic method good way employe dao find compani uuid compani id method info alreadi ask smiliar question stackoverflow answer got use orm tool know someth like hibern would manag persist would like know hand
rail view actual render anyth join rail app hundr page test first thing done set us model control featur test ad work area one thing struggl entir applic built around view render anyth base content block main page render loop defer block normal pattern see save boilerpl everi view feel goe least surpris principl end control set magic ish string render loop pick switch statement view render anyth sound weird expect view render use partial keep thing dri zero output test view provid content block make work featur test instead would lot simpler could test view isol view expect view real rail applic thought appreci
singl factori use creat similar purpos differ focus object concern whether use factori method correct background refactor legaci code identifi pattern god object creat memori later various part save mani differ tabl exampl various part call select design plot done creat select persist factori return select persist object respons save select databas next step would creat design persist factori return design persist save design databas stop ask question creat singl persist factori return select persist design persist plot persist etc one singl factori pro con pro use repositori initi repositori one time instead everi new type persist con task factori creat differ type persist sure necessarili bad thing e sure whether break srp clarifi titl similar purpos object meant persist someth differ focus persist object focus differ part god object goal use case current situat god object contain everyth generat custom activ object memori object also permeat lot codebas impract chang moment notic alway nice separ distinct sub compon although tri task hand save session custom activ aka god object databas includ save user select item tabl item plot generat item tabl plot design object data item tabl design think need differ persist differ part draw differ section god object origin procedur code sql statement db save span line want break manag piec came idea let separ save differ part god object separ method sinc persist databas call persist would worth know small fix number part class yes fix number part class say differ custom activ generat slight differ need session may need persist part might need anticip need add part class rather aim keep code simpl
sanitis clean data display expect format problem user enter data name address mix form first letter cap without insert necessari space forth also sinc titl name happen part europ titl word small obvious thing remov space capit data model insert updat db question right thing store data enter make look right view side function larg system like erp crm system
put code mvc model recent pick learn php sql tri build small usersystem code exercis learn use class function also stumbl upon mvc model would like implement model code follow approach correct mvc index php messag php user php bunch control start model collect get post session user data pass model may collect info model pass view user class messag class etc part model valid data control give actual databas stuff return data control view view puzzl togeth control main echo data model amp control includ html file main concern view display data model better go control direct get method whenev
view specif data logic defin php mvc applic mani hour research think found understand come question struggl find someth concret grasp appli code practic sens go forward think refer present logic domain model read numer articl anem domain model still fulli understand correct solut start one actual scenario puzzl let say web form requir data shown differ model model need get specif set data use particular view exampl might bunch drop menus certain option let control pseudo code control ask differ model entiti data view need exact format view need sens seem nice model layer idea view control take respons bridg gap logic present view handl method applic direct coupl view howev could easili line control one specif view soon control huge sprawl mess dozen call model specif data view could split differ call method control e g privat make littl modular manag point conclus keep control thin deleg stuff elsewher guess let model layer pseudo code control nice thin concern logic ask model stuff need model know get use term model loos fulli understand model layer compris mani thing problem appear model end lot function probabl use one particular view use elsewher one view requir particular subset data seem incorrect implement servic busi logic layer believ busi logic realli model normal busi logic calcul valid thing happen data understand howev happen particular exampl view requir specif data creat servic class repres form capabl deliv data view requir correct format seem right final question store kind data relat present logic view
repres object need know subtyp work data need repres form exampl might look like psuedo json display first form user integ text field combobox anoth text field fill second combobox model view form list lt form element gt proper iter form element generat gui problem need specif type form element time use list tri model like psuedo code class form list lt form element gt integ field class form element string messag integ valu form type type enum form type enumer integ could simpli perform check non model code still need way attach possibl valu enumer type enumer object thought someth like class form form element integ field abstract class form element string messag integ valu boolean valid integ valu class enum element extend form element list lt string gt valu boolean valid integ valu return valu valu class integ element extend form element boolean valid integ valu return true work howev code type cast someth like could avoid type cast enum like void generat field form element element make label element messag element instanceof enum element make combobox enum element element valu els element instanceof integ element make numer text field get feel better way complic exampl could field restrict integ float arbitrari string enumer combobox checkbox boolean spreadsheet matrix xml arbitrari object etc better way repeat switch everywher need use type
factori return one type object bad someon stackoverflow post bookmark question unfortun comment factori return one type object code smell find write kind factori pretti often sometim want bloat code constructor overload sometim want give name object specif attribut factori would look like general exampl think call look much better code constructor call load omin valu howev kind factori usual runtim decis make like factori method often probabl creat interfac either like abstract factori pattern use class provid static creation method code get clutter one method chang think fanci car red stripe kind factori class necessarili bad
cqrs es applic project depend event sourc project event creat queri optimis read model understand unsur whether read model depend consid pre generat html page pdf report certain part applic html page interact rather inform like pdf report howev order generat report data need obtain anoth project name sql project architectur applic would look follow problem html render pdf render depend anoth project mean order project built becom import signific problem altern treat html pdf render queri perform per request make html pdf projector use intern data structur e sql tabl similar sql projector remov order issu treat html pdf render separ layer top queri layer e g queri say give object match criteria c format use format f queri get data databas appropri render use produc output
enumer requir use foreach collect follow class implement enumer work perfect foreach also array work without implement enumer keep say enumer need implement collect use foreach confus pleas assist
msdn servic locat outdat altern recent month start work project go code saw use microsoft practic servic locat search document librari say content outdat longer maintain provid courtesi individu still use technolog page may contain ur ls valid origin publish link site page longer exist wonder microsoft say outdat altern thank advanc
static factori method base class increas popular definit factori method static method class return object class type unlik constructor actual object return might instanc subclass violat ocp also seen product code would correct implement think separ creator class static method return subclass object propos solut clear abstract factori creat famili product also fit go f creation pattern skeptic solut
rewrit event event store think what correct pattern handl case cqrs event sourc creat event calcul balanc system goe product accid implement bug calcul balanc wrong fix implement rewrit event event store well snapshot event store implement provid box solv under db level wider scope event signatur chang e g field ad field renam found slide say rewrit way go
modif singleton pattern singleton wide consid anti pattern bad everyday languag altern modifi singleton pattern object constructor class ensur given point time one instanc object yes use global boolean variabl user attempt creat object class anoth object class creat yet destruct constructor throw except way ensur two object possibl hold global extern state cannot interfer disturb oper plan facilit thing test object creat test case modifi singleton pattern accept pattern yet anti pattern
right way implement di net look implement depend inject relat larg applic experi studi concept implement io c depend injector avail like uniti ninject howev one thing elud organ instanc creation applic think creat specif factori contain logic creat object specif class type basic static class method invok ninject get method static kernel instanc class correct approach implement depend inject applic implement accord principl
mvvm command one command everyth multipl command last compani handl view command view model base one central command implement like view model base initi button hook command differenti command paramet view model base execut execut function virtual implement generic command like close deriv class execut execut function big switch extend base function look less like case ad button ad anoth switch case proper view model howev current compani rule button specif command properti like initi one one offic agre better term compact beauti debugg sure rewrit work part cost consid new project find hard discuss advantag two approach better
keep ds sync use factori product id use two differ place insid concret product caller product factori keep product id sync two place declar product id separ class seem one option better way achiev
manag state mvp pattern current use mvp pattern develop android applic implement pagin e scroll bottom recycl view need fetch new data best way handl current page state scenario
would call design pattern mvc pac read research mvc hmvc mvp mvvm pac design pattern came accross articl larri garfield mvc vs pac implement think modular app written php modul share model abstract control view control may creat sub request control respons sub request includ primari respons simlar hmvc architectur wise requir sub modul directori sub directori contain control view also view class per se instead view templat file render use templat engin method control might suggest closer mvvm point reason mvc mvp howev extrem close larri garfield definit pac research inclin call pac driven design pattern confus hierarch structur pac design pattern implement match pac hierarchi rather consid singl triad provid fact pac base wrong also accord wikipedia agent triad communic control part triad also differ mvc within triad complet insul present view mvc abstract model mvc mean mean pac design traid modul pac design pattern cannot access model abstract traid modul mean unlik mvc pac model view know
correct model aggreg respect persist model bigger domain entiti probabl kind relat entiti relat usual result entiti referenc differ entiti mistaken two way model relat aggreg use b composit own b model composit root entiti manag lifetim composit entiti also appli persist clean composit entiti root entiti delet troubl scenario use aggreg model relat entiti exist independ entiti could aggreg multipl root entiti get even complic entiti suppos save databas take requir exampl want model recip consist differ ingredi quantiti recip ingredi provid addit inform like descript pictur user comment ingredi also provid link substitut ingredi recip make ingredi bread made use recip exampl would start separ differ domain entiti specifi requir add field own entiti composit would inform like comment pictur descript know correct model aggreg entiti independ handl make sens easili integr data access layer databas could provid short code exampl demonstr model relat recip ingredi use easili applic nightmar persist code use languag choic
code guidlin control dao control code dao code littl bit confus code guidlin per mvc architectur write busi logic control split null check queri dao move control side yes still need pass list string dao split make sens move control side
state design pattern come across follow state design pattern seem extrem logic simpl implement concern whether sensibl pass entir ceil fan pull chain refer state object alway taught pass necessari exampl may wish method field use state object pass entir object refer sensibl anoth way assign state ceil fan pull chain issu
code duplic depend inject instead inherit appli depend inject instead inherit problem code duplic main control exampl deleg exampl deleg specif see make method save specif request paramet prefer control categori prefer form request categori prefer control request paramet prefer control mail prefer form request mail prefer control problem constructor method user duplic implement tri inherit categori prefer control mail prefer control prefer control like child class call parent handl save think ugli solut cannot inherit categori prefer control mail prefer control prefer control save method declar cannot make prefer control abstract class fulli implement avoid code duplic case
idiomat way iter collect differ action first element sometim meet situat iter map collect appli procedur function element except first one simplest exampl find max element collect good one oper idempot realist exampl tabl dump portion first request creat file header column popul common approach idiomat way implement pattern interest imper function program paradigm variant possibl implement c like pseudocod first imper second imper third imper first function second function third function
mvc access view reciev paramet exampl ui button get item text field order button retriev item order written text field control know order mayb neither
php oop depend inject k use new statement told avoid new statement class function rather creat object class root programm mayb use di contain inject object class anyway think mani major case rule true let see exampl first thing creat send orderconfirm object make sens creat root programm know need rather logic creat class process new order want send confirm new statement would class second even crucial exampl soon use setter mailer object fill data e mail send subject address recipi name object pollut data next function need mailerobject would clean object first make use also possibl two mailerobject time e g want fill two mailer object concurr data miss legitim reason creat object class alway inject
creat shortcut method superclass control bad practic consid follow simplifi exampl creat method user admin bad practic specif control class violat singl respons principl shortcut method
java implement step builder order setter matter edit like point question describ theoret problem awar use constructor argument mandatori paramet throw runtim except api use incorrect howev look solut requir constructor argument runtim check imagin car interfac like comment would suggest car must engin transmiss stereo option mean builder build car instanc ever build method engin transmiss alreadi given builder instanc way type checker refus compil code attempt creat car instanc without engin transmiss call step builder typic implement someth like chain differ builder class builder builder engin complet builder add one requir setter method anoth last class contain option setter method well mean user step builder confin order author made mandatori setter avail exampl possibl use note strict order engin e first follow transmiss final option stereo howev plenti scenario ideal builder user especi builder setter also adder user cannot control order certain properti builder becom avail solut could think convolut everi combin mandatori properti set yet set creat dedic builder class know potenti mandatori setter need call arriv state build method avail one setter return complet type builder one step closer contain build method ad code might say use type system creat fsm let creat builder turn either builder engin builder transmiss turn complet builder implement build method option setter invok builder instanc tell scale well number differ builder class requir would n n number mandatori setter henc question done eleg look answer work java although scala would accept
ui view object embed ui button ib action defi mvc principl ui view object embed ui button ib action violat mvc principl exampl control object suppos perform action would common altern pattern
altern observ collect c wpf mvvm new wpf c mvvm approach work program demonstr mvvm approach wpf c copi code internet appli may program use observ collect viewmodel add object said work fin problem singl object question use rais properti chang object without use observ collect class trigger chang properti singl object way use observ collect add may object pleas help exampl seen internet use observ collect
inject sever object c ctor look good way somehow dynam inject sever object main class adjust method call depend e g need chang ctor updat method everytim ad new compon like nicer way achiev thank
factori inject factori creat object valid approach make sens inject factori use creat class instanc creat instanc use tree
use spring avoid singleton pattern consid spring framework manag pretti everyth relat object creation life cycl object scope longer necessari use singleton pattern applic use framework still situat need use singleton pattern instead singleton instanc creat spring one problem use singleton pattern global state problem avoid use spring defin singleton scope
mvc res tful api servic mvc pretti straightforward model control view creat websit come togeth client send rest keyword request server server match request url control action call model data gather process get result return result back client html page view talk pure res tful api web servic flow someth like client send rest keyword request server server match request url control action call model data gather process get result return result back client json view rather generat json thought view sens util mc part mvc done better suit pattern api servic instead mvc
pass argument potenti caus exposur invalid object state question base two premis first object must alway valid state discuss various post second class exclus trust anticip whether instanc valid state consequ use public protect properti simpl understand avoid exist post specif topic clean code suggest avoid protect variabl anoth consequ refer given method class least often advis constructor howev strict speak prohibit almost everi instanc pass depend method unless class part class hierarchi avoid object hold invalid state pass exampl php question true two premis correct would violat class unless extend anoth class mark final pass method anoth object follow question also drastic restrict allow usag callback object invok callback guarante valid callback could work object
question regard mvc applic learn net mvc develop simpl word list eg learn new languag creat list word relat certain topic think follow rule good practic mvc architectur feel right pass full model view also contain method think properti creat view model repositori model contain method repositori contain method model contain method equival repositori vice versa chain call eg list model list model new list model list model get list id list id set owner id save list model cs word model cs action control invok model
evolut detach entiti cqrs let say softwar solut data layer access sql server either direct also http connect case dataset use migrat away dataset modern technic solut cours use orm framework might natur choic howev support access databas http want similar thing orm framework mean work detach entiti look strategi tackl migrat could either use orm detach entiti chang track first attempt use trackabl entiti rather disast case tri ef second attempt look quit promis use object dif framework exampl object diff patch combin n hibern would mean want save object diff creat help previous snapshot diff send http databas server diff appli entiti n hibern session learn cannot send n hibern entiti direct instead use separ dto also articl code first bad domain use orm entiti model domain suggest anyway separ domain model persist model regard articl opinion author general best practic drawback mean multipl class definit mayb stuff auto generat conceptu dif seem work prototyp well anoth option seem use cqrs chang object alway command also easili send command http cqrs seen logic follow solut orm framework provid someth like detach entiti straight away suggest use task base messag system see task messag amp transact holi triniti look similar cqrs cqrs evolv mainstream solut detach entiti problem read handl detach entiti messi adventur peopl call anti pattern stripper pattern current think cqrs peopl come solut problem true pleas also provid thought idea work dif solv detach entiti problem mayb know alreadi scenario someth like use
work depend inject use factori pattern want build jar encapsul vendor api use object paramet communic api read articl topic still bit confus get depend inject right exampl hous object door window easi understand seem get difficult real code want use framework locat pattern code simplif object inde cake object big object code fine chang order easier test
multipl entiti busi logic chang c mvc repositori pattern standard c mvc project domain layer use ef repositori pattern say model like submiss need popul list compet organ base current valu properti main model properti organ databas right control call main model repositori updat view model valid map onto domain model without popul list could popul compet organ make call exampl list lt organ gt compet org list organ repositori get compet org model control add main model persist way creat main model repositori updat compet org model call direct access organ db set context main model repositori figur organ ad default option feel wrong without servic layer sure els handl method cleaner
java script client side separ model view model develop web app use model view view model approach knockout js read origin introduct mvvm john gossman realiz view model alway contain app logic ui logic everyth read somewher knockout model consid databas general data server accord mvc model also contain function process data ui relat wonder would reason separ model object independ view model object idea behind would view model would contain ui logic intend gossman model would contain busi logic mvc noth actual view exampl recommend best practic deriv mvvm pattern definit
vector clock conflict resolut event sourc system via local timestamp safe occasion connect event sourc system budget applic client pull client event store separ storag network share dropbox idea assign event current client increment vector clock determin global order event pull event client howev order via vector clock guarante concurr updat thought ad local timestamp vector clock use resolv conflict result order would client timestamp generat time event two timestamp ident fall back order via client id approach sane safe enough addit inform support multipl client e devic client maintain local event store client publish event store point becom avail client pull exampl client save latest version folder dropbox client may read persist inform pull event store client merg store reconstruct global order event concurr last win mean client time share list event eventu consist get global order want use vector clock event uniqu vector clock point time associ event creat client initi store client local event store ad new event event store increment client vector clock event transact ad account transact descript modifi budget amount adjust etc new client fork event store client possibl merg client event store add event concurr client activ one use case shop enter transact phone somebodi els home adjust plan budget clear transact accord bank account statement transact may show client home pull latest updat client continu oper somewhat disconnect fashion concurr updat client concurr updat problem event sourc architectur sinc determin full state applic replay event order see conflict multipl client modifi aggreg result read model case last win tri talk work thing
java class make rest call much android project use dagger depend inject appli mvp design pattern write interfac almost everi class although achiev separ concern individu logic coupl other make simpl rest call involv plus java class file make codebas becom complex start think normal plus java class make simpl rest call realli mvp pattern write interfac everi class wrong dagger requir set compon modul scope file includ parent child compon mvp pattern interfac interfac implement class model view present file alreadi present anoth layer actual work rest call file interfac interfac implement rest call result handl plus activ class parent class util class xml file plus file remov dagger remov mvp pattern remov interfac could achiev java class even one java class give file year ago might idea connect other guess work probabl even found lot harder trace code compar version without di mvp interfac
opportun cost diy di java alway use spring di spring project guic non spring project depend inject alway love recent took job diy di everi project main driver class init method creat object factori feel like noth necessarili wrong diy di howev feel like guic spring di exist reason implement di best practic handl varieti situat better homegrown solut could handl would like tri propos use guic spring di team want either make sure solid concret reason open sourc project exist di better diy solut perhap amend outlook diy di fact perfect fine lib guic spring di weld etc realli necessari proper di practic ask lost forgo guic spring di etc use diy di solut opportun cost
mvc servic dao fundament design choic error handl return valu edit right wrong answer mere tri get peopl share dos ts behind rather vagu topic would like address problem last project general rule tri keep simpl follow design pattern singl respons principl thing leav certain question unansw least unclear let consid simplifi exampl typic mvc web app gui persist layer snippet pseudo code view xhtml model java control java servic java illutr imagin sever method everi level control call servic servic call old schooler may want add facad control servic design mind question method return void except case error custom result poj os valu implement error handl check uncheck except handl servic except local yes return throw caller ok control call control realli need valu object data transfer object everi use case send back entiti servic check paramet process data assum check correct check data ok sever sequenti check return soon one fail bonus question frown upon return void singl respons imagin scenario want creat pojo send per http post persist would servic creat pojo servic send via http post servic persist control react button click view combin two control call creation servic method success send servic method final persist servic method one method control call creat send persist call servic method turn handl error case know mani way right answer best practic work best
setup depend inject framework java script creat web page would like keep ui java script separ accomplish like add event listen ui element creat know call depend inject could use architectur help relat question pseudo code copi code one caveat html element may creat right away use dictionari element id function want hard code code element
load data json file one time json file hunder row store like tri load collect class data static wont chang need load creat class load privat constructor load collect class implement singleton use structur map singleton option want know way implement correct improv best way help much appreci
call properti chang wpf mvvm properti view model bound ui element properti chang set accessor call properti chang turn rais properti chang event notifi properti chang interfac possibl call properti chang properti name argument anywher view model use caller member name attribut like ask handl case call properti chang place properti set chang code call properti set idea
best design pattern two specif scenario first one fit neat unit work uo w pattern question best design pattern use would specif scenario first one fit neat unit work uo w pattern second littl bit fidd basic certain busi scenario need save data even other inform fail save due reason includ databas server go exampl get inform peopl paid balanc account first tabl save inform payment tabl move save entiti includ audit row howev consid audit row less import record insert payment made use tradit uow pattern rollback would allow us commit payment record either littl bit stuck would implement mechan without multipl pattern domain layer also consid import record uo w audit record separ uo w would consid better way forward basic stack c mvc entiti framework autofac guidanc would definit appreci
defin reusabl compon specif applic mind past sever month learn lot softwar design practic across sever languag framework attract use design pattern follow object orient approach particular drawn approach promot reusabl modulariy understand reus understood code general approach find use often one encapsul program function separ compon minim coupl visual design often imagin hierarch structur object sub object awar interfac member understand last part essenti achiev sought characterist mention keep mind various project work past coupl month found hit design roadblock exact defin object abl fulfil intend function within applic also simpl intuit interfac specif perhap simpler word implement need function object also specif common applic describ case face issu work java server face jsf framework creat web applic design center around page templat entail write xhtml templat reus whenev need want creat header templat contain header markup use across entir websit exampl want add flexibl serv differ header titl add insert tag like detail import discuss insert tag let page use templat add custom titl place default websit ad function templat seem appropri could definit receiv common use howev singl page websit need button locat header add anoth insert tag purpos even though singl usag use templat function ignor could consid code wast issu mine present work html templat approach involv reusabl sub compon design tip design insight choos function would great appreci
enterpris architectur servic locat appropri use tri implement servic locat pattern diagram refer project net project box repres project arrow indic depend ask correct implement pattern better way
rest mvc confus enterpris appplic architectur alreadi experi work mvc base web app start read recent rest went confus think exist web app use kind framework pattern could refactor use two applic entir written php alreadi web ui use patter like mvc everyth lie around mani place separ concern alreadi idea refactor follow mvc write control request web ui deleg request servic layer interact data layer also want enabl rest api function think servic data layer would use handl request web ui rest request use separ control one web one rest also sinc rest stateless handl state like session would need web ui interfac
mvvm di view model locat share servic data coupl question regard mvvm view model view model scenario put togeth shorter sampl look nice solut view work conjunct one anoth small part larg applic class play parent view model repres view present combo box sourc lookup user select valu store select lookup button invok show dialog command show dialog vm1 via dialog servic dialog view model repres view user enter field inform new item templat click ok dialog close new item templat pass child vm1 call set inform child view model within child view model templat data transform list data irrelev child view model provid grid user modifi list data default item lookup popul combo grid data sourc lookup view model locat servic use io c contain get view instanc view variabl number servic depend purpos view model locat servic creat view instanc need howev whilst write post think could inject view instanc parent view model constructor view model regist io c contain lookup servic purpos popul list item display combo box view find basic hit databas call entiti framework popul new list creat new db context time moment lookup overrid equal although data base id x would fals data pass around work differ list current servic regist singleton question view model locat servic reason valid way get view model instanc view model best keep depend explicit inject child view model constructor depend read thing bad practic past although find anyth quick look tonight lookup servic current differ list pretti much data nice way make view use list data idea forc set list dialog vm child view model via properti
includ type name variabl name abstract accept includ type name variabl name scenario work c mvvm lot command properti view model name various thing like get someth someth write someth etc rule order member c alphabet command strewn throughout file even sort manual difficult rememb get someth command especi two method command void execut bool execut menu item command bound menu generat dynam code behind would like name command command get someth case could execut get someth execut get someth menu item get someth part differ command least alphabet next execut someth would next execut get someth would next execut write someth even tri solv right problem view model thirti differ command plus stuff import file order logic use sharper sort content wish could sort type name direct closest get alphabet default
might good candid graph databas need creat applic must diff relationship entiti exampl let say creat applic model instanc diseas amongst pet period collect data multipl xml sourc model repres pet one repres diseas interest examin chang join pet diseas time collect xml data insuffici simpli diff xml use multipl sourc must intermedi model know way guess could diff pet diseas join tabl build rdbms also know lot graph databas would welcom suggest right way go neo4j look like credibl candid
exampl mid larg scale web app built without orm read lot hate spew ms genuin interest find better way thing unfortun ton book blog post articl model build app use various ms none exist non orm approach mid larg size open sourc webapp built without orm noth beat read actual sourc code altern tri find use orm various associ tabl disappear model app simpl stuff like load row given pk much boilerpl one write librari eas pain simpl stuff like load mani associ much boilerpl requir code look like expos json api web app json api inher associ e user json post insid comment insid materi differ orm low level api implement various busi logic look like object argument api take return exposur ms via rail activ record visualis write db back applic without duplic boilerpl rail take care could hibern nhibern differ beast activ record fine would actual make sens lay matter rest least
anem domain model develop think rich domain model martin fowler talk domain model busi logic layer contain class contain state behaviour far concern mean would put method use multipl object e g order order item would normal use servic class use anem domain model transact scope busi logic contain domain object
elimin cyclic depend want avoid cyclic depend schema db repositori need user db entiti factori creat user entiti need user publish info initi creat user publish info request user publish info initi need db repositori check whether user current present cach activ set onlin properti user publish info creat user tri get cach user method use intern thing like cach lock insid db repositori user aggreg root db entiti without interfac db repositori requir user db entiti factori requir user publish info initi construct user make cyclic depend back db repositori usual use constructor depend inject case work cyclic depend question also want move make publish info user actual implicit convers c use frequent code pass db repositori user publish info initi init argument neither want implement depend use break encapsul schema user user publish info dynam creat object other creat startup chang design look like
updat messag rabbitmq broker reach relev client via multipl websocket server let say multipl websocket server maintain mani connect client send updat websocket server pull said updat rabbitmq broker broadcast relev client happen page need updat question client page x get updat split across multipl websocket server ws server reciev updat forward client page x whate client connect ws server b client page edit add detail way imagin scenario like imaginari forum multi thread web server page render respond api call someon save post topic web server save post db pass post rabbitmq rabbitmq forward post relev exchang say new post also exchang new topic alert etc websocket server pick examin header forward post user relev page
process send process data super child class constructor want initi child class constructor pass result super java allow process child class constructor super call what good way solv problem
architectur realtim heavi websocket base web applic process develop realtim singl page applic progress adopt websocket empow user date data phase sad notic destroy way much app structur fail find solut phenomenon get specif bit context webapp realtim spa backend rubi rail realtim event push rubi redi key micro node server pull back push socket io frontend angular js connect direct socket io server node server side realtim clear control model base separ resourc process attach classic mvc design complet shred least bypass right start push stuff via websocket user singl pipe app flow less structur data find stress front end main concern duplic busi logic user load page load model trough classic ajax call also handl realtim data flood find duplic much client side busi logic maintain consist client side model research find good post articl book whatev would give advic one design architectur modern webapp specif topic mind structur data sent server user send event like resourc updat reload via ajax call push updat data replac previous data load via initi ajax call defin coher scalabl skeleton data sent model updat messag error blahblahblah messag send data everyth anywher backend reduc busi logic duplic server client side
call dom event handl instanc observ observ pattern follow dom event handl exampl use j queri could call shop cart dom element observ function observ general click event hook click event specif shop cart object javascript exampl observ observ exampl oper follow taken notic fanci observ exampl hello function look exact like dom event registr
repositori dynam data sourc usual repositori pattern look like would best practic make repositori handl gateway cach redi fts filter elasticsearch db mysql etc idea far make repositori array class loop repositori call method also would implement updat delet remov data sourc
model complex tree structur ask stackoverflow polymorph tree structr came conclus specif question specif technolog tri rewrit stackoverflow question wrote grandpar parent child class order question concis time specif real domain armi simul game domain model corp divis brigad form sort tree structur brigad parent must divis divis parent must corp unit without parent except corp allow furthermor game divid player three role corp general division general brigad general player need select manag unit accord role corp general select corp etc ui manag unit look like tree add delet edit unit copr divis birgad previous question answer got model mean treat unit type differ howev fit quit well game sinc seem awkward determin unit type state parent corp exampl allow situat brigad parent corp possibl want corp general abl select brigad manag somehow assign parent thus game think corp presic want determin unit type locat three rather opposit determin locat type question think best way model class thought class type
creat new generic model two exist similar model two similar modul mvc project one report one export explain nomenclatur export use generat flat file report use display data gui generat pdf file via gui modul distinct code lot logic part model similar exampl report export model field class contain properti name field type field export report model filter class properti filter uniqu name label accompani filter gui etc two modul written differ peopl co worker model class liter ident filter class one class other similar necessari differ exampl field class export model width properti store maximum allow number charact fix width export howev field class report model width properti thing fix width field report convers field class report model properti call group indic whether field use group aggreg result report wherea applic export hope get pictur two model similar class addit logic similar two modul also exampl filter receiv gui process way export report except rather rule though logic differ sinc ultim modul perform differ task differ option keep modul entir separ code current code distinct except function common modul project get data databas user authent type manipul etc code topic question refer bit one modul exampl might use filter class defin export model delet filter class report model creat new model eg export report cs contain bit model share export report eg filter class also creat new logic function use export report modul function ident understand right answer look advic road alreadi recommend regret also singl respons principl sound like would applic would dictat complet separ modul though would allow share compon model logic
singleton usag enviro need share kind inform see hash map differ part code think singleton could perfect design pattern except one thing inform retriv read init hash map popul demand anoth class mvc question possibl assign singleton class inform extern class yes good usag singleton design pattern otherwis could advis manag class popul hashmap hash map contain inform user manag start n thread everi thread open connect db db class handler check queri contain user hash map moment manag thread db handler want avoid pass hash map thourgh everi constructor thought singleton also hash map popul read map
sms messag applic would issu advantag use sms messag inter applic messag less reliabl http etc
use depend inject applic configur startup write softwar need fair configur natur point mean first read user configur file build object need base configur result creat object base user desir function seem invers control realli feasibl make depend inject seem imposs exampl let say need tell program process data certain way configur start process data processor b c even c construct object base user configur know allow depend inject scenario depend inject appropri differ pattern unawar solv problem allow depend inject pattern think root question depend b c user configur softwar startup use number depend b b c c c c etc depend inject object singleton need chang necessari depend startup time
proper organ multipl wpf entiti framework applic share resourc compani build separ hous wpf applic would like share user control resourc dictionari ado entiti data model project would also like incorpor 3rd parti librari use nuget incorpor project one solut separ multipl solut advantag either approach
help resolv circular depend would behind spoiler tag could get markdown work sorri soon type circular depend got ton suggest result handl circular depend depend inject solv circular depend circular depend inject good practic circular depend recurs grammar parser e g json iron refer first three circular depend object creation attempt ddd read other still know solv problem thus question ok real question typic method depend inject data access layer goe someth like creat interfac persist layer within domain layer domain servic accept interfac constructor make sure persist layer implement interfac impli persist layer depend domain layer good client layer refer domain layer persist layer client layer instanti persist object inject domain servic typic done use claus exampl multipl layer valid need move creation servic object factori reason long involv separ separ tier chang project layout littl go top client project upper layer interfac project contain servic contract layer factori layer client project need refer upper layer interfac project next upper layer implement layer layer refer upper layer interfac project lower layer interfac project lower layer interfac project contain servic contract factori refer anyth lower layer implement layer refer lower layer interfac project get persist layer break need factori handl instanti persist layer lower servic layer need refer persist interfac work factori need refer interfac expos proper method signatur easi enough persist interfac project refer lower servic project lower servic project need access factori get instanti persist layer first thought move interfac persist interfac project still need refer lower servic project refer domain object type second thought move factori lower servic project need refer persist implement layer someth instanti persist implement layer would still need refer lower domain layer implement interfac
improv new web applic design process current process use asp mvc talk client time find want extract note list noun entiti need track make list busi rule enforc build databas base list entiti wirefram rough lay ui screen start code model class entiti start code ui view go back forth tweak modifi redo bit forgot etc sudden get done verifi busi rule place ship feel process ineffici almost alway get half way realiz forgotten tabl tabl need actual go code anoth way etc etc normal mean architectur process done correct forese problem develop cycl much redo know architect establish profess process guess wonder close workabl method need tweak thing total need grab good book
io c framework vs di layer say class structur like follow use io c contain possibl inject depend use annot like inject auto wire howev believ two caveat use annot add concern class b c respons implement implement manner risk encount runtim error io c contain support compil time check whether depend met thought bit came addit layer respons depend inject instati inject depend applic startup would simpli call new di modul solut mani advantag requir framework support compil time check whether depend met separ concern implement wire flexibl e constrain way wire keep advantag io c contain come mind allow sophist depend inject avoid constructor nest new new b new c updat depend chang one one class quit easi appli differ implement differ purpos exampl two class logger warn logger error two aspect orient approach would prefer name approach disadvantag di layer advantag io c contain decid answer accept tri summar aspect two answer discuss lot adrian iftod although still critic io c contain without compil time depend check argument worth unfortun miss reput christian willman note project exceed certain size complex approach often realiz without class foo simpli wire class constructor inject composit root direct adrian iftod remark io c contain much class b c exampl manag lifetim object provid singleton function could ad exampl use factori instead constructor di layer still wonder approach also use larger project opinion direct constructor inject main quit difficult maintain creat sever factori di layer could improv maintain whilst keep advantag io c contain thank two much
c follow better singleton pattern approach stuck server program simpli seem find good realiabl way handl singl object class attempt singleton pattern plain ugli type everyth class connect manag basic handl connect relat code connect activ server singleton pattern connect h singleton destructor would delet connect left connect variabl type get instanc get frustrat tri search around mani place could come better solut also mani differ point view attempt seem way cleaner c like connect h without real destructor call exit connect method end program delet remain activ connect set std atexit method also attempt static class namespac static method variabl namespac connect h approach c like method variabl use exit connect method act destructor delet remain activ connect know three way later mention best approach handl situat stuck
di io c contain vs factori configur applic tri figur use dic io c registri configur softwar use factori along reason behind either approach use structur map di contain dic easi configur use registri dic practic regist object static sens need chang exchang implement instanc runtim dic configur configur dic singleton howev sinc softwar sw run differ devic need select devic specif registri depend devic sw run order configur hardwar accord sinc construct object requir read configur file use factori return instanc dic order separ read configur creation object regist factori getter dic correspond plugin type say plugin type motor concret type motor1 motor2 handl factori two way decid configur devic pass inform devic sw run motor factori return correct motor either motor1 motor2 case logic decid insid factori configur dic accord devic run creat two factori motor1factori motor2factori one creat motor1 motor2 case would differ registri entri motor devic specif registri use either motor1factori motor2factori question one two method prefer seem first case straight forward convolut sinc spread logic decid type instanti throughout code base wherea second case effect multipli number factori code sinc need factori almost concret type becom even confus abstract factori ad mix use one method import good indic decid way go
factori pattern versus dynam class instanti php develop web framework php want make fulli extend goal make possibl develop chang behavior compon without modifi core codebas develop abl encapsul work separ directori want without use hook e event listen quick turn huge mess compon figur pimpl di contain allow extend exist servic use twig templat engin allow templat overridden front control rout overridden redefin use extend uniform resourc locat allow develop overrid add search path resourc asset configur schema etc problem face extend function class place core codebas alreadi instanti class framework full fledg applic rather librari even io c still need instanti class point inherit alon solv problem still instanti base class core control rout whatev would seem need introduc addit layer abstract one idea use php dynam class instanti featur exampl base user class want allow develop replac instanc custom user class dev simpli need overrid valu user class name set name child class altern could wrap factori pattern advantag factori class would could type check need separ factori base class either approach right way implement kind extens
proper defin boundari bound context consid set precis boundari bound context consid bound context solut space sometim difficult set exact solut space exampl follow bound context order messag content manag warehous etc real life situat possibl situat order need send notif order get messag draft content manag order format messag forward messag messag send notif work relev bc send messag archiv log etc look like valid design doubt regard exampl messag also part order solut space also mayb warehous solut space bc cours code case design messag could chang solut space accord need pull multipl b cs want messag part messag solut space solv requir messag process differ bc use anti corrupt layer without duplic logic multipl bc scenario valid first scenario tend b cs depend messag bc without duplic code scenario offer full autonomoti bc messag bc duplic code probabl higher usag resourc bc could good way defin boundari problem solut space base certain ddd guidelin limit hardwar resourc someth els
di intercept u contribut open sourc project heavili use ctor inject design pattern recent discuss use intercept certain thing includ inject ui command view model correct bind command correct valu exampl command mani inject view model ninject may relev specif case command mark attribut know subset inject class defin go like public instanc foo command bound ui element certain action tri work use intercept command everyth broke intercept implement inject ninject implement receiv bunch command base implement know command bind valu essenti reli specif implement deriv implement bind specif command ninject howev return valu one abstract level higher need two method see fix somehow make ninject intercept specif class instead interfac b add abstract field command base use figur sure even done least success b hand seem ad redund inform type alreadi provid valu use intercept ad anoth possibl place break recommend
word depend use correct di word depend use lot program think might use wrong mani way use depend inject post exampl accord dictionari com depend mean state depend depend someth depend subordin appurten outbuild annex subject territori integr part rule countri let take second mean depend denot thing depend anoth thing howev say depend inject depend object request object inject object inject accord mean given dictionari understand wrong actual inject depend depend request object inject sinc depend object specifi constructor perhap name like requestor depend pattern would accur justif would call inject object depend part depend graph depend object realist stand point justif way word depend use di pattern seem suffici nativ english speaker therefor may wrong subject whenev think depend mean dictionari use program conflict
recommend practic share field domain model work model current look like sign type color line text sign type b color line text therefor instanti like work instanc code check type properti read appropri field think approach may flaw b sign expos properti hold line2 also unsight pass null bunch properti care instanti time wonder would appropri use inherit instead base class would contain share field type recommend pattern model model type note model behavior pure bag properti
expos capabl collect enum valu boolean function high level explan object method method cannot execut uncondit valid done also like expos condit client user way could collect enum valu could also boolean function tri come reason favour one think possibl perform benefit depend much input data method would common like said perform benefit would neglig real world problem could occur one solut whole thing boil person prefer concret exampl prepar may call prepar yet call administ may call prescript unadminist administr schedul earlier point time administ may call administr depend weight patient weight patient unknown rule simpl complex client user click administ button fill form click confirm button want let user click administ button open form pre condit indic action fail regardless data enter form ad domain driven design cqrs tag context ddd cqrs architectur sure matter problem
mvvm model vs ddd entiti step domain driven design paradigm one question mvvm model differ ddd entiti differ two
gui applicaton state polymorph win form gui applic work two state differ function state share gui control divid state use enum almost everi method like want make someth like app state implement state annot state app state crop state app state method affect gui suggest suitabl pattern
api orient web app public privat consumpt rubi tradit rail app need deal control model action view generat html output mani js framework like backbon react allow us code client side consum api easili webapp might also provid ap public use think instead code mani action view generat html output even treat us api consum build complet api orient app ourself public caveat use approach exist tool librari tutori worth look
immut string array refer type vs valu type tri understand string better c assert correct string immut string refer type behav like valu type code sampl creat string instanc hold one memori destroy one instanc creat new string instanc hold two memori even though use variabl x correct happen string array one index valu chang last assign creat entir new array chang boo moo best guess array hold pointer array simpli point new string instanc hold moo correct could someon pleas clarifi thank
asp net mvc put data entri logic hit databas simpl data entri valid attribut viewmodel think format email address mandatori clientnam format date housenumb numer etc also complex valid hit databas extern servic check id valid one extern servic see person probabl alreadi present databas base name address databas action check address zip code combin extern servic opinion logic control separ valid compon valid servic get di control would like opinion
disadvantag classpath base depend inject test di framework like guic spring common tool abstract depend make java code testabl howev sever altern method achiev goal one particular make code test depend direct certain class vari implement class classpath test run time slf4j compel reason use di framework instead classpath control depend latter approach common given simpler use built function
deal multipl user session type ddd develop applic use user session store client server treat differ repositori implement use di use insid domain servic suggest
test dynam creat html test separ file code context complex page part web app dynam popul inform use knockout js page dynam creat anchor tag link exampl might tag top page bottom page one test html file contain front end test separ view html file test ideolog work environ set someon peer review check front end test pass assur everyth work expect cours environ depend well written test cover code therefor unexpect behaviour found want write fail unit test expos behavior test system check test continu work problem bug found second lt gt tag seen set correct follow test ideolog want write unit test ensur tag creat correct solut rule copi past html code generat dynam lt gt tag view test file make sens develop work project futur chang html view updat test html file test wrong also unwil simpli includ test view html page would violat number principl seem like poor idea around question therefor question test dynam creat html allow test resid separ file edit make dilemma clear write html exist two separ file amp b one file b c need modifi order updat html amp b possibl solut wonder html import would possibl solut problem anyon know anyth situat would appreci thought
share event sourc stream aggreg question relat cqrs event sourc two aggreg root ar1 ar2 ar1 receiv command event recreat previous event sourc stream repositori case list valu x z updat intern state b c x z emit new event b c event fetch ar2 process point need recreat ar2 event sourc stream dash layer insid ar2 excat leyer insid ar1 b c x z one notic ar2 layer would read need busi logic insid ar2 question could use event generat ar1 inner layer recreat ar2 dash layer alway option duplic data stream event store ar1 layer ar2 dash layer wast memori anoth option alway send data ar1 layer ar2 whenev event happen case would send also x z togeth b c updat came mind model ar2 refer ar1 ask ar1 time data see handl case sinc cqrs aggreg cannot return data implement saga style updat far saga use send event transform command ar1 ar2 basic 2nd pictur case instanti new ar2 green color pic2 exist actual servic layer like
one servic facad per view current tri design java ee web applic view quit complex e sever dynam drop menus content drop down may depend intern state model user privileg etc mention one thing order avoid logic present layer introduc servic facad layer condit decis data ship client done well convers dt os avoid dozent call jsf cdi back bean servic layer thought collect neccessari data view one big dto client one call initialz see advantag data collect one singl transact ensur easi ship consist data client present layer becom leight weight intuit present layer bother data come avail singl custom servic facad also face problem tight coupl servic view feel terribl wrong final would end one servic facad per view provid dto special view recev deleg action client trigger chang view e g addit input field would modifi servic facad ship dto well advantag singl servic facad overweight rather neglig suggest design basic approach prefer approach approach
good way hand write twelv requir contain function custom type c stackoverflow ask prefer way expos custom stl style iter answer seem implement twelv function six member six non member perhap use macro assist c singl function use yield return c great thing like give realli bad reput good e macro free way write twelv function
invok model logic one user control view model anoth user control without violat mvvm wpf applic consist user control user control3 part user control2 content keep mvvm develop use prism need invok custom class method model term mvvm user control3 view model user control1 restrict servic user control3 singleton suppos one follow way use event aggreg prism user control1 view model publish user control3 model subscrib need creat uniqu id window pass user control1 user control3 creat servic instanc window pass user control1 user control3 user control1 invok method instanc window pass user control2 instanc user control1 view model user control1 invok method user control2 invok method user control3 seem like approach violat mvvm prefer
refactor els logic reflect oop principl read relat question regard refactor code base els statement follow close oop principl difficulti appli concret use case follow base class sever deriv class base sever condit return specif type human exampl consol output son correct implement get human human human method bother abus els statement concret implement difficult read think someth simpl relat standard non simpl non standard way could help improv code
data flow depend inject complex tree model store across multipl xml file java model class repres xml model class poj os class annot jaxb jaxb read xml file tree handler class handler respons handl layer insid model tree specif element handler class creat use guic di framework problemat bit handler need data process layer pars earlier exampl exampl grand child handler need data root handler comput moment code look similar question handl trickl data handler tree accept method call explod go tree also think store child data singleton fear unintuit data chang depend comput child handler eclipse4 depend framework support context sensit inject think would good creat context object contain pass data everi handler grab need anoth idea separ local data global data pass global differ method fear outsid guarante recent global data set standard solut depend inject tutori ignor bigger project
data access entiti class insid mvc sorri question seem naiv new mvc model know bit late join club question regard mvc php think implement languag realli matter intend specifi order make clear use web applic plan use entiti class like car user etc like busi logic class need use persist data layer data access class car dal includ actual sql statement sure class fit mvc think part model know done think use angular js php sql tri creat first truli mvc project sure fit togeth pleas feel free ignor implement specif feel belong question
deriv deriv decor class sound like good idea suitabl way follow exampl decor pattern implement object function dynam coupl togeth name normal instanti object function would look like latter group especi use want use function z smth defin class work great far common function place class non common function categor class xyz addit use decor pattern instanti select pair triplet function want focus deriv decor class xyz say pure virtual method differ smth els method execut differ instanti xy xyz etc correct way would deriv class k public x public public z work feel method destroy whole concept decor pattern also feel like diamond problem would surfac way virtual inherit would solv would still need clarifi compil name function class xyz call access object type k instanti would look like altern could deriv xyz like select function instanti time like simpler avoid headach previous method howev feel like recreat sever new class abl googl know problem name perhap code pattern solv well known problem point direct read someth think differ solut would glad hear
except express domain model let say class person name throw except one tri creat instanc person name pass invalid name constructor except invalid person name express domain model repres
defin rich domain object background find standard definit rich domain model may call non anem domain model could defin softwar domain model domain object contain littl intens busi logic valid calcul busi rule etc anem domain model wide defin erd entiti relationship model obvious suffici rich domain object domain model express uml howev lack represent busi logic constraint rule etc read articl ocl describ rule uml never seen industri use question could suggest approach defin rich domain object approach focus data constraint rule rather class sequenc exampl want defin student class enrol method want defin student entiti enrol rule cours could simpli defin rule comment code seek formal method edit expect answer like use tool wonder expect experi advis exampl dsl creation uml profil etc
refactor massiv view control view control differ subview subview chang accord condit function appli background color add minor aesthet view segreg function viewcontrol view e appli color ad view button touch event etc control view load view appear etc rest call model calcul stuff calcul constraint constant view anyon suggest anyway incorpor view control model function separ class like everyth crowd viewcontrol
cqrs ddd domain event synchronis read model design question field cqrs ddd explain depth domain need contact domain manag contact inform peopl organis relat exist peopl address relat exist time activ inact activ date inact date relat also defin prefer one way relat defin prefer one first activ one defin prefer one explicit next line anoth relat expir longer prefer one correspond event address link regist event depend activ inact prefer address link chang address link unregist event address link info chang event mayb user set relationship inact exampl busi rule one prefer address time event handler receiv address link regist event know write address prefer one without duplic busi rule receiv prefer address link chang know remov prefer flag previous prefer address appli new one thank insight
simul function program c pass entir program state function argument struct call state hold variabl program rather modifi function direct valu return code output see entir state pass around program termin new user function copi state local variabl modifi return chose pass state argument function want abl pass argument need question think pretti cool practic compil gcc optim sort almost function style see benefit explicit keep track program state worth troubl
cqrs ddd event sourc read model read question time creat read model event handler question come event handler draw sourc inform contain handl event construct read model two aggreg person address person associ differ address home work etc read model tabl address id line1 line2 line3 etc also read model tabl person address person id address id line1 line2 line3 duplic denorm data address creat dispatch event address regist address info id line1 line2 etc address associ person dispatch event address associ person id address id want creat read model receiv address regist event add entri address read model tabl receiv address associ event want add entri person address read model tabl though would like address info well line1 line2 line3 person address tabl clien applic use way info contain address associ event event contain person id address id recommend way get inform line1 line2 line3 associ address address associ event handler order popul person adress read model tabl domain attach address info line1 line2 address associ event direct ad person address tabl would requir domain servic would need look multipl aggreg address person two aggreg ad entri person address retriev inform beforehand address read model tabl recommend read model read eventu consist etc someth els
state machin process engin abstract away ui work suit micro servic web base gui use 3rd parti state machin via rest call sometim get set state one micro servic time go straight gui direct state machin bypass micro servic entir opinion ui reason prefer gu dumb knowledg compon databas state machin cach etc believ gui mere one compon applic applic believ micro servic abl work independ without hard requir ui counter argument proxi rest call micro servic add complex micro servic quicker effici call straight ui call micro servic also use rest differ tool would like know best practic recommend
design state tree use redux last day search documen best use redux design state tree research end conclut one currect answer came across answer github manner petehunt answer intend flux answer almost unambigu think use flux justifi two condit met piec data need use multipl place app pass via prop make compon break singl respons principl e make interfac make less sens multipl independ actor general server end user may mutat data poor knowleg subject gave hard time understand first condit relat question pleas share opinion possibl relat answer follow exampl simpl app login compon show profil detail compon app talk server login function simplest way design state tree would problem everi design break singl sourc truth exampl one could store status login fail load success number login tri profil display right point list never one way anoth data store compon could one know best put state tree keep login compon export compon extra detail request develop angular2 tag angular2 pleas share sourc answer exist thank
pass inform adapt applic layer hexagon architectur start design sampl applic hexagon architectur got applic layer basic api manipul domain way question form pass paramet applic layer pass anyth contain domain would make adapt depend direct domain thought use dt os pass inform adapt applic layer sure best idea suggest base pass experi
go f implement builder real life tri understand builder pattern usag call separ usag type group discov builder use provid immut avoid telescop object build call joshua bloch builder use builder facilit build object lot field builder build object need structur follow structur rool exampl xml builder build xml fail wrong data pass e g close tag case builder valid inner object build step go f builder director abstract builder differ implement never seen implement product ever seen exampl
mvvm view model view respons creat new view wpf applic want creat new view view model model applic simpl one window form like tool singl send button case one checkbox select new window use view model pop ask user addit detail purpos question let consid new window approach without consid anoth approach like shown hidden panel ideal view code addit view logic vm would initi need check creat new view need bounc respons back view lead code bloat hand creat new view view model violat principl view model know anyth view better creat new view view view model
function act shortcut object method read python request librari code find work sinc librari simpl usag interfac creat complex object beyond instanc shortcut someth like like approach like know whether well known design pattern import say abl use session class privat intern class see similar littl bit differ guess techniqu javascript name approach spend minut look abl find suitabl explan consid proxi facad
would model persist remov child element child element would model program follow item domain let say car also categori car categori certain characterist exampl could car name model place categori sedan sedan categori characterist five door five adult make go model car two characterist virtu ad sedan categori want add certain characterist top even categori easi part link car categori link car separ characterist want overrid one characterist sedan categori remov essenc want model sedan categori five door five adult never want characterist extra characterist sporti ad hope clear easili see link car categori link car characterist via mani mani relationship code databas would remov one characterist categori car link good solut model sedan categori five door five adult extra characterist sporti ad remov charcterist five adult never want get characterist implement logic combin info
reflect disadvantag privat variabl cannot restrict privat modifi use restrict access outsid class use reflect class access privat method field wonder restrict access part requir
microservic still use web framework spring understand microservic architect much work shift front end client side singl page applic spa spa interact back end microservic beg question spring framework mvc still relev think spring boot bean inject jpa persist support still relev microservic architectur front end client side singl page app spa need server side worri model view control mvc irrelev microservic architectur pleas correct thank
pattern cross applic servic event aggreg messag got spaghetti mess applic task rebuild realli want make new code much flexibl also distribut basic level applic collect data hardwar perform control action display data let user send set hardwar separ code hardwar specif data access layer disconnect data backend control eventu ui horribl mess hardwar chang everyth rework also singl applic singl comput yet need modular mayb one server collect data make local control decis etc link upload central databas tri come architectur design pattern help seen event aggreg come lot howev seem most aim ui side thing wherea think cross servic applic messag sound like sensibl design sound like design pattern want invent wheel main principl event agrag sourc consum event know noth seem like could difficult achiev share applic
state vs stateless non web app applic would like understand differ state stateless applic would non web app exampl python applic stateless vs state would script scrape web save result disk consid state one save result databas stateless depend script need python librari instal depend consid state research includ site regard web app session hope get much broader understand concept
log paradigm di io c object hierarchi tri figur support follow exampl scenario ill use c exampl languag scenario nasa send rover satellit differ planet vehicl need lot log reduc clutter would like abl filter log follow way abl combin pick one log rover mercuri log everyth mar log satellit implement object graph object type planet rover satellit earth contain satellit mar contain satellit rover mercuri contain satellit rover usual way add log object would usual return logger name nasa mar make easi simpli configur framework log nasa mar would happen rover would get logger name nasa rover could would know rover mercuri sinc requir log subsystem exist properti rover class idea depend inject design class accept log instanc constructor could theori control child object log name possibl use parent planet class omit breviti problem approach creat logger child object feel kind perhap even anti pattern get messi deal deeper level hierarchi think planet area station rover deciph object hierarchi logger name string nasa mar rover problemat wild card sometim wont enough name might uniqu enough look good idea solv without clutter code someth generic
move web form asp net mvc use web form way long want switch asp net mvc think next step asp net develop also find generat page lot faster provid better control html feel like concept physic big grasp main bugbear feel like need sort resourc someth read fulli understand flow page asp net mvc asp net mvc control almost magic magic oh wow magic someth control return possibl equat usabl html mean thing like code get fire web form read offens html http concept event base stuff realli fit well idea web page thing like page load easi know happen say label creat page want bind someth databas updat control pass text bind view found easier switch vb net c switch web form asp net mvc moment realli impress asp net mvc page load realli quick data annot automat show tri updat insert envisag flow actual press button web page happen lifecycl web form would happen code behind line line basi busi logic could abstract differ class mvc view submit inform back control control send databas updat return someth back web browser write champion web form way shape form obvious older tech understand asp net mvc better way like asp net mvc forc better develop good someon teach tech find profound difficult miss someth easier way learn switch web form mental mvc mental
decoupl ui logic pyqt qt app proper read quit lot subject past watch interest talk like one uncl bob still alway find pretti difficult architect proper desktop applic distinguish respons ui side one logic side brief summari good practic someth like design logic decoupl ui way could use theoret librari matter kind backend ui framework mean basic ui dummi possibl heavi process done logic side said otherwis could liter use nice librari consol applic web applic desktop one also uncl bob suggest differ discuss technolog use give lot benefit good interfac concept defer allow high decoupl well test entiti sound great still tricki know question quit broad question discuss mani mani time whole internet also ton good book get someth good post littl dummi exampl tri use mcv pyqt snippet contain lot flaw obvious model coupl ui framework q object pyqt signal know exampl realli dummi could code line use singl q main window purpos understand architect proper bigger pyqt applic question would architect proper big py qt applic use mvc follow good general practic refer made similar question
spring mvc handl valid error use ajax new spring mvc henc question may appear trivial login form submit via ajax return receiv model view display exist list contact user control use overwrit exist content exist login form html upon success model object contain list valid error get popul error form want show valid error login form go implement send json instead html server construct page client use j queri templat achiev even control return model view consid login jsp contact jsp combin one hide unhid base respons want though would increas payload sent client think common problem alreadi best practic design approach handl
ddd directori structur mvc app mean learn gain experi domain driven design restructur refactor old applic written php util laravel framework mock simplifi structur came begin refactor process includ part default laravel app directori structur found clariti follow statement may help clarifi provid structur user repres aggreg root domain directori underneath aggreg root contain entiti event except dao repositori interfac although user complex enough subdivid directori certain ar broken aggreg respect applic domain infrastructur directori thing specif debat place event listen current applic directori place share function current core directori whether includ http consol cli directori underneath aggreg root directori current keep everyth framework specif default locat whether place applic domain infrastructur directori top level directori project name dir done place underneath top level ar directori tip advic best practic ddd applic structur great appreci
load code need perform impact load softwar applic current start control load model need control recent test found includ model appear take around microsecond alway load model would simplifi applic make thing bit dri howev see mani larg framework auto load non essenti part code reason perform avoid auto load non essenti code basic perform test updat perform test flaw see comment side note pleas keep answer comment topic question awar design problem use global awar work
mvc applic correct way organ entri point busi logic general speak mvc framework control thing like make sens request prepar paramet start action busi logic kind entri point busi logic real applic describ usual defin term servic model plain class question opinion correct way build entri point busi logic creat servic plain class offer method implement static method model
fix singleton testabl tight coupl well known singleton anti patter sever reason tight coupl singleton patholog liar testabl inherit avail cannot program interfac program implement code see problem code list complet assur singl instanc creat see direct depend inject use could also use di contain think peopl misunderstand singleton miss someth
put certain kind function mvc structur start use program use mvc design pattern would like know understood correct put certain thing understood put file one three folder separ code model databas model control logic deal move info store model view way around view logic display thing user question function help deal model model put exampl let say next model user post comment creat function call add receiv two argument model name properti model function use request model doest work need add databas good structur pattern think get look edit saw answer receiv conflict better exampl let say differ type entri articl blog video etc alreadi model one right relat comment thing entri share common basic structur dynam creat creat function help manag entri receiv name entri properti save databas function send data appropri model pseudo code repres function edit sorri updat mani question best way know understand stuff anoth question right place valid user input go model check permiss user access inform understand correct logic goe model one last thing familiar terminolog mvc pleas explain simpl possibl
singleton use encapsul read design pattern book gang singleton use encapsul would seem like yes sure mayb good understand encapsul
use static vs pass paramet implement state pattern design java calcul current posit object follow trapezoid trajectori pattern consist context state state class current variabl accel max vel target pass paramet state object upon instanti effect variabl trickl state regardless wether use occur could creat three protect state privat class static variabl hold valu way object need store unnecessari variabl anyon see problem
approach depend invers dic vs pass constructor paramet previous applic work singl factori class built object structur depend pass class constructor paramet consid use dic framework pimpl case seem like global depend contain would referenc insid class constructor instanti depend field miss viabl approach depend invers pros con approach would want use one approach anoth
break srp inject factori pattern repositori layer context mvc sometim find creat factori inject factori repositori certain possibl use repositori layer insid factori wonder anti pattern e advis keep factori repositori free exampl exampl quot factori class task creat quot class maintain repositori method amp general repositori awar code
builder pattern often implement like often see implement builder pattern java like exampl also peopl introduc strong mutual depend builder type build edit mean know natur builder tie class want build instanc foo builder gt foo question necess way around foo gt foo builder contrari see less often implement creat new instac foo builder creat set field instanc foo appropri builder method call like approach better still fluent api tie class builder downsid approach
creat memori object manag repositori record suppos conceptu ledger popul line item assum line item store type persist storag ledger shown user add remov line item updat variabl insid particular line item price quantiti descript handl exampl could write singl class use repositori layer call someth like line item repositori function like load line item add line item remov line item chang quantiti x etc oper class need awar thing like ledger id load line item pertain id add line item ledger line item id remov updat line item look like aid control class need trigger busi domain event like add new line item updat line item price delet line item etc also thing like find sum line item descript x insid ledger repositori essenti ledger question okay keep concept ledger line item repositori singl class conceptu respect srp soc call class item repositori ledger need might need ever need separ ledger object memori represent databas task busi function repositori task actual databas retriev storag function presum unawar busi function think could use memori ledger class thing like load line item touch databas realli need add edit updat delet line item memori legder much need flush databas databas may becom sync updat someon els although specif case case rare perform various mani math oper line item without touch stress databas new way want sum thing exampl problem see ledger temporarili contain duplic inform databas strike bad mayb want load record sever various item price addit without hit databas new one goal goal question get clearer understand concept repositori memori structur ledger fit mvc univers current understand repositori use store retriev data use exampl comput total price line item ledger class would first use repositori load line item memori could also use repositori sum line item use sql bit confus thought take step ask need memori line item object repres one databas guess need object variabl store data receiv databas abl show view layer without call repositori view thus probabl need structur object collect variabl repres line item readi display view ledger object follow logic ledger essenti control object manag repositori case separ domain entiti
generat function valid function program question generat break function program paradigm yes generat use function program consid follow counter method appear stateless well call counter input alway result output howev time call next produc consist result unsur whether generat break function program paradigm exampl counter generat object call next would produc result anoth generat object creat exact max valu well call collect array would alway return fourth element similarili call next four time generat object would also alway return fourth element context question rais work program kata person answer question rais question whether generat could use function program whether hold state
entiti framework avoid anem domain model busi logic occasion method defin someth like problem user cours entiti framework proxi object mean hit navig properti either user cours caus huge hit databas object queryabl iter normal solv chang signatur mean direct queri databas make chang need effici manner pass databas context busi object seem wrong later migrat user servic layer mean someth like servic refer db context inject creation busi object data bag behaviour e anem domain model avoid
technic term denot opposit depend inject nomenclatur technic write rather pure technic question tri write refactor propos get assign center around expand depend inject applic use spring autowir bean still instanc instanti bean use class obj new class could total inject would like make propos use eleg nomenclatur refer design pattern opposit di proper term tight coupl adequ term stand antonym di
factori requir depend inject tri refactor code use depend inject take non sens exampl class use depend inject contain would chang realli need factori method class class inde need init function replac constructor terribl wrong
point use builder fluid interfac object initialis java c creat object properti set initialis either defin constructor paramet defin properti construct object use builder fluid interfac pattern howev c introduc object collect initialis meant builder pattern larg useless languag without initialis one could implement builder use like convers c one could write elimin need builder seen previous exampl base exampl builder still use c supersed entir initialis
reus top level dto child anoth dto recommend regard use dto child anoth dto use asp net web api c consum result angular x sure realli matter follow dt os want return list site event site name exampl recommend link site event site get parent inform exampl see follow possibl use exist dto use exist site dto properti within site event dto e g public site dto parent site get set pros code use scalabl con potenti lot extra bloat web base json base call especi due unneed properti possibl addit parent hierarchi creat new parent dto creat child dto specif task e g class site event site dto refer child properti site event dto pros reduc addit bloat unus field con minim code use flatten class structur flatten class structur simpli includ site name properti site event dto e g public string site name get set pros reduc addit bloat even con minim code use probabl make sens look case individu assess follow question forese need addit properti parent object difficult add new properti flat structur much bandwidth bloat go realli cost user guess question communiti common practic use dto one control scenario consid bad practic reason make sens creat new child dto use flat structur possibl last rambl seem like good approach problem
codeignit hmvc folder structur good practic web app four distinct user area frontend peopl street user area log user teacher zone admin c panel use code ignit hmvc extens current list modul folder databas tabl correspond modul modul mvc triad except admin folder teach folder admin folder like mini applic administr multipl control handl admin url admin modul look like likewis teach modul like mini applic teacher control rout www exampl com teach control method param look like modul exact one model load model need need schedul model admin student control simpli write think anoth way could go without make custom rout rout php file everi method howev someth sit right could find inform web structur site sub applic never seen websit structur like structur everyth work okay interest know better way
use command event differ command event bus communic seem littl vagu know command execut event handl multipl time still sure use command event let look exampl new user regist web applic creat account send confirm email creat account seem right spot send creat user command bus let special compon handl mayb even implement asynchron bus communic want user ba abl log applic right away bus guarante command execut send email compon creat account see possibl send anoth command bus send confirm email command publish event user account creat event let email sender compon grab job one hand want confirm email sent use command hand believ multipl compon interest newli regist user logger mayb sms sender would implement
state handl wpf mvvm look advic handl state wpf mvvm environ exampl assum tree view item control item button enabl item select view model contain properti select item bound select item tree view button click chang special state current select item store somewher later refer let call store variabl first select item select clear button disabl user suppos select item item even one get entri select item data item store first select item chang depend select item chang intern properti visibl view done select item restor contain first select item button enabl view normal state would like know approach problem wpf import use mvvm pattern use codebehind redirect stuff view model possibl give everi ui element differ look behaviour depend current state complic exampl might control becom disabl show execut anoth command usual certain state current look think way would properti state view model ui element somehow make look depend state although know sure possibl behaviour idea far know button bind one command one bind chang depend state
depend inject class inherit project work year use creat new mysqli connect databas time queri databas order quickfix problem place strategi serious perform issu creat global connect variabl deliver pdo instanc howev also data store session heavili use almost everi sql queri therefor call someth like session xyz gt get login gt get uuid method contain sql queri year deliv reusabl code project team recogn easi less unnerv implement new featur becom final convinc take next step refactor php code unifi mvc code even start use interfac hurray addit design pattern final abl start use php unit effect decid drop singleton databas connect switch depend inject also add abstract base class model class inherit also abstract base class control sinc php allow one constructor switch static method return new instanc class also initi oper instanc like user creat uuid string uuid user creat email string email load user data databas data like pdo uuid chang one request like inject instead inject data everi instanc idea public static final method add static depenendci also get static depend abstract base class store depend static variabl depend inject class singl command moment creat depend might come add add depend get depend method manag individu depend also simpl data like uuid need almost class would handl way handl depend even integ string good practic handl depend problem could run strategi smarter way
implement process manag event sourc work small exampl applic learn concept cqrs event sourc basket aggreg product aggreg work independ pseudo code show implement command pretti similar event use imper name past tens right work fine independ issu command add item creat item ad event basket aggreg need state basket similar product command event work fine like combin process would go someth like term command event happen process manag would follow question find definit answer need persist process manag seem like sure need save event process manag howev event listen tie aggreg add process id separ event process manag keep dri possibl know basket product reserv event ok basket id leak info keep relationship event know item ad produc product reserv event pass along event id seem odd implement basket process manag instead simpl aggreg research came saga someth keep event listen event outsid basic aggreg also react event happen outsid littl world process manag work event outsid send command histori rebuilt event happen aggreg share common identifi like correl id
put orchestr code web applic implement mvc pattern control class whose method map http request also servic layer bunch servic class servic class typic contain oper specif particular domain entiti simpl logic like crud one control method typic use one servic class usual one method servic class question handl logic involv two entiti option see let one exist servic class handl entir logic creat new servic class dedic handl logic like still use exist servic class put orchestr logic control control still deleg meat logic separ servic would take care thing like sequenc decid point commit chang current favor option would like know better way pleas feel free add option yet list
layer present go wherea seem lot inform internet present seem whole lot specif describ put multi layer architectur guess would busi layer recent read someth said busi layer deal domain system wide logic anyth give command control specif applic ui sure differ would busi layer deal control present deal control present would somewhat connect busi logic ui logic exampl separ layer ui busi communic data access similar setup slight differ choic layer simpli three layer model view control would put present class would invari go busi layer go way minim chat view interfac mitig overhead layer
notif system design mobil app use aw sns simplifi use case let say mobil app avail android os similar instagram user upload photo comment like dislik user user comment like dislik photo upload would get real time notif phone tell type action name user photo user follow follow would also get notif user follow upload new photo use aw sns need decid organ use topic default sns offer million subscript per topic topic per account app less user expect reach million user anytim soon guess design would similar microsoft azur ou googl cloud differ constraint see option far creat topic publish notif detail kind action happen user subscrib topic notifi everyth happen mobil app filter relev notif accord local store data like ds user user follow ds photo etc new mobil develop mayb wrong feel like bad design process notif queri local storag time creat topic per action photo post photo comment photo like photo dislik user select topic want subscrib still app need filter notif select topic creat topic per user action publish follow would subscrib appropri topic user follow doabl aw limit suppos reason mayb way big compani also work user follow ideal want user also notifi random user comment like dislik photo similar point creat topic per user time publish user stuff comment etc topic follow post new photo instanc would subscrib topic would get relev notif still topic limit problem guy think design implement system
question mvp pattern win form project hope someon answer win form project form sq lite databas class handl queri databas would like use passiv view pattern view link model form view form view deriv form view class form present organ instead present one form creat anoth form view want control one form open anoth form databas class model requir data insid databas class access realli store seen mani exampl need creat model requir data attribut updat obtain databas thank answer
use observ pattern need stop observ display chang immedi gui applic organ imag use observ pattern anyth similar model view view control inform compon chang assum three compon b c show differ aspect object trigger batch action affect mani object b chang lead updat set object b c depend chang trigger chang three object b c display three success chang apart take time flicker ui would need way global argh say batch action ui chang happen sinc would want limit usag observ pattern ui stuff would like stop entir pattern work ui relev part idea came across situat think usual requir wonder come across solut
pair bloat interfac enum good idea work interfac get bloat interfac design easili implement immut object look someth like sever place code would use repres valu insid data block map exampl implement builder factori initi question generic type map key interfac method name yield map lt string object gt data block map data like option easi mistyp method name exampl fail silent anyon write map get number instead map get id number current lean toward map lt data block field object gt data block field enum one type method interfac upsid approach enum valu know requir type make easi write batch oper like question introduc interfac back enum good idea ask might miss someth surfac interfac back enum vagu similar builder pattern howev see builder left right yet never seen enum written mirror method interfac miss someth
program techniqu trim extra code generat depend inject origin class use depend inject question note di add boatload code want keep instanti nice neat still use depend inject principl one thought instead pass individu class compon put compon array add extra code cours manag array class compon tuck
design pattern interdepend abstract method want model mathemat structur purpos want defin interfac abstract class general purpos algorithm concret implement class three mind situat aris general purpos algorithm depend detail datastructur depend three fundament method int length set lt int gt descent set int normalform normal mean would use method templat pattern e would make three method abstract let concret implement deal method interdepend realli need one defin two realli make one abstract three intend implement exact differ would prefer abstract method first easi time comput length second easili comput descent set third get normalform free clean solut situat
use singleton python django suggest defin singleton python follow way howev way control cannot replac deriv class sensibl way defin singleton python django mayb defin reusabl app defin singleton instanc right app defin program use advantag disadvantag
use superset dto number method class consid class number method requir return number valu strong type languag c effect return one valu method use dto class consid valu method return collect let call pool method requir return exampl consid follow get idea valu return assort valu pool code help make situat clearer use c class implement interfac see method say method1 popul properti dto relev e g b c method1 concern although method popul properti relev calle method access valu dto e g properti e method1 method popul number valu dto method4 still return object lot valu use method look like unnecessari overhead regard concern perhap use dto case better altern approach scenario least c around
creat uuid ddd entiti aggreg learn ddd help build app idea proper way come across confus aspect tri find solut understand need uuid app size creat littl lost method use creat uuid user generat object read differ variant uuid watch talk martin fowler topic event sourc think creat uuid go everi time object creat even tackl user generat data reason want mimic system test fix live bug creat exact ds think v4 uuid suffici would mean system either environ though event sourc realli care uid still pretti new tri thorough answer question googl find anyth thank advanc
scale microservic ddd world interest would ideal way scale microservic ddd world case follow scenario sale context host microservic differ host support context sale context exceed hardwar limit would scale vertic increas resourc server b scale horizont ad server c split microservic exampl sale context generic solut sale teritori context custom product teritori sale person sale teritori oportun context teritori opportun pipelin altern would good approach use three techniqu specif order ie first split microservic softwar scale scale horizont easier hardwar scale term maintain applic scale vertic difficult hardwar scale know scenario specif would like know techniqu microservic ddd encourag
design verif chat applic architectur newest hobbi project want creat simpl chat applic user log nicknam password talk anybodi network top head think design frontend client acquir user object regist nicknam messag object behav like packet network postman deliv given messag object intend recipi user send messag call postman deliv tray locat server receiv postman eventu find messag object intend tray fetch client thought design know probabl suck construct critic alway welcom
uml direct substat vs transit nest substat read wikipedia page uml state machin understand say nest state call direct substat contain state otherwis refer transit nest substat want understand differ direct substat transit nest substat quot sentenc say one contain anoth state nest sure contain anoth state
reason write wors debug code order improv product code titl pretti much speak provid current decis face migrat python code toward use generat current code look like l return list arg log debug examin entri len l e l stuff e outsid debug log l fit use case generat well length need anywher els howev due debug log use generat would look someth like one less readabl call generat twice howev product code straightforward anoth option would one call generat twice big deal sinc realli care perform debug mode opinion look bit straightforward term count element compar sum generat convey intent clear howev preced debug messag hint toward snippet howev still certain move log accept stuff fail reason generat yield way mani valu like debug line program crash start comput univers heat death moreov count still done even debug log opinion general issu would think stumbl onto one three option understood would care debug log convolut file issu patch would think ah got reason like edit programm communiti interest concret solut particular problem opinion first larger question unless cours good argument choic never happen
mutual observ want wire object connect port object port list connect wire method port add wire similar wire list port connect wire add port suppos use one method add port wire method call port add wire respons maintain coher call port add wire thing call wire add port maintain coher go vicious circl break check object alreadi connect noth case make primari connect method forc user use say wire add port call dumb port wire add wire without call anyth els
wrong pass concret model view present mvp passiv view tri implement passiv view mvp win form applic much possibl present one use model present respond event generat view view fact dumb fire event deal form control question wrong anti pattern view creat concret model pass present need test present proper view constructor present test initi
class decor python practic use case look practic non synthet use case python class decor far case made sens regist class publish subscrib system e g plugin event someth like sane case think could built top inherit metaclass decor method could pleas share good bad exampl use class decor thank
autofac paramet architectur start autofac rabbit hole think need pull net mvc site user list favorit player per sport basebal basketbal etc player control inject player servic howev problem servic need know sport deal current use key paramet sport enum regist autofac like sport also need get push player repositori regist almost exact player servic ultim question regist player control proper inject player servic correct sport assum rout look like www exampl com player basebal project main help get experi autofac may obvious essenti beginn
must constructor valu object work even class invari prescrib today discuss colleagu understand class respons ensur object valid state interact outsid class reason rule class know user predict fail interact illeg manner opinion rule appli class includ immut somewhat primit object littl hold primit valu specif situat discuss today constructor valu object work call coupl getter order acquir valu need valid state correl comput result condit valu object class invari e must sourc illustr class php code exampl colleagu argu better comput result class creat instanc valu object pass primit result valu object constructor reason constructor must work addit test code would becom larger mock provid valu object constructor someth necessari simpli primit valu provid appar test code import test code illustr code prefer anyon explain constructor must work googl tell constructor caus side effect valu object explicit embodi kind comput result comput result alway process factori instead pass valu object fail maintain object integr constraint
uml diagram arrow mean iter pattern uml diagram arrow mean iter pattern drawn concret aggreg concret iter backward look thorough legend notat uml diagram guess confus explain much understand arrow mean concret aggreg depend concet iter concret iter use concet aggreg clear mean differ use depend
facad contain busi logic consid facad insid lot sub compon done pass messag one sub compon also busi logic still facad pattern
use object orient principl design system trim select format valu base busi rule unit measur system tl dr bad horribl horrend code kind work mess easili maintain want redesign repackag object well defin messag pass object well defin whole architectur make sens easili maintain new design request question mind toward alreadi exist code need refactor new design detail code generat valu unit denomin also extra format unit english metric exampl metric exampl english f variabl associ php array valu right sign string problem depend particular product need show certain valu e b hide valu depend particular product option need show one valu e show c e sourc valu output get databas get written databas exact format sourc data get get databas first user select unit system metric english select product various product paramet comput output creat format insert databas databas use tabl tabl column share differ product type exampl one product use variabl b c anoth may use e g third one use c f also sometim product option dictat use say variabl x option x variabl option problem valu valu describ type physic dimens extra info sometim toler code generat valu howev faulti particular physic dimens avail certain product valu generat anyway see last row exampl deal valu formatt class clean valu blank effect remov mark remov mm mark check valu remov associ key valu pair array show view problem valu hide show base busi requir mention differ product use differ column data databas read databas differ product option may option use differ variabl display depend option understand current code quit convolut give essenti go detail probabl around class total run tri come even skeleton code show may scope instead tri convey exact pictur go exact code purpos think start better design port thing accord question want get clear design identifi clear boundari defin clear messag produc valu accord product type product option initi thought keep data basic numer format keep unit denomin separ keep extra format descript toler elsewher sure quantiti valu like x typ keep busi logic figur valu show product option code compon class object current everyth get written databas exampl huge backlog databas design chang either deal need redo databas well desir goal come clear design given product product option comput valu show format appropri like give control start end show valu instead tri control valu start valu doabl respons robert use databas store raw numer valu accommod need fair major redesign entir structur one step prohibit moment need think mitig still need consid situat deal breadth exist code luxuri design scratch need think long hard fix e next immedi task code fix valu incorrect hide valu variabl show show specif new variat product simplest thing add modifi yet anoth class accommod busi logic figur exact maintain valu default unit system system explicit state valu current store english unit system keep rout valu alreadi encod unit system origin exampl current thought think special format class know exampl take raw number valu transform someth like x 60mm typ well actual think sever class first take raw numer valu inch assum convert 60mm metric system desir special format class take appli busi format form x 60mm typ somewher system connect formatt system select valu show altern choic base option system think design beyond state far raw numer valu databas precursor entir system seek advic structur organ system chain command approach someth differ e someth like techniqu general overal system design seek type code relat simpl complet understood relat glanc want sure want go ahead current code order class bit piec tri deal exist format issu pass data unorthodox way clariti understand suppos improv improv undergo improv want maxim maintain later henc question
impl suffix legitim name convent hook method java go old code found follow peculiar name convent templat method implement would expect hook method name accept accept hook instead accept impl impl suffix use practic hook method inde confus name practic
remov smell pluggabl dal work applic compos sever differ disconnect compon piec depend three differ data store sql server doc storag blob storag sql server connect detail alway known design deploy time howev doc blob storag current azur detail sometim provid design time sometim provid run time depend specif compon work sinc consist cost use azur requir build pluggabl data access layer event organ want move away azur would minim effort implement new data provid solut come fulfil requir code smell look remov unsur would achiev cleanest manner possibl brief explan structur data mapper smell obvious configur dictionari lt string object gt config valu reason implement reach configur system determin type use event provid connect detail runtim need way pass detail provid class pull type configur system actual provid instanc object applic wrote servic locat servic locat non di way get concret provid could someth like servic locat implement locat pattern provid pattern someon check see mark seemann stroke despit compel argument mark make pattern sure come implement quick answer probabl use abstract factori remov depend configur system abstract factori two biggest concern implement pattern class factori depend one data provid huge concern sinc di contain build object graph add certain amount clutter class abstract factori violat solid chang concret provid e g sql data provid becom azur data provid tl dr overal question question pattern exist one one modifi allow flexibl look smelli still di friend
good reason separ intellig dao layer microservic long term debat architect architectur choic entrepris work migrat monolith architectur microservic one debat locat good approach handl databas access one us stand need separ dao servic databas access direct handl servic class stand contrari discuss day find good reason convinc cannot either convinc question actual realli simpl atom rest microservic microservic handl one rest method separ dao class argument could give separ keep everyth togeth oop orient project java matter
reconcil two requir develop system two requir seem conflict sinc seem situat general thought valid ask system question manag financ compani system custom regist custom data possibl specifi servic compani provid system also bill modul compani regist servic issu bill custom select servic regist two requir conflict custom registr modul servic predefin one pick servic provid custom properti correspond servic tune servic provid point servic defin properti furthermor area system busi logic need know servic properti make servic end hardcod bill modul end user want regist servic want abl regist servic categor servic bill way two conflict integr requir sens servic provid custom end user want bill issu automat one exampl one support servic custom registr could class repres servic properti custom indic whether servic provid allow system make decis perform busi logic relat support provid custom hand bill part system end user ad manual regist support need autom way system automat know support hardcod class properti correspond support entri databas opinion correct way solv issu remov possibl end user regist servic problem end user doen want hear want way matter reconcil two requir deal situat two part system concept appear one need actual code user want freedom regist believ ddd bound context help know yet
trigger event mvc desir event complet techniqu mvc use trigger updat name user click button save product addit product must trigger global state updat like end updat global state code everi method e way clutter specif method somehow trigger global state updat differ way method clutter free
store valid data state transit develop largeish applic custom finit state machin admin user applic abl creat state machin limit littl piec code pr built let call task ok fine reach place think go work big question depend task involv need forc user input certain data exampl certain fsm merg parcel happen need least two input parcel data new result parcel store data need differ depend fsm task perform think big json blob valid without go insan background django marionett js django rest framework postgr sql async task state chang celeri ask dont want mani mani fix model tie certain valid eventu lead high number tabl harder maintain suggest json field store data state valid good transit next state ps sorri bad format use phone without proper keyboard
cqrs granular queri system use cqrs queri written use dapper work well except prolifer queri class almost thing downsid addit queri mean addit mainten overhead especi sql string problem associ lot small class upsid class conform singl respons principl somewhat easier reason use store proc probabl creat bigger general purpos queri order mimim overhead maintain sql opposit seem case implement best approach term queri size queri per viewmodel queri decompos
inject map class asp net mvc control discuss colleagu think inject map class map domainmodel viewmodel control think test map class automapp class properti inject anoth implement need opinion logic kind map chang anoth implement need test separ reus also think eleg better decoupl think decoupl code use one place opinion bad code tie one class class thing decoupl would appreci opinion
busi logic fit command queri respons segreg pattern suppos method like command queri separ includ either command queri fit queri interfac execut input conceptu queri mutat command would need set variabl command expos sinc typic command return anyth caller could access result see good fit
explain traine comput receiv extern messag got traine compani work current work js interfac communic websocket c lang server traine ask good question morn quot understand system send receiv messag comput actual receiv forward messag run code tri explain fail know soft introduc port interact problem feel traine understand know kind question get stuck head programm make hesit front code want traine someon good explan skill help make simpl yet complet answer question help would much appreci
mvc list children control current devlop asp mvc webappl webappl user mani contract current control user control contract control want display contract user control contain action list contract user place action one action display empti form action deliv contract via json
repositori pattern multipl orm develop applic mvc repositori pattern current use ef orm later need chang orm n hibern idea architectur current plan architectur contract model entiti repositori interfac servic interfac data layer refer contract repositori implement servic layer refer contract data layer servic implement web refer contract servic layer implement depend inject uniti data layer tight coupl need break make like contract model repositori interfac servic interfac data layer refer contract entiti repositori implement return model servic layer refer contract data layer servic implement web refer contract servic layer implement depend inject uniti whether work chang orm major impact
depend inject belong constructor setter method write code like could write like first exampl take depend constructor use method depend belong constructor inject method
mvvm best practic wpf client wcf duplex servic think design wpf applic receiv data wcf duplex servic afraid engin thought abstract away wcf communic complet wpf client creat proxi client librari implement servic callback interfac intern way creat callback class wpf applic subscrib event proxi client invok callback method call servic would allow also hide servic refer wpf wpf would probabl instanti client singleton object view model call thought could take creat model class almost ident wcf servic refer generat class data contract ad anoth layer top proxi client use automapp creat model return wpf instead data contract class figur way would achiev complet separ wcf servic extra layer would allow add metadata model return wpf side use model construct view model meant view bind client would also make easier central busi logic error handl make simpler unit test sinc wcf client singl independ compon problem afraid engin databas ef entiti wcf servic dto class would model view model also notic generat class wcf implement notifi properti chang interfac make think intend use model send updat servic tri summar main question bullet point v vm good practic use servic refer genereat class model much benefit complet abstract away wcf wpf proxi client callback method would invok event wpf subscrib generat servic refer class implement notifi properti chang design overkil thank much updat visualis tri seen proxi client middl layer class first class wpf instanti singleton use get back model class second class wrapper around servic refer client call first layer pure data access purpos ad callback method event wpf subscrib
anti pattern class properti creat return new instanc class class call head thing also abl return opposit current head valu final use via creat new instanc head class simpl properti call reciproc return opposit head current valu manual creat new instanc head class creat method like creat reciproc head automat creat new instanc head class return user howev one colleagu recommend creat class properti call reciproc return new instanc class via getter method question anti pattern properti class behav like particular find less intuit mind properti class return new instanc class name properti reciproc help develop fulli understand behaviour without get help ide check getter signatur strict class properti valid concern alway tri manag state class via field properti behaviour via method fail see fit definit class properti
depend inject global object session tl dr question use conjunct depend inject design pattern global immut object ex session refer custom object get idea depend inject immut object great concept help implement good develop practic way make work togeth scenario php background global variabl repres session inform everi implement write wrapper class handl persist updat session data let say session wrapper two set log custom id simpl inject session wrapper depend without tri object immut recipi session wrapper set either properti idea make scenario work immut object thought may see entir situat proper
good design pattern within java fx mvc use lot java fx familiar technic aspect foray larg applic hundr view want make sure start strong solid design pure client applic backend elsewher also mention mdi multipl document interfac applic worsen complex skip tl dr want read follow rant mind control communic part system modular unawar part master control string togeth sure achiev within java fx worsen fact mani instanc fxml view control within mdi call mdi root exampl closest thing like obvious problem main problem exampl control exist durat program mani even semi complex applic fxml control exist time initi main control instanc control obvious issu case mani instanc control need main control list control third problem main control fxml control root project case mdi logic someth worthi main control complet independ logic focus entir encapsul control tl dr troubl find way effect use mvc mvp anyth suggest realli larg scale mdi applic java fx anyon exampl input anyth would appreci code sampl would nice even java fx specif explan implement nice design applic get larg one requir control talk
mvc sever mvc pattern gameloop made small program use sever mvc pattern far havnt got much stuff put model havnt got model yet idea make one mvc pattern panel loop mainloop main control communic start stope main loop main control pass main control paramet subcontrol pan one control pan two control like main main view main control mainloop panel one model panel one view panel one control panel two model panel two view panel two control would consid good structur suggest structur exempl im go add panel function want get structur right thank feedback main view control panelon view panelon control paneltwo view paneltwo control
determinist static vs inject abl class mind sever determinist function like put togeth struggl full impllic static class static method instanc class inject consum case implement would determinist depend unit test without issu main concern come test consum either static inject function feel go inject abl rout much easili test consum mean anoth thing inject consum go static rout consum right class involv test specif scenario consum use liter implement thought advic inform need
pattern retriev batch object seem recur requir like get feedback implement sort test code make sens need retriev batch data stitch togeth busi use need select datasourc match bs second datasourc id field b id field may match id need return match bs match exist want follow good practic use da os object model result someth like pretti simpl feedback recommend test code would write integr test dao interfac probabl noth els packag name peopl use model com model reason also follow code belong seem like would misus factori pattern suggest appropri recommend unit test code
introspect vs polymorph c wonder cost c introspect realli term class type inspect let say problem method decid take action depend type differ object b c could introspect violat open close principl otherwis could also make b c manipul react depend manipul howev want object know class could even someth like howev think bad idea allow type distinct like sinc one extend could someth meant one implement introspect reason way anoth way could approach
c ensur member invok without need call reli get use reflect way implement factori pattern ensur member fabric object invok ad code smelli need touch member ensur invok idea ensur invoc member reason want invok member need bootstrap fabric vendor sourc provid object touch member allow get member idea achiev tri without needless touch member
singleton anti pattern mani articl internet say singleton anti pattern make debug difficult howev understand debug program singleton object difficult pleas explain think singleton inevit need usual perform reason lazi initi control object altern
ddd entiti legaci databas let say legaci databas find order order line tabl contain column cannot null part busi logic need initi also anoth set column use either want start build domain model top realiz mani column attribut belong ubiquit languag would correct model requir time satisfi legaci databas one
practic effici way store differ adjac matrix valu implement certain algorithm work like creat close contour list element matrix close mean last element adjac row column first weight multipli element address contour scalar associ element posit matrix e lookup spars matrix equal dimens except next element contour differ weight reweight element averag funuct two element weight sum weight element want keep general see two way creat contour check see next element contour differ associ weight mark anoth list dict process comput first differ four direct 2d matrix case whole matrix look differ base direct contour term element point problem approach everi step build contour look one valu use next step mix respons well possibl obviat multipl iter pass code comput data need job hand approach creat four copi matrix could huge much easier program howev lean toward approach would like know could actual effici anoth approach consid
observ pattern rest servic ui client develop rest servic use resteasi applic applic ui consum rest servic case server push ui client across brows internet see websocket atmosphere2 etc howev wonder captur audienc use applic server push ui also invalid connect time user session activ detect min achiev heard observ pattern sure help case
csv file process mvc use mvc framework develop modul csv file import databas littl unsur certain thing tri explain step csv file upload initi check like valid csv file size etc step next go main header csv file check new field ad file creat array field check alreadi get list exist field db array creat string tabl field name proper sanit escap use php step go csv file line line sanit amp escap valu use php creat string use valu insert queri step pass string field valu model queri execut thing execut step control step model question sanit amp escap field n valu control model technic amp logic much better way thing mvc framework
need depend inject depenc invers princip case student best practic architectur pattern design princip studi depend inject invers control lot late drink koolad pretti extens lot project last half year recent got discuss boss ask expound virtu depend inject particular appli specif environ develop keen abil comprehend program languag relat concept specif want explain use depend inject better core librari serv api word would tradit architect applic core infrastructur modul data access might look use dip di arrow diagram cours repres direct depend told loos coupl code alway better allow swap compon without affect area applic write lot code target new compon explain code abstract rather concret api prefer forc think term abstract thus element specif concret implement less like leak modul also explain easier test compon isol use mock extern system set test argument asid moment want know modifi infrastructur modul without affect public interfac instanc decid chang sql server oracl persist technolog could make chang data access modul modul would none wiser good answer advantag test sinc unlik switch sql server oracl particular environ could go best practic reiter reason state els could said bolster argument
serial entiti framework object without lazi load specif scenario sure possibl fulli support asp net applic use entiti framework data manag also generic audit librari use log specif type data view librari design ignor data object log would like log entiti framework creat object json serial format issu run attempt serial entiti framework object virtual refer serial process trigger lazi load virtual properti solut stop disabl lazi load ef context public context configur lazi load enabl fals creat dto entiti framework object serial instead project data new type read context unfortun option tabl go back modifi context satisfi need logger various reason one owner project modifi goe chang data type return basic tri enter log without impact function applic whatsoev leav option could creat temporari dto log dispos problem approach whoever ad log refer would need understand object creat dto guess could use someth like automapp assist definit lot work get around fact cannot simpli serial ef object question option way serial ef object without trigger lazi load also impact way applic current work perhap could reflect ef object either copi object direct direct serial
implement unit work multipl storag type tri implement unit work pattern mutlipl storag type like window registri databas app config cannot figur exampl find use entiti framework alreadi uo w help much like store simpl set object understand unit work keep track everyth busi transact affect databas done figur everyth need done alter databas result work probabl start class two settabl properti one tell whether dirti need updat guess need base repositori unit work set context sure put updat insert save chang logic databas would exampl support transact wherea window registri need differ repositori storag type need differ unit work aka context realli confus know exact next mayb think much entiti framework tri implement similar way like
pattern use build charact applic let user creat charact cloth like hat pant facial featur like beard eye use canva display built charact order item get drawn import ie bodi charact appear behind pant teacher told use composit pattern store item current charact draw charact correct order use decor pattern current two list one contain facial featur one cloth imagin way make draw work decor pattern way see actual hard code order like creat charact creat charact bodi decor instant add charact ie creat charact hat decor add charact would actual containi imag hat would basic empti later add item fulli decor charact ad item class know decor store imag inform basic would init charact think could work feel would good approach advic would help thank
handl ownership set multipl bound context ddd project one bc scenario would like defin proper way store account set scenario would one bc store set b cs publish bc accord scenario b bc hold set scenario c one bc store set scenario good maintain busi logic one place keep b cs decoupl overhead maintain publish subscript bc scenario b hand less overhead case b cs need use set differ bc busi logic alway chang b cs tight coupl scenario c provid least overhead autonom select scenario sole depend busi need pattern ddd follow
event sourc undo redo develop applic produc file ultim list group transact event store wonder name way handl undo redo anoth common way implement function exampl file three node might look someth like spirit delet devis way implement undo redo ad undo transact refer transact relat posit store basic tell file builder ignor referenc transact construct current state file redo oper undo transact undon
java script function act element everi time let say html js project involv interact canva resiz draw retriev current state etc obvious separ sever function howev unsur best way go one canva everi function call act canva everi time mind would better pass canva element j queri object specif realli relev question though paramet exampl vs better first one feel like better small part think bother honest realli come satisfactori answer
would leav boundari bound context inform read nginx articl regard inter process communic microservic architectur found diagram surpris second bc trip manag bc actual leav bc order get passeng info differ bc know strict busi logic trip manag bc afford reli outsid bc isnt sole purpos bound context provid higher level autom avoid bc leav bounderi order serv solut space
cqrs correct way want ask guy cqrs architectur complex someth wrong explain pictur one bound context emit event event happend dto someth happen event receiv anoth bound context event receiv anoth bound context saga aka process manag decid command issu event map command messag saga send command command receiv command handler command handler load aggreg root repositori call method sinc domain method call expect domain object command dto map command domain object method aggreg root invok sinc would like use event sourc map data domain object domain event event sourc also new dto call domain event event sourc event method aggreg root method react domain event either rehydr event store receiv first time call method need map data time domain event event sourc dto domain object one note use pretti complex dto case integ string variabl usual sampl keep thing simpl start make real world app seem easi total map happen time mayb legit mayb done somethin worng
mvvm inherit follow solid principl current design phase program henc code written wpf c use mvvm principl go multifunct drag amp drop control act similair facebook post wall make clear imagin could calendar event import note product updat etc mean differ model base think would solid approach build control came singl control object base type creat inherit differ model though entir sure manag yet differ control type inherit base control class extend basic function solut could even better
anyth wrong project structur name convent asp net mvc web api wonder project structur name convent use asp net mvc web api project ok technolog quit new standard yet chang default convent control view chang model directori name view model everi view view model need use entiti set view model infrastructur folder put di class html helper short exampl use ident creat repositori user everi control class need user manag role manag privat properti know separ mvc web api control use technolog one project exampl mvc send view client rest load dynam use web api good idea put differ folder
differ mvp clean architectur question self explanatori add thought far read present layer clean arch respons mv mvp one decid choos one pattern instead
static servic testabl figur line drawn use static servic project coop student work learn write net mvc project develop tri stick tdd project use ninject depend inject written abstract class implement make api servic call intern api class librari ap yet write stuff case find wonder use non static class api servic state inform store api call ip valid address call locat store config file see use static class would make testabl harder unit test static class see work find need mock data could simpli mock object api suppos return imposs method design high like method test tri much feel almost situat particular case fact servic static would affect test would aris tri manipul return object abstract extens util method could test issu static class affect test good reason go static miss someth unit test inject miss would like abl confid say use static sound idea case feel lack knowledg anoth question link static univers evil question know static univers evil place question prudent use static circumst might abstract servic better written static one caus testabl issu
media player mvc pattern good morn develop media player softwar mvc pattern question reproduct media element think need softwar class order design class player regist class model packag user uniqu instanc save media element reproduc state actual reproduct user reproduc two file time player control class control method play media element class interact two class video player class control reproduc media element kernel player design softwar class valid thank
cqrs without ddd without es write model read model far understand big idea behind cqrs differ data model handl command queri call write model read model let consid exampl twitter applic clone command user regist creat user command string usernam emit user creat event user follow user follow user command int user id int user b id emit user follow event user creat post creat post command int user id string text emit post creat event use term event mean event sourc event mean signal trigger read model updat event store far want concentr cqrs queri user need see list post get post queri int user id user need see list follow get follow queri int user id user need see list user follow get follow user queri int user id user need see friend feed log friend activ friend john creat new post get fri feed record queri int user id handl creat user command need know user alreadi exist point know write model list user handl follow user command need know user alreadi follow user b point want write model list user follow user connect final handl creat post command think need anyth els command like updat post command would need make sure post exist would need list post requir need track post question actual correct use term write model way use write model alway stand event store case es kind separ data need handl command data need handl queri handl get post queri would need list post mean read model list post go maintain model listen post creat event handl get follow queri get follow user queri would need list connect user maintain model go listen user follow event question practic ok use write model list connect better creat separ read model futur may need detail write model final handl get friend feed record queri would need listen user follow event listen post creat event know user follow user user follow user b user b start follow user c follow record appear user friend user b start follow user c user b start follow user c user c user b follow question model use get list connect use write model use read model get follow queri get follow user queri make get friend feed record queri model handl user follow event maintain list connect
make iter design pattern wonder make iter special compar similar construct made gang four list design pattern iter base polymorph hierarchi collect common interfac separ concern iter collect independ way data structur replac hierarchi collect exampl hierarchi mathemat object integ float complex matrix etc iter class repres relat oper object exampl power function class diagram would could probabl find mani similar exampl like writer painter encod probabl better one work way howev never heard call design pattern make iter special fact complic requir mutabl state store current posit within collect mutabl state usual consid desir clarifi point let give detail exampl design problem let say hierarchi class oper defin object class interfac oper class implement complet differ also assum make sens appli oper multipl time object say differ paramet sensibl solut design problem practic general iter pattern separ concern implement oper ad function origin class hierarchi operand object sinc want appli oper multipl time operand repres object hold refer operand function therefor operand object provid function return object repres oper object provid function perform actual oper exampl base class interfac math object stupid name know mayb someon better idea deriv class integ matrix math object oper power defin allow calcul squar cube could write java
question model view control basic exampl object soccer team team view team control team list player exist also object player object also need player view player control yes team control use player control player view updat team view
name method specif dt os repres entiti build web api give mean control method want class specifi properti use particular oper would make code easier understand auto generat api doc would also meaning exist pattern least semi standard give guidanc name class
pattern use function depend class like method class oper inject httpclient either direct method creat inject therefor seem unnecessari wast pattern follow rare use depend httpclient case
mvc variat right pattern retriev data pars display due answer decid implement mvc variat applic read confus topic get peopl say busi logic belong model say model hold data state say logic entir control class es other control glue model view display inform model hold specif applic process want put mvc pattern general divid part retriev inform web server interpret pars inform store variabl take variabl display seper process exact mvc pattern look like even sure appli mvc pattern real persist data applic variabl pars thing store mvc mention noth retriev interpret data overlook someth need differ pattern
differ bridg factori pattern c differ bridg factori pattern pattern seem instanita class depend upon logic client side factori pattern bridg pattern factori bridg pattern see class instanti client logic code thing factori pattern client logic decid class instanti case bridg pattern well realli chang pleas help understand
share dto object microservic tl dr ok share pojo librari servic general like keep share servic strict limit none possibl debat whether servic share data provid client librari client use client lib general option client servic use consum api howev pleas whether use client lib use altern languag use general aspect librari case consid servic creat object data let assum object pet databas entiti strict pojo implicit repres under data pojo api defin assum pet age weight name owner address speci etc servic pet keeper generat pet whatev reason retain data must refer servic obtain pet make modif pet let say name chang address chang must done api call servic servic pet accessor servic gather pet valid check servic intermedi servic call servic user intefac arbitrari point simpl ui user face servic wish present way pet object must call api servic call servic call servic etc reach servic gather requir inform begin relay back final ui servic pet object display pretti common absolut mental duplic pet object everi servic dri repeat principl appli code insid servic appli across servic point still add field must modifi servic pojo provid pet object librari contain pojo api servic import depend librari depend servic general librari like idea servic type object updat easier concern god object pro con best design done pass data servic minim repeat pojo class also stay de coupl
much data prepar transform process belong repositori layer use case display variabl pdf file get simpl could someth like way repositori work transform variabl insid get variabl would read raw data databas tabl store express run data express engin evalu express format result numer data e round decim point add denomin e mm inch adorn data put engin toler extra word around variabl group data consumpt pdf api engin view work done get variabl send view direct plug variabl pdf api direct transform need way use repositori get raw data opposit extrem get variabl separ class thing could end could mix match stuff method various class question much data transform format regroup polish prepar etc goe repositori layer help determin data manipul need done outsid repositori layer mayb even data manipul done view layer e simpl regroup data easier way plug tabl p tri data manipul without focus code context question start express store databas end solv express seri format adorn like stay form similar view transform wish write modern oop code
gateway pattern composit often write databas intens applic discov gateway pattern seem fit need problem mani model composit model exampl user model order model gateway interfac user gateway interfac order gateway order contain instanc user referenc insid databas foreign index order user id insid order tabl question queri creat object insid order gateway implement use depend inject inject user gateway instanc constructor order gateway implement call user gateway find id get requir user instanc order seem like wast resourc addit queri databas sql case also could accomplish inner join order gateway care user creation also research found implement gateway pattern return raw row data data layer pass factori creat object method use better solut mention one use join user id order get instanc user call user gateway find id get instanc caus addit queri databas problem know solut use relat new oo concept use join queri instanti order user seem better solut would violat solid principl order gateway care order user
creat new project share user control context creat applic help daili task connect anywher data deal paramet enter input field structur solut helper folder class librari core folder class librari share folder share project app folder wpf project app1 wpf project app2 wpf project app3 wpf project develop first applic app1 creat user control want use user control second applic app2 question creat new project hold user control refer app1 app2 app3 wpf project addit info use mvvm thank
altern use object contravari interfac polymorph gist tri get instanc appropri user servic pass whatev subtyp user work model servic first tri new match servic cast found work sinc would violat type safeti e g compil abl tell pass compat user later understand case abl come altern still allow enforc contract user servic implement method call method generic way pass user object avoid duplic code realli want end someth like bad two user type one method call actual code complex
asp net mvc default state manag recent shift asp net web form mvc base project think state manag work mvc project mvc page control abl retain state upon action click check etc wonder default state manag pattern mvc app pleas share high level input
use mvvm okay use properti inject view model wpf rather new concept mvvm c net wpf project way understand view model suppos lessen amount code behind requir display data form tri much interact logic possibl view model object use get pass view model via properti inject view model util object whatev applic suppos logic view instanti someth base user select pass immedi view model addit realli need thing make sens bind everyth els use data bind ask general okay pass object view model creat kind coupl problem awar
applic servic layer call databas function bad architectur scenario stack java spring hibern model client server applic pattern model view control mvc servic layer class three behavior servic busi rule within method deleg persist applic like entiti manag save entiti servic simpli call databas function pass paramet like callabl statement cls con prepar call call databas function arg servic method behavior question problem applic servic call direct databas function consid bad practic would architectur model applic project like problem behavior mix servic transact consist case mainten encapsul make obscur develop also chang function databas avoid scenario happen applic around world architectur error
cqrs appropri servic distinct queri command client want ensur understand scenario cqrs intend exampl web servic two type client mani extern client queri via get never post put patch delet intern client primarili popul via post patch put delet data store servic use fetch queri data extern client scenario cqrs pattern meant satisfi possibl event sourc handl updat data store intern client cours realiz extern client updat data store use exampl requir came recent
singleton right way go case game read top post stackoverflow se place say bad singleton unsur rewrit code two project bind game engin singleton class access content singleton retriev creat instanc 3d spatial grid store activ instanc futher allow inject datatyp conform interfac de serial custom attribut activ instanc ad remov object activ instanc bulk method thing singleton main ai loop ad remov unit main ai loop inject replac addit main state machin process drive ai signific hate second one need access activ grid instanc singleton one main aspect ai awar surround worldobject store databas project number one alway one activ instanc two thing singleton neccess better way redesign whole thing
open new window view model use castl windsor follow quick tutori use castl windsor mvvm wpf tutori set everyth basic came point creat new window button click got lost basic learn contain referenc alreadi referenc applic startup main window display everyth proper attach thus question manag creation show new window process go initi view model thing abl come includ view shell describ write method creation everi window like run work creat contain manag subscrib event push code current app class extend resolv contain shell everytim need creat new window call apropri method display window thing solut feel wrong feel like would break lot principl
pattern endpoint rout request build servic push notif mani servic coupl differ notif type consum may care like care instead requir mani differ endpoint think make singl endpoint notif type paramet consum notif discard type care integr servic notif servic easier pattern anti pattern call seem like day xml schema common thing json time know legaci system also remind revers proxi seem differ assum frown know even search discuss
store command event much benefit around event sourc appli abl audit system show aggreg state throughout life howev abl find exampl record issu command issu lot learn dissect cqrs journey msdn place see indic creat someth confer event class cannot find indic event occur ever record everi command creat creat get propag event rehydr aggreg would inherit sampl event would know field popul event seem intuit contain inform two dubya
static class intern state work project decid creat databas class manag db connect start look best practic usual either static class singleton pattern class answer found use singleton use static class favor singleton approach static one most understand reason easier make thread safe easier make use oop featur easier test one reason understand static class kind state could someon explain reason behind
mvc share contextu inform view pleas excus long post question bear littl context site requir adapt consider base varieti user set group user belong come thing use includ relev bit model page page tabl would show user certain age model would someth like quick becam complic know show user tri address problem centralis logic particular thing shown hidden call class user configur most contain seri function return boolean indic shown allow us set seri spec test user shown user configratuion put base class page model requir inherit current someth like help most allow us creat seri test user see etc howev clean solut put togeth addit class includ model also ramif render partial view model properti enumer lt foo gt foo want render partial partial also reli user configur problem pass foo partial model partial access user configur would best way access inform way see context asp net mvc way avail new model partial e g probabl pure solut adher best principl mvc involv lot arguabl unnecessari model caus project bloat expos user configur view data e g realli like type safe reli magic string get view data put user configur view bag issu realli modifi page model expos user configur via properti page per feel sinc user configur ambient contextu inform make sens expos via class option general accept best practic mvc expos kind data anyon tri anyth like option past gotcha tl dr best way expos contextu inform view site mvc general asp net mvc particular
improv mvp mvc read three day model view control mvc model view present mvp pattern one question bother much softwar design invent mvp alreadi mvc problem face mvc solv solv bad mvp solv problem mvp intend solv read lot articl histori explan mvp differ mvc mvp none clear answer question one articl read said onto model view present respons inadequaci mvc pattern appli modern compon base graphic user interfac modern gui system gui compon handl user input mous movement click rather central control understand actual anoth way gui compon handl user input exact handl mean
ooa ood rather complex concept novic object orient design read ood book amp tutori recent plan implement video player base exist media api av foundat media player etc practic learn idea given video file open certain media api feed frame open gl appli warp transform final render via open gl warp frame main goal write video player sinc appli linear transform default display layer surfac exist api warp nonlinear transform stuck begin use case scenario relat simpl user request open video file user play video accord book appli uml pattern extract domain model use case domain model inspir design softwar model class see two domain model use case video player video file associ may look like actual design video player far complex instinct see clue previous work write use case extract domain model think probabl problem written use case incorrect generic realli think fine grain size thing use case confirm guidelin write use case user perspect meantim
state propag bottom multi walk tree use tree represent mention consid tree construct resourc status valu level node updat base resourc status valu immedi children exampl resourc status member memori node router node turn critic resourc status router node also show status valu resourc status propag root node question assum resourc status leaf node get updat frequent use snmp protocol say use c approach make tree intellig updat parent node resourc status automat chang status children note think callback function yet get clear idea
dispatch queri rebuild queri result class violat singl respons principl variat command queri cqrs pattern defin follow queri handler defin queri dispatch follow intent behind queri rebuild correspond rebuild method dispatch handl situat mvc view model collect item build option select element sinc item includ post server need rebuilt model view return post error exampl queri handler could defin follow correspond mvc control action would look like follow receiv feedback cowork queri dispatch implement dispatch rebuild method violat singl respons principl queri dispatch need split two interfac one queri dispatch one queri rebuild dispatch least part context feedback use web api rebuild view model appli extra method dispatch use could problem question queri dispatch handl dispatch queri rebuild queri result violat singl respons principl dispatch interfac split one interfac dispatch one rebuild
mvc use window applic attend interview interview ask mvc use window applic said answer correct
prevent duplic event handl best way prevent event handl imagin system custom place order success order creat event rais separ process listen event messag bus one process send email custom assum requir custom must sent email imagin email send process would work follow way send email persist handl id acknowledg messag bus persist handl id fail custom would get multipl email solut thought follow persist attempt handl event id send email persist handl event id acknowledg messag bus would allow check whether event attempt handl rais error ask human whether tri resend better way handl problem like feel like sort thing would common problem find robust solut
event sourc appli event chang done aggreg root sub entiti sub valu object classic ddd design want also use event sourc aggreg design app servic layer receiv command decod call method aggreg understood common practic es question check arg appli creat event actual appli chang write basic data valu object seem like separ part check arg content valid appli part actual copi valu arg updat object state standard ddd without es would pass arg object graph obj list object would handl check updat misunderstood es concept updat clarifi bit simpl check like arg null usual thing es exampl e g updat valu obj obj list run expens calcul lot logic obj object possibl partial updat object new data order proceed calcul seem like gen event event function theoret thing seem like chicken egg problem look like thing talk bout complex aggreg structur
common sens convert databas data object first framework use shall group thing model control view ad servic get thing databas pure data array form method titl ask common sens convert databas data object first say may five layer project model servic object control view puzzl sort layer specifi job also concern multi thread problem io problem load question one use use java se make game bot program game oop seem quit nice love much store everyth object ram sometim serial txt file php job build websit met mvc databas thing chang creat much fewer object tackl array sometim need someth data like valid creat function somewher sure put take param like valid obj
mvvm right choic singl develop wpf project start design develop wpf applic compani one first choic make whether use mvvm main point consid applic basic visual studio like editor design creat project defin u drag drop ui element canva design develop applic project could last mani month depend featur choos add develop last least basic young knowledg mvvm pattern relat framework develop littl test applic mvvm light includ relay command model view locat mvvm worth overkil solo project someth newer could help also futur e g read someth reactiv ui know noth work continu good old mvc thank much help
rest api fit command action base domain articl author claim sometim requir expos oper api inher non res tful api mani action indic either design rpc viewpoint rather use res tful principl api question natur better fit rpc type model reflect read heard elsewher well howev find quit confus would like get better understand matter exampl shut vm rest interfac think two fundament differ way model shutdown vm way might variat let concentr fundament differ patch resourc state properti altern put sub resourc api virtualmachin state vm shut background later point time depend wether shut succeed state might intern updat power put post resourc action properti result exact first exampl state updat shut immedi mayb eventu power design res tful design better exampl ii cqrs cqrs domain mani action aka command might potenti lead updat multipl aggreg cannot map crud oper concret resourc sub resourc tri model mani command concret creat updat concret resourc ever possibl follow first approach exampl use action endpoint rest map command action endpoint second approach exampl draw line design becom less res tful cqrs model better fit rpc like api accord quot text understand see mani question littl bit confus topic help get better understand
mvvm better suit web applic gu current decid whether implement new system web applic front end instead produc execut file use wpf pattern use mvvm sinc suit project need quit well howev keep told mvvm much better suit wpf develop evid regard pretti compel resist believ sinc believ day age make sens system run web front end back end would c either way true use mvvm conjuct wpf widespread web front profession practition take matter would particular interest
io c contain affect design applic use depend inject safe say contain program mechan manag io c via di realli chang initi design di accomplish loos coupl word want achiev loos coupl say logger use contain chang manag case lot depend construct class less type manag better unit test etc chang fact interfac contract logger databas exampl correct ask chang design pattern somewher main would say uniti sql databas class contain would wire assum hand contain helper make nice neat assembl want unit test databas class would adjust contain understand purpos io c contain correct hope get lost depend
cqrs es user manag microservic fair new cqrs event sourc though built one applic asp net mvc use part busi domain one bound context know implement seen benefit near futur need creat new applic sole focuss user manag part larger group microservic respons user manag servic applic user manag account name password etc bill upgrad certain tier servic etc like also use sso provid differ applic possibl futur could provid widget like sign widget various web applic wonder cqrs es good match user manag typic sound like crud stuff seen benefit eleg come cqrs es hand afraid look bias way cqrs es new golden hammer mention actual experi cqrs es one project read somewher cqrs es appli everi part applic domain make sens core applic user manag micro servic user manag core idea suggest decid whether nog cqrs es good rout take
integr view control state transpar mvc applic integr control view often matter howev mani framework often perform transpar integr view control logic exampl allow direct access csrf token simpli write csrftoken similar view happen entir transpar manner howev sinc use framework forc someth like control perform transpar integr control state like modern framework
factori need list avail object static list reader read begin program later need reader factori get appropri reader base extens use problem factori need know avail reader two option make static reader factori method static get string extens static init enumer lt reader gt reader would call somewher start class make reader factori constructor privat enumer lt reader gt reader make instanc pass via depend inject question one would use particular situat also mayb third option know
pattern method call outcom often need call servic method control base outcom error show appropri error messag depend error action show messag exampl otherwis proceed simpl way use return outcom object method call someth like control check outcom success proceed accord result eleg oop way mayb like pass success failur callback servic method paramet better way let give concret code exampl clarifi new user choos usernam write text field press ok button success user regist fail alreadi user name user prompt choos differ name fail problem let say system accept new registr moment fail usernam word mark offens see differ outcom method call outcom differ action must taken
eventu consist event sourc handl next kind situat general defin two aggreg root type ar1 ar2 ar2 hold valu base ident ar1 keep eventu consist aggreg command chang state ar1 chang state everi ar2 object hold specif ident ar1 instanc without event sourc queri ar2 object repositori use find ar1id method achiev result use event sourc
multipl crud orient dao need kind larg data join work assign task investig sever slow applic familiar simpl request take sever minut resolv simplifi facad method get subset inform order custom custom dao built around crud principl order dao built around crud principl facad method call order dao find order call custom dao find order get custom id oversimplifi pass detail even order custom deal da os call process trust say matter much complic amount redund call absurd case find method return parent parent list children reason within dao logic would call find parent id child parent model present number children time return model total number children x queri per parent know children copi parent done way enhanc would scope activ import facad return subset retriev inform present model data queri within dao logic discard first tri preserv current architectur ad cach optim redund call result still mediocr solv slow issu perform databas queri join tabl build subset model instead build complet model reduc process time sever minut coupl second facad signatur remain unchang howev feel like solut complet place regard rest applic logic happen within new method specif addit longer return custom order new strategi seem belong either da os would correct approach deal perform issu happen easili solvabl bypass crud orient da os typic multipl crud orient da os need kind larg data join suppos
cqrs overengin still rememb good old day repositori repositori use grow ugli time cqrs got mainstream nice breath fresh air recent ask keep logic right control action method especi web api action kind command queri handler previous clear answer test hard test control unmock singleton overal ugli asp net infrastructur time chang asp net infrastructur class much unit test friend nowaday especi asp net core typic web api call command ad signal r client notifi easili unit test mock thank owin setup local web api signal r server make integr test pretti fast way recent felt less less motiv creat cumbersom command queri handler tend keep code web api action make except logic repeat realli complic want isol sure right thing reason approach manag logic typic modern asp net applic reason move code command queri handler better pattern updat found articl ddd lite approach seem like approach move complic part code command queri handler could call cqrs lite
transact handl dao servic layer pure jdbc without framework applic work pure jdbc dilemma transact handl go servic dao layer found case implement servic layer sinc dao must simpl possibl exist sole provid connect databas like approach solut exampl found work spring framework use annot mark transact pure jdbc dao layer dao factori take connect object dao class user dao car dao implement connect pool use object connect databas perform crud oper servic layer creat instanc specif dao need action calcul top implement transact handl
durabl messag http need send messag window servic azur servic fabric state servic network connect reliabl must lost data hope could use n servic bus store amp forward pattern send messag think fundament flaw
load servic depend model class model object generat librari use hard wire new oper make depend inject use constructor imposs howev also method call librari e ad servic object paramet option use extern servic object logic use servic locat anti pattern option
domain expert domain driven design much said domain expert one know domain contact develop order build ubiquit languag henc domain model problem practic point view know domain expert end user peopl ask develop softwar random peopl deal problem solv softwar practic point view domain expert look build softwar
implement observ pattern one observ multipl publish multipl event bit tricki situat need use observ pattern realli know best way go quick brief applic implement gui applic allow user creat flowchart mindmap drop shape onto canva manipul shape click drag hold shape base class type mind map compon instanc canva type canva canva object act kind control creat store refer mind map compon instanc object user drop onto canva need implement mous event function specif need canva object watch listen mous event regist mind map compon instanc object basic undefin amount publish mind map compon instanc object one subscrib canva object make thing slight complic need abl distinguish differ type mous event click drag hold etc must distinguish canva object need act differ depend type mous event regist mind map compon instanc object best way implement need standard observ pattern suffic thing littl differ result better code design edit thought mention applic web app written javascript help
cqrs es haskel use tar pit paper architectur find difficult alli cqrs es tar pit paper architectur architectur impli layer state state applic busi domain pure function control dirti stuff make layer work togeth case state depend heavili databas cqrs es mind decis engin decis engin produc event command busi domain pure function command ask item creat decis engin choos accept creat event creat item item alreadi exist simplifi exampl theori pass state applic argument busi domain decid accord case databas cannot pass databas side effect free paramet feel like perform queri check exist item beforehand insid control layer pass result queri databas busi domain return event consequ busi code one relat queri busi logic perform check insid control layer feel wrong far understood tar pit paper also cqrs es main issu seem state huge whole databas wrong reason
auto generat api help page test dialog use paramet option data servic student worker current close finish line project work right implement net auto generat api help page nuget packag web api test client test call howev manag want certain field option choos want dropdown popul valu vs default text input packag creat test dialog use knockout okay creat knockout templat get knockout work complet write java script run test dialog attempt sever way solv problem one use attribut code reach servic extend model use generat page work cach depend issu plus ad headach map enum data call like idea anyway option explor modifi help page sampl generat nuget packag give handl config run start add thing like custom sampl type help page sampl generat hope could creat custom input anoth option thought explor yet use attribut map custom input templat call ap get option creat input would code view would like call api worri depend issu seem flexibl ui anyon done someth similar knowledg framework would make easier would appreci may make harder need new territori thank anyon took time read edit purg clean question sinc long respons old question could make ongo convers confus new viewer
allow use method java script map data type new rule java script map data type array method seem set accept data key valu pair necessarili method least advertis way howev put method onto map instanc intrigu keyword work method return map exampl proper use map method within map within method within map corrupt someth somehow break rule seem fair straight forward reason make think ok never seen heard anyth make nervous creat map constructor way creat object constructor howev creat map factori produc map given type exampl use factori creat map car type thus also attach method map type includ factori howev method attach repeat everi map produc contrast method ad object prototyp allow method usabl method attach map way allow method usabl general question use method map think use essenti way object new rule use map suppos one could ask similar question new ish data type e g set weak map etc limit map
aim factori pattern stop us ride write function instanti creat maze function instanti object imo accord factori pattern suppos overload modifi write function instanti object exampl creat maze function return maze write enchang maze class write creat maze function return pointer enchant maze chang layout mean chang member function either overrid mean reimplement whole thing chang part error prone promot reus factori pattern want avoid point miss
factori method special templat method similar differ two templat method reli inherit defin step algorithm leav task implement subclass factori method reli inherit superclass defin interfac creat object subclass decid concret class instanti two side side sure phrase factori method special templat method mean head first design pattern book beverag method prepar final defin seri step pizza store method abstract subclass redefin latter special former
deal depend requir object inject current tri refactor rather complic object graph use depend inject use c structur map problem realli technolog specif understand basic principl draw blank would resolv depend like public class food public food ingredi ingredi food processor new food processor lot thing custom food public void build food food processor process public class food processor public food processor food f food f public void process yummi case food processor make sens process null empti food hand new ctor good right inject depend new okay case possibl refactor without major chang applic
implement mvc design pattern java fx written pure java current middl design backup applic java fx written pure java mean without fxml troubl implement mvc pattern follow reason way understand view separ control process event updat model reflect chang event caus problem link event control class due fact event requir ad view class declar compon make part control view class far understand exact mvc pattern suppos prevent question link event view class control class without put part control view class
sax like parser pattern call wrote parser certain type binari file recurs structur made api similar sax parser accept object specif interfac interfac sever method call pars happen start foo type name end foo datum type name valu bad entri error msg etc certain promis regard callback call e g start foo end foo appropri nest etc use think variant visitor pattern howev visitor pattern multipl callback callback differ argument visitor pattern talk promis like last point also strict speak memori data structur iter guess part less import also think strict observ pattern state observ late registr receiv event ie either get pars event none start middl singl object accept proper name design pattern edit understand design pattern exist quick precis communic common code structur howev say code structur strategi pattern observ pattern communic ineffici strategi pattern implement interfac multipl method promis regard order call etc look name phrase would direct communic set condit mention least close approxim
visitor pattern collect visit data oper make mani similar element would like collect data element first next bind data object bind expens oper need consist visitor pattern exampl problem
preserv mvvm use xaml resourc context creat wpf applic use mvvm page display status inform task app perform background contain bind content properti view model illustr take look follow code background task succeed set content properti status success stack panel otherwis set content status error bind problem well first creat stack panel resourc page said use mvvm direct access page resourc view model approach possibl approach possibl take sugest creat stack panel view model creat new resourc dictionari import view model creat element page user control whatev creat new instanc view model question approach fit better mvvm none best approach prevent pattern violat
correct design choic maintain static view across multipl control first sure ask within correct stack exchang communiti question belong somewher els pleas let know seem appropri stack overflow develop audiobook app os use navig control navig two tabl view control first view control hold list book choos second hold list chapter book user click play button chapter row start play audio chapter bottom view control creat custom view hold compon standard audio player play paus button track slider durat label current track play view control instanc audio player view share global audio player view think even os would like state audio player bottom control maintain share state user navig around app exampl user play chapter row need audio player view bottom control display chapter entri play achiev fair new os develop believ need defin deleg protocol audio player view view control implement better way implement audio player mayb creat custom ui toolbar
alway optim preserv encapsul mvc finish project creat visual simul life cycl arm instruct singl cycl processor use mvc pattern project ran design crossroad thought go handl specif part data pass model view diagram view set line drawn data path processor highlight base step arm life cycl talk exampl current step referenc two sourc pass alu line correspond two sourc light step textual explan go well set line highlight gif view action simpl pass textual data model view without violat encapsul howev sure handl graphic data line work similar design cours took oop told ignor violat encapsul instanc creat set state pass view model updat sent back view seem solut could detriment real life situat due aris bandwidth issu server client pass relat larg data object back forth chang state view also use solut would also violat basic tenant mvc pattern keep view model entir separ view pass line object model model would know exact data implement project decid stick accept program practic preserv encapsul make concret class model send string object control repres certain set line control would translat string pre initi set line segment activ would also deactiv line segment mention solut howev seem messi seem scale well control would need creat new set line map new possibl string sent model snippet control code code implement class model index keep track current step return two piec data control descript step step arraylist object arraylist string object correspond set line object view line arraylist object control display textual data textbox use line set get string return set line object map string return model activ line set violat encapsul seem like might work better case would scale better neither control concret class model would need much heavi lift board go view could inject refer line object view concret class model view request chang state next step model could pass set line display control could skip translat respons model updat state line view correct opt preserv encapsul design could except made handl data altern exampl way describ ultim correct way handl line object data situat accord accept program practic tri limit amount raw code save space let know pertin code relat question includ thank advic
mvvm architectur use design web applic one client work mvvm architectur web applic dont know incorpor instead mvc feasibl idea far gone mvvm tutori concern xaml wpf go mvvm anybodi explain detail
event sourc merg aggreg root project tri get head around concept event sourc base architectur understand project represent state given point time fact aggreg event led state project store data store purpos queri sinc aggreg project rebuilt stream event merg singl code piec end class would respons updat intern state base appli event creat new event ask chang state instanc shop order assum infrastructur store event dispatch project store project
handl web applic post request event sourc like ask help understand event sourc system use come web applic post request understand event store event driven architectur eventu consist understand cqrs etc cannot imagin event store mechan handl someth like html post request web applic browser return chang state follow page redirect mean fill html form page updat resourc press submit post data web applic event creat data updat resourc id event rais save event store eventu browser take differ page web applic issu queri request retriev updat resourc replay event want present user latest state resourc queri return latest state eventu consist taken place yet system still need millisecond updat event store see updat never took place resourc still look event store save resourc refresh browser see updat actual taken place miss pleas seem someth realli simpl cannot see web applic work event sourc reli event sourc faster web applic assum data alway consist user hit next page bit riski heavi system use thank
architectur android app mvp design pattern develop human activ recognit android applic current design stage design architectur app use mvp architectur pattern note learn develop softwar architectur think design app pleas take account question term visual structur use uml languag repres design improv someth compon diagram astah
singleton use follow case build android app display list dog object activ tap dog list singl dog access activ b fragment b class dog modifi get pass activ c activ modifi final make network request current pass instanc dog back forth activ fragment class use callback parcel extra intent bundl fragment get realli messi realli fast use singleton good idea situat dog singleton load multipl dog begin think list dog list empti box singl dog select goe convey belt activ fragment helper class box get fill data end user flow box fill bunch inform readi ship backend server
mix builder factori pattern good idea object car construct use builder pattern issu lot code redund thought idea reduc code clutter use factori pattern use factori creat car easili one thing factori overload append method common field involv use eg numdoor enginetyp share fli nonfli car creat append numdoor engin type call append param next thing wing uniqu fli car left append known pattern good bad
python make copi individu element iter list realiz python one write element origin list actual affect sinc variabl turn copi origin element order modifi origin element would need realli surpris behavior seem counterintuit seem differ languag result error code debug long today read python tutori sure check book even mention behavior reason behind design expect standard practic lot languag tutori believ reader get natur languag behavior iter present pay attent futur
implement persist framework depend inject current work n tier web applic use asp net web api decid use boilerpl di framework need reconsid architectur tie busi layer persist layer current architectur make use persist facad expos write read databas oper appli uml pattern craig larman mapper interfac abstract dt os map db object interfac implement final app domain class want achiev disassembl pattern sinc need use di inject persist facad depend configur servic path translat ecc use di forc reconsid whole thing want architectur user navig servic allow write particular need make two abstract kind databas oracl mongo db xml file kind object foo bar realli figur document store servic interfac expos method store gather data various databas need abstract sinc go migrat anoth relat databas implement class interfac might db document servic
depend inject w ith parameterless constructor let assum follow interfac class ninject web common cs want use test interfac know vehicl class parameterless constructor follow way seem bad practic follow depend inject pattern solv
singleton updat method softwar state verif valid pattern stack overflow suggest question better suit normal work c work vb net net applic current feel free respond vb net c essenti singleton heavi lift get global set store databas interfac dialog form allow set chang creat singleton first instanti run public updat method howev user open set dialog singleton instanti updat command invok separ case user made chang set set dialog place run updat method outsid initi instanti singleton object conceiv anoth errant develop could irrespons run updat method would harm anyth except slow applic main reason want use singleton case call set made hundr thousand time loop would realli slow applic also set call mani random locat depend user use simpl dto well describ crazi thing applic multipl environ run thread complet differ set long stori way prior develop handl make call updat set dto everi time possibl switch chang set environ upon start applic search around locat seem nut top hundr call dto access want singleton heavi lift verifi environ app retriev set databas except one occas set dialog mention updat method invok end result one nutti singleton simplifi version code basic ask whether reason pattern better one note one potenti downsid solut still need make databas call check current databas everi time class instanti thank feedback
cqrs event sourc event group event propag current cqrs use case setup command dto receiv applic layer handler map command dto appropri domain object need hydrat aggreg root repo call method ar insid smth method ar immedi event appli pass arg entiti part ar insid smth method sub entiti activ generat one domain event domain event part event stream save event store time propag listen aggreg root sinc second sub entiti listen sub entiti event activ perform cpu intens oper generat cpu intens calc happen domain event event also part event stream save event store also propag sub entiti ar sinc nobodi els listen process question sinc aggreag root respons save event event store know exist sub event happen tree transact generat event store insid event store array event store simpli one event anoth order ar consist state event must appli singl transact sub entiti listen method listen sub entiti event sinc hydrat event store call sub entiti sub entiti event event prevent sub entiti listen call time sinc aggreg root need send result messag pipelin case amqp messag suppos messag actual project domain event basic read model dto creat model someth similar read model propag
multitud construct one implement di hopeless use servic locat say client construct depend direct rather accept inject refactor option accord boss actual even allow access sourc class file suppos modern system client go refactor like depend part system depend suppos chang new implement like abil configur differ implement depend satisfi multitud client sad di seem option sinc client accept inject constructor setter option refactor implement servic client use client need bang done flexibl complex refactor implement deleg work yet anoth depend acquir factori control implement use refactor factori refactor implement deleg work yet anoth depend acquir servic locat control implement use configur servic locat might simpli hashmap string object littl cast go someth even thought yet object minim design damag caus drag old poor design client code futur without ad pointless complex client know control implement depend insist build new control new control class build question fail consid question doc brown realli need possibl configur differ implement purpos agil lot unknown manag want potenti chang lose depend outsid world also test need need run time mechan compil time mechan switch differ implement compil time mechan like enough except test granular need switch implement per modul contain group class per class one run system one time chang client use like fine individu control depend like import though need control switch develop team administr client mainten develop client code easi robust foolproof mechan need dev test administr extern hardwar depend chang need easi test configur goal show system remad quick modern actual use case implement switch one data provid softwar hardwar solut readi
static method interfac work softwar play back log file differ type log differ provid creat interfac differ class implement play differ log exampl class hand somelog txt provid class b handl anoth log provid b etc use factori creat object class factori call file evalu file name content determin file type handl ideal would make file static allow want use reflect get class implement log server call function way actual creat one object instead creat object everi class right one found leav other gc current solut remov file interfac rememb implement class static function feel right wonder other would implement
mvc architectur pattern want design architectur system diagram usual take architectur pattern give system ident exampl simpl system school manag layer pattern mvc architectur pattern dose easili get system ident diagram know draw diagram mvc pattern know present system ident pattern fill forc mvc system ident get class modul know even mvc consid architectur pattern design pattern wikipedia model view control mvc softwar design pattern implement user interfac comput sound mvc pattern implement design class modul mvc consid architectur pattern draw architectur diagram simpl system mvc
mvc remot valid approach model model string foo bar foo one x amount possibl valu enum though bar enter user want valid want valid driven foo want use remot valid remot suggest creat control valid control action remot valid attribut point action send valu foo bar action redirect action correspond foo foo valu call redirect action valu valu action valid accord assum found way ensur action exist question reinvent wheel featur mvc would allow valid rule driven properti submit form
templat method pattern depend inject mvc view work client number year ago name protect guilti would period inform like follow view logic platform cold fusion yeah laugh part templat primari form process obvious cring worthi terribl numer reason recent think would architect instead first thought use templat method pattern combin either depend inject factori pattern abstract away client specif reason view question obvious solut assum construct view back end realli standard way anymor though peopl seem switch kind mvc architectur asp net mvc rubi rail etc mind notic asp net core includ support depend inject view mvc hope simpl question describ still valid way solv problem mvc base framework especi asp net mvc particular confus appli asp net view know view support depend inject kind analog templat method pattern asp net view result inappropri mix busi view logic wrong track entir
event sourc one event state two aggreg chang tri learn way ddd relat subject came idea simpl bound context implement bank account money deposit withdrawn transfer also import keep histori chang identifi account entiti event sourc would good keep track chang entiti valu object irrelev problem mention consid deposit withdraw relat simpl one aggreg modifi transfer differ two aggreg must modifi one money transfer event ddd deprec modifi multipl aggreg one transact hand event sourc rule appli event entiti modifi state base event could store simpli databas would problem prevent concurr modif event sourc entiti must implement someth version event stream aggreg keep transact bound version come anoth problem cannot use simpl structur store event read back appli aggreg question bring togeth three principl one aggreg one transact event chang aggreg concurr modif prevent
good idea use status model order communic model control via mvc develop mvc figur architectur base symfoni framework need appli general mvc pattern base softwar word model facad busi logic usual form status obj implement usual use one reason want unifi way handl error easi way fabric http respons depend case usual use factori pattern order generat respons eg exampl use suppos control way tri dri way possibl http respons handl case except thrown get handl model correct status get generat also depend http respons type may one factori also appli case want run command depend framework want know caveat mishap architectur mention may term code reusabl readabl maintainac softwar futur improv end extens new featur would suggest one boss
good practic load model servic like use symfoni framework usual symnfoni framework use provid deped inject contain control load model servic detail current project follow servic yml model basic busi logic use manag order fetch data db perform third parti action interfac third parti api handl filesystem etc etc manag get inject model via deped inject symfoni control use order load model consid good practic approach architectur order appli anoth framework vanilla php applic caveat may
interfac work code insid abstract method interfac use implement one class code insid method howev method call work respect function also get confus use design pattern like facad exampl case php framework laravel
stream architectur aka kappa differ data type tri check understand kappa architectur main point tri resolv one unifi process data analysi piec data user chang set could later affect data analysi exampl suppos io data electr usag home sent immut log like kafka wish perform various analyt said data produc view data end user much electr use cohort comparison etc suppos set administr dial determin threshold analyt want enabl true data replay would need captur chang well log would end someth like event process use s0 set user tweak set s1 generat ad log eventu process process new set chang s1 etc want replay everyth regener view would need process data order sinc data event depend set event would seem could parallel process understand correct understand kappa architectur guidanc necessarili prescrib particular approach process data most depend use case yes tri wrap head around might extract effici use approach still guarante order process especi sinc new event may depend previous event least scenario outlin think pattern could parallel process still guarante order process updat mar never answer comment good enough discern one possibl architectur would also suggest anyon interest check older articl microsoft cqrs event sourc yes fundament pretti good
web api mvc websit ident server4 troubl understand purpos everyth tri web api mvc angular2 project link authent provid identityserver4 would make web api user connect mvc applic communic inform direct web api mvc backend purpos mvc backend aim spa angular2 identityserver4 alreadi connect mvc web api user togeth mean moment login 1st page load major call inform come web api mvc backend guy clear exact purpos mvc backend web api relat spa identityserv integr would help thank
qualifi depend inject coupl mani java di framework spring cdi amongst other implement kind qualifi inject user design qualifi annot advertis way enabl loos coupl object one one power implement allow project understand less coupl see would vagu nicer mock interfac instead object write unit test fact remain specifi exact kind implement need inject miss someth
depend inject nest object introduct work cms applic php class cms general thing everi cms generat site learn lot oop design pattern recent start learn creat maintain code use depend inject issu know solv issu current design pattern possibl solut read follow possibl solut servic provid depend inject contain factori class depend inject etc solut seem advantag disadvantag read difficulti choos one problem biggest issu need state depend like page site contain data load databas object nest insid class explain think best show exampl flow system someth like everi request redirect index php file use rewrit modul apach index php script initi app class call function start app start app function dissect url use get post variabl generat rout certain page everi depend load contain depend loader depend load templat file pars line check specif tag e g lt css file gt data depend render html place instead tag tag found depend ask contain data specif tag return specif object render data uniqu way e g object like php includ css file element meta data etc app class look someth like simplifi return object fragment two type issu aris anoth level object insid depend fragment object sad common situat question keep push depend contain everi function call object constructor mayb static singleton pattern better solut hous depend make avail
intuit depend manag code includ build php cms system pars templat file replac tag content sometim content html css js snippet also code includ code includ use depend alreadi set main scope app class start function resid need domain object load object site url page etc php script includ differ scope access depend way want app class think depend inject use depend contain class cours visibl work insid includ keep depend access intuit way code exampl fragment object depend pass script file get includ feel hard understand without first understand depend set inject usual way go
bad practic control call domain object entiti direclti instead servic bad practic control call method domain object direct instead servic explain figur good design control call servic servic use domain object entiti sometim control need logic need fetch db pass view call method domain object entiti need call servic bad practic exampl access get name method direct control
creat new aggreg root cqrs creat new aggreg root cqrs architectur exampl want creat new aggreg root ar2 hold refer first one ar1 creat ar2 use ar1 method start point far see option insid method ar1 creat ar2root opt1 could call new ar2 save object db imediatelli use domain servic acc repositori could emit event first aggreg root eg shold creat ar2ev stateless saga react issu command creat ar2command handl actual creat ar2 emit ar2creat event case use event sourc shold creat ar2ev would preserv event store sinc affect state first aggreg root still save event store proper way
optim strategi push data db repeat updat consid fraction record chang valu million posit data come system need store databas data come pipe delimit format flat file regular basi say twice day import million record would chang record remain earlier feed suggest optim strategi put data databas fast consid incom data would chang compar previous version databas check similar question discuss bulk insert oper done first chunk bulk insert db idea somehow find record realli chang yes insert updat otherwis leav record way might save lot time pointer
ok use visitor pattern queri net book common see exampl visitor pattern use command e method perform action return type ok use pattern queri function well take exampl visitor interfac get status descript specifi status object updat visitor base upon jacqu b comment
domain driven design aggreg root data need child node struggl ddd concept design aggreg root client multipl project project multipl project assign multipl employe seem natur client repositori would manag project expos project repositori project belong client busi come long want page project display regardless client basic dump project tabl way get project client repositori client domain object expos project repositori case background technolog stack java spring spring data jpa hibern although ddd technolog agnost
call model control relat view develop applic use mvc pattern often find ad new model new control new set view action control chang pretti atom new model use without chang new control least chang exist control similar probabl go need new view make new model problem call collect thing tri modul impli um modular strict appropri build anyth loos coupl work system without modif mvc triplet feel clumsi gloss fact v part expand sever thing e three artefact creat toy word like unit entiti worri alreadi tight associ exist concept test framework respect agre upon name without want becom opinion base call hear call
c consol applic main method facad current make consol applic right main method net consol applic facad consol applic entri method facad
correct abstract structur save object storag object call secur server creat use secur server factori need serial secur server disk hardwar token storag correct secur server instanc save storag abstract save server secur server instanc neither use inject feel need understand domain driven design self taught point start final get
approach build robust ajax applic without use angular js within java shop use spring mvc html output json rest output servic client side familiar j queri ajax messag server abl build ajax applic approach cumbersom jqueri java code approach build ajax app use singl page applic approach exampl librari would support ajaxi widget client side angularj achiev direct main would nice better javascript client side librari like angluarj use client side mvc approach seen ajax orient architectur use angular js http rest call without use angularj singl page orient applic approach build ajax base applic current approach spring mvc html output ajax request call use j queri differ approach without spa approach
de facto weak refer central object storag php cli softwar face serious memori leakag due lot rotten code accumul softwar third parti plugin softwar current object refer look like normal entiti object specif certain level player object transfer level player object also often access beyond level scope even belong none initi final entiti object usual close relat level object thus extra player field server entiti object frequent get construct destruct howev mention bad code make like memori leak consid extens use weak ref mitig problem due various technic reason use weakref extens instead consid replac entiti refer entiti id uniqu instanc throughout whole runtim current key use server player level entiti map entiti object appropri delet henc perman dereferenc thus collect gc care rest broken link null pointer problem fix one one easili happen approach access entiti entiti id global entiti storag make field server store entiti instanc map entiti ds search server gt global entiti store entiti id iter level iter level server entiti instanc found level entiti field one level pass entiti id level id ineffici end pass store two data everi time pass entiti object end make class entiti refer entiti id level id pass feel even wors store entiti id level id server class feel useless almost note number entiti level often becom numer compar frequenc search entiti instanc take place number level object low concret refer much valu actual usual number level server e runtim singleton player server thousand entiti level server run tick base e cycl must complet within millisecond solut consid among approach pros con
cqrs pass aggreg root argument follow code algorithm ar aggreg root execut algorithm phase call run algorithm call algorithm phase1entity1 method phase1 entiti result oper emit phase1complet event publish time gui async event bus interest parti interest parti algorithm phase2entity2 receiv event handler phase1complet event process emit event phase2complet also interest event stateless process manag alg saga emit command cach phase1command creat aggreg store cach result algorithm command rout command handler result creat algorithm cach result ar call method creat param creat method extract cach phase1command messag event sourc handler annot method execut rehydr aggreg event store initi emit event event handler annot execut initi emit event question sinc need later appli cach result algorithm algorithm cach result ar insid algorithm ar appli cach algorithm cach result ar cach result ar method sinc cqrs aggreg root use write data would actual use ar queri data use read project would creat copi algorithm cach result ar seem redund thank
mvc pure view event handl control let say form black label button suppos chang label color red function noth data layer model view button click event handl control view
ok mani depend class deleg work go code biggest program ever creat scratch see thing improv design first creat program use singleton everywher sinc remov complet instead switch use depend inject one thing notic class kind beefi contructor sinc inject need class exampl one class read messag serial port save messag queue class call messag handler collect messag queue deleg correct part system messag handler class current six class inject constructor ok class basic forward messag correct receiv sign need rethink design
follow mvc standard os app theorit want understand one thing plain english actual use standard mvc design pattern os app know modal view control theoret know control take data modal show view howev let say app simpli use api login success login show data tabl view anoth viewcontrol two view control say login vc amp show detail vc theoret login vc login method login method anoth class name global method class likewis show detail vc fetch data api get dictionari array need iter order show data tableview sound simpl right standard mvc format apart login vc show detail vc mani class made perform simpl task make anoth class global variabl usernam amp password kind explain one v c total confus xcode use storyboard view moreov control login vc right thank advanc
get rout method info asp net core possibl given method info object somehow figur mvc regist rout would method tri someth along line check method info rout attribut check class also rout attribut one generat string like class name without control method name better way even feasibl
defin domain object repositori deal multipl databas tabl imagin applic allow add line item quot end result like sale person give print sheet inform name busi name sale person various servic line item print quot along price descript quantiti implement databas level tabl item hold mani item per quot quot meta hold quot meta inform like creat quot quot number revis status etc domain object call quot awar databas layer direct receiv data item quot meta quot quot sheet describ previous question handl domain object one tabl repres intern exampl quot domain object someth like singl repositori singl domain object marri tabl one domain quot object quot repositori handl queri direct databas tabl question exampl better keep concept separ mayb like multipl repositori multipl domain object concern separ complex deal multipl object physic quot represent typic understood item quot metadata merg togeth item without metadata littl point metadata without servic item said prefer keep repositori separ togeth separ handl thing like tabl joi ns oper tabl repositori go deal multipl tabl shift gear bit code purpos delet item item record delet tabl refer data tie item delet tabl thing like graph design etc data belong item item delet singl handler method delet data multipl tabl direct place one method tabl respect repositori handler class method call handler delet portion item also exampl delet item realli touch much quot meta tabl entiti thus may use item repositori handler make lean toward separ repositori case note orm codebas use orm entiti item entiti correspond item tabl quota meta correspond quot meta focus question though orm orm provid conveni way popul entiti tabl without orm either popul entiti anyway e via mysqli fetch object use array question still stand model domain object correspond repositori one per tabl go higher level abstract oper multipl tabl per singl domain repositori final thought super specif quot domain object oper tabl separ item group quot meta object one manag item belong quot care metadata one manag quot metadata without deal item belong
creation pattern creat return object object problem come across never realli good answer correct design pattern creat return object anoth object multipl object tradit creat factori sourc argument factori realli correct name pattern happen want encapsul pseudo creation logic multipl possibl sourc possibl object even alreadi creat exampl say bar list string e cli arg set bar otherwis foo alreadi exist data structur use foo otherwis creat new foo default bar better design pattern encapsul logic factori correct term even still factori sinc necessarili creat foo note use groovi eas demonstr main concern design pattern idiomat way groovi
divid class mvc applic go appl start develop os app swift tutori confus use mvc custom control view subclass ui stack view basic star touch rate meal touch third star would rate star meal etc code handl one star tap class draw star screen handl tap done view control view control project handl star tap similar rate mani star select control also store view code rate model custom control misunderstand suppos work ok model view control class togeth
class member declar pass class given three class refer b class use pass c need c cannot creat instanc b wonder could avoid refer use design pattern think make b singleton good solut think factori could better mayb complic unus refer real problem factori solv problem
ddd cqrs make sens applic most data entri report present php applic share absolut code share common databas one app timesheet applic administr timesheet applic employe log time project propos complet rebuild applic use spring boot spring data jpa hibern java8 want keep applic separ busi may want deploy make chang independ also present take differ data make sens share model api anyway applic lot complex busi rule yet system half data entri half report howev time function handl manual want system would like borrow idea ddd cqrs design propos multi modul maven solut one believ strict follow pattern like doctrin religion think ddd cqrs idea pattern might benefici though rough peopl use system sure event sourc separ databas realli necessari design architectur least make sens high level make terribl mistak tri bring ddd fold idea jpa repositori handl write oper appliat servic handl read return data dto object
refactor vuex redux need get much rigor manag state busi applic heart problem object let call tax refund applic properti liter hundr interact individu properti disabl hidden base valu properti default valu forc valu pull place switch valu still properti numer properti differ limit depend combin properti enumer properti differ set possibl valu etc etc implicit structur mad properti arrang direct acycl graph dag properti like type refund impact dozen downstream node least circular best idea refactor make dag explicit model dag node class would rule candid valu upstream node could insert rule candid valu downstream one chang array would prompt dag node execut prioriti rule recalcul valu chang valu could flow new rule candid valu downstream node prompt recalcul turn lot advantag simplifi make explicit also make chang revers node one valu time forc valu longer forc user enter valu would still candid valu could reinstat came across redux inevit folk much clever struggl near problem redux elm vuex state engin debug tool readi go quit see dag becom redux store dag node rule candid valu public want write specif action modifi differ node want address limit interfac problem map onto redux problem space persever
creat factori method hold intern refer instanc b given two class b class use insid would like expos creation whatev class use moreov b creat everi time instanc need slow initi given would like reus instanc b realli need make singleton could good idea creat factori hold intern refer instanc b someth like doubt find anyth use googl state factori mayb overlook drawback approach
perfect video process pipelin work modular video process pipelin current present tree modul modul set result dynam request data result modul request result mark frame id user request one metric e end result set frame frame select frame exampl top tree video reader modul scene edg detect requir frame video reader generat result frame modul various inform video frame histogram edg map occlus map dispar map etc mani result share modul modul requir data singl frame fix number consecut frame given request frame start explor data neighbor frame direct nobodi know advanc much data need data request handl central servic own instanti modul know modul produc data right cach data usag modul output case metric work well theori practic met problem long cach hold data portion cach frame read multipl time explor metric see may need later cach everyth worst case whole video larg portion load memori unaccept cach problem question full control sourc modul tell cach servic inform want perfect solut would never generat data twice would keep memori usag minimum get rid data soon possibl well expect hear perfect solut pattern would help come close possibl
dependeci inject composit root recent start grasp mvc design pattern back school ask teacher design two part applic recip websit admin win form app start develop core domain move persist move mvc web app start read depend inject dig around decid go autofac appli dip core persist read composit root state io c contain remain closest start applic fair enough problem lie move win form app need redo io c contain b better intermedi layer took care di layer
design model php develop php develop creat framework way littl mvc framework project stumbl across design problem like opinion model chosen take data object path correct terminolog big fan activ record essenti gateway pattern handl persist model hold data problem get data model warn involv php intern perform obsess initi write code perform relat disord start kick thought iter complet unnecessari could replac assign run benchmark case justifi reason first one turn time slower depend data size natur decid go stick singl assign long introduc new problem hell go access properti go call model gt prop properti bunch reason first ugli second get code complet code open error like someon dumber futur call model gt prop smart assign start get error place figur must protect properti give proper access like getter setter take genius obvious realiz call function direct time faster php figur tri call drop magic part left get set method solv problem regard access prop solv problem regard code complet boy would pain refactor ever futur addit decid benchmark would differ access object properti direct oppos get prop get result call function time slower access direct basic see decis take chose slow model data assign vs slow model data retriev anyth miss open kind suggest
inherit singleton come follow design requir want know better way feedback design requir assum app provid differ add on add on licenc user given licens key activ deactiv licens key use add also bundl licens provid user singl licens key use activ deactiv add on one bundl licens app implement php design design come
object call busi domain object object orient softwar engin domain busi object object deal domain model object call part domain model helper object system object sub divid differ denomin would exampl
sever model one entiti use tradit mvc pattern web project control handl use case scenario step call busi logic model servic view present model hit wall model prevent proper embrac object orient got perhap wrong assumpt entiti singl model exampl current web site project imag entiti model repres row databas imag tabl fetch record model constructor nice popul correspond class properti use instanc code nice problem way around must receiv data form databas storag raw data form need quit busi process involv coupl data logic reus class appropri problem use model one get data databas thing get realli ugli lot condit constructor one right thing would simpli creat separ model class get data databas stay stuck singl model class imag good practic case
unit work valid servic pattern studi design pattern learn repositori unit work depend inject mvc learn servic layer pattern tri grasp util purpos unit work servic layer understand servic provid encapsul specif model databas access main goal provid servic control control abl access specif provid servic whilst provid unit work access repositori avail mean seam logic servic access repositori direct sinc encapsul databas access provid busi logic time servic goal unit work worth one
multi instanc microservic grid prevent duplic effort resolv cach resourc background process convert tradit multi servic window servic ws applic azur servic fabric microservic grid run servic bus messag layer ws applic data loader servic singleton prevent duplic effort regard load data db extern sourc part job new grid use sql server parallelis bulk data import function would like multipl instanc data loader servic still standard scenario two job depend data set may push onto process grid one time question standard pattern ensur duplic effort regard load specif set data type architectur avoid
replac asp net core di contain extern contain use asp net core builtin di contain miss featur need need use third parti contain top one nuget autofac structur map simpl injector consist fastest consid larg code base want integr extern contain minim disrupt refactor drop replac builtin contain ask subject best sort question realli care need know compat
mvc sane call model zend framework view helper recent debat colleagu mine follow issu claim mvc sane good practic direct load model via zend framework view helper view relat stuff call anoth control hard accept colleagu claim opposit view helper call prior render view exist phtml file call model servic requir want know claim mvc sane statement pleas keep mind problem trigger debat web applic develop need display reusabl compon html treat widget render via ajax slow entir site
global state evil chang behavior librari c api use object interact applic object opaqu pointer creat destroy modifi via api call object exist hierarchi lifetim loos manag result librari keep pool object track one use one requir librari sort state manag pool current solut use global state manag like howev entir possibl make librari reli global state reason use global state easier read code pass around instanc variabl everywher general reason given global state bad result unpredict behavior think appli question whether use global state bad design choic
readmodel writemodel inherit model field ddd cqrs new ddd cqrs work project implement wonder guy duplic model understand one write command one read implement field except read model getter advic field id name socialnumb etc relat databas getter model inherit write model read model exampl abstract user model user read model inherit user model user write model inherit user model
handl post valid error command ddd cqrs exampl submit regist form check domain model write model cqrs valid state exampl email address syntax age etc creat command send command bus understand command return anyth handl error beyond command bus exampl user regist second usernam email know command fail know error
design consist invoic modul come struggl design invoic generat modul project follow design invoic generat store databas case user need regener invoic futur product chang e g price regener invoic differ origin one question design even product data chang system abl regener invoic purchas order
mvc mvc pattern model creat let say applic eventu save retriev data db sake explan let imagin applic deal student complet api let work busi logic class seamless save load databas instanti student call save student function correct save db connect entiti correct manag let say need creat new window view gui implement new busi logic new view go call main applic window user press menu button creat view model class perform need data manipul save result db control act glue model view work fine question instanti model current event handler main window open dialog like pseudocod gui kind stateless ok everyth die user finish work gui launch display splash screen control ask model prepar data gui die ask model control save data back db howev concern instanti model control way might bad design decis proper
creat singleton access static data properti properti file referenc singleton access easili differ part applic properti put properti along addit inform properti list object singleton privat constructor correct way store access static data server help guidanc appreci ad exampl current
depend inject default construct product code fix type depend illustr hous exampl run time alway depend kitchen therefor wonder gain hous forc whoever construct inject depend oppos provid option inject depend e provid default constructor di constructor lose allow default construct easili seen compar main di main default even class two depend depend hierarchi depth exampl hous gt bedroom gt bed path instanti object top level class seem unfeas larg project depend hierarchi depth di constructor still abl unit test class di expert downsid approach
combin fill creat method util generic factori domain object contrag let say hierarchi class actual hierarchi mani class much busi logic field taken busi domain logic chang inconveni extern servic extern system send request creat object request creat object extern system look like one type creat request type contrag one use depend type valu order isol system strang extern system implement sort anti corrupt layer factori creat object hierarchi factori almost everi type contrag howev like code cast check type safeti maintain develop two question improv code type safeti readabl question combin creat fill method make class one method problem need abl creat document top inherit class call base fill method question way util generic make factori type safe accept generic type valu may s1ometh like
map entiti domain model remov thing far understand domain model know persist layer deal remov element depend father object exampl domain shop basket product want remov product remov product domain model get persist layer awar product must delet e get correspond product relashionship remov databas
check integr string come view scenario gui textfield radio button user insert inform person class model view model alreadi data person view model get person give view user write data person view model get first pass person model question check integr string come view check string empti id match certain regex etc optim implement pattern ora miss someth
mvp call repositori model present note exampl question demonstr pleas focus question problem exampl tight coupl lack depend inject etc form creat contact button save view present written c view present question written save button click call direct contact repositori rather creat save method model call contact repositori correct way first break mvp principl second creat unnecessari method
remov everyth control mvvm work xamarin follow mvvm design pattern know xamarin technolog allow us build os android app share code basic solut project one core one per platform platform contain platform specif code like ui anim ui element access gps overal hardwar softwar specif devic sake exampl gonna assum work xamarin os project one core project logic situat follow project written amp releas much code ui view control os project result work android develop job refactor control move code viewmodel lot mistak problem team architect think push far gonna use actual exampl note use lot action object handl async call anoth debat let say data load beneficiari account currenc requir servic view model action one xxxx servic load xxxx servic fail data load ui thing done success failur request pretti much alway thing alway load spinner call anoth ui class would handl data load abstract alway load data data load view model pretti much ui know assembl react follow reason refactor ui view control currenc fail currenc succeed beneficiari fail etc display spinner hide spinner display error hide error reduc amount code control drastic appli mani control app talk least line code also remov knowledg ui told bare minimum ui display text thing ui decid anim display said text exampl believ cleaner cheaper faster also make work android develop complet brain dead subscrib action tell display spinner care easier far easier let control know currenc load display fail logic share hidden control architect refus version say view model would tight coupl view make interchang need futur mvvmp present design pattern kind agre would coupl never seen anyon interchang view model view risk happen anytim soon develop android hand happen requir work brows io code understand requir mistak rais question use pattern correct move everyth view model mvvm right pattern anyway sinc either way either coupl enough share code realli mvvm right choic seem hype situat show real flaw
facad pattern expos child object wonder pros con around facad pattern implement perhap better pattern consid versus simpli expos depend object caller consid follow vs similar anoth question around facad pattern beginn facad pattern exampl worri model class keep extend interfac interfac terribl dri without gain much howev model class model object mvc pattern would like control talk model worri child object held model control want app play call model play seem better model player play model becom complex best way manag conflict paradigm
add method interfac one implement factori interfac differ implement one implement need extra method other need solv without implement implement except method implement
design help need model call drug interfac take drug id return drug model easi flow sourc b get addit field sure append new field drug model extend drug model class drug b extend drug processor b add new field case might end typecast drug b ok add common field drug class use fine number field type processor could increas pattern think pleas advic
mvc design appropri connect ok attempt implement simpl mvc window applic helper class convert pdf instanti control current implement convert direct updat view model inner feel bad form includ two associ class diagram control notifi convert pdf finish control know respons updat view data set prefer approach anyon direct exampl imagin event deleg involv thank
redux selector learn redux java script state contain tool find numer refer someth call selector e g howev seem find simpl definit selector oppos say exampl selector detail aspect selector function help answer main question stack exchang general googl search seem help contamin lot hit css selector clear fundament differ context redux exact selector concept specif redux general term link offici unoffici document somewher would also help
factori alway creat new object hierarch structur everi node deriv node base class public node node factori node factori factori inject node creat child node use get int id later moment node need refer anoth node structur inform necessari get refer might chang runtim necessarili avail node object construct basic method signatur look get int id time new object creat exist one return first attempt pass node locat would search node first sure locat good name miss pattern mayb repositori pattern look second notic method signatur consid switch factori creation lookup mode initi tree creat work sinc later node need creat well locat logic think search iter node mayb better keep track flat dictionari problem aris factori add dictionari manag lifetim happen node get remov edit vladimir stokic answer current think two solut keep dictionari clean one dictionari weak refer move problem weak refer need remov use timer tick time time second idea node notifi factori delet design problem proper way
depend inject via constructor vs setter updat anoth view use wrapper late bind introduct believ object immut set properti via constructor case object state never chang problem case requir paramet constructor known moment need setter prefer hard code instanc method depenc inject flexibl prefer defer bind possibl solut disadvantag think contain contain mani logic case let give simplifi code exampl illustr problem php interfac person public function string final class person implement person privat name public function construct string name gt name name public function string string return person gt name final class foo privat person public function construct person person gt person person question let say default bind person person contain moment requir name paramet want pass instanc person via constructor best practic
factori method object multipl complex constructor refactor legaci codebas similar object decid would good target becom polymorph move common code base class ad interfac real problem aris tri creat object everi class differ constructor paramet use differ case base context alreadi know class much go would actual better split differ smaller class one deal one case howev legaci codebas mani chang exist code moment code someth like public class handler factori public static handler creat instanc handler type param1 string param2 string param8 switch param1 case handler type type1 return new handler1 param2 param8 case handler type type2 return new handler2 param2 param8 case handler type type3 return new handler3 param2 param8 case handler type type4 return new handler4 param2 param8 public static handler creat instanc handler type param1 int param2 date time param10 switch param1 case handler type type1 return new handler1 param2 param10 case handler type type2 return new handler2 param2 param10 case handler type type3 return new handler3 param2 param10 case handler type type4 return new handler4 param2 param10 public static handler creat instanc handler type param1 string param2 custom class param5 switch param1 case handler type type1 return new handler1 param2 param5 case handler type type2 return new handler2 param2 param5 case handler type type3 return new handler3 param2 param5 case handler type type4 return new handler4 param2 param5 howev hate factori method edit three add anoth handler main reason refactor way keep one factori method singl switch
make chang prone class immut accord effect java item minim mutabl alway better make class immut accord would handl class natur given chang exampl would custom class address phone number probabl chang ship rule class shipper select base differ criteria make sens rule edit case necessarili make immut convent
depend inject creat car class hold part mani car c applic contain with race track car consist hundr part part depend part two read lot question di mark seemann book look like defin car class hold car part car part depend soup part car right place race car race track car entiti lot car part depend race track right edit age program car class obvious need car class program car logic di obvious still wonder idiomat di creat car class defin role mean okay steer wheel drive bolt nut wheel pit crew sort funni interfac without instanc repres car whole
updat combobox present mvp use mvp project new mvp two combobox select option combobox combobox fill new data action done present got view view1 present introduc combobox1 combobox2 properti view1 need data sourc display member valu member refresh method use pattern enough send properti like present whole combobox solv problem updat use method direct access combobox
keep applic stateless may convolut question tri get better understand stateless base read web applic stateless mean request treat independ transact result session cooki avoid state better approach use token stateless noth store server tri understand web applic stateless data kept session item shop cart actual store databas somewher period purg work use token instead cooki relat question major websit amazon googl facebook twitter etc actual stateless use token cooki
support per method call instanti without referenc io c contain outsid composit root read interest articl state di contain referenc composit root modul refer contain mean applic code reli sole constructor inject inject pattern never compos entri point applic entir object graph final compos take mean instanc inject never instanti anyth io c contain pattern allow instead look like work fine need one instanc worker per instanc class worker state wors dispos need new instanc time method call could someth like techniqu frown upon articl also violat principl contain referenc composit root could inject factori seem address issu go write factori refer contain realli seem move problem solv true di contain referenc composit root see possibl per method call instanti support per method call instanti without referenc contain outsid composit root
exist web app introduc restrict access group user work larg web applic user organ compani role possibl team individu user exampl bob member compani offic role mari team develop team task ad abil restrict access various featur well within group taken look question suggest featur granular mess switch somewher like avoid exist featur set plan featur set larg like come extens pattern manag sea featur futur ad even scenario introduc concept featur access exist web applic
clarif depend invers principl read book agil softwar develop principl pattern practic robert c martin talk depend invers principl give follow exampl dip violat seem clear higher level object button depend lower level object lamp solut come creat interfac way button longer depend object lamp theori seem realli clear howev wrap head around use principl real life project go determin class implement switchabl devic need call tell button devic need turn tell object use someth abstract concret thing need use pleas correct question complet wrong anyth unclear question pleas let know glad clarifi thing
use depend inject user data heavi applic larg ish applic purpos aid user design analys multipl configur battl mech mechwarrior onlin curious find sourc essenti data model vfs directori file file loadout loadout base battl mech chassi equip user put build applic java fx take mvc pattern ui consist main window user manag vfs view stat equip avail battl mech main window user open exist loadout creat new one loadout open separ window addit loadout applic wide set current open vfs messag buss command stack use command pattern provid multilevel undo redo throughout entir applic pass around alot exampl command stack share within window window local undo window local messag bus applic wide messag bus sub panel need get local command stack messag bus also global messag bus realli figur get di framework realis model command stack messag bus goe main window loadout window quit complex display full loadout compon avail equip real time stat graph end window broken sub panel control view hook model loadout manual constructor inject depend make sens although work fine would like replac lot wire code depend inject framework look dagger seem light weight requir pull bunch depend howev hard time see appli dagger di framework data heavi applic like mine would like inject lot sub panel window build depend get pass root window construct constructor also need piec user data like loadout display configur object servic found articl describ problem face new new basic model data driven load massiv xml file consist entir newabl inject applic control would loadout window need loadout newabl articl discuss solut problem experienc least highlight stack overflow answer basic say creat factori find boiler plate creat factori sub panel kind put thought di framework suppos reduc amount code need idea use modul seem counter intent modul creat new modul model datum last option di known compil time help use framework look idea solv problem would like reduc wire code presenc user data whether better framework pattern best solut use di framework motiv
c adapt pattern condit base execut build solut recruit divis organ requir creat new employe record organ databas applic clear interview join organ built api receiv applic object hr system creat employe record use adapt pattern transform applic object employe object transform multi step process like solut work good organ consid applic refer recruit agenc case applic inform person inform would avail organ databas sourc object would contain applic id well applic type denot refer recruit agenc invok webservic get applic person inform transform describ higher level propos solut decid rout take base applic type certain step adapt transform either look inform sourc object invok web servic question introduc condit base execut base applic type certain step exist adapt pattern architect want chang differ design pattern rather would like achiev condit execut adapt suggest help us start could great help thank advanc happi learn
reactiv x implement push base feel free correct histori far understand rx reactiv manifesto trace root back c reactiv extens use push callback base messag publish call subscrib method valu rather return valu subscrib scope like iter bit surpris see c matur strong iter mechan like linq mention birth await async distinct pull design reactiv librari hacklang question style fundament messag driven camp might mdash could say cps messag driven schedul realli messag relay could see point mdash realli see benefit hack tight embrac async await model one consequ push messag asynchron actual except difficult almost asynchron object design await ed produc valu depend hard code set forget callback depend howev actual joy program iter hindranc core async generat come yield read lazi async function iter foreach like construct await mean subscrib call scope break whenev want ask element whenev want tri catch throw return pend valu becom iter mdash anyth languag allow synchron code level subscrib freedom especi request element sound like direct reactiv stream go indic problem solv iter though bake start return c alreadi impress suit iter mechan opt callback reactiv extens decis set stage push domin distinct perform familiar express etc reason preval push messag reactiv edit ah interact x name concept look replac observ enumer inde obscur mdash reactiv x organ publish js implement mdash understand bart de smet present ix back oper implement interact even rather achiev convert queryabl build express tree back enumer iter mayb due equival one reactiv x vs interact x good enough mayb unnatur work bart de smet mention subject lt gt buffer dual found enlighten much document outsid talk discuss much motiv still take shot dark bit
way factori pattern decoupl class depend understand main code use factori return abstract pointer object desir chang herit class explain context factori pattern reduc coupl
end start first mvc develop small applic tri best make profession possibl regard design pattern etc java fx app app work fine uneasi fact instanti back end front end tri best follow mvc pattern think far see way around basic applic difficulti level base difficulti level chosen user requir creat backend game difficulti level creat think way start backend without first know difficulti level thus instanti front end howev besid front end logic draw send user input back end back end cours logic tell front end draw chang consid ok side pipe launch
proxifi https request respons hope question consid open end compani work concern imag would like control public offici social media two major driver achiev gain control password inspect text post first impuls build kind proxi intercept request get post etc chang instanc tweet improp word proxi could drop request return respons small po c use jetti abl setup proxi intercept request manipul http request respons easi https differ stori jetti abl ssl tunnel proxi work cours abl see request respons achiev jetti also studi squid internet content adapt protocol icap solut icap open sourc solut seem rudimentari icap offer kind solut anoth approach creat applic use fa ade special client social network way could use httpcompon guava connect site perform requir step publish someth anyon ever kind need help point path edit googl littl bit found scenario describ could interpret mitm attack omg
creation object model use uml convent problem statement make object model problem statement everi vehicl engin gearbox gearbox compos pulley work accord predefin gear ratio car smaller engin gear sport util vehicl su vs bigger engin gear heavi duti vehicl hd vs hand design transport cargo thus huge engin gear larger number gear larger number pulley vice versa well done object model three thing confus part say gearbox compos pulley work accord predefin gear ratio need case take gear pulley object make relat composit object gearbox gear pulley case take gear pulley attribut object gearbox case case gonna show predefin ratio gear everi vehicl b part say car smaller engin gear sport util vehicl su vs bigger engin gear heavi duti vehicl hd vs huge engin gear show number gear three type vehicl accord confus chose case made object gear would need connect three object car su vs hd vs make associ among chose case confus would need show gear attribut three object car su vs hd vs c part say larger number gear larger number pulley vice versa show relat object model kind anyon help use mind sinc day abl final idea thank advanc
best practic mark method call via reflect softwar sever class dynam found via reflect class constructor specif signatur via reflect code instanti object howev someon check whether method referenc exampl via visual studio code len refer via reflect count peopl miss refer remov chang appar unus method mark document method intend call via reflect ideal method mark way colleagu visual studio roslyn autom tool see method intend call via reflect know two option use quit satisfi sinc visual studio cannot find refer use custom attribut mark constructor attribut problem attribut properti cannot method refer therefor constructor still show refer colleagu familiar custom attribut probabl ignor advantag current approach reflect part use attribut find constructor call use comment document method constructor intend call via reflect autom tool ignor comment colleagu might well xml document comment use visual studio count addit refer method constructor let plugin class whose constructor invok via reflect assum invok reflect code search constructor take int paramet follow document make code len show constructor refer lt see cref plugin plugin int gt invok via reflect better option exist best practic mark method constructor intend call via reflect
pattern slf4j use design slf4j realli excit mean way introduc implement compon logger factori import org slf4j impl static logger binder class namespac exist jar file implement like logback jar includ class done classload bind work make implement compon plugabl drop abl zero configur code depend slf4j want know approach orthodox name relat design pattern want learn
good robust way queri process help framework origin especi window good robust way queri process help framework origin especi window got autom test modul queri binari fit special name pattern help see test framework use compil test binari give special command treatment depend test mode object problem sinc use anticip binari requir manual interact quit trigger murphi law subsequ fail exit prefer modul robust enough handl scenario thought launch process within anoth process get pid set kind observ pattern meaning monitor time event trigger whichev first anticip problem worri feel like miss import current nebul corner case also wonder better way check binari framework origin use help queri search framework help messag output pattern realli like skip whole run binari blind figur kind test binari step know reliabl dynam generic approach binari origin creat within framework somehow detect non framework specif way besid help queri includ common approach necessarili univers embrac common approach dole framework easi way mean could make hand small modul support framework known answer comment use dedic process check status process launch safe handl spawn process respons crash unrespons etc stuff like exampl miss dll trigger error pop even launch command line
multithread c mvvm applic architectur applic built c use mvvm pattern differ test need run want show test list item progress bar far test progress want run multipl test one time point futur may depend certain test run test run tri figur set thread manag requir awar thread pool sure work requir limit thread pool better way go build requir
separ model ef front end control level model databas use ef6 certain attribut like key map requir set column sql server null model interact mvc portion websit attribut exampl also requir use data valid user submit form fanci thing like show error messag web page check model valid question two group method attribut compat one set model use interact ef anoth set model use move data logic data access layer control idea would use someth like auto mapper two set model necessari cours creat view model map whatev need
model user manag use uml class diagram school project team build health care system consist differ modul includ modul doctor allow doctor access medic record patient send indic consult agenda modul patient patient take appoint doctor signal emerg send indic glycaemia level weight blood pressur three type patient must taken care system women riski pregnanc diabet peopl suffer alzheim latter assist peopl famili medic staff modul transport affect dispatch ambul locat patient signal emerg upon tri model solut uml class diagram actual due document project came across three problem dilemma model patient first thought creat user class inherit class like allow patient pregnant diabet exampl bothersom search internet found role base access control delv thought intend account manag permiss busi relat stuff like patient differ role diabet pregnant exampl final agre creat patholog class ad list patholog patient violat good design principl standard better way anoth similar problem appear assist sinc member patient famili medic staff would either fall assist class user medic assist class medic staff think problem patient patholog model assist assist assist patient suffer alzheim make doctor appoint notifi wander far includ wearabl bracelet equip gps solut rais issu redund sinc class assist patient implement method make appoint doctor date rais two possibl method doctor class instead appoint interfac contain method person think method move doctor class mayb even basic oop thing repres mvc go make websit mobil app support system thought use asp net get hand get know mvc design pattern littl bit document main mvc php seri tom butler gui architectur martin fowler websit come ask control view layer repres class diagram like found post stackoverflow ask similar question creat uml class diagram mvc say model busi relat class repres general rule control view class repres would translat sequenc diagram sorri post long question quit heterogen thank advanc help advic remark might give us
mvvm exampl use os view control mapview appl map top view button textfield view compact around search button touch expand reveal textfield want use mvvm pattern question respons anim anim happen manipul constraint view control hold view model respons also search bar boolean indic whether open close hold view model view control role view model searchfield take event pass model notifi view control app receiv inform servic make call servic view control view model model
correct way design model relat follow databas model properti user id role id name email password role id name descript activ user2rol user id role id custom id name user id user mani role custom user user allway custom e g admin repres domain layer exampl exampl goe custom save user id custom creat user object save user object custom
passiv view mvp design pattern multipl view come speed mvp design pattern gap understand consensus seem design relationship present view make sens would work state must pass one view next exampl imagin follow two view applic assum data entri form requir credenti enter login form view applic requir anoth layer mvp orchestr view layer would handl show next previous view separ view share data data entri form present access login form model one present creat next p v sequenc mean user success log login form present creat data entri form view pass credenti question fundament one rais multi page app use passiv view mvp multipl present appropri way handl page chang question unansw matter project win form written vb net
circular deped fix item processor class take item list send web api api servic process done asynchron anoth thread web api respond user author app need logout app logout user method current item processor implement catch error thrown api servic error author call app logout user issu implement app logout user need call item processor stop stop process mean circular depend app item processor use depend inject c tor give infinit recurs construct concret object fix app need know item processor start stop user login logut feel like item processor break srp actual call logout rather somehow inform someon error someon turn respons call app logout user someon listen item processor error hard time figur split respons tri use command pattern logout command item processor implement could call logout command execut would decoupl item processor know app issu app c tor call item processor c tor call logout command call app c tor anoth bad idea thought factori could allevi issu thought logout command factori factori creat logout command long creat logout command c tor item processor thought could work fact feel like code smell di c tor seem start look like issu
handl factori like structur huge amount class issu want abl captur set snmp messag want pars creat instanc user defin class may exampl want identifi whether snmp messag trap messag want identifi type trap creat instanc type exampl snmp messag type trap alarm minor alarm case want instanti class type minor alarm contain inform alarm well defin function interfac like print alarm determin happen number differ type eventu becom larg simpl add new type well current implement limit messi basic consist huge els statement subset type support right name specif snmp type obtain snmp messag string like number complet made believ factori pattern might becom messi guess kind lookup tabl would work possibl would like avoid use reflect sinc hard read understand loos thought would use kind abstract factori hierarch structur would resembl hierarch structur nest structur mib tree might best idea still involv dig els switch mess anyon good idea proceed
di tight coupl amongst modul tri understand di seem confus interfac amongst modul stay decoupl let assum two directori modul b packag packag b could use concret b anoth modul like client app question modul tight coupl even import modul client app someth like creat concret implement interfac modul b use instead still need folder b project client app success compil basic tight coupl elev modul level would mitig ever issu concern interfac b modul b tight coupl modul depend modul
exact cqrs command valid transform domain object adapt poor man cqrs quit time love flexibl granular data one data store provid great possibl analysi thus increas busi valu need anoth read contain denorm data increas perform unfortun pretti much begin struggl problem exact place busi logic type architectur understand command mean communic intent tie domain basic data dumb wish transfer object make command easili transfer differ technolog appli event respons success complet event typic ddd applic busi logic resid within entiti valu object aggreg root rich data well behavior command domain object thus limit domain represent data put much strain real question exact logic found tend face struggl often tri construct quit complic aggreg set rule combin valu also model domain object like follow fail fast paradigm know object reach method valid state let say aggreg car use two compon transmiss engin transmiss engin valu object repres super type accord sub type automat manual transmiss petrol electr engin respect domain live success creat transmiss automat manual either type engin complet fine car aggreg introduc new rule applic transmiss engin object use context name car use electr engin allow transmiss type automat car use petrol engin may either type transmiss could catch compon combin violat level creat command state understand done command would contain busi logic limit domain layer one option move busi logic valid command valid seem right either feel like would deconstruct command check properti retriev use getter compar within valid inspect result scream like violat law demet discard mention valid option seem viabl seem like one use command construct aggreg logic exist within command handler respons handl concret command perhap within command valid like approach either current use command creat aggreg within respons command handler command valid would contain anyth creat car command exist would contain compon know valid separ case aggreg might say differ let imagin differ scenario mix differ valid process creat new user use creat user command command contain id user creat email system state follow rule user email address must uniqu must empti must charact max length db column case even though uniqu email busi rule check aggreg make littl sens would need load entir set current email system memori check email command aggreg eeeek someth someth perform would move check command valid would take user repositori depend use repositori check whether user email present command alreadi exist come sudden make sens put two email rule command valid well feel rule realli present within user aggreg command valid check uniqu valid succeed proceed creat user aggreg creat user command handler pass repositori save feel like repositori save method like accept aggreg ensur aggreg pass invari fulfil logic e g non empti present within command valid anoth programm could complet skip valid call save method user repositori user object direct could lead fatal databas error email might long person handl complex valid transform most happi solut feel like need affirm idea approach complet stupid pretti happi choic entir open complet differ approach someth person tri work well would love see solut work php develop respons creat res tful system interpret cqrs deviat littl standard async command process approach sometim return result command due need process command synchron
reason dto orm autogener stuff model use view model encount yet situat programm use autogener model linq sql ef n hibern whatev view model usual architectur simpl kind dal contain ef linq sql modul specif stuff mvc project may may contain repositori either way dal model use view model number properti use said model vari per view although usual less properti use recent encount new mutat said pattern dto model lack requir addit field programm creat view model inherit ef model pass view tutori push approach book trainer push sensibl reason besid lazi total wrong impress correct accept pattern
use servic layer direct control use command command handler approach process request asp net web api go build simpl asp net web api applic send request 3rd parti servic return back respons client send request extern servic need prepar request payload db also need valid valid send payload 3rd parti servic http client return respons client creat servic class everyth like model prepar valid send request extern servic return back respons call servic control class one approach anoth approach creat command command handler servic class case payload prepar valid perform command handler servic class clean approach problem accord rule best practic command handler void need immedi respons 3rd parti servic question best solut scenario shall use servic class direct control servic class oper use command handler return type expect valuabl suggest thank advanc
mvc os pick view appli suitabl control per mvc design pattern gof view disabl accept input simpli give control ignor input event mean decid view first pick suitabl control scenario need os storyboard base develop primarili driven control instanti view control identifi view scene tight bound control class mean os lack mvc featur mvc full potenti someon help clarifi thank
proxi authent requir suppos write code differ handl run system proxi http request develop applic upload mani file client network internet via rest api long period time run pc domain howev run one particular client environ arbitrari amount time request start throw except proxi authent requir pc configur use proxi specifi proxi inform code assumpt use system proxi paus upload wait resum seem resolv issu run multipl instanc applic machin time one may begin return except hum away fine retri logic app given file retri time give never wit recov error retri recov type error occasion individu file get error oppos happen upload period time also may actual alway behav way run proxi first client run app one configur complet loss whether proxi configur issu client side issu applic apologis correct stack exchang forum post stack overflow got traction attempt attack problem anoth angl
depend inject constructor inject smell vs servic locat proper approach tri improv mvc project read articl di io c contain constructor inject servic locat want go ninject help depend got puzzl stuff read controversi would wide discuss one part respons like mark seemann respons follow jeffrey expres fear address incorrect manner howev sure case exampl let look mvc control serv communic layer mcv app web api bit concenrn number depend would constructor inject ocr connector http client clear depenend issu concern two depend action requir configur read someth config similarili logger might need case would true mani class one two actual depend logger config mayb someth els futur moment use simpl poor servic locat instead pass logger config constructor creat need factori simpl simpli return logger wrapper like factori live separ assembl seem decoupl concret logger actual project suffici intend exchang logger config wrapper built configur manag runtim whatev need aris would chang type return get logger type type method pleas let know kind mix proper di servic locat make sens altern think would mayb pass compon factori constructor instead global access static still servic locat place elsewher pleas let know think
di local default default null constructor argument instead properti inject issu read mark seemann book di specif question regard implement local default book advoc properti inject case want ask follow simpler yet versatil altern assign null default argument constructor paramet chang class guard claus assign local default exampl way leav class open instanti differ ia well allow class instanti constructor argument breviti never need worri properti null creat properti inject method guard claus constructor guarante null moreov user creat new instanc b null indic option differ depend pass case di would never default paramet null scenario constructor argument would non option depend benefit mix match constructor allow default implement requir concret class pass well thing like downsid method realiz put small bit logic constructor realli act default guard claus similar way would call setter local default paramet constructor use properti inject method seem obvious recommend someth miss bad coupl extend mislead etc
distinguish differ view model servic layer first project tri use mvvm xamarin form pleas gentl howev lost differenti logic belong view model model servic layer work simpl app show list detail page list object select chang one field return list user satisfi navig anoth page confirm transact send phone databas connect web servic current servic web servic databas servic itemcount servic view model respect view itemcountpag show whole list itemcount detail page itemcount confirm page becom lost interact itemcount servic hold logic process e get list db web servic filter list updat data databas web servic view model run command view howev think servic expos list viewmodel charg handl item filter let servic know item need updat shown next view itemcount confirm view chang item shown know use observablecollect notifypropertychang essenti chang quit lot keep flip back forth layer goe servic viewmodel would like littl direct also great resourc may use learn mvvm would etern great
model content manag domain domain less straightforward articl rather sever type articl want edit publish publish articl expos api public thing problem edit publish articl version revis etc irrelev moment need model process author editor creat articl new articl author edit save articl data updat author publish articl becom avail public author edit articl save publish version chang happen articl put state chang descript might bring state pattern sooner need tri approach problem follow way articl aggreg current version publish version access seem weird basic refer version split problem two context edit publish creat new publish articl entiti articl publish realli model real situat domain expert say creat publish articl articl look state pattern got lost tri understand actual use concret exampl bs languag irrelev glad see anyth help link research piec code languag thank
abstract factori design pattern need help abstract factori pattern design calcul engin calcul differ channel like captiv captiv templat headquart futur differ channel ad attach draw set pattern problem item calcul specif channel item calcul type channel exampl captiv manag fee calcul captiv calcul factori interest margin calcul head quarter factori servic markup calcul type calcul factori design class solv problem
deal period task requir recent receiv follow requir quit hard implement system window form financi system requir follow system open last day month ask whether admin user want generat next month billet turn anoth requir like system open first day month ask whether admin user want generat antecip invoic month system alreadi function develop allow generat billet invoic issu issu given certain day month certain specif rule met system must allow specif function call case billet day last day month rule met billet generat charg paid next month function generat billet case invoic day first day month rule met invoic mark antecip function generat invoic idea make slight general approach problem follow way creat one period task two method execut excut first tell whether today day run function execut run second creat one period task condit encapsul one integ repres day month class one met today method return true today said day month fals otherwis implement period billet generat first task period invoic generat implement period task hold one refer period task condit first form open app run implement sort dashboard list task done today descript task button run creat one period task execut event signal task execut certain month make list dashboard check concret implement period task event see still run show issu come accross tri implement manag fact user need edit persist period task configur task ii deal event correct bigger problem persist persist usual delt use repositori aggreg problem need persist one instanc period task configur per class need way say particular instanc correspond period billet generat particular instanc correspond period invoic generat realli know remind littl bit cqrs seem creat command ad support check custom rule command ran specif date execut rais save event anyway question twofold approach reason know feel like invent much know right way object orient design mean idea came thin air specif process analysizng requir whatev one abstract seem correct solut valid way think correct better way approach particular problem could thought instead follow rout
event sourc vs sql server tempor tabl creation tempor tabl sql server similar technolog databas would consid event sourc unnecessari audit techniqu similar one deal entiti special dt os tempor tabl far easier implement readi right box question tempor tabl good enough replac event sourc would advantag one
prevent depend inject kill object orient program recent lot peopl adopt di project work aspnet core problem di turn code toward procedur paradigm exampl oop way would howev di cannot creat someth class direct need satisfi depend code general look like result object method bag properti process differ servic hand would creat giant object lot depend execut simpl task need creat object graph fix design approach obvious downsid instanc cannot pass someth class around need object stuff pack class mani problem like function scatter across mani file difficulti implement secur request inner servic di encapsul object must properti public manipul extern class edit small exampl better illustr api would write di client click shop cart deliveri option display subsequ request need therefor approach creat shop cart deliveri creator depend request instead write someth like cannot anyth shop cart class alway need one servic also derek elkin point one consequ systemat use depend inject class hierarchi becom complet flat sure good thing made lot research experi howev convinc style program get idea someth work need examin code guess may thin idea work old exampl could look class would see option could check class take shop cart
repres object whose instanc share set member function identifi identifi specifi differ behavior attempt develop open sourc python modul model task network discret event simul fundament compon task object includ various data distribut possibl task durat time releas condit criteria initi task begin effect statement execut upon initi task end effect statement execut upon conclus task begin differ task forth task must includ element logic contain uniqu task instanc entir task network could conceiv contain number task would like make easi possibl creat one therefor think follow object orient paradigm simpli task class user could instanti sure implement fact differ behavior associ task instanc obvious solut would make task subclass overrid main task class possibl suppli differ class implement file seem silli would result ton pointless singleton also consid wrap method dictionari get pass default constructor want process defin task becom unintuit requir mani step end user also tri figur task network data store raw python json far awar run problem sinc json cannot repres behavior associ task sure probabl lot simpler make anybodi point toward good design pattern kind situat thank
option guarante client connect server realli think proxi server talk bunch servic want way prove server behind proxi actual receiv request proxi server someth els thought let client regist dynam key secret pair thing sign request pair might solut consid full control client server would rather network applic layer app specif built go
asp net mvc web api unit test data access layer let say repositori interfac implement repositori class use databas context implement repositori method unit work interfac implement unit work class use repositori question unit test repositori idea use databas context know good practic mock databas context enough mock repositori test unit work
wpf arrang row rectangl origin post stack overflow got messag correct forum question process creat small applic task visual sort algorithm use mvvm pattern first display row rectangl number sort left illustr quick draft applic show step algorithm physic move rectangl illustr third rectangl switch place second plan sort rectangl class put observ collect run algorithm seem simpl enough problem movement rectangl fact anim posit move physic list second put back anybodi good approach
mv x pattern much nest much enough post may smaller appear skip bullet list lemm say know go larg entir opinion base everyon approach best practic ideolog hope glean thought work success web app previous plenti resourc discuss various mv x pattern most detail interact compon never seem dive deeper separ various compon nest model within one anoth hope becom dev referenc insight generat come set eas use app mean web app take follow mock app base simplifi fb layout quickish run refer skip question header left right hamburg menu may drop type menu perman fixtur menu item data associ e dynam valu show number messag new item whatev app logo home page link search area link btns profil home set etc user drop menu standard drop click n go menu btn thumbnail img profil main bodi infinit list various post img video etc post option dropdown report hide emb share etc top area post content poster profil imag hyperlink profil poster usernam hyperlink profil time hyperlink point page similar time post post comment imag video hyperlink etc third parti site bottom area viewer interact like comment share btns profil img comment text area text area hous btns add extern media comment previous comment user profil img user comment like comment btns like time hyperlink comment option dropdown report hide emb share etc final question question pretti heavi know simpl answer shorter novel tri get differ peopl approach general rule thumb like understand principl various mv x pattern alway doubt implement feel like hack stuff togeth anoth develop would appal necessarili look answer everi question mark follow lot seem endless string question illustr shit show run head everi time work new project final final question even simpl ish app like mani model view control v c mani understand lot go let look top left hamburg menu moment menu v c simpli set compon header v c header handl menu relat stuff entir menu includ hamburg icon drop portion singl v c nest within header insid wrapper menu item v c mayb addit data need collect display monitor updat simpl click n go hyperlink item compon menu v c level entir header everi element v c perhap complex e menus search area menu btns part header v c header control handl hover click event actual menus v c within wrapper header yep headach mani header compar simpl next post item within main bodi final thought stuff nightmar serious crap keep night tri figur approach someth like without total f ing leav entir unmodifi futur dev proper effect execut kind thing could differ acquisit go tit thank make bottom thank help one lose sleep
depend inject librari intern depend background work class librari support web site librari combin relat ap sever differ vendor particular nuanc domain object exampl imagin credit card provid expos bank account object loan provid expos account check account system expos account dto primari design goal librari hide various implement allow web site work singl concept account set servic decid vendor call coordin data various sourc hide confus keep api clean domain object servic public insid librari vendor repositori domain object vendor class mark intern keep web develop circumv servic layer either intent unintent flow goe like web site api servic layer public repositori layer intern solut use depend inject uniti io c contain ap servic regist composit root inject direct web site control constructor argument work fine problem problem struggl servic constructor argument allow repositori inject repositori intern web site cannot regist composit root without someth truli bizarr reflect plus want web site develop worri inject question inject intern privat repositori public servic layer adher accept convent di approach propos solut way right follow ad abstract repositori locat interfac class librari uniti contain left unseal unit test project deriv version substitut stub repositori ad default repositori locat librari hardcod provid product runtim repositori servic class instead inject repositori inject repositori locat pull repositori need constructor web develop team task web site composit root need regist default repositori locat uniti contain uniti contain inject repositori locat servic inject control servic retriev repositori need unit test unit test project unit test assembl given access intern member use intern visibl attribut test project would substitut stub repositori locat conform intern public interfac thing troublesom design io c expert sort problem creat worri two uniti contain one web applic one librari repositori locat hear realli ought one also read anti pattern pass around repositori locat hardcod product runtim think harcod cardin sin like mani engin regard suspicion unit test project need intern visibl attribut ad librari definit code smell wonder would deal unit test project chang name need sever constructor servic take one inject repositori locat instead separ inject individu repositori conceal individu depend compil time approach resolv issu consist io c best practic still conceal repositori layer behind intern scope
design unpredict model work project deal let simplifi school student general requir certain student could assign certain school work internship school school per se hospit prison nurs home etc sinc use orm entiti class first idea use inherit map like parent class internship provid particular child class howev anoth requir done user futur add new instanc internship provid use form time abl add specif properti sometim class sometim particular instanc per instanc internship provid may set specif properti could avail form text field choic option subform etc kinda solv like internship provid class among standard properti long text properti well insid text properti field json key valu pair describ specif field valu store also monster custom form generat featur handl fair ok internship provid instanc specif custom form assign futur edit two reason requir want elimin need hire softwar develop futur domain complex unpredict better idea concept cover design pattern like would say client thank
constructor factori expect instanc use product factori creat product need instanc class noth actual factori howev product cours use instanc provid instanc factori pass everi instanc product howev seem weird provid someth factori need simpli pass product altern come mind provid depend actual need someth method within product howev would enabl user api provid differ instanc class differ product shown question therefor okay provid depend factori actual depend actual product
es cqrs concurr handl recent start dive cqrs es might need appli work seem promis case would solv lot problem sketch rough understand es cqrs app look like contextu simplifi bank use case withdraw money sum person withdraw money command issu command hand valid verif event push event store valid succeed aggreg dequeu event appli modif aggreg understood event log sourc truth log fact deriv project understand grand scheme thing happen case rule balanc cannot negat person balanc 100e person issu withdraw command 100e valid pass money withdrew event 100e event emit meantim person issu anoth withdraw command 100e first money withdrew event get aggreg yet therefor valid pass valid check aggreg updat yet money withdrew event 100e emit anoth time inconsist state balanc 100e log contain money withdrew event understand sever strategi cope problem put aggreg version id along event event store version mismatch upon modif noth happen b use lock strategi impli verif layer somehow creat one question relat strategi case event log sourc truth anymor deal also return client ok wherea total wrong allow withdraw better case use lock b lock deadlock insight best practic overal understand correct handl concurr note understand person withdraw two time money short time window imposs took simpl exampl get lost detail
mvvm persist view model new mvvm get general idea one thing tough time find answer inevit applic save button ui ui talk view model view model updat model object model save whatev persist medium db file system web servic question last step happen view model get instanc dal object public vm model obj dal lt model gt dal model crud method part interfac third option get complet wrong
mvc design interfac databas newbi web develop heard mvc right control take charg fetch data db question pattern mvc mani object interfac db use exampl web project two control control control b two option generat one object interfac db two control use object control object interfac db
author server implement crud vs cqrs want make simpl author amp authentif server proper audit log use see job mani exampl classic crud approach purpos think tri use cqrs es mayb approach simpl web app app requir author amp authentif cours want keep separ deploy app ui admin question implement separ server cqrs approach well overkil simpli return current user valid user session time left p server implement via c net term definit crud creat read updat delet cqrs es command queri respons segreg event sourc
depend inject framework use dynam type languag ago investig depend inject framework project work python part full time job moder larg complex found project depend injector look interest mani look somewhat abandon exampl project make depend inject framework appear use amount code simpli put depend two class object first place read look like similar situat happen di framework rubi well turn easier use depend direct code framework use use di framework languag dynam type know framework often use static type languag java c dynam languag like python rubi
mani present use proper mvp android app refactor use mvp activ two fragment scenario one present present know view one view receiv input present method call could call method view advantag flexibl disadvantag present might get realli big scenario three present present know view present call method present know view advantag strict modular flow may obvious disadvantag lot overhead two interfac present class meant one activ communic activ way go mvp depend use case edit tend use structur describ first scenario make sens problem know whether proper mvp make someth new want
use di method instead constructor got class work order task creator creat object type task add third class call work order goe like task creator interfac expos method creat task order tempt substitut interfac deleg sever class implement differ logic insid creat task order pass interfac method good idea rethink design
store direct model normal data store someth like read lot post put logic model peopl seem still save updat model outsid model result code notifi chang outsid model save direct model code could someth like way assur everyth done everytim updat titl invok make call model simpler one problem might object often automat construct orm mean access constructor construct automat could solv inject updat titl method
design workflow process callback multilay asp net applic look design advic follow scenario three layer applic mvc portal frontend app realli busi logic web api magic happen connect servic file process servic portal awar databas process servic etc communic busi web api busi scenario user upload file portal portal send web api file evalu project creat databas etc workflow built base result file evalu perhap project set well workflow consist step essenti process task handl connect servic 3rd layer exampl step1 cleaner servic step2 preprocessor servic step3 postprocessor servic step4 publish servic step take quit lot time instead await activ result post request return immedi result accept process servic done file send callback busi web api like back control request came simpl workflow manag class lookup databas workflow given file get next step id figur servic type send file servic actual question begin nice manag communic servic control workflow manag exampl cleaner servic control para code howev ad workflow manag control action seem bit hacki think would better central somehow rather scatter across control perhap share api control callback would better idea
iter object specif class contain polymorph base object let suppos base object class let call object list lt object contain mani child class object child1 child2 etc store contain need way iter subset object particular class say child1 child2 togeth one contain could access polymorph fashion note taken contain dynam resiz possibl design solut current come two introduc iter run contain check object type time keep addit contain child1 child2 object main contain honest like either way first one afraid go slow realli mani object second one clumsi requir observ object addit delet write c updat develop second solut thought subclass list method would return sublist particular subclass type could kept cach updat add delet
term entiti repres anoth known miss entiti work project import data 3rd parti sourc often certain data miss usual older data detect data obvious cannot reproduc miss data actual reproduc specif delta valu plan creat entiti repres miss data store valu deriv keep record later reconcil anoth import miss entiti would repres least one possibl even one actual entiti question common term alreadi establish repres kind known miss data
put behaviour dt os object vs data structur clean code similar question post still find answer though confus read book clean code say part mix data structur object whether data structur behaviour object behaviour applic data tranfer object carri data extern servic dto data accessor mutat consid data structur type howev robert martin say book client marri better marri client found logic marri function use attribut client class cleaner mani area applic need behaviour certain dt os confus put behaviour made util class busi logic like go servic layer even method manipul thing els input object interact anoth layer dal servic
mvc pattern rest view confus tri build mvc structur res tapi sinc go return json right view header view output json also plane implement json serializ magic control model part output view right way feel view small would way red lot articl think right sinc return json html css js sinc plane move part anoth domain exampl api domain com would make visual part angular probabl would use api domain com
design pattern draw custom graph webapp build web applic meant help display price product web app center around show price custom bar chart think compos model view control architectur look input design plan one question model hold state data retriev server well state requir constrain view exampl say certain window open toggl activ state toggl would held model think state pattern would use sinc help model system use state diagram like mani state also allow use class invari ensur system never put invalid state view built upon visitor pattern element screen graphic oper act upon graphic independ graphic exampl graphic scale posit hidden shown rectangl shape might width height function call show anyth rectangl make sens defin oper oper alreadi avail j queri e scale html element use element css width number pixel think control handl event html element well interact server like make server request handl respons cours control manipul client side model seen case peopl implement mvc framework model communic server rather use control communic server make sens use control communic server model client side meant communic meant hold state logic would use model communic server never use mvc framework like angular js use rather tri implement mvc time issu still want abl creat custom chart price chart
home page link two model two control work mvc framework build simpl q amp web app tri grasp idea control act app instanc say home page follow link home login home profil home list question updat dynam new view show one question home list top answer updat dynam case would make sens two control name question control bring recent question question model user control help login bring top answer user model research found could use session control login logout cours main applic control view alon seem control work decent practic
reason iter stream implement iter day play around experi loop someth like chang got error iter array instanc java lang iter reopen old wound find silli stream class implement iter iter method alon think major oversight logic reason declar implement iter get function program cool reason tri encourag peopl switch loop call second part annoy even get exact error old annoy introduc syntax never made sens iter one thing could use along iter array seem even obnoxi given would need done make iter implement iter add follow method iter easi enough work around issu method like seem silli anyon awar done come legitim reason make two interfac iter
mvp mvc model contain behaviour read plenti question appear confus mvp mvc model domain model mind mvp model call servic call rich domain model e mvc mvp model view model seen lot code mvc model model call servic servic call rich domain model e domain model class contain state behaviour notic code class call model contain behaviour call servic class call person model one class call person model contain state behaviour rich domain model busi layer domain layer talk best practic know approach work
bad practic calcul present control view say mvp app form four textbox quantiti price product total price app call web servic recommend product may cheaper base quantiti bought accept set total price client use setter e total price set domain layer return client would simpl someth like client present someth like accept calcul like view present call web servic consid domain level valid pleas note talk specif best practic perspect
split method base class avoid error develop forget call parent good idea creat updat method model base go step pre save udpat databas post save pre save post save specif design help object relat imped mismatch idea databas oper simpl save valu x column tabl handl pre save post save instanc could imagin someth like contriv exampl clariti exampl chapter data child tabl one mani relationship pre save post save respons make sure inform chapter get proper tabl updat databas actual updat book tabl isbn name found general organ effect ran occasion problem pre save post save task built model base alway execut also intend extend add function need case post save might look someth like problem run occasion forget call parent method caus subtl bug usual figur pretti quick howev develop team also forget call parent tend figur less quick think small refactor need call parent model base would effect chang someth like basic ad addit method act intermediari creat post save method way longer need call parent method insid post save troubl forget leav current name usag call sequenc post save unchang code break cours test final measur potenti issu make model base littl less straight forward anyon see two similar name method might confus first glanc put comment help anyon look cours architectur though addit layer separ step forward backward especi model base want make sure chang make sens
protobuf made field messag option syntax protobuf made field option drop keyword requir option previous proto2 syntax read comment develop seem done enhanc forward backward binari compat could enforc version packag name say com exampl messag v1 let client implement deseri understand time remov contract state type use softwar engin point view instanc proto3 possibl creat half back perfect valid locat provid one requir field big drawback creat schema base serial format exchang data client wors move extra valid code client check requir field valid valu
event handl present control say mvp app present handl event rais view exampl pleas see code code handl present better event handler view forward method present handl event present direct
model model model mvc current work account applic wrote gui framework ground win32 work well issu tri separ gui applic logic class implement far applic vector account account hold vector transact transact object hold vector split case assum account transact split model want view deal direct separ logic data view exact control add account class model datagrid interact would mean datagrid tabl class would need pointer account gui datagrid window etc pretti clean want pollut applic specif code go separ view model window class hold pointer view base class window class definit contain list model
static altern class base templat method pattern imper object orient languag edit note want static compil time method know exact need go compil time often find multipl function follow pattern part chang often opt templat method pattern howev class base approach especi c seem cumbersom often forc creat actual object realli tri chang one line anoth prepend append routin write ideal want simpli generat function given pattern compil time even need creat privat protect class procedur make sens class use seem like huge wast like static approach know exact function would like use situat want duplic code function small amount chang possibl someth like c resort creat custom class case happen solut like creat sever custom function step tmp function becom coupl high degre requir way paramet pass around normal need still never realli seem get rid code duplic edit recent exampl came across sinc ask exampl last line thing need chang everyth els need also depend variabl creat procedur well condit outsid scope block
dto consid busi object behavior base question answer object busi layer dto logic want ask instead dal get data remot servic api dt os dt os repres prettymuch busi object relationship although b os api call cannot put behavior need specif deal behavior dto look crappi api lt dto map servic lt domain object domain servic lt dto ui
handl side effect crqs replay event said cqrs easi fix bug redeploy replay event one event caus extern system control ship item custom replay event item would ship twice resolv
mock repositori unit work unit test read articl sinc articl almost year old hope articl comment question answer decid ask articl author creat anoth mock repositori mock unit work class implement method match repositori unit work method use list instead data context use approach futur chang implement repositori unit work mean chang implement mock repositori mock unit work seem bit frustart look like test mock repositori mock unit work separ repositori unit work still stay untest think
circular depend depend inject quit new di refactor applic use prism uniti almost got stuck circular depend read lot lot similar question doubt would correct solut situat applic similar id es project explor search document document actual treeview node node view model note code sampl minim version real code dock servic manag tool document item specif view model servic manag node view model connect model two requir conflict new node creat somewher want navig current pass dock servic via constructor inject concret specif view model servic implement node view model certain tool dock servic need know specif view model servic exampl explor need display root sinc dock item servic creat manag toolitem explor need specif view model servic specif view model servic need dock servic abl navig node circular troubl first attempt issu let tool item creat composit root seem correct instanc manag togeth nice read around understand factori anoth third class could help see yet think understand problem dock servic need specif view model servic creat toolitem vice versa factori could take circular troubl away sure correct solut contain use composit root facori need contain hide contain take work differ name would correct way handl problem
under contain view model mvp implement financ app one question came keep under contain right current class question keep under contain model account account transact sync contain data grid model contain model somehow get refer datagrid view
architect dam mvc framework familiar oop php new mvc framework current use laravel found wonder far thing gotten trickier progress realis need rethink architectur project digit asset manag small client still want make sure develop well despit size basic object relationship project mani section section mani asset seem simpl enough right project work fine use rest unsur deal section asset type section project one eg photo extern link video etc section contain one asset exampl section contain one bodi text photo section could contain mani photo type asset differ set properti idea approach write use vanilla php probabl asset object photo extern link extend asset thought question even need section object given use mvc sure whether differ control model asset type overkil mayb asset model one asset control model asset type extend model assist help shape think toward good use mvc would great appreci updat thought time rumin learn mvc think comment made robert harvey start think model chosen come think realli question solut lie start build site model section type asset type eg video section video asset two model project one video section video section mani video asset finger cross good way approach
immut class zero argument constructor pleas see code denomin factori use creat instanc immut valu class immut class zero argument constructor base read could singl valu constructor could inject class creat denomin factori constructor class contain calcul chang immut class zero argument constructor accord link talk strict best practic perspect use ddd rich domain model
depend creat layer say follow class scenario servic call busi class1 call busi class2 call busi class3 say class depend need inject dependancy1 requir busi class1 constructor inject dependancy2 requir busi class2 constructor inject etc depend creat servic layer busi layer class creat depend class call use
inject immut object factori object pleas see code contain enumer method chang denomin factori chang denomin inject constructor see chang denomin class zero argument constructor immut use castl windsor two way set introduc zero argument constructor chang denomin specif castl windsor configur castl windsor chang denomin given necessari argument follow approach work expect way best practic
best practic handl duplic entri db spring mvc throw except way current work school manag project use spring stack kotlin program languag neo4j storag solut scenario creat class entri db let assum properti class entiti object name nine section shift morn go save db make sure class properti question duplic check suppos propag massag layer client side throw except layer found duplic normal flow current handl scenario provid kotlin code control servic layer check control like follow code could use dto communic servic layer control dto properti tell status duplic entri found also awar control advic handl except eleg would need suggest best way handl duplic entri db updat case appli uniqu constraint db may possibl exampl class properti may name nine section shift morn anoth class properti name nine section shift day case constraint combin entiti valu combin exist db might check uniqu applic layer
process multipl type messag multipl way chat applic may multipl type incom messag handl exampl messag type text link imag video text link handl way imag video requir file download differ server also messag may need delet delet messag may differ well exampl text link messag need delet databas imag video may requir associ file delet may oper messag support type messag exampl retri download case imag video thought use doubl dispatch visitor pattern fit proper need someth like tripl dispatch sure design better futur may type messag may requir differ type process type design ensur ad messag type least intrus infrastructur code prefer without ad item statement switch case block
mvc softwar logic function manag connect go develop c base softwar want use model view control approach think quit got style rule realli understand place method connect server develop client one cool thing mvc unlink actual logic program architectur machin system work everi machin differ way manag connect guess model best place control view visual stuff take input user realli clear put advic
good analog mvp mvc pattern honest student seen mani question teacher ask way explain found one mvp mvc pattern model view present model view control problem studi page written mani tutori follow exampl even work school project feel like grasp essenc pattern everi time someth becom slow understand probabl understand someth question good analog clear explan mvp mvc pattern individu compar
distribut applic design use messag broker background tri design layer compon distribut applic communic compon compon b right communic accomplish replic entir databas server compon live compon b design prove brittl tight coupl want recommend team move messag solut notifi b chang state data question question depend size data either send data part messag payload notifi b someth b grab clear option easier need write much code subscrib logic howev realiti sometim often size data may exceed max allow size messag go use mqtt start prototyp max payload size byte far design concern realiz best servic compon b autonom know get messag practic term mean exampl consid use case publish messag new widget creat databas b subscrib widget channel get messag includ follow get data widget b call rest api run server eg abl grab widget data messag payload question would includ consid messag broker success w hen messag deliv b copi data question good articl know read help type design avoid messag togeth wrote crud interfac compon b would call crud interfac whenev widget chang benefit use messag broker type solut
pattern name domain model contain behaviour littl state understand differ rich domain model anem domain model anem domain model contain class state e behaviour contain applic servic recent ask question rich domain model notic answer usual well alway appear suggest rich class contain behaviour littl state e local variabl pass method instead instanc variabl use state benefit depend inject test good simpl type like string decim integ etc usual local variabl research experi tell could simpl type interfac make difficult work automock perspect howev read book seem recommend class state like notic state contain simpl type pattern name domain model class contain behaviour littl state consid anti pattern like anem domain model pleas see question would describ rob h answer rich anem e class contain state behaviour howev would expect cost instanc variabl
bad practic lot model view control design system moment use mvc laravel matter tri decid best architect part analog could look like blog post blog post three differ type comment type comment complet differ view separ page exampl let say one comment type plain text would plain text page plain text comment blog could view edit creat etc anoth anoth type comment type call twitter would separ page tweet post blog post could view edit creat etc first instinct tri shoe horn differ type comment one comment control comment model read comment type process appropri save correspond tabl comment type show right form comment type etc would better practic differ comment control model type e plain text comment control plain text comment model twitter comment control twitter comment model part feel bad practic seem ineffici deni would improv readabl code mayb need optim clever use one control tri give respons everi comment type mayb would better split everyth clean clear would bad practic
amqp protocol protocol general recent read amqp protocol specif offici websit howev first protocol tri studi depth coupl generic question protocol pop head would like find answer protocol contain type system method constructor etc thing defin os system know tcp port amqp protocol base tcp ip sort map os os even know protocol instal someth without know
microservic anti pattern microservic tri make decis handl domain model plan multipl microservic exampl client ms payment ms need client class one way client class ms map two model domain microservic client class consum via dll sure f use dll introduc anti pattern also use domain model everi ms loos srp dri
clean architectur valid domain vs data persist layer studi clean result quit dramat rethink great deal design write softwar thing still wrestl howev busi rule like save updat item first load list item permiss view edit etc confirm item list item categori current lock use rule etc etc complex atyp busi rule handl applic domain rather push busi logic db persist layer howev seem effici check condit often go best handl nice craft db queri rather load data applic domain without prematur optim recommend approach uncl bob articl deal question would say valid domain becom problem realli struggl find good exampl sampl anyth basic use case updat hi thank repli clearer write most web app softwar long time definit alreadi experienc agre topic collect describ valid backend trust client data general speak chase raw effici requir howev acknowledg strength db tool avail etc etc gone develop learn lifecycl throw togeth build giant fat control n tier applic code trend realli like investig clean singl respons style etc basic result project recent evolv quit clunki wide distribut busi rule project evolv client requir came light particular look clean style architectur context build rest api client face well intern usag function mani busi rule might much complex basic everi exampl see net even clean hex architectur guy guess realli ask fail state clear clean rest api would sit togeth mvc stuff see day incom request valid e g fluent valid librari net mani valid rule much string less charact user call usercas interactor perform oper collect data given relat object current lock team x later month etc etc kind deepli involv valid lot busi domain object domain rule applic spin rule specif kind valid object type accompani usecas interactor inspir fluent valid project busi logic data access involv treat valid somewhat like gateway put valid gateway think wrong etc etc refer go sever articl like mattia discuss valid much guess short answer question much like answer accept never easi depend
advis use hash dt os rubi appli ddd seem rubi hash would good option implement data transfer object applic servic receiv client code command queri request applic servic respons perhap respons object success failur result properti contain data hash think viabl implement anti pattern
use laravel dao instead eloqu orm complic erp softwar written nativ php micro framework use big complic queri want rewrit applic use mvc framework e g laravel develop applic laravel eloqu think convert queri erp app orm form bee difficult time consum furthermor like queri base approach relat queri gather dao object queri even though complic straightforward orm equival queri logic distribut differ place model code want see whether approach make sens convert use eloqu model file dao object stop inherit eloqu use dao object ex model file data access rather entiti object
understand depend inject eas test insid asp net mvc time read articl book asp net mvc chapter depend inject repositori easili feel benefit use repositori hard code entiti framework code insid action method use repositori write method use entiti framework insid repositori method reus method action method easili understand use repositori facilit usabl come depend inject author alway say facilit test unit test say instead initi repositori class insid control class initi interfac repositori class say facilit unit test get mind main imit repositori interfac insid control class facilit unit test initi repositori class insid control class anyon adivc
class instanc specif data okay make singleton let say follow java code exampl singleton implement class got instanc specif data field okay make singleton anyth keep eye clear drawback
wrap dispos object use statement updat code allow us implement unit test far busi layer call repositori get data databas busi layer exampl allow interfac convers data pass convers data repositori layer call databas convers data repositori exampl convers data inherit class base massiv implement dispos may seen implement convers logic cannot wrap convers data interfac use work current implement also see convers data get convers call massiv orm queri look like look even though convers data inherit base massiv implement dispos actual need wrap call use convers data use statement everi call repositori call massiv queri statement manag resourc creat use statement queri apolog long wind question need clarif let know
tri understand singleton object swift swift class type properti method everyth declar static would consid singleton object
appli mvc pattern c win form applic c develop use mvc pattern design gu ever sinc recent want get back c set window form applic littl bit lost push mvc compliant structur current tri declar class given win form view add class model control background howev realli sure interact event like button click usual would redirect event control perform action view done feel pretti unsatisfi constel though exampl want implement exit button would redirect event view control well implement extra public method view call control could simpli call close view first instanc advic understand window form c good enough yet tri mvc implement give form class wrong role mvc simpli inappropri architectur use case
stage java project configur gui compon need littl advic project design taken person project enhanc knowledg java swing api integr jdbc oop chosen java previous similar project html jsp learnt lot interest breakdown app homepag app admin click log enter usernam pw databas call log add view delet user databas call logout back app home screen user click log log view share price stock api call add stock portfolio databas call remov stock portfolio databas call view current portfolio databas call logout back app home screen never program like java best road take design gui compon first build function around app work consol creat gui tri implement sort framework use framework learn curv imagin steep implement architectur type know theori behind mvc use jsp rest project project inst over complic mayb need appreci thought design aspect think think pleas let know
intern entiti aggreg respond domain event direct fair new implement cqrs event sourc appli rule domain driven design let say order aggreg insid list order line entiti use model context event sourc system cqrs state chang main driven event chang aggreg run order serv aggreg root exampl event like item ad rais respect order aggreg call appli someth like order appli item ad trigger creation new intern order line object repres newli ad item order term implement make sens new order line object appli event direct leav order aggreg creat order line object constructor one appropri think first approach concis easier understand event whose field get lengthi intern entiti deal construct make code cleaner problem howev think provid appli method order line open possibl mutat outsid context order provid accessor say get order line order even make collect list unmodifi object contain still mutabl one way prevent return clone get littl cumbersom implement fair complex nest entiti address think keep appli method order line class limit visibl approach give flexibl regard make order line nest class order class mean keep appli method privat still access within context order class howev could mean long order class especi need add nest entiti futur altern limit access appli method packag level mean restructur limit domain class one packag advic regard
send file record sent atom way sure best approach problem got object local databas exampl one convert file say object txt upload server upload set local field upload true becom problem handl failur exampl applic stop crash moment file upload local databas updat item remain upload fals way find file upload techniqu use make process reliabl
connect observ observ automat use depend inject contain sever servic implement observ interfac one servic implement correspond observ interfac current use uniti togeth prism would prefer keep combin current solut inject observ servic observ servic let observ subscrib sure good design sinc observ realli depend observ way automat coupl use depend inject contain anoth way
model part mvc deal internation layer seen done applic clear ok separ power violat
logic defin data convert differ format present busi logic calendar app adopt mvc architectur model consist object repres day week view consist label display day string integ depend user interact therefor need logic app map string integ viceversa logic busi logic present logic first thought decid includ logic view format data display view respons howev second thought came realis map describ data manipul transform therefor includ model view
unit test defer assert linq ok add defer assert like iter even statement expect materi collect exampl also could select method iter defin lot check logic e g count filter seed doubt complex read debug code case test fail
defin singl generic method appli event subtyp base class note sure frame question proper pleas feel free edit comment improv guess question cover fair wide scope pretti limit static type object orient languag use java particular implement cqrs event sourc design event pertain one particular aggreg hierarchi subclass one parent class say order aggreg order event base class whose subtyp specif event like order place quantiti updat order cancel etc insid order aggreg overload appli method take specif subtyp order event like appli order cancel appli quantiti updat howev reconstitut order object event sourc list object whose declar interfac order event although technic under system keep track specif subtyp object way code impli provid appli method type specif defin method take parent order event class appli order event exist pattern around awar someth like follow option written java consid defin appli method order event parent class interfac take order object particular order event object get appli exampl allow defin appli order event order class result concis code sure almost circular natur approach common pattern use
call dto someth els java spring mvc hibern applic model object contain refer model object databas foreign key exampl might spring mvc easili handl bind request paramet object refer would need pull databas eg form produc field spring mvc easi way convert fill branch object get around creat new class contain data requir form handl type typic end field origin class sometim one two field use intern edit form get miss except refer model object translat key look manual add method convert model class exampl control code simpli call object data transfer object attent recent drawn fact canon refer name describ differ purpos pattern purpos use object actual usag name broad enough cover better name could use describ
separ present layer data entiti build softwar ui busi layer data access layer tight coupl singl tier want decoupl layer chang databas caus chang present layer good practic alway decoupl entiti class present layer implement domain object view object tier implement would use dt os transfer data ui busi layer tier implement would use domain object whatev call would defin entiti class one mapper class busi layer map entiti domain object vice versa approach would take
android mvc activ control android project see follow architectur consid mvc team said android app fundament mvc control android activ mvc view android view look like correct mvc architectur disagre handl input event android view act model direct input handl activ mean activ android view clutter mvc control view respons android view draw display model contain logic therefor easili interchang sever reason class chang total misunderstand mvc architectur thing see definit model everyth agre upon topic recent start work student begin cs studi well need reassur effin noob everyth learn seem ignor compani daili build unit test comment document talk supervisor need
c servic scope concern use depend inject project inject servic use uniti depend inject inject json servic constructor question follow json deseri concern http servic remov follow http servic de serial fail return null json servic follow
program function style singl applic state weav applic logic construct system follow use pure function immut object pass function data function need e big applic state object avoid mani argument function avoid construct new object purpos pack unpack paramet function simpli avoid mani paramet pass function go pack multipl item function singl object want object owner data someth construct temporarili seem state monad break rule although obvious weav monad feel need use lens somehow littl written non function languag background exercis convert one exist applic object orient style function style first thing tri make much inner core applic possibl one thing heard manag state pure function languag believ done state monad logic call pure function pass state world function return return state world chang illustr way hello world pure function way kinda like pass program state screen receiv back state screen hello world print technic make call pure function side effect base went applic first put applic state singl global object game state second made game state immut chang need chang construct new one ad copi constructor option take one field chang applic pass game state paramet within function gonna creat new game state return pure function core loop outsid feed game state main workflow loop applic question problem game state differ immut object mani function lowest level oper object keep score let say function calcul score today game state pass function modifi score creat new game state new score someth seem wrong function need entireti game state need score object updat pass score return score seem make sens went function function would requir pass paramet game state use pattern way outer core applic pass applic state like top workflow loop would call method would call method would call method etc way score calcul mean current score pass along layer function bottom go calcul score function sometim dozen paramet could put paramet object lower number paramet would like class master locat state applic state rather object simpli construct time call simpli avoid pass multipl paramet unpack wonder problem function nest deepli result want small function refactor function get big split multipl smaller function produc deeper hierarchi anyth pass inner function need pass outer function even outer function oper object direct seem like simpli pass game state along way avoid problem back origin problem pass inform function function need
creat registri wors use reflect violat open close principl current softwar engin cours team work librari manag system essenti command line repl environ half dozen command e g checkout search etc elect use command pattern command repres class question creat new command object user enter string use condit creat hash map map string constructor use reflect command class would name string invok e someth els agre best solut us think use violat open close principl add command futur would modifi class popul command hash map use think use reflect use last resort seem hacki howev none us better idea use better solut
ddd referenc object bound context ask similar question still struggl get bound context user manag contain detail user user id etc separ context useabl two separ applic anoth bound context store reusabl code core core shareabl concept interfac trait php make use user id bound context core lowest part domain sure referenc object layer shareabl use generic identifi concept concret user id question also confus general use id object across differ bound context refer user id context creat implement user id one
put web socket handl code follow mvp pattern current work web applic one object use mvp model view present design pattern would like use web socket communic client server question put code web socket handl present would better put model none proposit sinc web socket communic would tend put present would like know opinion know question kind opinion base use design pattern smell use opinion judgement would like ask question
orm class separ concern use python peewe orm map relat databas notic model start get bloat also seem violat separ concern exampl user class self explanatori method even though use call user authent user upload imag method involv use mani differ packag third parti api wonder would better separ model one way think fix move method anoth layer separ layer even various domain use like seem contradict util oop anoth way mayb combin origin idea use interfac sort may introduc extran complex
principl describ data contigu system deal third parti data integr problem need theoret principl term topic research question principl describ data contigu system practic issu multipl compani touch transact data custom singl transact ask think basic data integr featur column get strang answer transact ds push downstream pipelin uniqu join process oh one ask uh know output input put featur request hear frustrat wish part normal discuss
separ domain model persist model impact transact aspect post exampl persist model abl benefit built chang track function mean abl implement reliabl domain event one get fire transact get commit databas either need build chang tracker give implement domain event figur fact spawn persist model separ domain model would impact transact aspect inde long wrap servic use case respons start close mayb implicit transact fact one indirect persist model due dm pm map influenc transact aspect especi regard domain event dispatch fact object persist detach object sinc map dm pm rather track understand snippet
mvvm communic view know use mediat pattern communic view model view let assum button view trigger function view b prefer done could use mediat seem like hack thought mine
html5 canva graphic editor immut state easel js redux ngrx store question architectur approach would someon go creat immut state graphic editor would eventu provid undo redo function consid librari canva manipul alreadi state manag sure right thing mayb stupid take someth alreadi state manag tri abstract opinion would great anyth creat exampl done easel js canva manipul librari pretti straightforward use store state object get new createj stage canva id usual assign variabl call stage creat canva object constructor let circl new createj shape color shape method like circl graphic begin fill red draw circl add stage stage add child circl final manual call stage updat state represent object canva direct mutabl way chang posit element canva chang x posit stage state object call stage updat exampl creat drag n drop function need attach callback function custom event call pressmov event exist stage object callback function get current mous posit canva pass event refer event stage x event stage use chang state event current target x event stage x event current target event stage cours call stage updat take look code think creat represent state immut data store would track creation remov object basic would mirror import data stage object even precis mirror properti call children array object render canva object also children exampl contain object usual use group text imag object definit use tooltip imag function like resiz rotat think store everi stage chang creation remov object start end posit drag etc basic everyth except chang element posit occur event drag resiz rotat store start end posit would make undo redo complic would probabl overload store snapshot think correct would someon advic anyon creat done anyth similar
behavior model entiti domain servic imagin model se ddd decid implement board aggreg root board method add new question string question busi rule dictat given set partner think compani advertis job notifi question tag tag chose follow cleanest approach creation new question post domain event queue someth latter notif servic would pick deliv model post domain servic coordin board notif servic etc make notif 3rd parti respons board entiti
model shop scenario use event sourc tri program simpl shop scenario use event sourc servic order servic api receiv order product made custom product servic contain stock product payment servic make payment order kafka event store differ event processor cqrs processor generat view current state databas materi view current state main doubt deal flow like order servic call creat event order place product servic check avail product base creat product reserv order cancel stock event payment servic process payment case product reserv event produc new event order complet sinc pure event sourc approach product servic databas good practic consid materi view databas sourc thruth system regard stock view sourc thruth event see like find inconsist due latenc databas cqrs process use databas sourc thruth realli riski howev materi view seem way know current stock product process product order problemat case come mind two concurr order place product arriv product servic call databas check product avail product left sinc ok creat product reserv event product paymen servic process one order place order arriv product servic product left publish product reserv anoth order arriv product databas updat cqrs process publish anoth product reserv despit enough stock recommend way handl scenario like
ocl domain model captur rule build hous hotel monopoli mayb old hors beat dead yet wonder ocl allow model problem busi rule build hous hotel game monopoli within domain model conceptu class diagram separ implement suppli rule naiv attempt sure go captur order aspect ocl one must properti colour group build hous properti even see replac hous properti hotel etc also case hous shortag total hous hotel game realiz question ambiti tri see possibl ocl pointer go far manag specifi fact properti hous hotel time xor option two associ model done plant uml plant text rule concern hous hotel cite fan site hous player own properti colour group may buy hous bank erect properti buy one hous may put one properti next hous buy must erect one unimprov properti complet colour group may price must pay bank hous shown titl deed card properti erect hous owner still collect doubl rent oppon land unimprov properti complet colour group follow rule may buy erect time mani hous judgement financi stand allow must build even e cannot erect one hous one properti colour group built one hous everi properti group may begin second row hous limit four hous properti exampl cannot build three hous one properti one hous anoth properti group build even must also break even sell hous back bank see sell properti hotel player four hous properti complet colour group may buy hotel bank erect properti colour group return four hous properti bank pay price hotel shown titl deed card one hotel may erect one properti n b homework although would make great one mayb graduat class
model layer gone tutori asp net core mvc built littl app look problem old exam look rough like ask question put method net core mvc web app got answer main busi logic model logic technolog agnost ask mean add method model exam cs problem cs etc whera got explan layer data access layer busi model appar dal communic databas contain logic method c class often form poco also layer part model mvc sens sound lot like class model folder poco without method use communic databas busi model appar thing reflect busi realiti add busi logic decoupl databas ui layer also part model mvc sens sound almost like class model folder though realli decoupl databas mean get connect databas db context still realli feel understood implement thing solut though wish bloat previous question repeat follow question thought ask new question model project call form model connect dal busi model third kind model tutori describ like model code first represent tabl relat databas would go implement layer model solut would rough even look like
encapsul view mvc architectur design question came mind compar current mvc practic php compon base develop javascript question view part view defin data use display seem common practic mvc framework let control defin data view need creat unnecessarili coupl control view view librari possibl call function twig exampl retriev need data structur prefer control would know root view render part view would work model read necessari data render see follow advantag control get simpler aggreg data render view unus data structur pass view would occur lot less use part view templat would also easier depend control render anymor obvious chang data logic would stay control refer read data display ui certain data e g submit form would still pass view control could put independ render compon see disadvantag approach alreadi tri someth similiar mvc framework
react nativ use singleton best altern di read lot singleton pattern bad make class use hard test avoid read articl explain singleton could replac depend inject seem unnecessarili complex problem bit detail build mobil app use react nativ want make rest client communic server get data post data handl login store login token send request login initi plan creat singleton object rest client app use initi login make request send credenti need di approach seem realli complic mayb never use di use project learn much want best suggest comment much appreci edit realiz word question poor want guidanc avoid singleton pattern rn even luckili samuel gave kind answer want problem want avoid singleton pattern use di seem realli complic implement react nativ research implement use react context system anyon interest like said use context rn someth like prop propag everi compon root compon provid need depend like export default class root extend compon get child context rest client new rest client render root child context type rest client prop type object rest client avail compon root access like export default class child extend compon use rest client context rest client get data render child context type rest client prop type object effect move object creation away logic decoupl rest client implement compon
use typeless map api boundari think pass typeless map ap packag system adapt outer core domain 1st way strong type object insid domain api busi rule use 1st way whenev request come web api request domain domain pass strong type domain object like domain object api web api transform jso ns respons back client 2nd way whenev request come web api request domain domain transform strong type domain object properti map like map string object pass api web api transform jso ns respons back client 1st way domain object rule chang affect web api exampl web api need accommod new data ad domain object chang domain reflect chang outer servic type 2nd way domain control everyth whenev domain object rule chang web api automat respons back domain wish chang domain automat reflect outer client need see domain entiti see properti easili pass client suppli domain downsid web api loos strong type safeti domain object see typeless properti map
interact model self modifi data qt mv tree structur repres system devic connect pc via serial port way structur inspir tree model exampl qt think help separ logic part gui model root node member access under node root node node work automat e send command serial port timer routin task applic ordinari notifi model state node chang notifi model structur tree modifi node ad new child node remov node node pointer root emit signal chang root node kind interfac tree struggl crash remov child node notifi model actual solv problem howev think someth wrong design want ask best implement interact data structur model question data structur abl perform action add remov node notifi model chang strict perform model appropri request tree use qt signal slot bad structur would reli q abstract item model mechan use signal like node remov node remov prepar model correspond action updat structur use insist tree best ideal structur purpus two thought tree natur repres real system easi use qt model view tree tabl view final tree idea accept chief colleagu tree level root hub repres serial port coordin devic termin devic sensor later new level may insert coordin devic termin hub class may reimplement use someth els instead serial port use anoth protocol multithread plan seem multithread inject relat simpl natur hub control serial poort set node level know child node know form set command survey physic devic node hold state access physic level pass state children control behaviour
rich domain model vs anem reduc duplic code watch lectur confer speaker talk reduc redund code go servic model anem model vs rich model regardless use end similar logic class either way whether still databas oper inevit use somewher els select insert close code anem rich servic regular old oop class behavior extra class servic abstract code read pros con argu one way done say rich one look like textbook oop digress rich domain model vs anem reduc duplic code edit remov boilerpl code refer
use composit inherit dt os asp net web api provid rest api singl page applic use dt os poc os pass data api problem dt os get bigger time want refactor dt os look best practic design dto current small dt os consist valu type field e g dt os use user dto composit e g also extend dt os defin inherit other e g sinc dt os use sever endpoint method e g get put extend increment field time due inherit composit dt os also got bigger question inherit composit good practic reus feel like write code multipl time bad practic use dto multipl endpoint method differ dt os differ nuanc
use depend inject contain correct hide depend outer class zend doc exampl use zend di depend inject contain zend framework guidanc get di control given doc left reader implement could exampl inject di control hide depend di global applic scope use global creat di insid control local variabl seem least troublesom hide depend end result di insid control readi amp avail use exampl use di c hide control depend movi lister know control use movi lister look class signatur setter method class level paramet okay hide depend class call control di c seem accept design pattern use day correct usag use outsid control e control factori elsewher depend hide avoid use di c
need use unit work pattern mani mani relationship pleas see ddl mani mani relationship person offer person offer junction tabl person class contain list offer true invari person class offer class e g gender date birth chang elig offer chang tri decid whether use unit work pattern one aggreg root person one respoistori person repositori therefor believ need use unit work pattern q1 person offer persist done person repositori someth like foreach var offer person offer db db offer attach offer q2 need unit work code repositori creat new person list offer shown
redux keep track state note new whole concept state manag never got older languag explicit use state dive react redux past week get complic code stumbl across one thing sync ui chang redux state even trivial action given todo list filter url param localhost show complet modifi contain show complet todo also modifi reduc alter data redux state tree shape todo todo1 filter show complet everi locat chang action router react router redux addit code mere display todo imagin would blow get complic stuff wanna get unidirect data flow modifi state tree everi trivial action app
conveni vs decoupl composit let say small cd burn librari written python cd class burner interfac implement class would like add conveni method class cd caus problem futur consid coupl instanti burner outsid also wish add factori recreat cd physic drive ad cd also caus coupl resolv implicit circular import
ddd cqrs es worth wast time tri appli ddd cqrs saga fire forget principl etc es current project help akka never done real project play litl bit sound great theori blablabla sometim frustrat sometim think buzzword experi techniqu real project worth complic system
model res tful api oper differ servic provid tri develop api tri integr featur various servic provid phase develop model class structur identifi context domain help unifi field data get sent differ servic provid problem tri solv choos whether consolid field differ servic provid creat model complet generic model common field alongsid provid specif field eg car rental api tri interfac multipl vendor vendor api let search car area car categori vendor api ad uniqu capabl separ competit start integr differ vendor would like api basic featur search identifi field requir common model api evolv want expos vendor uniqu search paramet api process expand featur separ field relat differ class compos exist model add field common model interpret uniqu field base context avail data approach approach advantag use singl common model approach cleaner time vendor get ad specif function model get bloat mani ungroup field understand organ model better hierarchi even mani field advantag use separ composit model class approach differ vendor would help us group field better allow isol chang requir interpret data downsid expos vendor specif field pleas let know direct head right one anoth sever approach consid would help ad featur api let know need detail inform relat question ps sampl model car reserv mention exampl someth thought much actual model differ domain detail cannot disclos
way data bind store differ format display use react imagin concept appli way bind situat valu display store kept sync take exampl app perform logic base measur measur inch user may across pond thus abl swap unit centimet inch input measur set way bound text input gather measur info chang set variabl convert inch valu revers function perfect due inher ambigu display format number way natur ruin type number ex type past decim string repres number text input immedi updat back tri type decim thank way bind sure type thing come good way handl either avoid way bind intermedi variabl somehow put special handl revers function alway resolv type
imag process servic locat pattern contain depend per wiki depend object use servic oop paradigm use c syntax address role shown interfac handler h take one depend gifhandl c depend contain dealt config c client servic locat ui c add new depend libxyzhandl depend contain requir ad new entri config txt configur shown config txt libgifhandl libtiffhandl new servic provid libxyzhandl contain depend contain without compil applic test complet applic requir except sourc code libxyzhandl config txt goe empti applic noth except say cannot handl kind file shown input imag file visualis call flow question depend contain call ioc contain
class diagram combin sever creator would like model class diagram follow scenario client manag three type account pocket postbank dkb type account may ad later client regist movement expens incom movement defin state account incom pretti basic need regist account made expens sort depend natur leisur food transport general type expens may ad later requir came model singleton instanc movement factori extend two type creator incom expens expens creator implement concret class depend kind expens would creat doubt come tri figur two factori method expens path somehow overkil class singleton movement produc good practic case could model given scenario
deal side effect event sourc let assum want implement small secur subsystem financi applic warn user via email strang pattern detect exampl pattern consist three transact one depict secur subsystem read event main system queue would like get alert direct consequ event happen system without intermedi represent model current state pattern monitor activ transact process transact process transact process alert trigger id email alert sent id transact process mind thought event sourc could appli well although question without clear answer alert trigger exampl clear side effect email need sent circumst happen therefor happen replay event aggreg extent see email need sent similar materi generat queri side seen mani time cqrs event sourc literatur subtl differ though literatur queri side built event handler generat materi state given point read event case though accomplish exact like reason explain idea everi state transient appli well need record fact alert sent somewher easi solut would differ tabl structur keep record alert previous trigger id would abl check alert id issu inform would make send alert command idempot sever command issu side effect happen even solut mind know hint someth wrong architectur problem approach correct place find inform strang abl find inform mayb use wrong word thank much
code multi type observ pattern state depend window current activ need notifi listen state chang someth like subscrib get notifi chang problem approach multipl state type like login state lobbi state match state need abl subscrib specif one instanc need listen login chang lobbi need listen login window lobbi chang first thing came made global event system regist state listen invok chang subscrib exampl use differ state type like problem approach becom mess regist differ listen see class constructor also provid generic type twice class declar constructor could make differ contain state type like becom real mess better approach achiev someth like
pure depend inject implement android project onlin cours would like use di project start use dagger2 start typic newbi problem hold back project deadlin come decid abandon dagger2 project still like use sort di came articl pure depend inject poor man depend inject understand exact implement android could start avoid creat instanc object constructor insid depend class somewher instanc look idea implement strategi pure di android possibl well implement exampl
design excel export class mvc pretti bad design system hand right written asp net mvc lot logic implement insid control without outsid model busi logic would like chang littl write class would abl export tabl view excel view would requir function anyth common sure approach exampl pass databas context entiti framework control paramet get model inform insid control pass method creat class model would get inform would need creat excel file pass inform insid control
avoid miss behavior separ code data come across someth find decent frustrat ad new function larg exist code base prefac varieti class item item b item c inherit base class base class say around item class hold collect mix item instanc magnitud hundr thousand list output previous step assembl item base input data usual factori pattern stuff go get item take list pass seri process calcul step method modifi valu exist item other modifi collect usual insert new item varieti condit includ look ahead behind iter step sometim act base class mani iter singl specif item implement act differ item differ way here exampl process step act type use dictionari function pointer type separ code data process step vari base set input super process addit defin rout step take step implement interfac may vari individu along fact process step modifi collect strong argument keep method separ entiti rather member item base class type like struggl add new item item item implement interfac abstract method would get compil time check expect behavior item requir howev need reli either previous knowledg code base continu develop loop tri get collect item present possibl branch process step take reli except dictionari catch identifi runtim bug output lock architectur code base realli identifi limit think limit discuss look manag domain even function languag could avoid futur new design head direct
level unit test control simpli call view factori get model implement view factori seper generat view model control logic view factori implement comprenhens set unit test cover path refactor exist code unit test cover scenario similar mock setup control level move code view factori set unit test still work howev duplic test logic mainten point view certain feel right factor might suggest also good practic look cut number test control struggl look cover put simpli would singl mock view factori view return action result would real valu opinion howev test also sit well plan implement chang view model expos properti base valid chang view present data view factori would generat model duplic id found properti view would display error model would look test scenario valu properti would drive model state error simpl test enough know view factori test cover rest pleas note context control method view factori use other refactor
possibl inject depend write librari tri write first real librari case provid java kotlin api send network call server big fan tdd would like code librari way normal would separ network code code test network class get call correct test case librari cannot quit want burden user api provid http client even librari provid default real implement cours could creat overload constructor test ad product code sake test great either better way solv
model first lastnam separ argument someon consid design new system either store name person one field separ first last name pros singl field simpler ui ambigu tri enter name person long name often non evid last name first name less complex handl titl e g need separ field enter dr pros split field personalis communic possibl dear mr x dear juli consum web servic need first last name separ provid easili better choic industri strict identif requir e g medic govern etc safer choic alway go back singl field altern see addit argument list updat question addit list question argument list solut think give opinion instead possibl pros con drive discuss wrong way develop make decis problem aim question assembl list non trivial argument evalu need
specifi concret type action result load type implement action result like view result partial view result json result redirect result seen two approach creat action method either alway use action result specifi concret type return action possibl advantag specifi concret type action result think current concret type would make unit test control easier actual write unit test control
manag differ user role need access model mvc learn work mvc pattern use laravel question exampl case user model user regist admin creat new user account use admin panel user log registr admin redirect admin panel home someth like see possibl way make control model user control admin user control use control separ method user creat admin creat use control creat method check user role correct action depend know correct would appreci opinion best approach
servic locat vs depend inject class act adaptor http request applic custom domain request everi http request element uri header content map custom domain object element anoth class data mapper perform serial deserilaizt content class use adaptor encod decod content http request data mapper adaptor question want code follow solid principl one worri depend inject take http request content type header find correspond data mapper xml json serial deseri content shall pass specif implement data mapper xml data mapper json data mapper constructor class follow di code correct locat data mapper run time base content type request advic appreci
framework give flexibl model control alway tri keep model direct databas interact keep actual logic control usual framework platform provid flexibl model limit freedom control model usual abl call multipl control model usual abl call model case magento cro ns call control sometim seem like framework want control advanc router sometim end put non databas logic model use concept like helper concept specif framework neither enjoy advantag give control freedom model typic get look mvc differ
recommend practic use pdo mvc model experienc oop start use mvc model would like know recommend practic use pdo within model still keep high level abstract seen internet various approach one like make model extend special class sql queri someth like pass around global databas connect also read folk say queri made control use model structur data like much one would allow thing like make object chang self updat databas recommend
model item shop like lo l dota mvc way 2d game build upgrad modul modul bought shop shop repres stereotyp grid icon icon repres buyabl modul mous hover icon name descript associ modul appear popup current modul model object extend abstract modul class wear follow data name modul descript build icon use display modul shop grid also f build like method actual modul build begin game shop provid list modul appli modul build f build method call bought modul thus even use singleton pattern modul class instanti conscious design realli optim first modul model object emb icon view represent import modul stateless object appli sever build possibl differ player order state modul would wear build gt data map know bad feel solut question time build gt data map effect bad solut best way solv state pitfal encount subsidiari one also would mvc compliant model object wear imag
generic implement design pattern io c coupl factori dao learn java spring framework far understood spring make stuff transpar configur io c factori complic implement code lot never thought organ code base design pattern queri basic crud goal one would design class base io c factori main user calla simpl object insert data
build observ pattern event pattern better use class enum event build observ pattern need defin event broadcast observ better defin abstract event class multipl subclass event defin singl enum event list enum option option seen exampl use class use enum lean toward option lot decis base fact work java might differ differ languag option requir lot x instanc check look ugli option allow clean switch statement option list possibl event nice one locat know id es show subclass class less obvious option restrict addit subclass write librari user librari subclass event clutter code event option fix number event someon actual updat enum option allow sub sub event may good bad e g public touch user input event extend user input event option allow attach addit meta data event imo lead clutter code goal simplic exampl updat end go option need includ addit data event use class way go plush whatsisnam right fetch updat event data would callback hell
object orient program allow side effect state chang know obvious everi languag characterist implement theoret stand point view oop abstract program paradigm allow side effect chang program state everi object state object chang state anoth object state state program state thus oop stateless hand oop allow side effect observ interact object modifi global var oop state allow side effect got right
handl condit field java run sever situat pojo whether field valu meaning depend valu anoth field exampl use lombok tri use avoid boilerpl exampl case look noth file make differ class purpos return type method need return sever piec inform caller although class could use best practic deal situat specif write custom getter method path throw except sourc type file write custom builder throw except builder tri set path set sourc type someth file write custom equal hash code look path sourc type file builder constructor set path fix valu sourc type file would elimin need special equal hash code make path option lt string gt would enough without prefer defin new class hierarchi encapsul sourc type path field would three subclass base class one would path let assum polymorph method hierarchi agre comment method return variant record good chanc method much need check alway case simpl exampl would method search string see contain substr return posit substr present java method return special valu posit substr present argu bad practic introduc error caller fail check case treat result posit number option would help case case two state return seem natur use case return either found posit found posit case work quit simpl examin thorough alreadi torn coupl time colleagu design review pretti sure method much
mvp architectur model layer get data new high level android java applic develop learn mvp model view present architectur clear role design model layer suppos tutori blog mvp direct discuss show exampl view present layer either skip light touch model api pass data via event callback handl model present case present job notifi model new data api model job notifi present state chang respons handl updat model origin view understand model store data display view respons data handl get data specif come view
build share vocabulari project term develop team work develop team peopl often notic get precis share definit term code mean becom issu code base grow month two total differ concept use name two concept use synonym harden lot code read integr new develop take exampl code email client frequent issu month busi model vocabulari mix ui technic vocabulari ie text ui view email client text attribut email model develop translat concept differ ie email class detail view becom messag list view still use attribut approxim unshar translat model develop sometim due lack english vocabulari lead frequent use term ie item text label button manag handler term sound good hard get precis share definit without talk among team misunderstand busi concept lead mix busi concept uniqu class break singl respons principl appart document lot code sometim suit agil develop method share busi technic vocabulari among team dev person clear knowledg involv word general project code context
akka event sourc creat actor per entiti read akka persist document say akka good event sourc imagin user entiti user defin uniqu id properti busi rule around alter also modif user properti async side effect like notifi anoth system user creat basic ddd setup understand akka persist actor good keep current state user accept modif noth slip inbeetween model user persist actor creat actor per user number user way big keep even load memori deal creat stop actor persist etc seem like quit complic task bear manag els persistec actor good
depend inject pass domain object under depend n inject work larger project hope understood di well base abl domain object hold configur ata var input new generat input construct new list lt construct gt initi configur null maxim number iter poor man di solut var contain new configur contain input initi configur var construct new configur constructor input construct var solver new configur solver var handler new configur handler contain construct solver var generat context new generat context contain handler construct var generat new generat generat context input maxim number iter generat input creat base ui paramet figur way via di contain think want use n inject cleaneast way pleas
techniqu observ runtim state c techniqu c program allow easili inspect state embed devic communic link exampl microcontrol devic communic devic extern devic might want perform queri similar batteri level devic devic last turn devic connect devic ip address devic connect etc way usual project involv make lot state share e global communic modul receiv request access global state order transmit defin request parser respons serial involv data legaci project often lot differ cooki repres certain request messag certain data sent back usual serial fli accord agre messag format protocol way implement common function prevent break encapsul expos state remov amount code new request
abstract domain ddd domain driven design exampl explicit domain account interfac airlin book system sometim domain much abstract case applic built around specif domain import aspect applic abil pivot similar vertic question would model applic vertic ubiquit languag domain model may differ name domain logic basic current tri sure correct decoupl project model specif domain think abstract instead airlin book system becom abstract ticket book system drawback method obvious abstract us domain break lot idea behind ubiquit languag option think tie model current specif domain issu tie us current specif domain make pivot domain lot difficult anyon tri pivot specif domain model hard imagin
model mvc serv multipl purpos view split multipl model mvc use spring although relev discuss follow model model use registr login therefor contain sum field purpos particular password repeat complet relev login vice versa rememb login unus registr fine point start ad valid javax valid annot field exampl want put constraint password repeat null witin given size rang howev inevit null login valid model like serv multipl purpos split multipl object exampl user login data user registr data user better way approach
tdd test coordin object graph provid third parti librari seem lot resourc mock third parti code code simpl json request etc use third parti librari requir configur relat complex object graph three class exampl resourc appear dri exampl say given repositori interfac repositori task test implement concret repositori use acm inc new acm base begin work creat new acm repositori class acm base orm requir configur relat complex object graph order use object graph organis well quit tight coupl context fetch request store store coordin proprietari acm record object cours pure data object could break apart problem multipl part say wrap context fetch request acm record class mock oper execut request fetch request gt set lt acm record gt context class insul would seem hamper design framework creat lot work iron increas surfac area bug test kind complex coordin third parti class seem creat wrapper everi class constitut graph overkil test graph instanti manag expect
approach break circular depend mvc attempt build web front end base mvc pattern oppos base librari involv e g react js use constructor base depend inject interfac de coupl implement element mvc still leav circular depend control depend model respond end user event model depend view render updat model view depend react compon implement react compon depend control method allow end user input broken circular depend use mutat base depend inject view like work leav problem compon depend view mutat inject avail use inject actual happen yet model initi mutat inject occur view compon oper noth compon think solv store pend view updat within view implement replay order compon becom avail better approach edit thank john point model lt view depend wrong way around yet fix get allow use constructor base depend inject around origin problem still persist e model initi view subscrib updat broadcast initi broadcast make view henc end user think tri delay model initi view subscrib model updat miss anoth approach
annot defin valu method argument project task schedul servic allow execut certain public method servic servic decid method want make avail task schedul servic annot oper task schedul servic simpli scan given servic annot get awar method allow configur execut mean user want creat task list oper method present let take exampl follow exampl updat servic one servic among way updat servic interfac declar user may creat task task servic execut updat method let user freeli configur task string most certain erron interfac case therefor present list predefin valu use updat method updat servic also know getter method reveal avail updat would ideal sourc predefin valu came follow approach oper interfac introduc coupl paramet task servic still scan given servic interfac oper annot present defin list user task manag also understand argument sourc class class contain sourc method sourc method method return valu use annot interfac function help reflect task servic execut sourc method offer return valu generic predefin valu task configur updat string updat file name method user interfac user select valu schedul updat method select valu argument exampl basic current would work annot method would argument although would complet generic decoupl better way solv issu approach bad
bad practic use object builder field instead mimick class field see sometim vs prefer first version much seen lot code use second version sese nag enough detail question simpl sorri useless text
handl aggreg root deep object hierarchi correct way appli command object deep within model hierarchi given follow model defin creat pictur command pictur creat event simpl implement command handler might look like defin add shape command shape ad event command handler look like defin chang shape color command shape color chang event sure command handler implement option oper go via pictur option oper go via shape look pictur option seem bad start build complic graph e g also seem like aggreg root turn control sorri wrong terminolog actuali domain object anymor correct way handl find trivial simpl exampl onlin model practic flat mani thank advanc
refer id aggreg lead anem domain model overview tri wrap head around best practic way link aggreg root togeth without transfer lot busi logic entiti ar servic still adher vaughn vernon tip prefer refer extern aggreg global uniqu ident hold direct object refer pointer detail let take exampl simpl search system search system allow user perform standalon search custom suspici person list also allow perform batch search mere collect search list custom model like essenc search batch search aggreg root search run standalon also run part batch search case creat batch search contain search code fair straightforward class batch search constructor custom search custom custom run custom custom const search new search custom search run search push search mark complet howev vaughn vernon state hold direct refer aggreg root bad design effect aggreg design part ii make aggreg work togeth prefer refer extern aggreg global uniqu ident hold direct object refer pointer use repositori domain servic look depend object ahead invok aggreg behavior understand advoc move interact between aggreg servic like class batch search servic constructor creat batch search custom let search const batch search new batch search custom custom const search new search custom link search batch search id search set batch search id batch search get id search run search push search batch search mark complet batch search repo save batch search search repo save search recommend invari lead toward anem domain model afaik oop fundament coupl data oper class understand scenario oper move batch search class batch search servic instead leav batch search class hold data
store refer object specif function singl method interfac constructor inject store field refer interfac instanc pass necessari entri point first way look common second strict encapsul even possibl reduc code duplic method invoc
c entiti framework db context data servic depend inject refactor applic collect display measur data store databas current interfac call measur data servic implement measur data servic sinc servic use contini method creat db context instanc dispos finsh exampl add method look like inject singleton instanc measur data servic view model creat mock measur data servic unit test want add new method measur data servic want also add unit test use local sql server databas alway clear prefil data unit test use real measur db context perform test oper approach time consum would prefer also mock db context provid data direct code chang code inject db context measur data servic db context live whole livetim applic consid bad practis creat new instanc measur data servic everi time need also seem solut loos abil unit test view model proper think provid kind measur data servic factori view model creat instanc data servic request mock provid differ data servic test data servic db context per instanc think good solut anyon better easier handl solut inject data servic view model context data servic without db context live whole applic runtim
design park lot descript given park lot contain multipl level level contain multipl row row turn contain multipl spot question determin enough spot check vehicl park object respons determin enough spot mean park lot object suppos receiv first queri ultim either level row implement actual algorithm right singl class system whole requir park lot multipl level level multipl row spot park lot park motorcycl car buse park lot motorcycl spot compact spot larg spot motorcycl park spot car park either singl compact spot singl larg spot bus park five larg spot consecut within row cannot park small spot question given system abl given answer queri like given car system abl tell spot car yes answer someth like issu face solv problem start find correct object repres domain correct tri start somewher code code definit broken mani place reader get faint idea tri achiev also seen park larg vehicl one pain point design good solut
design pattern similar esb background tri write simul multipl ai agent compet collabor achiev goal maxim util function agent abil interact world might alter state environ base action result action reward signal transmit environ actor agent implement action agent design spectat agent action reward would suffer consequ learn optim move initi defin follow method environ class interact action actor return tupl reward signal new state get state return current state spectat return collect happen term actor action origin state new state reward obtain seem complic design prevent scale system afterward seek general way differ agent environ interact without explicit call method certain type send identifi actor propos solut thought mail system actor agent send messag environ mailbox environ would read incom messag interact return messag sender actor meanwhil curious agent would read copi return messag publish whomev interest might sound like observ pattern except agent environ elig observ interact direct interact learn other mistak mean notif bidirect overhead object maintain list subscrib notifi event occur also sinc ai simul process might stochast e g spectat might time curious agent multipl client class share super class capabl messag one anoth via similar enterpris servic bus call post offic would factori method spawn mailbox object object attempt messag object whenev client object attempt mail object would lookup sort directori method send messag identifi mailbox address associ mailbox object mailbox object turn notifi post offic object forward messag receiv mailbox hold messag receiv client check messag read sort messag queu object level enterpris level question design pattern drawback approach
testabl design class instanti static method attempt design class instanti use static method someth like new instanc param1 param2 reason behind paramet take packag want hide public order achiev made constructor privat howev realiz unabl pass paramet test goe like obvious design wrong think way abstract exist p3 p4 develop still abl pass depend order appli depend invers design use achiev mayb creat foo factori document suppos use basic write sdk rest api rest api design compani make rest api follow industri standard complic authent mechan complic enough want achiev follow break littl testabl compon easier maintain develop abl work endpoint sdk expos encapsul domain model abstract construct depend graph sdk use compani client class call busi domain method like get custom list complet abstract construct custom header paramet etc http request agre work unit make sens test compani api class howev would make difficult maintain sub mechan need make work summari break smaller piec easi test everi mechan work accord specif reason want expos paramet librari user need know under implement howev need test sinc depend includ http client need inject mock object
use entiti multipl project entiti framework creat two differ project entiti framework web api servic ui busi logic mvc project work poco entiti see two altern would like know pros con one two recommend best option make differ class librari complet entiti model take refer project creat class librari poco entiti take refer project use code first approach servic project creat context class databas access also would like know best structur project three differ server one web servic one ui one databas hand follow databas first approach deal situat
proper prefer way configur static factori class first se stack work larg chunk old java code find ton duplic inconsist configur creat object differ author skill level etc implement static factori pattern debat make factori configur edit per comment suggest option option b option c elit way pattern googl fu yet give good document pattern pleas share option matter specifi option e builder pattern although voic concern think fit use case answer suggest
use java reflect map frontend action actual db method name bad practic use java reflect static map map action remov element get latest front end correspond databas method name multipl web applic wonder use reflect consid bad practic read reflect caus hard find bug instead want singl way access db queri bean front end know real method name conclus map request front end db see altern reflect rest action defin http method hell lot switch case els would consid wors reflect
use css class express state good practic express state html element whether input valu valid use css class would better practic use data attribut properti java script object repres element method exampl css error append input fail valid user attempt proceed j queri check class java script
wcf send event servic recent work larger project touch topic distribut system c world first time found wcf fantast remot procedur call add event communic servic use wcf project requir differ servic differ aspect whole system servic ran process wpf client could use rpc servic could subscrib servic event servic need rpc also subscrib event servic servic host machin differ machin within local ethernet communic via tcp long run servic plan uptim year system manag long run compani workflow event realiz via publish subscrib event must lost busi hour mani event manag servic evil part event communic central publish subscrib servic use everi subscrib multipl callback channel kept open forev via keep aliv ping well read keep wcf channel open forev kind wcf antipattern also mani problem solut better altern one use messag queue system like msmq rabbit mq zero mq downsid use wcf deploy addtit queue system zero mq would dll wrap code need handl queue far saw normal need poll queue use simpl long poll downsid produc quit network traffic use observ pattern implement regist listen handl event rp cs wcf downsid event consum wcf servic wpf client addit wrap code need
gui build object design gui current write gui applic understand mvc like applic follow compon featur busi data complex object hierarchi contain data need process code code work busi data control somehow handl convers view data busi data well interact user view view data busi data broken piec gui display string text field boolean check box toggl button number format text field spinner enum radiobutton combobox view fxml compon class extend one parent subclass addit inform process code also use busi data load generat data specifi user gui must save somewher well may assum process code run user finish set everyth gui tri make sens put work java fx gui rough appli principl mvc famili face follow problem quit lot variat mvc famili one anoth idea put element togeth interact say none shall know variant coupl togeth other know one stick matter stick end lot class featur one class point featur worst case lot code handl convers separ view data class suggest data alreadi view like go without view class sinc view passiv way abl got fxml last time use swing end put busi data process code togeth put control view replac view data json custom serial logic convers would fulli automat sad appli principl java fx due technic reason also doubt realli good solut even work reason well ask put data handl view class go fxml yes use compon exact control get busi data gui go without separ class view data need exampl data consist path text field brows button file chooser dialog enum valu combobox custom object custom dialog let say color date process logic read file path load content someth use data store result anoth file view display data two button open dialog one path store result nearbi text field one custom object show result label realli know build anyth use java fx fxml somehow need get data gui make access busi logic lot small featur like exampl sometim nest three level might one multipl place uniqu
move role crud oper control applic servic creat administr facil asp net mvc applic current tri creat form allow admin user creat role see plenti code look like onlin put code connect databas applic servic layer consist reason
much much depend inject work project use spring depend inject liter everyth depend class point spring configur file grown line long ago watch one uncl bob talk tube unfortun could find link recommend inject coupl central depend e g factori databas main compon distribut advantag approach decoupl di framework part applic also make spring config cleaner factori contain lot config contrari result spread creation logic among mani factori class test might becom difficult question realli advantag disadvantag see one approach best practic thank lot answer
use generic depend resolut constraint problem interfac paramet work differ differ kind activ comment like appli io c principl depend inject via ninject resolv cannot resolv comment index like index caus tri inject index type two solut mind deriv lot interfac index everi activ implement class option clutter code mani empti interfac use generic differenti case ide say type paramet never use question ok use generic case like type distinguish thank
c type one prefer defin list dt os wonder recommend approach defin properti plain object use data transfer exampl via rest api list object c type one prefer defin list lt gt mayb short everybodi know cast transform list sort modifi etc collect lt gt mayb interfac clear mean support type enumer avoid transform list sender side enumer lt gt mayb even stricter collect array mayb even shorter need transform list vice versa nice work box well rest respons
c initi dt os constructor via properti wonder recommend approach initi properti plain object use data transfer exampl via rest api two variant think would go first sinc shorter requir less work maintain howev newli ad properti could overlook someon fill dto also awar make object immut sinc dto person find less import
implement url data valid node express build res tful api use node express4 far success howev sure implement url data valid router script block invalid uri request send control invalid data send back error expect uri follow exampl return json array post year month day want implement way prevent invalid date request sent databas queri exampl return error doubt whether appropri router valid year exampl digit numer charact send control pars uri throw error back client recommend way either work equal well structur point view
handl map object model differ version contract dto look pattern best practic maintain differ version api contract lot inform internet version api url vs header etc question relat map one object model differ version contract type dto abl find inform realli imagin web project endpoint client app could desktop mobil communic web project use endpoint endpoint use client app e intern endpoint public communic web project client app work client app send data endpoint web project receiv process send back respons object contract structur data sent endpoint sent back endpoint look like fair complex term type number object type nest control user upgrad client app busi requir backward compat object model evolv problem sinc separ api contract dto object model map code map object model contract vice versa make non break chang contract need make break chang need new version contract need make sure map object model new contract need backward compat also need make sure somehow map object model previous version contract question would architectur handl know pattern best practic use challeng chang object model creat new contract also need make sure way old contract keep work one way see could done maintain map object model version contract anoth way could maintain map object model latest contract maintain migrat path differ version contract need map v3 v1 would map object model latest contract v3 map v2 map v1 anoth issu consid amount duplic contract lot type need delet singl field one type break chang requir new version would copi whole contract type new folder project delet one field would mean almost ident contract lot type would duplic duplic instanc justifi better way pointer insight suggest appreci
base global system two customiz subcompon follow explan rather detail think simplifi problem hand proper answer could given work script system game end user rather intern develop usag game singleplay multiplay mode base script class inherit multiplay script singleplay script natual multiplay script certain multiplay specif function ap think player ip address etc also code load manag script code larg share mp sp mode pars load command issu user instanc minor differ directori code look script way script instanti depend mode want instanti singleplay script multiplay script concept inherit spring mind perhap base script manag common code plus abstract method overridden mode specif subclass implement specif function exampl issu script manag concept inher global hold exampl list present load script pointer base script class common code might want access inform howev simpli subclass script manag implement specif function need manual instanti multiplay script manag somewher multiplay code likewis singleplay mode mean share code longer access script manag instanc first thing spring mind singleton pattern believ mix well inherit possibl convinc eleg solut ever given exot problem feel like better way simpli abl think reject unsatisfactori question solv problem eleg way solv connect singleton inherit although turn best way platform c although believ solut probabl extend c java etc well
templat pattern violat singl respons principl assum follow class class one side specifi interfac foo method side defin implement first call func1 func2 violat singl respons principl
php applic code structur practic tier prefac say although program first time work relat new php ask creat php app face quit simpl although complic busi logic basic show user number cascad drop option form submit return set data db laid accord busi logic far number php file contain databas call html snippet ajax call js display dropdown follow addit file creat result tabl inform busi logic databas call sure tell moment code most procedur howev roll across larg number web page look differ architectur lay code maintain scalabl way someth tryng research last week forward research thing mvc mvp howev quit get lot inform conflict far understand strict applic web applic origin design desktop app howev came across good descript tier structur kind make sens name present layer busi logic layer data layer howev unsur accomplish practic term think far move logic function properti busi logic class move databas call data layer class instanti busi logic class move code snippet view class possibl instanti busi logic class main question apart good way busi logic class instanti php file call browser ajax handl cascad dropdown result maintain separ file n b sake shorten question left info class user input valid databas connect etc also deliber avoid use framework like symfoni code ignit cake php put alreadi exist websit small app advic help could offer grate appreci
iter rang design lightweight input iter implement c java iter model like better understand iter rang design decis focus input iter basic java model quot jame kanz java iter perfect either merg access increment usl iter time java develop alreadi establish good idea hard understand say merg access increment good idea tri find found anyth fix iter look like go f iter c 1z could new rang model input rang end could return special sentinel type handl end stream condit optim well suppos want creat input rang lightweight rang store read element read line file socket end stream condit discov tri read optim iter model could iter differ previous one question con java access increment iter model give exampl desir lightweight iter implement mention iter type java go f c pros iter model optim iter model use instead word con optim iter model general use
time window design suppos want build notif system user configur time week receiv notif might want get notif monday pm thursday pm friday someth like would object like think simpl consid timezon system time vs user time daylight save us stuff etc would good pattern durat object
organ specif human messag web applicaiton code python flask web applic big portion email sms messag generat templat translat flask babel eye liter constant messag view among view logic call layer eleg view render html serv ajax call render mail sms time messag liter model look even uglier though may seem belong howev altern extract messag relat function modul packag may also seem artifici make difficult compos messag lot paramet may need includ all make signatur unmanag event emit handl approach variat sure whether good could good way keep view code clean time make distinct artifici simpl exampl form control may need send confirm messag even one case form valid data receiv store databas may mani detail involv name date flag etc messag render done eleg person think separ packag messag quit similar view templat strata web applic may also advantag testabl less sure use event mechan caus messag sent though mayb miss someth obvious alreadi invent
write decis statement control layer develop rest applic base mvc architectur servic layer return option lt gt could class control layer condit statement test result option empti return custom respons data els return actual data custom respons http respons bad practic write code control layer return option lt gt want send null use condit control layer remov option return servic layer think good practic someon pleas explain code good practic could consequ
packag type inherit access object type relev type java annot process addit field amp method type packag type also use context annot reflect type implement annot element interfac contract allow access runtim instanc type get meta data packag inherit access object
split request differ server applic current web server run apach multipl site use virtual host want add servic server use nodej want access domain sub domain believ imposs current setup sinc nodej apach listen port simultan suppos must run proxi servic port split request two server base host request header question regard matter assumpt correct proxi setup cost term perform would best suit softwar serv proxi best stick server implement apach nginx proxi softwar would simpl tcp server script perform better sinc would design especi matter
event sourc system make sure read model updat current look event sourc microservic architectur found articl describ possibl implement cqrs event sourc logic deal updat read model creat event implement scalabl servic architectur make sure event chang read model handl clarifi exampl use articl user manag servic scale lead multipl instanc run time ensur logic add user twice one solut think complet split everi microservic one read one write servic scale read servic sound optim
break user interfac layer mvc multipl team work tri break larg applic multipl team work creat number bound context domain layer bound context contain solut infrastructur layer servic layer one repositori per aggreg root deal user interfac layer pleas see articl say three bound context normal split ui three mvc area area would repres bound context therefor team develop bound context would also develop area normal team develop area refer main mvc5 app team develop area refer main mvc5 app team develop area refer main mvc5 app normal map area bound context like answer break user interfac layer mvc multipl team work
databas strategi choos go log event happen program program work databas cannot chang add tabl event store singl tabl relat would think sinc relat sql databas would poor choic familiar type data need index date read speed much import write tabl grow quit big time better strategi technolog use situat
avoid maintain state across program invoc work write compil pass llvm part pass need creat uniqu identifi certain instruct want predict consist compil program twice instruct get instruct also need identifi uniqu across entir program mean maintain uniqu across multipl modul compil unit file compil separ invoc compil k new process way know maintain state uniqu identifi via filesystem simpli put creat file maintain recent use id start begin pass read id file increment need pass end pass write id file compil program need reset file ensur start id time seem bit clunki doabl thought use random bit number ui ds whole program uniqu problem remain maintain seed use new predict consist seed compil unit question avoid maintain temporari file maintain state across process invoc program trick paradigm use avoid
pass state context across layer web api run interest scenario abl get answer would like see eleg solut use case want pass ident user princip user call api action control servic repositori layer import decis get taken servic layer depend user claim privileg permiss want identifi tenant occur use http header hostnam pass tenant inform servic repositori layer differ redi cach databas use depend tenant easili build method base servic call tenant object tenant use pass tenant mean everi servic call make need tenant call e g call chang likewis want pass http request addit tenant inventori servic http request request tenant tenant check inventori get even complex need pass repositori layer mongo db context singleton might need chang accept tenant connect string chang base tenant think way pass context object across layer mayb build context class set properti like request tenant anyth els need pass across layer import way dynam inject constructor servic need manual wire know store context request object mayb even owin context could somehow inject seen good exampl across multipl layer guess simpli tri simplifi abil pass state layer cross cut function like cach log databas access chang per tenant basi could creat central context would great simplifi thing thought would love see other solv problem
broadcast messag non connect client plan server consum data sent client want use messag system rabbit mq avoid troubl discov servic recoveri client publish messag whenev messag broker avail whenev connect avail server sink collect data whenev data show know solv follow issu want send messag client publish subscrib lost client connect moment question assur client get messag even connect server want deal magic pull negoti alreadi sent anoth solut creat keep queue particular client would like avoid unless publish topic final land client queue done general edit exchang publish multipl queue client durabl set true option
remov circular depend class depend also class see audit use class like event respons repres model also action model audit best way remov circular depend
differ compos factori inherit read factori method design pattern head first design pattern class see store factori call creat pizza string virtual function call appropri creat pizza function concret factori class e g ny style pizza factori chicago style pizza factori author continu like littl qualiti control follow chang code understand gain qualiti control latter case seem result appropri virtual function call
detail instanti encapsul mean factori design pattern tri understand factori design pattern implement javascript far understood factori design pattern help creat instanc specif class inherit general abstract class read articl stumbl upon second point drawback constructor class state detail instanti get leak call api via new keyword requir caller tight coupl constructor implement ever need addit flexibl factori refactor break chang class factori refactor common enough appear semin refactor book refactor improv design exist code martin fowler kent beck john brant william opdyk robert detail instanti get leak call api mean
factori pattern avoid code smell two exist implement ufo enemi ship amp rocket enemi ship introduc everi new implement implement enemi ship interfac shown chang need factori class enemi ship factori extra els shown client code code chang enemi ship factori consid code smell yes avoid code smell
idea deal depend compon base web architectur spend time late read think altern way build web applic one approach experi heavili base oo use type script general idea divid applic ever smaller compon similar way angular mani other one import aspect compon defin ap callback execut event part constructor nice way establish communic compon anoth facet worth highlight compon respons bit html associ creat programat idea behind particular provid type safer html compon proof concept creat small applic avail question compon constructor alreadi good purpos option manag depend compon servic respons server communic browser specif object locat document etc hard code depend would make test difficult expect part constructor mix rest would make thing unclear would make difficult implement kind spring like depend inject facil e g autowir inject decor also interest insight architectur concept instanc think good idea use class simpl java script style object would suffic even fit better respons well divid would structur thing differ
ddd inject servic entiti method call short format question within best practic ddd oop inject servic entiti method call long format exampl let say classic order line item case ddd domain entiti call order also act aggreg root entiti compris valu object also collect line item entiti suppos want fluent syntax applic someth like note syntax line call get line item method want inject sort line item repositori order entiti violat sever principl think fluenci syntax someth realli want easi read maintain well test consid follow code note method get line item order entiti accept way implement fluent syntax entiti without violat core principl ddd oop seem fine expos servic layer infrastructur layer nest within servic
avoid static cast dynam cast abstract factori design pattern use abstract factori design pattern project project becam complex time concret class function need separ multipl class follow code snippet render support render canva need static cast concret implement follow code snippet bad design smell typecast abstract factori design pattern yes improv design follow snippet
creat front end test data base backend model schema realli struggl creat robust test frontend coupl data schema backend frontend clarifi django rest api front end queri serial form django api backend model want generat test data backend use factori factori boy librari easili creat model instanc test front end data pass around assum structur backend model whenev chang someth backend model chang front end fit new structur creat robust front end test data chang backend model mean rewrit test data replic factori pattern backend best practic avoid maintain two factori replica consid possibl solut would like involv lot extra work unless librari alreadi creat endpoint backend return output model factori accept json data overwrit default factori front end call generat test data test set
depend inject number inject paramet smell tonight think tell design architectur class mani inject object take consider setter constructor inject specif setter inject propon alway use argument constructor inject complex opposit setter simplic especi case number paramet constructor grow differ topic would think larg number inject part suggest breach singl respons object could special snowflak general good metric think fight especi case vertic depth constructor bigger let say think guidanc rule fight case explan vertic depth let say complex architectur class univers helper univers helper creat earli root close root instanc permeat throughout graph deeper deeper consid logger object specif purpos must permeat whole architectur someth like univers data access feel someth like specif data manag specif data access case use general object univers helper would permeat architectur vertic depth would limit instead horizont depth would grow one specif point univers helper would use creat specif data manag object refin constrain limit respons toward singl respons goal obvious allow one univers object permeat whole architectur sooner later two three five logic feel season develop given project use right test way life new develop join specif project sign alway done way manner higher probabl pass code review season colleagu project
singleton depend inject good practic case good idea singleton implement depend inject class perform heavi task instanti relat databas load would like use alway new instanc problemat due perform code work legaci app prefer dont touch much question creat singleton exampl import consid de depend kind logger multipl implement one problem instanc share depend instanti interest use interfac make solut less coupl project
refactor resolv depend legaci code use third parti develop two librari net fir one librari core function name librari core dll let focus user class librari implement function let call librari function dll want custom implement log method user class whenev user instansti log method implement librari core must depend anyth avoid circular depend import librari use moment multipl applic creat new constructor depend inject librari funcion dll possibl far know respect way other use librari dont break anyth ensur everybodi execut code want log suggest need explan tell
ddd integr aggreg root open host servic oh case accord ubiquit languag payment sent process payment gateway differ bound context integr via acl anti corrupt layer oh pl local context payment aggreg root would expect design like problem payment need know send state bound context via acl oh need inject payment gateway servic adapt argument case payment gateway servic return valu object process payment insid send method heard quit good practic inject servic aggreg root via method argument di mayb ok benefit expos aggreg structur outsid creat domain servic cover like case realli like invers must direct expos aggreg structur gateway servic translat model also caus anemia payment aggreg handl situat proper
mvc get data model view current develop sfml applic store certain valu model view display sfml oper kind render loop refresh interfac constant need fetch valu display model store everi iter keep date possibl effect pass valu control due follow sfml loop look like see event handl control pass whole interfac redraw view could technic pass valu want display call need valu control might lead lot paramet later far know view refer model therefor current solut look like view redraw window call function control fetch valu display model control redirect request model therefor return data model view control feel like approach correct quit figur option mvc pattern even sure sfml event loop allow pure mvc approach get around adapt somewhat could theoret store pointer desir valu view would kind creat depend view model well advic proper fashion
ioc principl servlet contain implement ioc principl implement use either depend inject servic locat pattern articl also support two approach implement ioc principl spring ioc contain name ioc principl support ioc implement use depend inject implement lt bean gt inject runtim constructor base setter base understand servlet contain ex apach tomcat implement follow ioc principl runtim servlet configur inform web xml inject next para pick correspond servlet class implement base configur data given web xml follow url pattern match rule servlet contain take configur inform seervlet web xml inject generic servlet init servlet config method inject servlet configur servlet implement generic servlet init servlet config generic servlet init generic servlet er vice http serv let servic servl get purpos contain differ servlet contain use servic locat pattern implement ioc principl
model clone ad complex n tier mvc project discuss project structur mine friend point interest point architectur seem introduc complex abstract layer clone exist model project structur overal note multipl clone origin model db dal fact dal bll api model hold properti usual link togeth via think howev progress nice anem databas interact rich complex domain model fulli flush method fulli expand properti link model link model api behind method di valid busi logic api behind method di etc safe pass consumpt layer usag map view model see reason clog anem dal model logic model noth ever know dal api servic layer correct also break separ concern sinc dal dto model map databas busi logic view etc sent back databas somehow miss someth use dal model everyth consumpt ui layer would refer dal model product exampl dal expos antithesi separ amp decoupl layer right understand correct noth api servic layer know anyth e dal bll layer correct api model fulli custom consumpt layer would want see versus databas e foreign id entiti class clear model behavior via method di api etc make front end decoupl back end chang correct also interfac nice view model need use view model via quick map view model say right friend right bring interest point want explor far research somewhat sporad peopl mani differ camp
bll layer physic file path work exist websit project bll layer function use physic file path creat consol app setup window schedul task call function complain exist file sound like break separ concern principl best app mvc layer exist websit project anyth els call bll pass file path need bll instead practic hardcod done search mani call server map path exampl
name constructor get popular antipattern accord follow articl name constructor author suggest use static factori pattern construct object way better instantin new keyword begin idea appeal accord detail articl yes method name obvious give sens construct class depend contstructor class differ behaviour accord differ problem construct level problem see accord idiom use class method like function accord exampl creat coupl issu wrap static factori inject factori decoupl rest applic could pleas clarifi understand start see idiom around php communiti even java exampl
handl multi produc particular singl consum kafka evalu kafka provid nice featur want use especi durabl default access past messag new consum whenev consum want reach someth past split communic three type app server want use simpl messag rather care anyth past data proceed line push data topic like event server app configur broadcast data push topic configur app consum reach past messag case troubl server particular app want use topic partit like configur per app id want push data topic proper partit key question three approach correct especi third one find way deal use case found possibl use partit key case exampl app consum given topic use partit key done use approach base kafka pattern need
inject type depend inject new instanc requir method call avoid class public class certificado handler cert handler type type afirma valid public certificado handler type afirma valid typeof afirma valid certif test public void set type afirma valid type type afirma valid public credenti data get credenti data x509certif cert return valid certif activ creat instanc type afirma valid get credenti data cert reason code want tell certificado hanlder class instanti time get credenti data get call redesign better like fact inject generic type interfac inject interfac abl instanti proceed keypoint certificadohandl instanti insid singleton want use new instanc ivalid certif method call app concurr want avoid problem share variabl thread factori paramet seem better design want unit test mock valid certif
servic layer noth call method dao servic interfac extend dao interfac need write method servic interfac want replica dao interfac instead
pre increment vs post increment googl c style guid say preincrement predecr use prefix form increment decrement oper iter templat object variabl increment decrement valu express use one must decid whether preincrement decrement postincr decrement return valu ignor pre form never less effici post form often effici post increment decrement requir copi made valu express iter non scalar type copi could expens sinc two type increment behav valu ignor alway pre increment tradit develop c use post increment express valu use especi loop find post increment easier read sinc subject preced verb like english simpl scalar non object valu reason prefer one form allow either iter templat type use pre increment realli must disagre return valu ignor pre form never less effici post form often effici post increment decrement requir copi made valu express least come pointer pointer regist use integ go back hardwar day plenti machin instruct form address mode post increment post decrement pre decrement built post inc post dec mode cost extra instruct cycl increment increment happen instruct execut next opcod fetch pre dec requir addit instruct cycl regist use realli get someon explain googl case
share kind logic view model two view model separ screen command logic need choos ask user choos list item choos item automat two view model share common command creat command deriv class put logic think command kind logic think think need use separ thing know
design tabl model shipment chang keep normal compani buy second hand valuabl item client resel order client come site ask shipment may choos time deliveri man come collect valuabl choos time salesman call arrang time also possibl client call ask deliveri man arriv time chang save data shipment tabl like id item id schedul time schedul type schedul id creat schedul polymorph clint salesman client would like updat time would updat shipment row compani make report schedul creat day bonus salesman need keep data also chang also need keep possibl get latest schedul shipment would like know best practic mean make data closest domain concept duplic data normal perform big issu idea remov schedul time schedul type schedul id shipment tabl creat new tabl call shipment schedul also ad latest shipment schedul id shipment tabl shipment schedul id shipment id schedul time schedul type schedul id creat shipment id item id latest shipment schedul id creat dilemma solut best describ domain like shipment realli mani schedul like father mani children import stuff latest schedul new tabl histori save anoth approach would keep shipment tabl creat new tabl mayb renam shipment histori shipment chang may describ domain better last result list chang got result like undo word hand get duplic data think best approach one solut use rubi rail postgr sql languag realli matter anoth question rubi rail perspect want updat shipment creat shipment schedul record singl call control activ record callback use creat callback shipment schedul model updat shipment model use updat shipment model creat shipment schedul word come first creat shipment schedul updat shipment
organis develop process aw data pipelin introduc redshift team becom challeng make solid develop process need info deal first info current layout use env develop local env everi develop test env prod via use postgr main databas ddl chang creat sql script increment updat appli automat mode everi env deploy solid straightforward need make analyt report postgr good perform problem move make regular upload data redshift data transfer instrument current moment use aw data pipelin challeng creat solid process look advic data redshift come postgr via data transfer job aw data pipelin next stage job job filter repack data suitabl report difficult maintain data test prod env need creat pipelin copi case dev redshift cloud sure run order proper time get consist data mayb aw data pipelin best tool way track data transfer job solid way sure work two env way also problem data transfer job cannot run local aw datapip line cloud base spend lot time start direct test env cloud also could lead broken data test env recreat databas dump also wast time solut develop debug kind job relat data pipelin tool local aw data pipelin creat via gui chanc creat differ job differ env opportun creat job json config file store code best practic organis version creat data pipelin ci process recreat job everi deploy suitabl tool mayb bash script
sql ddd ok two model class entiti b c partial duplic db sql db part data denorm duplic concret let say document set call peopl contain full specif peopl document set call vote contain outcom vote round certain organ vote document embed list peopl vote element list contain subset data compar store peopl document accord ddd principl two separ model class app repres person one full spec queri peopl one subset data queri vote e g person vote person seem solut fall within scope bound context idea therefor make fine want make sure thank
bad idea creat generic setter getter reflect back wrote answer question avoid getter setter everi mutabl variabl time hard verbal gut feel bad idea op explicit ask search might problem found question whose answer seem take given use reflect unless absolut necessari bad practic someon verbal given reflect avoid specif case generic getter setter
separ view model model yet associ base model wpf applic model object creat either scratch deseri xml file creat connect view model follow method model use applic far mvvm model know direct refer view model let alon view break pattern way serv conveni shortcut start take toll like get rid method separ concern proper intend pattern would function method look alright mmvm wise take model place applic look like proper mvvm ish code wire compon cannot know model class deal look problem applic point view one sever model class might get instanti deseri sens model know best view model use henc current implement exact depend tri avoid build part mvvm pattern grain depend pattern go model view model way round simpl solut might defin data structur applic e g dictionari associ specif view model use specif model mean maintain ad class make mistak etc one could also build associ reflect introduc strict name scheme like everi foo model go togeth foo model view would improv still prone break use depend injector thingi e g mef autom process find piec belong togeth depend seem go wrong way view model might import model model could export model depend creat first look import would satisfi given export way round tool would help split concern across even differ assembl good goal solv under problem know start separ first place intend purpos anyway swap import export guess end start better solut build associ two either hardcod reflect applic explain view model alreadi know proper model class instanti proper model method call one primari reason view model class first place everi view model know proper model class sorri clear text code exampl model pass constructor view model view model instanti model object object might construct elsewher e g could come deserialis process inde primari reason exist problem decid view model creat model type decid runtim hand pass assum intend use form io c solv problem simpli use configur di contain identifi requir model use servic locat also clarifi phrase break pattern way serv conveni shortcut start take toll given model ensur right view model view would instanti return valu could careless ad screen correct wire compon happen method seen first code exampl much conveni abl display model toll pai model would use therefor refer view view model class depend gui librari model depend blunt consol applic need dlls graphic user interfac compon simpli use configur di contain identifi requir model use servic locat guess mention datastructur associ view model model poor man servic locat new pattern first glanc seem case use expect type view model build someth thought think regard question far approach goe take suggest answer howev hope solut littl less diy ish see bind lot thing automat somewhat surpris find go opposit direct model begin requir manual depend manag mayb take
hash tabl iter key poor design better develop program twice found solut problem use hash tabl iter key arbitrari type valu found self use pattern initi deal two data structur affect one anoth coupl right first instanc gui creat qt want user interact affect under data structur case link list insid anoth object need edit user remov ad item gui represent object list much experi gui program solut send signal encapsul object user delet correspond element gui inform gui element delet intern encapsul object take inform signal inform iter map anoth iter remov link list similar new item insert order avoid coupl gui process program made new class configur object generat actual core class use process certain action taken seem like rather disgust solut problem figur make better gui action appear need direct correl non gui action recent found use similar pattern time tri implement follow two list item old new appli distanc metric want associ item one list item second want use hungarian algorithm code complex runtim algorithm plan implement associ via find item smallest distanc new element compar previous smallest valu associ element replac associ valu everi item iter new issu want tag new unnecessari valu item ie last smallest distanc current closest associ item valu past associ step go find way add persist iter use find associ obvious solut yet make iter hash tabl iter associ separ closest distanc current closest associ valu pair exampl talk note case multipl new item closer one old item possibl anoth old item never get updat fine see realli ideal though mayb problem languag c caus lot odd code forc make struct want use std pair accept way around real best solut problem includ distanc inform item class tri avoid first place
model notifi chang control mvc paradigm read code architectur mvc mvvp paradigm ideal model high level polici compon know direct depend compon view essenti one role control send input model thus model compon depend howev need model need communic control whenev state chang understand model depend control would would creat bidirect depend compon lead unmaintain code difficulti ad chang imagin bidirect relationship communic follow howev creat interfac model communic control control remov bidirect communic control implement method notifi control chang depend would look like follow model ignor actual implement control therefor chang control affect model compon wonder ad interfac control best way model control communic also awar program model direct communic view direct use observ design pattern howev model know implement detail view sinc model respect high level polici know low level polici view therefor case let consid observ pattern model communic view
reus part depend inject composit root current work larg applic hundr librari sever thousand class sever entri point mvc websit webservic background run agent job schedul entri point use non neglig part core servic say around least know credibl sourc composit root reus much agre whole idea particular case composit root lot mean duplic code seem kind bad know fact interfac impl bind stay whatev entri point least time could decid care situat mean time want add new bind new class chang mayb nine differ composit root end provid preconfigur composit root part direct project hold implement least chang anyth come loos coupl call global composit root need look like right approach anyon better altern
implicit depend pure function bad particular test extend bit titl tri get conclus whether necessari explicit declar e inject pure function function class depend given piec code less testabl wors design use pure function without ask would like get conclus matter kind pure function simpl nativ function e g max min regardless languag custom complic one turn may implicit depend pure function usual concern code use depend direct abl test isol name test time stuff silent brought add quit boilerpl everi littl function wonder still hold pure function
command line interfac mvc architectur learn mvc architectur go back work command line file transfer applic wrote curious degre command line interfac follow mvc pattern
use mvvm implement hi mvv modular design last day find realli nice design principl scale maintain realli well thing see multipl platform like prism make whole process autom templat observ object provid nice log inform lot thing dont mention like wrapper command messag see platform thing complic need like break ui modul think worth make stuff live independ consid still havent move massiv project use homemad bootstrap observ object list etc featur might miss futur use test platform like prism
best possibl architectur small web applic use mvc need creat web applic use mvc applic small use one web page retriev inform databas well add updat entri onto page probabl access one person time use entiti framework new mvc read lot materi past week still decid tackl project code part easi enough know build initi plan someth like use repositori encount servic layer sure anymor would best possibl approach project thank
rebuild creat new read model without event sourc accord vernon vaughn implement domain driven design event use rebuild state aggreg replay order occur premis approach simplifi persist question ddd system domain publish event event publish event store aggreg still persist relat databas benefit replay event creat recreat new readmodel come simpli event store need event sourc domain e version sequenc guarante replay
ddd aggreg inherit repositori correct design situat work legaci warehous system one aggreg root product correspond product repositori right new requir say follow product purchas need keep track datetim becom purchas order implement requir decid take follow approach sinc see relationship decid creat new class call purchas product inherit product add new attribut class purchas product product def init product properti purchas datetim super init product properti self purchas datetim purchas datetim bug right repositori product repositori cours still return instanc product even though might purchas product need way retriev save purchas product ad purchas product repositori seem solut kind weird two repositori product repositori purchas repositori use save instanc purchas product ddd paradigm would best way implement situat aggreg root special anoth one
process use determin bound context ddd iter ddd differ project yet still struggl proper defin bound context continu find want creat granular aggreg becom even true introduc event sourc mix concret exampl let say design piec softwar like photoshop outset see domain object design everyon say design domain stand struggl want add featur photoshop like applic support multipl layer design concept layer make sens outsid design stand seem like valu object design thing goe actual graphic element may includ layer make much sens either valu object immut begin wonder interpret phrase stand incorrect actual mean domain object manipul outsid context domain prefer make design layer element domain object hold refer id sinc head es path would publish event affect domain listen would updat relationship domain differ path differ interpret ddd
could pipelin two sequenti workflow room overlap process break post two part tri abstract concept explain implement end two workflow workflow workflow b part workflow b reli result workflow execut sequenti work intend want pipelin want first half b occur parallel mean need certain point b wait complet result would best way handl actual use case write updat script compos two part uninstal exist date applic b download reinstal download portion occur parallel remov part want call time b wait reinstal app success remov older version would best way consid break download reinstal portion b two part make sens perspect pipelin make reinstal portion public avail caus issu download portion run first pass task object encompass uninstal exist applic portion download reinstal portion wait complet satisfi depend inject process b depend complet process seem messi
one control class would correct assum general would need mani control class class access modifi user exampl log user add modifi class client address store would need control class thank
correct way inform busi rule violat json pars follow scenario compani busi object busi rule associ one object person follow rule person must name code term null empti person name consist sole space tab busi object constructor paramet name use non nullabl type receiv name similar fashion properti store name non nullabl type constructor except except thrown name empti trim space tab also backend deal object use rest api json right use librari jackson pars json data receiv backend specifi dt os field name null miss json object case deseri json object miss null name field librari throw except person receiv backend throw except backend convert except detail json messag sent client receiv json person field name null let librari throw except error present client question except thrown pars librari treat except given busi rule
duplic domain model view model xml file contain configur inform system serial deseri xml hierarchi object describ configur pass object task perform work base data object want build special editor xml allow user construct configur file via point click oppos open text editor manual chang thing idea provid consist error check configur inform enter oppos run time system say fu figur wrong normal data xml would almost correspond xml element attribut user edit field screen howev think mvvm term seem two choic neither like separ view model hierarchi duplic field xml model ad error check everyth els need data bind properti updat etc coupl view model view wpf use mvvm xml model suck everyth separ view model would end singl albeit horrend consist object hierarchi seem either duplic hierarchi creat consist issu violat separ view domain model creat big ball code anoth way structur editor avoid two design pitfal question ask may seem duplic answer inconsist say least
limit depend inject use depend inject guic time rather happi sometim difficult get depend need sometim plain imposs extrem exampl make respons string return json respons contain either list dt os except requir stacktrac shown tester mean inform log user need provid somehow addit test local obvious alway want see stacktrac even log rule obvious depend includ respons provid argument though string method agre string usual use debug get pretti ugli new depend get ad exampl add local end user messag json represent except number second class depend grew slowli number depend relev core function sometim aggreg nice e g provid proper configur gson take care condit stacktrac hide local end user messag generat oftentim work well end pass lot argument pass needless big depend aggreg creat singl use aggreg end feel like overus di start make code ugli rather nicer wonder point simpli give say bore detail avail thread local even singleton think hamper test depend hard ever matter set need may sound like put mani respons poor gson instanc howev thing respons convert object json exact like need gson compos bunch adapt make throwabl adapt awar stacktrac hide local user messag generat sound like good idea problem need inform stacktrac shown languag messag pass somehow think could wrap throwabl throwabl user info write adapt alway wrap need gson particular case seem perfect di solut general good could throwabl somewher deep serial object ad inform may imposs afraid need thread local hack hack constrain serial process make much less ugli
verifi client class use depend correct j b rainsberg discuss collabor test describ test client user particular interfac two part test client ask right question interfac check mock verif client react proper receiv answer check stub return valu interfac question relat part client ask right question use exampl could check client send correct queri generic databas interfac would check verifi method call interfac like queri string qri use inform contain within paramet interfac method seem conflict anoth goal use pluggabl data layer imagin generic record loader load list string case want concret flat file loader load record obvious put file interfac would longer possibl implement hypothet databas loader problem flat file loader take file constructor argument creat gap test coverag particular file use load record arguabl key part question client say employe loader ask interfac verifi correct abl databas exampl abet fact queri untyp string point creat even specif interfac take well type paramet state push detail concret record loader somewher els case get test
domain model design best practic robust fluenci encapsul extens strive maintain architectur possibl applic cannot decid proper domain model design exampl domain model user essenti concern relat best practic effect effici maintain domain design allow robust consumpt strong encapsul high extens maintain scalabl specif question properti domain model contain properti similar under data model properti relev applic consumpt domain model e properti like full name boolean flag like dirti updat occur prototyp e brand new dummi model creation client consum b under data model expos public access access via method part data model return entir object c domain model includ link object e like compani object exampl relev valu link object e name properti compani object instead entir object setter similar via method call domain model privat method call properti setter e set set first name valu note setter implement valid engin call amp observ call amp servic call relat chunki construct approach construct new domain model client consum via sever set method pure map properti client consum level via factori builder pattern b domain model complet hide under data structur repres e appear object never part databas c valid done construct level e properti set left client consum call valid method domain model appropri valid valid error store collect domain model separ error model singleton class b valid done domain model level data model level retriev list object e order list privat access via get order string order method violat singl respons principl e method pseudo repositori factori b retriev entir list done without affect contain domain model domain model list clone use despit potenti memori intens user could thousand order link domain model ideal tri avoid develop unmaintain domain design pain consum test want domain model fluent amp robust possibl thus allow read like prose client consum repres actual domain under data structur e abl act stand without backend
domain see term lot context softwar architectur domain model domain driven design etc googl get ton differ definit realli
subscrib view event present view view present architectur circular depend view refer present vice versa common use mayb pretti much thing pros con
overhead use big singleton file includ sever subsystem manag various use exampl first want singleton howev want make architectur littl bit cleaner main idea use one big singleton exampl system contain object interact would like howev class need use manag must get access instanc actual class singleton would use includ file need make mean includ main singleton file contain includ subsystem creat use overhead perform con
depend inject db context mvc control concern inject entiti framework db context mvc control sampl code way design better unit test control code inject real mock db context current plan use uniti db entiti interfac inject db context control everi time new action call control uniti call control constructor make new db context object implement db entiti interfac way fresh context object new request think pretti safe concern happen next action multipl call differ data servic use db context object exampl index action call updat event db context call soft delet event db context use db context object even pass context differ data servic exampl user servic logout user db context sure pass around db context object safe safe pass db context like better way extract db context data servic control unit test purpos control data servic db context interfac
mvp pattern handl view creat runtim mvp pattern handl view creat runtim exampl main view model present need display list item list repres view list item view also model present list item view need creat run time along model present need hook solut come main present creation creat present model also creat view use abstract factori main present hook everyth pass newli creat view main view use add ui eelement method view implement main present also list list item present add list item present creat runtim work expect also manag separ ui technolog present abstract factori encapsul ui creation logic howev feel like bodg least ineleg invent wheel common problem solv better way would love see better solut use net winform need solut winform wpf java fx
microsoft entiti framework use research microsoft entiti framework confus use interest relationship entiti framework product manag methodolog design methodolog net web develop framework inform find onlin enough anyon inform know would abl find inform thank
es cqrs concurr tri understand concurr cqrs came across question someth understand said append new event event stream version aggreg still one aggreg load check current version aggreg one first need retriev match append event event store mayb miss someth step done atom achiev
c depend inject vs memori usag hypothet c code contain two class master big lot thing meant one instanc slave quit opposit also lot thing small mani instanc everi slave need access master inject constructor mani slave one hold refer master lot memori wast pointer point thing would like think c compil could find way optim master amp master attribut slave class believ pleas correct wrong solut would turn master class singleton wide consid anti pattern think mayb better approach turn master amp master attribut static pointer piti refer need convert pointer least elimin memori wast preserv abil inject master use mock test guy think
convey object hierarchi object convert json updat class serial via frugal open sourc extens thrift primari reason relev serial process control need support multipl languag cannot easili modifi imagin class look like get serial json similar interpret recreat under messag framework class recipi end interest middlewar make modif under attribut exampl may wish chang anoth string valu respons exampl hello difficulti understand denot refer way meaning within json context someth feel hokey like articul absolut path class respons contain anoth string deseri process unpack python seri getattr find last valu might look like python communic via json howev realli dislik path approach hope differ better way convey modifi valu
data model logic live databas schema apolog terminolog seen much subject use best term could come data model logic live databas schema make distinct busi logic data model logic data model logic mean thing specif data integr like cascad delet ex delet custom also delet custom address delet user remov user group membership rather higher level busi logic rule read much busi logic databas implement busi logic databas vs code absolut agre general consensus busi logic live code databas part like idea databas enforc structur rule data model argu databas concern simplifi code side thing need delet main entiti databas handl appropri cleanup automat help reinforc structur data anyth ever bypass applic hit databas direct ex make manual chang via sql pull data anoth sourc via etl type store procedur part feel like wrong approach applic code assum databas handl proper ever data model logic concern come cannot handl databas simpl constraint data model logic live two differ place code databas ever choos chang data storag someth els implement logic new storag system
achiev persist ignor persist model separ domain model recent come across idea persist ignor idea domain model ignor persist layer applic got think best keep differ part applic loos coupl wrap thing like orm interfac could relat easili swap need howev find aspect orm even under databas leak domain model forc restructur data model fit within limit databas think ad persist data model would specif deal orm would direct map databas tabl relationship read data map data model domain model write data map domain model back persist data model current work net use wonder auto mapper convert one type someth like common practic worth extra mainten overhead make chang domain model could consid anti pattern
right dependenti viewmodel data acc layer view layer context applic use mvvm pattern view model contain inform student viewmodel use communicati view model use asp net core mvc whit vue js project contain follow element view ui control api respons respond request view model logic view model contain inform view repositori repositori pattern communic whit databas senario end user creat exampl student fill data press button safe student inform send server whit ajax call control api catch http request cast view model control api process step view make ajax request control api request properti student view model pars control api control api take inform pars student view model control api ask repositori creat new student student viewmodel repositori creat new student inform student view model data acc layer wrap repositori pattern look someth like control api reason like approach view layer data layer depend viewmodel view heavili bound student view model data provid convert vie model use databas creat new user question better way scenario fine
chang bot applic state start start stop stop develop bot need start stop button form start button stop button chang state bot possibl state start start stop stop tri manag state transit far boolean variabl one state lead lot repeat code better design bot state cs class see lot repetit sure make better thought use enum possibl state im sure would elimin repetit chang enabl state main form control
primit vs class repres simpl domain object general guidelin rule thumb use domain speciifc object vs plain string number exampl age class vs integ first name class vs string uniqu id vs string phone number class vs string vs long domain name class vs string think oop practition would definit say specif class phone number domain name rule around make valid compar make simpl class easier safer deal first three debat never come across age class one could argu make sens given must non negat okay know argu negat age good exampl almost equival primit integ string common repres first name perfect empti string valid string valid name comparison would usual done ignor case sure method check empti case insensit compar etc requir consum answer depend environ primarili concern enterpris high valu softwar live maintain possibl decad perhap overthink would realli like know anyon rule choos class vs primit
design configur delay pattern jms tibco maa stack java app consum maa topic say primari upstream system publish messag push messag need delay say min app start process alreadi anoth self maintain maa topic app consum queue retri say retri case non fatal transient failur encount think push messag delay requir retri topic configur set deliveri delay method read seem like hold onto system resourc till configur amount time given jms templat send spawn async thread push messag may end spawn mani thread caus memori issu take right suggest approach could employ
abstract factori configur differ simpl abstract factori know abstract factori select product famili question still use pattern concret factory1 need creat product c concret factory2 use solv problem
singl page app handl state depend react redux singl page applic say custom page list busi custom custom access url like custom page list contact said custom user drill individu contact custom contact contact page detail custom detail custom work work fine user navig page describ user goe straight contact state custom display final question redux base sp cope
design c program allow runtim import function today like ask question toward capabl c realiz specif softwar architectur cours use search found direct link answer basic goal build program allow user model simul arbitrarili compos physic system e g drive car assum librari physic model function within class function may input return output depend under physic descript e g combust engin model aerodynam drag model wheel model etc idea provid user framework allow compos function accord need e map physic behavior framework provid function connect output input differ function therefor framework provid contain class call compon abl hold one mani model object function contain also hold compon cf composit pattern well connect connector function paramet addit compon class provid general numer function math solver composit function done runtim first instanc user abl set composit import xml defin composit structur later one could think ad gui give better understand simplifi exampl necessari dive deeper framework capabl problem much general framework code program compil physic problem descript well user defin function known user select via xml later via gui function framework read function inform e get inform input output paramet order offer user option interconnect function know principl reflect awar c provid featur howev sure concept build object runtim often requir set softwar architectur c achiev goal c right languag overlook thank advanc cheer oliv
implement factori design pattern ga select work differ genet algorithm select method recent moment raw fit selction class roulett wheel select class tournament select class ask use factori abstract factori pattern choos differ select method think go go factori pattern fulli understand abstract factori pattern wonder appli actual pattern someth like ga select method basic structur select method basic method store insid class help implement factori pattern type method would appreci note know actual factori java file look like abstact select java class subclass roulett wheel java thank
io c configur one file assembl solut one file per execut assembl wonder best practis regist type io c contain would argument follow principl principl one assembl project depend inject seper assembl depend inject one class f e uniti config cs type whole solut regist project depend inject refer alot project regist type principl io c contain configur class per execut assembl everi execut assembl uniti config cs file need type assembl regist respect uniti config cs file stanc thank advanc opinion argument
tender type vs payment method type design data model payment databas one domain requir keep track custom paid applic use e visa amex etc past use payment method describ cash credit card check like use appropri name correspond object order avoid confus could lead bug search around web learn proper term use would tender type howev troubl find describ type credit card use e describ visa master card amex etc tender type credit card debit card gift card sure make someth use addit field like credit card type like know other use object argument could guid name choic would best practic structur data e g foreign key anoth tabl
add extra function exist method class dynam di look best pattern appli problem interfac defin servic class function main class implement negoti servic regist di contain symfoni base use applic servic id howev client negoti contain client info requir addit step call reset negoti exampl common busi logic call webservic reach decor pattern sure would best approach use di would appli togeth di would like extra step load dynam accord client
ddd domain model associ aggreg bit mental block tri model scenario whilst practic ddd problem appear around entiti would consid aggreg root feel aggreg root would aggreg root respect bound context essenti complex rule appli scenario tri simplifi follow scenario scenario scenario would take product produc would put togeth design context various dimens design team would assembl product line product would exist batch product assembl would qualiti control inspect inspector inspector would select number product batch random would determin pass qualiti control qc check someth along line product width minimum maximum rang would also perform visual check product inspector qualifi perform various check therefor need valid visual qc certif valid certain date would need requalifi would need valid dimens qc certif perform dimens check might one inspector visual check anoth inspector dimens check product pass qc visual dimens check need pass result check either pass fail appli ddd tactic pattern come write code domain model assum ddd strategi appli success current design bound context product batch aggreg root product entiti qualif bound context inspector aggreg root inspect certif entiti qualiti control bound context seem need bring concept product product batch inspector togeth keep run vaughn vernon red book countless onlin articl includ udi dahan mani mani specif aggreg root play tri appli udi theori scenario would feel like inspector aggreg root need treat aggreg whole would mean need load child data would quit overhead inspect sinc day one qualif sinc day one quick mock model tri add clariti primit obsess realli express slight anaem approach quick show context note yes deliber omit new list bother anaem part quick dirti highlight model scenario valu object yet get thing right cours go get thing right first time rewrit exist system truli believ ddd complex system previous one net entiti framework solut essenti driven use entiti framework busi logic scatter throughout applic horribl b bo spaghetti code hard unit test decid appli ddd learn domain somewhat familiar get strategi right tri appli tactic pattern need get experi alreadi gone countless iter class nice set valu type time glue use case process togeth key thing model process inspect product mani question want discuss approach find best way thing question spring mind aggreg approach demonstr fit scenario would domain servic better fit mayb domain event would better fit say someth happen think perform aggreg load children scenario product creat one bound context lot properti put exampl understand bound context also consum anoth view bound context although repres differ would fine defin data requir thought inspector might qualif ie differ inspect type exampl might product batch lot batch lifetim system
pattern build block build app mvc mvp pattern read page design pattern treat write code understand titl link state pattern build block understand correct mean use design pattern make sens correct start say go use strategi pattern wait write code use strategi pattern make sens design use treat mcv mvp pattern way creat gui applic respect link say architectur pattern suppos creat gui applic use mcv mvp pattern code clean readabl maintain still code smell bad design use mcv mvp pattern
anyth wrong make nullabl refer type explicit wrap valu type program java make nullabl explicit instanc foo assum non null want null use nullabl annot better option lt foo gt c nativ support annot nullabl lt valu type someth like use valu lt foo gt type field impact would perform memori someth make bad idea
get valu ui element variabl debat friend look way resolv decid approach better mainten whether consensus best practic regard applic show data ui exampl order id ad dynam user button suppos action data shown ui e g send id process data fetch better code handl button click take valu direct ui access ui element ui chang often take data ui like button click handl code also updat consum data ui might get broken data taken variabl save state add special variabl save state add new place code maintain chang artifici state variabl might synchron ui caus bug decid approach choos ad special variabl save state consid code smell
make unit work testabl process refactor legaci code unfortun web form applic tight coupl smelli code current access databas insid model look someth like would like move logic data access layer process make easi test futur migrat mvc without much hassl current code use orm stick sql connect figur way abstract databas access know make easi test decid make hierarchi control current codebehind gt servic gt unit work gt repositori gt sql connect db basic control see servic use unit work access repositori make use transact retriev data creat sampl show mean current problem use simpl list instead actual connect databas sampl show look open chang rewrit complet someon knowledg kind problem exampl servic unit work exampl repositori control current codebehind use current approach cannot mock custom repositori unit work class also kind mix pattern need togeth sure way go make repositori unit work testabl
mvvm correct way switch view occupi footprint screen exampl switch main view accord select item hamburg menu also sometim small part gui chang accord applic state accord user interact part gui web form day use creat tab control hide tab button bar chang current tab page programmat stack view top design runtim hide one wpf mvvm seen peopl creat data templat view attach view model switch chang bound object differ view model type view chang see good idea hamburg menu view case necessarili view model view case like escap creat dummi view model view abl switch rather realli differ type data need bind view right concern design detail anyon situat way achiev switch view effect general assum differ type data attach view switch correct practic creat view model someth pure gui word view model coupl data kind data avail gui type view need cover write code chang view certain trigger code behind case agre pure gui view model involv
depend inject vs static method interest discuss today anoth develop approach class method accept string output string imagin someth like follow complet made purpos exampl function logic base string input ad project use di di contain place would add new class interfac inject need would make static class pros con would want make someth use constructor inject rather access requir anywher
ddd id primari key differ aggrag root class per bound context work understand ddd want see idea sound common practic pitfal unforeseen complic want effect one entiti global uniqu primari key want use event sourc would like differ ar class repres entiti depend context exampl ecommerc site differ type page static content page categori page product page also product map product product page effect product page subtyp page singl uniqu id repres page product compon content manag context load page event id reconstruct page ar object page relat action save appropri page event ex page edit content product manag context load product event id reconstruct product ar object product relat action save appropri product event ex product set price generat read model load event id construct product page save read model databas correct way go bad idea reason see better way
deal mani interfac look updat compani exist code allow unit test implement abl repositori interfac allow di howev exist code habit creat repositori class per tabl databas mean one section busi logic may need queri differ repositori class pass interfac use di seem messi look help redesign mvc c site exampl reduc code size easier read control account scenario manag user session team tri reduc size control busi class perform action actual mean busi class larg mani respons pass interfac repositori queri exampl shown pass session login repositori sole respons correspond tabl databas account logic class handl busi logic exampl given complic logic perform becom pure chain call interfac method question make easier handl also testabl larger scale control need queri differ repositori sure manag pass interfac control relev busi class need chang repositori handl one class per tabl
control model object attribut context project person budget program work tri learn use mvc pattern effect session control pass user command month control control parser map command control method current control month object attribut direct call model method look like normal implement mvc pitfal let control model object look also plan session control number view one view also month attribut call read method pin feel wrong track standard mvc
accept break mvc store data dom order reduc load databas server ever current use node js amp express load webpag contain element content render via queri mongo db get request creat button element bind mongo db id button design point sale system button item associ price databas server queri db price item pass id click function time client regist order particular item queri databas could avoid queri databas button click webpag load simpli store price valu attribut button allow reduc amount request server get hundr thousand essenti store model view bad function load reduc sorri dumb question curious
proper way think state monad use function approach program late know mutabl state chang big nos within paradigm find work databas data structur state must chang tri learn monad mean interact state struggl grasp concept wonder proper way deal state necessari state chang sort function construct use use import think interact code would scenario would good idea switch oop paradigm think interact work across paradigm
php variabl variabl syntax exampl reflect got convers cowork talk reflect php languag insist instanti instanc class use variabl variabl syntax like follow reflect techniqu cowork differ opinion extens googl search even read wikipedia articl reflect howev surpris none resourc explicit mention techniqu exampl reflect get search refer exampl reflect api someon answer weather techniqu exampl reflect also possibl pleas point authorit sourc explicit state
manual di manag concret implement consid solut manual di go class better way manag concret implement without ad contain theoret real test case someth think earlier di exampl fine howev prefer concret class kept composit root scatter across applic way achiev without contain bit wild goos chase contain requir want achiev object updat question duplic link one tri elabor usual manual di would parameterless constructor shown code exampl call pass concret class realli composit root handl pass interfac paramet concret defin class second constructor small consol app etc manag main composit root everyth execut howev asp net mvc app exampl becom complex wonder solut peopl tri
deal imag data redund sql tabl say databas structur like say want copi databas dynamo db cqrs dynamodb tabl would follow column howev custom place order photo store time normal photo store differ tabl
present access view data via properti event paramet new employe form save button press save request event rais present get employe object view pass model process employe object creat view pass present via event argument view employe properti present access
implement valid set properti valu mvvm wpf scenario view model properti state view combo box allow chang valu state view model need run valid call bool valid state state valu method set valu state properti question would implement concern want solut generic could use differ similar scenario exampl scenario valid state async method want chang valu state view model unless sure valid new valu state accept valid want combo box keep old valu select disclaim know multipl way implement also mvvm novic would like discuss solut think better suit scenario possibl discuss pros con
mvp view access domain object let say form repres user press save button user object construct view base input pass model via present insert databas model construct model use view data via present insert databas model essenti question whether view access domain object user
wpf mvvm load data startup build simpl master detail gui use wpf mvvm prism data come rest servic main window main view correspond view model user control show master data got view model well ad instanc master data view model main view model sure best practic set data context main view code behind user control use xaml main view got two command one login rest main view model anoth load master data child view model load data might take second want fire two command sequenc tri prism composit command also tri add command trigger view load way enabl control sequenc command load data attempt login return caus except thrown notic login method load data method async method good practic handl situat also want set window certain state e g grey show wait modal load finish
handl common code among present face issu relat code duplic follow mvp architectur pattern android project work project structur separ packag data domain infra ui insid ui packag anoth packag screen app contain structur contract contain two interfac one view anoth present activ inherit view interfac implement method present contain littl busi rule communic model anoth two interfac base view base present minimum view present need implement screen much common code differ basic layout specif behavior occur due adopt mvp rule view present found two answer issu one present use multipl view mvp reus common code present one suggest creation base present class common method abstract class accept thing go implement base present abstract class lead question base mention structur achiev good result without affect hurt littl structur creat new packag abstract class base present believ approach dirt whole structur need
good diagrammat way repres async event communic two system good diagrammat way repres asynchron event communic two system pub sub model look tool represent sequenc diagram swim lane diagram
improv design singleton pattern want creat media manag tool tri draw appropri uml class diagram tool shall hold collect differ media type movi music etc inherit basic medium class medium differ attribut addit e g interpret director plan fetch inform media onlin complement miss attribut automat current plan hand function addit singleton class templat onlin synchronis differ kind medium fetch proper onlin sourc proper attribut scheme make sens better approach would one kind medium would creat onlin synchronis static method sinc need individu instanc method updat medium need adapt differ sourc e g get attribut imdb com medium movi edit strategi pattern suggest comment candi orang look promis combin answer comment bart drop intent use singleton pattern
someth dirti use non linear store event sourc stumbl upon articl luca majerowicz titl add git like function applic use event sourc describ use event sourc event store node graph databas use neo4j becom trivial branch event store arbitrari event order maintain multipl applic state simultan inde merg event one branch onto anoth surpris find relat littl els written approach seem like pretti use idea inde literatur event sourc find appear share assumpt event store effect linear stream event cours one could still achiev branch effect linear stream includ event identifi predecessor event would far cost reconstruct applic state use structur approach instanc martin fowler describ talk parallel model certain appear high level see get anywher close describ system branch applic state freeli someth nag event sourc pure stream event precis sort flexibl make event sourc power yet surpris event store use graph databas way get twist noth
find object relationship descript follow question write use case take noun defin user stori requir found follow candid class user question session attempt user answer score categori topic hint think follow relationship hold object user o2m session user o2m attempt user m2m question question m2o categori question m2m attempt question o2m hint attempt o2o score session m2m question question need declar collect type object like user question session attempt identifi object relationship class object defin owner relationship good idea find behaviour find object relationship correct level abstract miss class
follow depend invers principl rule even need one type need polymorph consid class follow quit sure would variat user requir polymorph user violat rule depend invers principl show user info depend concret class user instead abstract question creat interfac user even need polymorph quit sure would one type user
overal view valid datagrid keep mvvm struggl find good architectur must common problem enabl disabl button view contain datagrid valid requir cell row collect level perform clean mvvm architectur datagrid would easi check overal result either notifi data error info data error info implement view model use exist error disabl button via command interfac button resid view model howev data grid complic thing find go back forth data valid view model view eg valid view model keep valid closer datasourc implement notifi data error info item collect enabl valid cell row level appear support valid overal collect yet find decent solut see link want pollut item collect ad refer extern entiti valid view use valid rule datagrid allow valid cell row collect level see communic presenc error view model noth pass back view model unless valid closest solut seen onlin solv problem tech net one data valid mvvm ugli ugli get quot page emphasi mine import thing disabl save button form invalid static properti view model name error error occur error count increas error correct error count decreas count save enabl disabl author solut put static counter view model set call back view error detect view model data error info interfac pass inform view increment counter view model valu counter use disabl button addit perform valid collect level implement anoth static variabl view model set instanc collect current view model thus item valid entir collect find collect static variabl code make cring miss easili clean keep strict mvvm guidelin perform valid overal view model requir valid data grid cell row collect level communic result valid back view model order perform valid collect level use valid rule creat custom rule per question inject bind sourc data grid rule clean allow valid collect level accord comment bottom link articl prize updat go modifi version emerson answer go keep intern valid within object view model inject valid test collect level valid follow code lay idea code seem work probabl could optimis sure go hell code whenev number properti product view model set class valid within call extern valid number duplic set current valu answer error messag generat jump hoop get mean product view model know part collect simpli valid extern defin set condit extern condit could anyth iter collect look duplic valu case check number properti equal particular valu place condit check generic base class code reusabl
depend inject runtim data let assum servic need initi singleton exampl someth like public interfac graph contain void initi enumer lt graph gt initi content void add graph graph bool contain graph graph enumer lt graph gt find criteria complex criteria assum implement depend easili bind di contain auto inject class need work expect fact must forget initi contain use need addit code prevent enterili satisfi better solut requir initi method edit clear singlet fact singleton scope applic scope therefor initi method invok abstract factori case graph pull folder user decid chang folder need chang graph base folder therebi initi contain content real exampl use initi approach under algorithm pretti complex half far need thing initi like
cqrs hexagon architectur incompat begin project wonder use cqrs hexagon architectur project fact incompat read cqrs peopl agre architectur like pattern think
achiev proper mvp android depend present domain data layer tri understand better mvp architectur android want implement mvp android project begin first tri use one modul app applic app app start grow littl fast expect test take way much time finish give error never pass think made version app tight coupl next thing tri use modul project app applic modul domain layer data layer start read set depend think hit crossroad understand domain layer must independ depend like app depend domain layer data layer data layer depend domain layer
contract api user inevit design ui framework java everi ui compon repres class compon framework identifi non null unchang string key get key constructor provid setter anoth class aggreg compon repres compon contain array compon aggreg compon class factori use creat child compon reason key child compon parent compon key index index array index child compon pass parent compon key index factori creat contract factori implement construct child compon use pass key may enforc contract aggreg compon check key creat compon pass key throw except ask solut even complet differ design solut without contract actual compon intend display data object pojo json xml primit object simpl compon enough array need aggreg compon factori use aggreg compon separ creation logic child compon mention earlier key child compon particular form futur may write compon display map similar array case key might form parent compon key c key c key key map
name differ compon adapt pattern exampl code php appli languag scenario adapt pattern class interfac object differ role like origin object implement cat interfac class implement dog interfac wrap cat interfac object instanc class wrap cat object servic object wrap cat object new adapt instanc question scenario compon adapt e g servic object might look like exampl use term adapt name servic object class common way name use rather use term adapt dog cat class name servic e g adapt finder adapt factori ideal would literatur exampl point common practic name compon mayb consensus exist wild west case question goe nowher decid tag php java think question would appli languag edit adapt factori answer got far suggest exampl might trivial actual use case someth like map logic determin adapt class use depend desir return type type adapt object even simpler exampl build dog cat object reason adapt factori object pass around depend compon contain depend inject dog cat addit cat object behav differ differ sub type cat text edit suggest best way name might adapt factori mayb answer question way
add role base access logic domain model aspect librari manag system biggest difficulti find hous respons object identifi system say problem space post simplifi descript featur librari manag system usecas admin add book inventori chang state book permiss valu staff chang state book return borrow custom view book state return borrow book follow state return borrow remov admin grant revok access staff ad book staff entiti user user repositori book book repositori librari permiss associ librari hold user repositori book repositori one one relationship repositori correspond entiti one mani relationship behaviour user repo get list user user interest respect problem domain save user entiti extern system databas cloud book repo get list book book interest respect use case save book entiti extern system databas cloud add book question usecas add access base logic case decid whether user admin object access grant revok access ad book list book return base user role note want achiev cohes among entiti unit test modul coverag incas applic layer ensur current new team member expos domain object direct
java mvc rest base approach secur work design java base web applic although work java core still novic design web app enough confid think correct thing team two work backend use java person front end implement web app login signup page follow dashboard page user whatev app follow doubt thought use mvc framework like spring mvc strut etc feel frontend page bound war file class true true implement secur ssl use ad import spring secur apach shiro case use mvc framework also bound page jsp want html use rest api function abstract front end backend bind entir backend ssl sound better solut give requir would realli appreci could advis better solut apolog question vagu proper forum know els post thank
event sourc api manag platform leverag evalu use kafka implement event sourc microservic environ alreadi make use api manag platform wonder common consid good practic use api manag gateway kafka topic benefit could analyt cach rate limit improv access control gateway layer possibl other howev communic microservic alway main topic discuss main doubt communic microservic call intern ap direct via api manag produc consum event direct kafka topic anti pattern microservic expos ap chang under data occur without make use api e direct kafka sinc use event sourc microservic access singl sourc truth even need much communic microservic could duplic data need local sourc worri communic transact sever microservic need take action e g payment pipelin good practic
instanti vs inject tri better understand pros con instanti vs inject web applic type develop pros amp con use sort scenario look
clean architectur mani use case class go clean architectur lift android level mvc mvp introduc di dagger reactiv rx java cours java mvp clean architectur layer entiti datastor present access layer use case use case ideal interfac implement one oper one entiti also know clear architectur scream sens project realli high readabl high number class project someth like differ entiti cours entiti repositori least method usual get add delet updat access understood clean architectur use case lot class compar control mvc realli make use case realli appreci clarif someon alreadi use success thank jack
facad handl except throw tri abstract elasticsearch python client method index document elasticsearch return respons like put tri catch insid facad class handl document cannot index reason confus log error class inform client class throw except simpli return true fals client
cross entiti action implement domain layer applic architectur hold sacr say domain layer refer either data storag present concern vice versa allow would like keep way everyth go quit well came one particular requir given certain uncommon condit decid work call associ b must invalid problem invalid requir persist note edg case time would need concern associ b requir invalid would obvious consum come implement solut well thought solut howev quit happi other would like input solut invalid b call deleg persist advantag transpar consum easi consum disadvantag strang inconsist save behavior class domain layer save method call solut invalid b repositori save associ b advantag transpar consum easi consum consist domain layer disadvantag inconsist persist layer monolith persist antipattern perhap wrong anti pattern name solut trigger event edg case advantag inconsist domain persist layer behavior cross entiti concern disadvantag hard consum expos logic consum suppos respons wire event alreadi implement none three solut seem quit right someth miss made faulti assumpt somewher best cours action keep cross entiti concern like maintain usabl strict isol busi logic note ddd project
design pattern forc client class call method larg class complex properti like introduc default implement allow user overrid part default implement also make sure user call sync method object alway consist state class could use like thought use builder pattern provid method modifi variat custom complex1 type much work amp mainten hand expos custom1 public properti look like exact opposit builder pattern intent good way allow user modifi properti complex object b forc call regist object compil time
react nest object state vs individu properti use case nest object state either optim easier work individu properti instanc want express user control interact photo state could write someth like nest object could also write way individu properti although logic group properti togeth use nest object style state seem prove verbos tri updat one coupl properti said benefit use nest object state oppos use individu properti understand nest object might feel proper think benefit anyon insight
builder constructor factori method let say class dot builder public class dot privat final doubl x privat final doubl privat final color color privat dot doubl x doubl color color x x color color public static builder creat builder return new builder public doubl get x return x public doubl get return public color get color return color public builder get builder return new builder set x x set set color color public static class builder privat doubl x privat doubl privat color color public builder set x doubl x x x return public builder set doubl return public builder set color color color color color return public dot build return new dot x color see two possibl way one could instanti builder constructor new dot builder set x factori method dot creat builder set x latter case would make builder constructor privat factori method factori knowledg use actual type return valu might chang later someth probabl go occur builder best argument use factori method would say builder use final field string id set constructor certain restrict appli constitut id throw except illeg id string done constructor therefor factori method would better howev feel like miss import argument best practic case exist argument exist use factori method
put unitof work handler request model ddd clean architectur rearchitect system python use sql alchemi data map layer zope compon architectur depend inject interfac declar process figur combin draw ddd dci clean onion hexagon architectur sql alchemi unit work implement want lean made interfac everyth layer strict access concret implement object di lookup base inner interfac part work nice core entiti defin packag sql alchemi run mapper question deal slq alchemi session object add chang object order get noth commit lean design request model creat request model factori retriev di lookup request model factori interfac interfac know noth web sqla contain session collect commit method concret implement regist main sql alchemi request model sqla concret implement session commit repositori use case interactor work request model object know interfac method use session collect call commit method work fine altern concret implement request model factori regist test altern backend parallel request model interfac know commit session collect chang object way trigger commit web app web control bit make request model incom data get repositori use case interactor via di lookup call method repositori use case pass request model param use case still unit work stuff altern repositori use case could access adapt give access request model believ fit principl clean architectur ddd fair well want ask look good experienc architect option work repositori use case want hand unit work handler want ensur achiev use case interactor use multipl repositori still one central object commit everyth use case violat depend rule thought welcom
use repositori servic vs instanc variabl object truli belong class familiar relationship case employe object 401k realli compos 401k object employe 401k make get feel need reach employe object get 401k adher would consid adher law demet e g b c would like follow addit employe object lot attribut like employe id age date birth etc could end infinit attribut employe fall respons case 401k manag 401k employe still adher singl respons principl one need reach employe object get 401k even supervisor realli compos employe similar 401k mayb employe repositori find supervisor employe employe method repositori amp servic come vs
entiti automat persist mvvm applic xamarin form fwiw viewmodel store set explicit think good idea set store automat via decor instanti set repositori return set object would simplifi viewmodel make save set transpar possibl drawback set look like data type come behavior realli obvious set persist might violat principl least astonish public interfac set chang auto persist set decor chang might error prone howev clean code still propos less design page number sinc read kindl part system section aop figur client believ invok get account bank object actual talk set nest decor object extend basic behavior bank pojo get someth fundament wrong creat set class use case centr could possibl achiev sinc basic data like view set class approach appropri come set
depend inject creat object factori vs use invers control contain requir use depend inject alway use io c contain ninject uniti built one asp net core mvc howev come across idea creat object factori instead intercept call parameter constructor via io c contain retriev object factori parameterless constructor instanc opinion techniqu would speed whole thing sure extent would true point question consid fact life cycl object easili control consum context possibl advantag io c contain provid case
one aggreg root multipl subtyp concept struggl design ddd cqrs manner hope find insight old day knew ddd would use simpl inherit mind wrap around follow domain concept properti singl valu properti properti type valu attribut properti collect attribut latter two basic base concept share class attribut would use command event manag domain stuck furnish ddd aggreg root concept feel weird repositori return differ type object hand also feel ok still follow solid principl inherit right anyon got hint model dilemma edit want add context may sway consider properti creat main attribut aspect like addit attribut choic properti type ad properti mean separ aggreg root
evid use depend inject improv outcom softwar engin notwithstand popular empir evid show depend inject use di contain help say reduc bug count improv maintain increas develop veloc real life softwar project
use valu object creat via factori method getter write dto constructor getter setter use ap ticket servic return array data less complex base entrypoint call order simplifi life consum api wrote class map local array object get suggest ide code instead check alway doc see valu avail respons use type hint object fun like cover case api opensourc librari mayb someon could benefit question use valu object creat via factori method getter write plain old object data object constructor getter setter consid main use case read data api convert object howev might usag would work way around creat object local convert array pos ting api mayb librari
rehydr aggreg snapshot project rather event store flirt event sourc cqrs though never opportun appli pattern real project understand benefit separ read write concern appreci event sourc make easi project state chang read model databas differ event store super clear would ever rehydr aggreg event store project chang read databas easi alway project chang write databas whose schema perfect match domain model would effect snapshot databas imagin must pretti common es cqrs applic wild case event store use rebuild write databas result schema chang miss someth bigger
dto structur payload usecas suppos store entir payload third parti api addit dto say xyz dto translat two way achiev translat payload dto come convert correspond entiti would entiti api payload convert json dto anoth way payload field dto write mapper follow perform usual payload dto convers b store payload dto dto api payload payload way payload alreadi readi convert entiti entiti api payload dto api payload understand advantag option unnecessari translat dto back payload runtim want understand design pattern rule break miss trade off dto strict structur payload vs differ structur
realli bad practic mock pojo valu object care contain advic mockito write good test written mock valu object even say instanti object pain valid reason understand realli care object contain let say valu object class foo simpl constructor arg constructor contain object also need arg constructor let also say follow servic need test method clear care foo contain pass anoth method want test realli creat foo object nest constructor builder would realli easi mock foo even pojo respect guidelin given mockito anoth altern
tier applic state handl object applic control monitor sensor base equip temperatur humid etc data equip transmit use gsm ethernet serial port channel data obtain program need store databas notifi user ui user abl send command certain command list equip current design consist independ program equip handl program work predefin communic channel gsm ethernet serial actual three program one gsm one ethernet one serial everi program interact server program singl server program get messag equip handl program log transmit data ui program vice versa get command ui send concret equip handl program ui program visual current state equip get command user send server possibl one ui program use publish subscrib pattern exchang data program problem data exchang question store current state equip need duplic state program store data server deal data synchron program believ architectur well known reliabl pattern deal
creat interfac field inject vs object tutori use interfac inject thing exampl use hot drink interfac creat tea class implement hot drink third class call restaur hot drink field insid class assign valu constructor goe inject tea class restaur class constructor take hot drink interfac argument basic question everi field go inject need interfac let say bunch food item implement hot food interfac bunch drink implement hot drink interfac would okay meal class implement anyth take hot food interfac hot drink interfac argument constructor later inject differ food drink class meal field restaur class inject differ meal object would okay would make meal interfac meal implement meal restaur meal interfac field inject meal edit ask whether everi class implement interfac ask whether alway interfac field inject class also implement interfac like exampl tutori
bundl model servic mvc pattern day hear mvc contain addit layer call servic turn mvc seem like much decoupl instead want engin app someth like exampl chang user name view send new input control control send request model data reciev one central method model model take data intern process method return data control control tell view updat complet updat view view updat data given control told model direct work data either instead use servic layer handl bussi logic flow would chang like control send data model model call respect servic process data model updat data servic process rest first solut seem eleg later seem like make model anoth control data reli servic kind weird logic add anoth layer complex whole app
cqrs command dispatch learn cqrs put togeth realli simpl command command handler implement lot exampl see concept command dispatch see lot literatur wonder command dispatch necessari command dispatch command bus thing
use event sourc aggreg root specif pattern aggreg root use event sourc techniqu built seri event repositori great need manag chang state etc come use specif pattern appli app specif busi rule hit wall entiti use instanti etc etc would want run specif method repositori exampl get product product code check current ar uniqu simpl exampl unsur repositori set get rs id event store use databas back repositori event store read model yet anyon done need read model first queri read model use result id get ar event store need multipl ar result return confus thought right way need event sourc seem marri old school think event sourc
structur react redux compon request data api search box go use differ page use term page loos search box put valu search string redux state result popul extern api anoth compon display result search list exampl state baffl multipl search box differ page put respons request result api one place search box use search box wrapper search box respons without duplic call redux action side effect reduc respons page respons sinc would lead code duplic nearest thing saniti find non render compon whose sole purpos watch search string state entri fire request api updat result respons reason approach compon structur problem
ddd must aggreg model relationship shallow sometim aggreg simpl scenario simpli complex enough requir deep tree object relat consid websit monitor applic period ping url check aliv web app id friend name url aliv much data child object except mayb url valu object certain much invari enforc either least time say model complex model relationship intern whatnot aggreg entiti thing think complex size dictat aggreg entiti valu object rather mean web applic monitor domain web app entiti root model go return repositori domain expert bring new requir relat web app model believ make web app aggreg rather web app entiti question line think correct get wrong thank advanc
idea replac dao domain obj pattern know someon probabl alreadi thought way replac da os domain object exampl basic constructor creat object static factori method use get exist object getter setter connect databas delet method use delet curious wrong design anyon tell problem use tell new serverless
cqrs event sourc near real time report work small team develop cqrs es semi microservic architectur pretti far along run interest challeng project challeng start move project report databas handl cross domain concern realiz complex problem one size fit solut first time use heavili event base architectur pleas forgiv use wrong term perhap hard time find inform tackl challeng expect anyon solv problem would grate help terminolog could point resourc may help problem outlin thank advanc alright team build softwar sever servic servic use cqrs architectur event entiti event sourc entiti event sourc event sourc depend specif version entiti domain event architectur heavili inspir vaughn vernon implement domain driven design servic relat databas least schema treat separ databas databas domain event tabl constraint aggreg version number ensur transact fail two event come time entiti heavili collabor applic import us problem current publish domain event subscrib subscrib current limit servic usual project tri publish event transact process success event could process asynchron without hold user led event process order process event insid transact work project handl logic happen quick may case long project updat real time need updat near real time probabl allow delay second event order typic guarante scenario problem begin requir complex sort filter view combin data sever servic seem necessit move project logic separ report servic look differ model push base mechan pull base mechan inspir kafka hard time determin get event servic process order aggreg report servic especi run multipl instanc report servic recogn base current setup guarante order within servic across servic accept expect oper commut aggreg event servic aggreg aggreg event servic aggreg event servic aggreg aggreg event servic second delay also accept resourc search term type problem altern suggest would much appreci
mean state complect valu time rewatch rich hickey great talk simpl made easi around min talk state mention state complect valu time sure understand well immut data alway independ time sens chang time appreci someon understand talk could clarifi thank
deep explor domain subdomain bound context domain driven design curious approach heurist explor domain subdomain bound context ddd model session everyon know programm tend perfectionist especi place definit need industri learn extrem import produc solut good enough rather perfect otherwis cost develop balanc effect though term good enough ambigu depend context seem establish guidelin lead us good direct case simplest code fulfil accept criteria use design pattern test driven develop name mind approach come explor domain know stop explor jump next area start code cours domain session know domain better explor deeper question singl session base domain expert opinion length model session mayb arbitrari goal set custom mayb someth total differ
proper design avoid use dynam cast research seem find simpl exampl resolv problem encount often let say want creat littl applic creat squar circl shape display screen modifi properti select comput perimet would model class like imagin class shape triangl hexagon time proprer variabl associ getter setter problem face subclass sake exampl stop shape manag instanti store shape array final view spinbox chang paramet type shape exampl select squar screen paramet widget display squar relat paramet thank abstract shape get type propos chang width squar need function allow modifi width shape manag better design avoid use dynam cast implement getter setter coupl shape manag subclass variabl may alreadi tri use templat fail problem face realli shape differ job 3d printer ex print pattern zone job take photo zone etc abstract job base class virtual method execut get perimet time need use concret usag fill specif inform job need print pattern zone need list point print posit zone print paramet like temperatur take photo zone need zone take photo path photo save dimens etc call execut job use specif inform realis action suppos time need use concret type job fill display these inform take photo zone job select widget display modifi zone path dimens paramet shown job put list job take first job execut call abstract job execut goe next end list use inherit store differ type paramet use json object advantag structur job dynam cast set read paramet problem store pointer pattern zone thing better way store data would store concret type job use modifi specif paramet type job manag list abstract job
mvc better use custom getter repositori function use php symfoni doctrin question independ use languag framework suppos entiti product one mani relationship anoth entiti price price among other properti valid valid want know price product specif day far know accomplish two way creat custom getter product entiti e g get price date date would cycl associ price find right one creat repositori function fetch correct price direct databas one two approach line mvc best practic
decor pattern use without interfac resourc seen decor pattern look like follow howev notic follow approach also work decor tea cost return valu problem method would otherwis interfac tea necessari add one implement decor pattern
vari loop templat method pattern learn templat method pattern question came mind vari loop use templat method pattern suppos follow code implement templat method pattern like vari coordin someth thought solut given better solut
put domain class compon structur diagram got microservic call exam result simpl compon structur exam result offer exam result requir exam result dao exam result dao offer exam result dao servic get pass exam result student id exam id given answer json format compon exam result convert local domain object valid save databas use exam result dao nomenclatur suggest discourag well fine start implement gave exam result class valid de serialis also domain class exam result given answer start scratch head exact domain class get use dao first thought make anoth compon learn student compon must alway offer interfac domain class meaning method getter setter de serialis keyword proper conduct put domain separ packag mark compon compon diagram mark someth els includ proper leav domain class compon exam result sinc creat use prefer solut
ioc contain access implement contain background mention articl invers control achiev various mechan strategi design pattern servic locat pattern slp factori pattern depend inject di miss clariti statement understad creation contain creat depend contain ioc contain requir design pattern mention need design pattern get access implement contain alreadi creat c code init handler creat contain imagehandl config c implement configur config txt access impl contain get access implement contain exampl one reli inject mechan implement use di pattern reli servic locat mechan implement use servic locat pattern c code display menu locat servic imagehandl contain base given input scanf filenam depend inject servic locat pattern noth creation ioc contain get access implement contain exampl spring creat ioc contain singleton instanc bean configur springbean xml assum bean prototyp scope locat messag bean servic use servic locat pattern app context contain line code applic context app context new class path xml applic context springbean xml creat depend contain right say creation contain noth design pattern like di slp app context call depend contain instead app context call ioc contain
use sql rdbms materi view cqrs es implement go tri build implement cqrs es larg scale applic 1m user authent api initi architectur draft ignor azur relat stuff go approach see follow advantag even event store login system still function vice versa sinc go use materi view lock content lower read write oper higher throughput howev still undecid use sql databas sql materi view pleas let know thought would appreci well
generat respons api multipl model model mvc model inject repositori repositori inject control need creat api sever endpoint respons endpoint use repositori servic respons similar key model servic respons direct relat get model db want remov unnecessari column hide queri need generat respons want modifi column valu want send column valu servic get respons servic use respons api respons question call servic repositori make map calcul generat api respons control fat control repositori repositori anymor creat anoth servic inject requir servic generat respons inject new servic control
callback inject servic need make callback basic event expect handl exact one place import option obvious approach seem inject action context depend inject consid good accept practic also eager hear altern would consid one particular problem come mind follow scenario parent constructor take child child constructor take action callback parent method receiv callback instanti child need parent method thus parent instanc creat first need child instanc problem one solut think inject child factori instead parent constructor use factori creat child instanc point parent exist thus pass callback method factori solut seem get job done curious altern
ambient context vs constructor inject mani core class requir session context databas log manag log servic use communic anoth servic want use depend inject class use core class two possibil implement core class accept ambient context three class inject class three class first solut second solut without ambientcontext wich best solut case
access modifi combin interpret pattern templat method pattern motiv skip problem need motiv project write express parser certain kind mathemat express use interpret pattern often use express class time also use templat method pattern certain oper wanna express use templat method pattern templat method public primit oper call templat method public user learnt feel like make sens program specif exampl deal tri simplifi express sever differ simplif function let us call simplify1 simplify2 use call insid express class exampl one simplif function evalu constant express e g simplifi anoth simplif function simplifi repeat oper eg x x simplifi x x way work express subclass non termin recurs call contain express termin constant variabl reach problem differ simplif function hidden user interfac allow call templat method simplifi call differ simplif function need initi thought make simplifi function protect would solv problem child class would simplify1 simplify2 overridden parent express class simplifi would call simplify1 simplify2 simplifi would public howev problem non termin class express contain express protect modifi simplify1 simplify2 allow call simplify1 simplify2 etc contain express problem abstract away motiv express becom parent differ deriv express class child class child c specif non termin express simplifi becom public foo simplify1 simplify2 becom foo1 foo2 respect want code behav like problem protect actual allow call foo1 foo2 arbitrari parent type object child c object compil give error say foo1 protect member parent foo2 protect member parent feel like want modifi someth like semi protect allow access deriv class call semi protect function kind parent object temporari solut current solut simpli make child c exampl friend class parent make foo1 foo2 privat child c friend access anyway howev time use c learnt friend class usual discourag consid bad style someth sort general solut feel nice could need child c much access parent member question thus question nicer way combin pattern ensur primit oper templat method pattern remain hidden user
event sourc cross aggreg valid look event sourc es play around code greg young put togeth greg young git repo like es offer term function tri appli knowledg specif problem domain applic work base around store data state typic crud applic lot ddd late pretti much sql server backend see lot exampl around purchas order order item es pretti simplist exampl although purchas order world far complex domain kind rule whilst great start point would like broaden horizon slight complex domain scenario test es hypothet problem domain suppos follow simplifi scenario aggreg busi configur aggreg configur group item relationship exampl typic one task user would run noth ever stay way aggreg busi rule set aggregate2 pretti much standalon set rule user configur busi rule rang use within aggregate3 requir refer aggregate1 group aggreg enforc rule aggregate3 requir user pick item select valu would implement follow method basic valu busi rule min max specifi item within busi rule group allow log irrelev info hypothet scenario question let suppos follow event happen user creat group item per aggreg busi configur user creat busi rule per aggreg busi rule set user book valu aggregate1item item irrev info test domain data valid state far user decid got configur wrong aggregate1item item actual belong aggregate1group group given data enter step fact incorrect potenti data could determin histor correct case current data deem correct point time event occur case state base sql databas could look entiti store irrelev info list would map onto tabl say irrelev info could make user resolv issu within ui event base system would play invalid scenario could provid inform user resolv pattern es offer overcom hurdl
high atom mvc overkil time pass learn strict follow rule architectur pattern like mvc kind counteract actual purpos maintabl softwar usual end fat monster control model much usual happen didnt modular code enough avoid mani class last project tri differ approach analyz want program tri achiev high atom group system smaller compon compon model control view everyth top strict hierarch manner compon depend children never parent exampl high atom archtitectur could go probabl see mean amount file class increas believ make applic futur proof extend function human would easier dont rewrit anyth sinc use approach never problem even class happen minimalist futur might extend function brain peopl say overkil
okay asymmetr relationship entiti java ee data model difficulti assess design decis regard entiti relat java ee persist data model let say want design simpl data model suppos repres chamber orchestra compris differ type musician know flute player piano player violin player contrabass player expect lifetim system mdash unforese mdash type musician ad therefor supervisor told use separ entiti everi type musician like flute player piano player etc instead musician entiti attribut enumer type instrument new type musician later ad system easili ad valu enumer hand know sure everi orchestra alway exact one piano player exact one contrabass player like abl access conveni think would good piano player contrabass player attribut instead collect musician chamber orchestra think orchestra perform orchestra musician cannot part one orchestra time implement cardin associ seem bit odd establish asymmetr relationship chamber orchestra musician one one one direct mani one direct alreadi experi approach littl bit far expect mention asymmetri troubl bit experienc design data model bit worri design might negat consequ line concret question okay would consid bad practic asymmetr relationship entiti sens sketch code entiti public class chamber orchestra one one join column piano player id protect musician piano player one one join column contrabass player protect musician contrabass player public musician get piano player return piano player public musician get contrabass player return contrabass player entiti public class musician mani one join column chamber orchestra id protect chamber orchestra chamber orchestra column protect instrument instrument public chamber orchestra get chamber orchestra return chamber orchestra public instrument get instrument return instrument
poor man depend inject good way introduc testabl legaci applic past year creat new system use depend inject ioc contain taught lot di howev even learn concept proper pattern consid challeng decoupl code introduc ioc contain legaci applic applic larg enough point true implement would overwhelm even valu understood time grant grant time someth like goal cours bring unit test busi logic busi logic intertwin test prevent databas call read articl understand danger poor man depend inject describ los techi articl understand truli decoupl anyth understand involv much system wide refactor implement requir new depend would consid use new project amount size question okay use poor man di introduc testabl legaci applic start ball roll addit use poor man di grass root approach true depend inject valuabl way educ need benefit principl refactor method databas call depend abstract call behind interfac simpli abstract would make method testabl sinc mock implement could pass via constructor overload road effort gain support project could updat implement ioc contain constructor would take abstract
design crud messag communic endless resourc creat crud rest resourc find much messag given two servic b receiv incom request initi creation resourc r receiv request process creat r want store r b use jms creation read updat delet oper avail r see coupl differ approach use generic entiti contain oper crud generic object cast r updat id r read delet entiti publish common queue q use strict type entiti differ oper oper publish queue qc qr qu qd use strict type entiti differ oper oper publish queue q differ type understand jms usual recommend use separ queue differ type messag avoid congest issu one type messag block other mean crud oper separ queue consid handl type resourc thus share queue
constructor vs getter implement templat method invari depend suppos like implement templat pattern real differ subclass choic invari depend drawback prefer style style much experi use first two argu case depend chang time first prefer reason keep ask depend call stuff dep method howev whenev seen kind problem alway solv second implement make wonder miss someth realis inherit realli good solut kind problem first place suppos two option one prefer
use map pass queri paramet dao common see generic dao implement like problem approach use complex structur pass list key amp valu data map creation verbos exampl avoid thought creat simpl paramet class use engin paranoia p
mvvm model mvvm equal busi logic data suppos data state view background project use model name object hold present data expect wrong opinion class structur hold present data state call e g data state instead model
implement state machin logic near data persist layer bring data implement listen layer implement mvc view isol browser layer model isol persist layer control split ui control browser most input syntact correct authent author control listen layer tomcat remot ldap data integr control persist layer rdbms store procedur question busi logic control go defin data driven model persist layer code logic could go either persist layer via store procedur listen layer via java class listen addit work need done bring data across layer
use adapt without chang exist code c tv class dvd class exampl creat adapt help dvd pretend tv add virtual tv base class amp overrid function adapt class work right question somehow creat adapt without chang e g ad virtual base tv class possibl situat violat open close principl assum use adapt program futur virtual method class advanc
cqrs microservic delta replic micro servic domain model analyt servic domain queri model domain model queri model store separ persist current queri model use sub set attribut domain model howev go forward requir add addit attribut domain model queri model case recommend regard best approach use popul delta part queri model avail domain model asid also seem weak cqrs enhanc queri model would requir sort reload data popul enhanc part queri model someth wrong
thick viewmodel result thin model thick viewmodel exampl viewmodel model handl actual filter exampl let say roster object hold collect user assign type e full time part time etc instead one larg viewmodel handl filter full time part time client select seem would better roster model handl say roster get user type type similar issu schedul object hold list event seem sinc master schedul user schedul better model filter give someth like schedul user schedul master schedul get schedul user user schedul select schedul master schedul get schedul date interv date date addit want swap view mayb test new field therefor need new viewmodel would need add filter logic new viewmodel violat dri howev read lot viewmodel thick handl filter ui logic understand incorrect seem peopl implement anem domain model mvvm tutori show e g would observ collect view model user object event object seem natur want push logic individu compon far
ad model anoth view model collect setup work project exist main view model class main view model contain list soldier observ collect button main view display new add soldier view add soldier view bind element add soldier view model add soldier view basic form user input data soldier problem soldier inform add soldier view model want abl add back observ collect main view model bind command button add soldier add soldier view sure get inform back main view model tri alreadi set event handler add soldier view model soldier model pass event arg get event trigger suggest tri stay true mvvm spirit still kink tri sort let know want see code snippet uml diagram whatev add soldier view model cs main view model cs
appropri pattern extend applic framework creat basic domain specif applic framework web base gui framework provid undo redo oper persist domain specif function attempt packag core non domain specif function reus project class applic framework look like typescript interfac abstract class oper look like side note within singl implement definit applic framework definit oper instanc could oper like move object renam entiti modifi shape etc extend oper intent make entir framework extend domain regard current approach applic framework oper class extend support domain specif use case concern use anti pattern see abstract class oper depend applic framework correct given fact applic framework oper extend deriv class oper requir deriv class applic framework applic framework consid creat interfac applic framework use case still feel right question think bad idea general framework manner recommend particular pattern approach problem appreci consider edit decid proceed approach made doc member oper class abstract deriv class must defin implement doc implement still curious hear thought inclin share
di object di want know ok tri depend inject class depend inject someth like
cqrs okay call extern servic saga process manag domain appli cqrs extern servic call order valid bit puzzl put call consid put call process manag hand afaik process manag simpl state machin react event dispatch command aggreg think two solut one solut make call depend servic call transit anoth state self publish event though like idea process manag publish event wrap servic call behind anoth interfac servic call rais event though like idea sinc event persist publish tackl problem
cleanest way model domain java script build spa use web gl canva svg certain compon html render view messag system setup defin messag come server get handler class appli logic domain model like domain model simpl possibl without ceremoni cater layer e g ui per exampl allow write simpl handler vue js react js framework provid techniqu listen class without need chang anyth vue js exampl redefin getter setter water listen chang html view settl provid adher limit listen techniqu howev need quit view logic custom canva web gl svg render need respond chang domain model ui framework realli support usecas nativ yet provid helper option appli seem disadvantag like wonder cleaner way deal problem proxi instanti proxi object render class track chang domain object work handler oper proxi oper direct domain object break work access proxi object render instead e g custom render custom name new name rx js power requir chang domain model domain object must make observ vue js simpl yet rx js requir domain object vue ed way javascript es5 es6 es7 keep domain model clean still respond chang model
cqrs collabor domain read articl cqrs come decid use follow realli get mind collabor domain multipl oper perform parallel data cqrs allow defin command enough granular minim merg conflict domain level conflict aris merg command even updat appear type data elabor possibl exampl think mean issu granular write command updat smaller part tabl row etc minim overlap henc lock smaller area better perform possibl everyday crud oper
port uml compon singleton work softwar assign design compon base compon port provid interfac professor argu port class expos compon singleton port must way interact compon see multipl instanc interfer requir port must singl interact point singleton right way implement port compon give exampl assign model airplan airport compon differ part airplan airport group assign differ student implement differ compon uml diagram differ compon airport interfac implement class name port inner class actual implement outer class public field port singleton differ compon interact load jar file access port instanc via reflect
appli di abstract class mani children develop applic read file map store info databas column need primari key object databas record exist need creat purpos got class call refer solver abstract mani implement check object exist creat necessari sinc want oper atom creat main object referenc object one transact use class call transact builder pass queri want run problem found know pass refer transact builder everi child refer solver work around use singleton rais plenti red flag head logic relev method refer solver like way pass instanc object without use singleton thought also thought rais event request creation object sure good solut either
primit obsess code smell read plenti articl recent describ primit obsess code smell two benefit avoid primit obsess make domain model explicit exampl talk busi analyst post code instead string contain post code valid one place instead across applic plenti articl describ code smell exampl see benefit remov primit obsess post code like constructor zip code would break dri principl put valid logic everywher zip code use howev follow object date birth check greater mindat less today date salari check greater equal zero would creat date birth object salari object benefit talk describ domain model howev case overengin lot valid rule describ remov primit obsess alway possibl guess could creat type alia instead class would help point one
use observ pattern select act event current process architect small rpg style dungeon crawl uniti littl stuck updat various object thing chang updat unrel object question use current project exampl question appli situat multipl differ kind observ watch singl subject design current lean toward object interact game implement observ design pattern singl subject let call game event manag interact object observ subject includ thing like player enemi interact item ground etc event occur let say user hit spacebar shoot arrow select enemi current plan action lifetim broken step input system observ contain refer subject send event game event manag broadcast right place design event class yet keep problem simpler case need redesign thing game event manag broadcast event player relev inform player realiz event came say shoot arrow intern math like subtract total ammo mayb perform sort anim visual emit new event game event manag tell player shot arrow enemy2 game event manag broadcast event enemy2 enemy2 receiv event realiz got shot die fashion question game event manag know pass around differ type event e movement event go player arrow go enemy2 also event get design target observ know event e player know shoot arrow take damag done research observ exampl either obscen complex abstract simpl subject emit event observ observ interact everi event get want arrow shot enemy2 impact enemy1 way sorri littl abstract like plan start actual build code also asid fulli awar uniti one game object direct interact anoth purpos entir project make everyth polymorph usabl possibl uniti tutori simpli touch extens
depend function modul hardcod vs altern switch procedur background fp small oo larg grappl follow problem suppos modul contain numer math function without side effect function need result function anoth modul toy exampl pseudo scala hardcod depend seem like big ball mud make depend accommod clean relev question se exampl altern depend inject stateless class depend inject vs static method function program viabl altern depend inject pattern function program viabl altern depend inject pattern static univers quot evil quot unit test resharp recommend howev seem address aspect problem main languag scala specif interest whether depend problem emerg secondari modul primari function independ chang servic modul use import design smell differ eg import java math would work larg applic overkil make servic call method primari suppli result secondari secondari independ servic expos lower level detail curri suppli function argument increas number method paramet possibl expos implement detail turn math modul trait defin object math servic extend primari secondari inject either make foo servic would becom class howev could expos servic unnecessari method violat interfac segreg principl full composit object program extend math servic servic line algebra approach function reactiv domain model ghosh reserv cohes compos modul across bound context cake pattern reader monad standard di contain function modul appreci guidanc anoth solut generic scala specif
depend inject differ simpl interfac usag tri solv issu explain stack overflow forum somebodi advis use depend inject person reason moment person mention usag design pattern alway start think difficult construct think investig invent follow construct pseudo code general header file applic h header file unit test h header file applic startup cpp unit test startup cpp common use cpp applic output unit test output idea whether work believ assum possibl launch piec code enabl fill interfac pointer opinion special construct basic usag interfac worthi call design pattern correct case need ad modifi order make direct inject pattern first comment start understand direct inject herebi anoth exampl tri make simpl constructor direct inject abl switch two logger interfac general header file applic h header file applic startup cpp base arg correct mean di mean applic process base interfac let outer data argument configur file content interact input decid implement chosen interfac right time wikipedia page clear mention servic come
simpl way call method object anoth program given id tcp work project two program need invok method object send json object tcp connect object receiv id method name list paramet program hash map receiv ds actual object instanc use reflect invok method suppli method name correct object instanc work forc method get call remot array string paramet look order paramet pack array read end pars paramet actual paramet method definit feel like clean way accomplish goal sure els suppos could mark paramet type cast base type would add code new type paramet want pass
simpl exampl proper design asp net applic illustr differ servic layer program profession year sever differ compani consid fair compet programm howev everywher work usual dozen differ softwar engin programm dozen differ code style pattern read ton literatur subject well design applic honest think ever seen fulli implement one curious real hand exampl differ design principl especi applic implement proper servic architectur realli get feel everyth exampl current applic began mani differ conflict design idea origin engin let go pretti much free reign whole swath novic develop help train educ begin career tri set posit exampl implement easi follow still robust design applic stand today somewhat legaci area new area legaci area consist repositori layer built ado net pretti tight coupl near imposs test write test domain layer reli repositori intermingl logic mani differ class area model project loos reflect databas model viewmodel project web logic layer one develop went detangl web busi logic somewhat place project web layer contain control view web api new stuff built similar take differ approach entiti layer project sole contain entiti framework entiti context also factori method return proper context get connect string inform configur file edmx ef repositori repositori handl minor subset function pretti much entiti type interact layer unless certain join necessari domain layer layer build unit work everi piec function go forward much crossov function special unit test project unit test project creat mock repositori check logic implement domain layer web layer respons wire depend inject serv view control api method new stuff everi singl repositori implement interfac almost fault everyth work via depend inject find rather straight forward afraid either much littl exampl let say context call main context repositori layer repositori call generic repositori generic repositori implement interfac call generic repositori lay method get save etc method repositori overridden necessari might look someth like repositori inherit generic repositori also implement interfac also implement generic repositori point interfac deep begin feel like bit overkil go overboard design good complet exampl illustr best path forward similar design
uniti depend inject helper function set servic use read write databas get inject control need someth system set servic easili get also static helper class function call control function often need access servic access db e g valid string user data system set servic system set servic function accept data pass user far valid function pass system set servic use sure correct question approach correct valid function creat uniti contain resolv instanc system set servic read helper class static inject system set servic constructor appar make unit test easier bit confus thank
alway use mvc pattern similar big graphic profession applic write applic decid develop singl graphic interfac never intend develop multipl gu today standard okay use mvc pattern mvp pattern general prefer mvc pattern object orient softwar output advantag mvc pattern precis abl program mani differ gu howev plan develop singl gui start advantag elimin
ddd creat aggreg respons event anoth look scenario creat aggreg instanc trigger differ aggreg incorpor logic ddd event sourc onion architectur learn scenario around user registr creation user account current simpl registr class instanc number attribut around email address name current singl method name activ registr activ account creat intern record event various action although store sql tabl fulli realis event sourc ever singl record get updat user reset activ code registr activ need creat new instanc account current see registr account part custom bound context feel registr account two separ domain sub domain within context might wrong also feel account could event sourc aggreg although read udi dahan blog post use cqrs feel littl disappoint plan number way implement first thought simpli handl applic servic typic would put logic coordin thing would requir new registr repositori account repositori inject copi inform one use lot applic servic work becom bog number due way busi logic static manag helper infrastructur mix anaem domain model read littl process manag saga confus somewhat halt thought day keep thing simpl simpl part domain implement look feel bit overcom applic servic domain process manag saga better fit scenario ddd practition look implement scenario
updat view model chang sinc learn mvc pattern might naiv question know someth happen view e g user click button view call control turn updat model e g set flag true howev imagin scenario model chang without user interact say timer n minut trigger chang somewher data model chang updat view accord
busi logic go involv multipl aggreg still beginn come domain driven design tri model someth like rpg battl system bound context tri model bound context combat list abil abil list effect would appli exampl common effect would deal damag target combat far tell two aggreg root would combat abil effect valu object certain put logic interact combat particular need logic handl execut abil take account sourc combat target combat likewis need similar logic individu effect abil sinc action effect caus one instanc combat target second instanc combat think logic done within combat aggreg problem know logic go initi thought domain servic would right spot research think may wrong anyon insight put logic
creat repositori contain get repositori way need inject singl god repositori contain need inject everi repositori pollut control
recov state write servic event sourc system quick question dig cqrs event sourc one thing abl find info happen write servic crash need start back understand recov read servic replay event make sens find inform rebuild state write servic
need call privat method third parti librari copi class use reflect need call method avail third parti librari privat method direct indirect way obtain function via public method avail could least two way copi past class sourc code tree licens permit chang method declar access use java reflect call privat method ok also open pull request chang visibl third parti librari communiti side may accept may unclear long would take need function provid method approach look nice one less ugli
understand proxi server connect web api via basic auth hope correct channel question quest knowledg current built signific platform allow client communic api turn allow item push print queue third parti develop app user problem consum api assum authent basic auth outsid proxi environ one client appear lock behind proxi sort prevent consumpt particular endpoint regrett face proxi authent requir keen understand someth end user client resolv adjust proxi secur set need develop problem also keen understand actual happen end user behind proxi call api tri authent via basic auth tri authent via proxi authent ideal look fix knowledg happen fix
java okay abus spring bean compon rather use static final util class torn use di static util class code current creat date util static class meant access static class respons creat manipul date use varieti librari absolut extern 3rd parti depend everyth look fine unit test becom messier sinc use power mockito proper stub behavior static class contrari remov static ness date util convert spring compon unit test tad bit easier howev depend everywher sure purpos spring manag bean proceed okay use spring bean everywher forget static code entir okay abus spring di capabl much di
linux server host cloudflar host hobbi node js server linux fine access direct ip find ugli also less secur decid rout domain set cloudflar ip access url prompt authent never set question proxi ing cloudflar caus fix edit seem find reason seem server prompt authent whenev port specifi mean cloudflar tri redirect ip without port would still need know best practic scenario solv edit2 solv move port sinc default would pretti much still want know possibl get port work
make sure inject valid depend let say follow movement strategi sinc hungri anim one specif way move direct instanti accord movement strategi concret anim constructor concret exampl solut seem okay might becom problem test cannot easili mock movement strategi instead concret anim class would look like could use constructor inject inject proper depend maintain testabl question nobodi stop injector inject swim strategi wolf walk strategi shark actual respons make sure right depend inject kind contract would document comment top class definit would right movement strategi depend wolf shark turn swim strategi walk strategi interfac extend movement strategi instead use depend concret anim struggl find reason argument regard strict one defin type depend realli appreci insight best practic help metric narrow question
data persist context softwar engin imagin simpli name exist data throughout layer softwar applic ask abl find clear definit state someth sort data persist exist data throughout layer softwar applic exist pleas share link find link seem least partial incorrect assum data persist softwar allow chang access frequent assum though correct qualiti data persist leav sure best practic anti pattern data persist want know definit data persist
dto hold dispar data domain model neat domain model make easi communic extern web servic new requir made extern web servic interfac messi gather data multipl place model dto appropri hold necessari data interfac deal search domain model concret implement behind goe extern web servic result domain model cours much complex gist got new requir would allow us search order id addit custom properti intern domain model order id littl place somewher part custom problem extern web servic interfac complet differ idea order id note either situat everyth custom offer mandatori search take place order id addit criteria go chang search signatur thought creat new dto applic servic layer call consent search dto new dto would serv one purpos combin data model scatter throughout domain model necessari queri extern web servic question consent search dto make sens ok creat dto refer domain model class custom creat whole new structur mimic origin domain model seem like lot work bring addit valu
rest crud servic access db version model build rest servic java basic crud oper custom easi way would creat one custom model annot jpa annot persist layer know map db add jackson annot web layer know deseri http request serial respons thing correct ddd way version custom custom domain object pollut annot custom dto web layer jackson annot custom persist object jpa annot seem like lot version thing anyon thing way
anonym control action within author site say mvc net core websit control method behind author attribut complet polici would taboo carv set un author anonym control method handl user request access site seem perfect reason outsid develop error see introduc new secur risk
empti method use empti method use read document builder pattern got curious implement c author defin c could possibl implement empti method default builder pattern order let client overrid oper interest someon may explain sentenc detail exampl thank
generic repositori pattern ef unit work new repositori pattern seen lot repositori pattern uo w implement internet abl reach conclus correct go mani link abl implement one consid follow point mind satisfi solid principl testabl independ framework independ db code implement generic repositori repositori base unitof work unit work idb factori db factori base db context project db context exampl usag control student bal student bal student repositori student repositori depend inject done use auto fac code log omit ask seem like good implement miss anyth would appreci feedback implement offer regard correct effici suggest question loos coupl leaki abstract need done switch ef sql db much effort would requir implement chang pattern break solid princpl law demet object orient law pattern code redund requir architectur use ef would scale project contain domain entiti entiti least field go mainten nightmar later critic great appreci
depend inject tight coupl compon write code pars file call asset plan structur three class asset parser namespac parser transfom parser asset parser use object two class pars part asset want write three class rather one big class split function manag fragment use someth like structur program method asset parser call method two class question use depend inject creat object namespac parser transform parser class part parser tight coupl parser opinion high unlik asset parser would use subpars place namespac parser transform parser look like depend inject necessari use new creat object namespac parser transform parser one reason use depend inject allow easili make namespac parser transform parser singleton want use singleton reason
name relationship aggreg sometim pretti easi find natur concept repres relationship exampl person team connect membership occasion easi concept might seem like artifici strategi find name kind relationship
laravel servic provid count di understand servic privid laravel work use sure keep clean code specificali count method paramet exampl rout class look like use repositori room repositori method avail room need repositori alreadi method room want keep dependeci inject could use resolv app make room repositori class instead paramet avail room method think di pattern anoth option would save repositori class properti call method think still problem paramet room method even use repositori one anoth method hope wrote clear best practic case
handl third parti librari class deped interfac work ew class made queri mail box read email best way inject exchang servic properti set class seal interfac plan use auto fac depend manag pointer help
event sourc get respons call side effect let say user request es cqrs system open support ticket control send ask support command command check user enough credit emit ask support event somewher listen respons side effect get event call extern support api open ticket retriev token call send open ticket command contain token result open ticket event control return precious token client publish subscrib logic listen know control tell hey ticket creat token could read project result list support ticket token control could call token appear great somehow temporarili subscrib project chang complex strategi would recommand case origin design flaw thank
mvvm code smell view model properti name show hide display semant belong view late involv wpf look mvvm understand view model awar view howev sometim come across situat initi instinct write properti view model someth like public bool show dialog get privat set public bool show pop get privat set suggest view respons creep view model approach differ
design event driven architectur multipl servic creat dozen servic intranet gotten point servic coupl comfort problem servic caus servic degrad work eda design make servic decoupl programm need feedback design aim solv scenario scenario client request data servic fulfil request servic need data servic b servic b fail unrespons scenario client updat entiti servic b refer entiti need updat servic c split design two part oper event oper sent servic client chang entiti servic alway result event fire oper contain user id oper id timestamp event reaction oper notifi anyon listen chang occur event contain id oper start id user caus timestamp event also hash complet entiti listen compar version use rabbit mq messag bus servic persist durabl queue store pend event oper order decoupl servic servic cach entiti depend belong anoth servic servic requir entiti anoth servic fetch store tabl databas listen chang made entiti cach updat event relat occur store fetch entiti cach fail fetch appropri servic audit got servic listen event servic store recreat entiti given point time love comment anyon experienc whether glare issu design
avoid implement event sourc project twice current teach event sourc got concept enough start develop dummi app c event store app easi understand bank account system model bank account seri withdraw deposit event easili calcul account current balanc ad deposit subtract withdraw event store give us way implement data store use project howev busi rule dictat account never go overdrawn e must reject request withdraw account current balanc insuffici cover request fund bank account entiti also need know current balanc easi calcul run seri bank account event deep uneas fact implement project balanc twice data store domain expect event sourc worri go wrong path fact balanc calcul domain code instead retriev data store everi time requir mean round trip data store would requir everi time entiti modifi seen greg young talk suppos natur fit ddd incompat misunderstood part set help would great appreci
avoid type check preserv separ concern work mvvm project tri preserv separ concern current architectur entiti framework model mvvm light view viewmodel project work view model first pass around datatempl view project get proper view type check everi type get correct viewmodel seem wrong better way set suppos model class let say view model namespac two differ view model taco hamburg current solut use extens method food view model namespac
own order consum provid marketplac like platform develop applic provid offer product consum buy sort marketplac tri appli ddd concept model design implement follow microservic style impli data belong bound context bc microservic within bc access outsid bc specif inform either queri public interfac bc subscrib event publish bc question design order order place consum accept fulfil provid also manipul custom servic order right contain product singl provid might ask futur support buy multipl provid implement seen similar system contain singl order model tend realli bloat inform product provid consum invoic deliveri payment etc tri avoid face question own order think follow answer order bound context access consum provid mean consum api place order oper talk order bc creat order provid api oper like accept order talk order bc chang status order model order b cs consum order provid order consum api place order consum bc creat order publish consum order creat event provid order bc listen event creat local order provid order refer consum order provid api order accept publish provid order accept event allow consum order mark order accept notifi consum person prefer approach option see sever benefit see sure worth ad complex formul specif question problem must solv thousand time like know one prefer approach well known solut refer design help benefit separ provid order consum order bound context singl consum order generat multipl provid order order contain product multipl provid workflow provid order might differ complex workflow consum order consum provid need see order histori envis denorm tabl fast read order histori contain differ data ie consum order contain provid inform provid order contain consum inform queri differ consum provid implement singl tabl obvious seem cleaner tabl dedic singl purpos data isol partit consum order alway access consum id provid order alway access provid id interest convers topic separ forum thought link case someon want read thought topic question n servic bus discuss board note implement net multipl team multipl repositori visual studio solut host servic fabric cluster use n servic bus messag
way share dto across microservic scenario follow design system design receiv data various type sensor convert persist use various front end analyt servic later tri design everi servic independ possibl troubl team decid dto would like use outward face servic sensor data recipi receiv data uniqu way convert json object dto send messag broker consum messag know exact read sensor data messag problem use dto differ servic updat implement multipl locat obvious design way extra miss field dto much issu servic updat still bug make feel like make mistak could easili turn headach go architect system wrong way around least eas worri
effici data convers event sourc use similar concept event sourc store data action collabor system run system 3k user use daili grow time goe codebas evolv data alreadi store need updat match newer format rare scenario happen believ far healthier convert past data conform new codebas rather handl previous format within codebas thus litter time goe written small tool download chunk event event per cycl map thus convert batch updat back quit effici howev took almost day convert month worth data 30gb year might start take day finish year might start take week better strategi handl data convers
altern name give control sever post content internet claim name class end er like manag control helper person agre altern name could given mvc control scope web develop came entri point end point like user entri point exampl sure reflect exact
appropri model relationship cyclic depend let take two simpl rail model post post revis default behavior belong associ requir associ record present post revis must post disabl argument model conceptu true howev problem exhibit test setup control action see stack overflow question relationship sql creat post revis post need valid post revis creat post see two option make belong relat post revis option let creat post revis first post associ altern remov valid exist post revis post would let creat post multipl post revis lean toward second approach remov valid post howev actual put word better option feel right creat post thing cut across revis revis rest data altern approach consid kind ration justif approach lean toward
proper inject configur busi logic layer asp net core applic use depend inject split layer web busi logic data access like access valu configur file method busi logic layer way would correct keep clean architectur pass config valu method paramet call method web layer pass inject configur constructor paramet class busi logic layer
measur activ record perform limit method measur activ record perform queri order claus top want top row know order forc pars whole tabl much perform gain use limit oppos use
data entiti domain entiti repositori tri get head around ddd stuck setup project first problem see domain model exact entiti model serious problem entiti model obvious valid configur thing like max length nullabl requir etc conform understand ddd direct use model anywher except dal creat domain layer domain layer valid rule duplic ui valid even wors need chang rule chang two place dal domain exampl anoth thing find weird repositori organ architectur follow read creat generic repositori interfac user repositori interfac inherit generic repositori domain layer implement generic repositori dal implement creat dao type entiti use creat repositori far good proceed implement user repositori anoth problem user repositori interfac expect domain user model tri implement interfac dal need implement use domain user model caus dao creat domain model dal model make sens fix would refer dal domain layer wrong anybodi shed light miss ddd
advic aggreg root boundari confus appli ddd principl design domain entiti cluster aggreg root accord understand aggreg root enforc busi valid entiti within aggreg access root lead huge aggreg link object give exampl domain entiti contract purchas order po init consid contract aggreg root cluster user add contract add po add iniat po look po po number add iniati feel odd everi time add initi load entir contract depend memori add initi could hydrat po domain entiti databas add initi busi logic po domain entiti go ddd principl access non root entiti aggreg cluster direct
implement strategi pattern via configur current problem domain number problem seem lend quit well strategi pattern common high level process let say sale process regardless sale channel use sell product need happen bit differ channel channel let say want implement strategi pattern per channel realli like know whether robust common way peopl seen implement typic seen past kind lookup perhap db config file base channel type instanti particular class execut sale strategi execut implement said sure store fulli qualifi class name db config file realli best anyon els thought use java interest sort common configur base solut peopl use someth like guic spring
composit root di appli domain driven design confus appli composit root cr creat aggreg ddd seemann defin cr prefer uniqu locat modul compos argu compos object graph insid cr near applic entri point warn temptat compos class littl time creat small subsystem aggreg ddd appear like subsystem sub graph entiti valu object evan ddd text vernon ghosh recommend construct aggreg insid factori locat domain layer near aggreg eg factori method aggreg root standalon servic seem contradict cr approach question whether cr factori approach combin ddd instanc cr put insid domain layer rather app entri possibl factori pool singl locat benefit cr eg abil intercept subsystem modifi behavior seemann irrelev ddd cr di appli creation aggreg work higher granular level eg inject servic cr method use factori construct aggreg place object graph refer seemann depend inject net e evan domain driven design v vernon implement domain driven design ghosh function reactiv domain model
data sync model view mvc pattern question mvc pattern concern control part program happen write basic spreadsheet like written c gtk python3 qt5 tkinter share common design separ gui logic data struct heavi lift method seem mvc pattern question realli need pass data view model time edit gui data want comput someth pass new data back model view done understand fine small gui heavi comput model big gui like big tabl spreadsheet answer element took discuss dcork updat data one shortcut updat per case basi need updat touch rest obvious sort collect singl chang may need updat whole gui eitherway observ mention sound like autom way pseudo python code let consid basic collect item shop list book librari main class collect contain list dozen hundr item method appli list gui part design fine spreadsheet like app thank
separ concern object creation factori model think overal architectur applic logic current status model contain resourc use runtim factori regist builder use creat resourc via factori everi time factori creat resourc add resourc model mean factori know model keep refer resourc version version resourc child base item model model design like level tree 1st level contain base resourc 2nd level version model item base resourc alway point first child e g latest version question want creat new version resourc runtim option initi workflow creat resourc via factori sure new resourc ad model easi factori know model good design call method model add new version exist resourc work model need know factori appropri think mayb factori alreadi know model see option point view design smell call method resourc order creat new version appropri think ensur model know new resourc resourc know model even exist pleas share thought right place method creat new version one option common use anoth popular option
ddd event handler aggreg function program implement ddd driven system base event sourc use function program languag clojur one separ event handler function aggreg function naiv implement aggreg would namespac function handl command accept current state data command data return event data function appli event data aggreg state reason addit command handler function get command data call function aggreg namespac would one put handler aggreg
compar approach map data object updat ad diagram help understand discuss colleagu two differ approach map data object like get opinion pros con two approach background inform two extern servic one reach soap rest return object similar natur postal deliveri point differ extern servic data object differ exampl oversimplifi actual data object servic might object combin respons two servic singl unifi format expos class diagram show initi problem appli solut approach idea creat separ mapper per case mind simpl function program case want go object object b b keep mind servic implement within separ code project probabl separ microservic well logic contain solut would look like approach altern approach someth like defin interfac like parcel shop defin requir parcel shop defin class convert parcel shop unifi address sinc c partial class implement parcel shop data object someth like mapper convert parcel shop sinc partial class add function data object servic e g first parcel shop would second mayb diagram show second solut mind first approach much cleaner touch data object reli partial class contain map logic singl place argument would present someon convinc favor one solut
rabbit mq backbon servic written differ languag seek advic peopl use rabbit mq connect servic written differ languag current organ use rabbit mq exclus c work quit well order provid nice addit function rabbit mq provid implement mass transit mass transit provid great benefit rabbit mq abstract away rabbit mq specif handl poison messag retri serial provid lot messag pattern etc howev major downsid lock use net handl deseri net class limit abil creat servic written non net languag cours could surfac res tful endpoint written c allow servic connect ideal servic abl engag pub sub messag suitabl rest question current use rabbit mq connect servic written differ languag implement share code languag want support order handl serial deseri thank time review share advic
builder pattern applic domain driven design ask question stack overflow regard best use builder pattern construct valu object could construct without option paramet one answer state builder part domain driven design paradigm cannot express part domain ubiquit languag whilst domain driven design suggest use factori complex object creation think exclud pattern suggest builder belong domain layer think domain driven design care technic implement choic pattern
best approach share view websit want partial view page contain singleton servic tri razor page tri partial view view compon gotten desir experi probabl implement correct would like accomplish singleton servic share partial view view app login panel page need access user name suppli servic base state servic common process custom busi logic view user certain role chang ui log differen wire di constructor view use base pagemodel suppli code need want see tri allow razor page
depend inject di contain implement clean architectur app question typic pure di argu servic locat pattern explicit testabl howev like idea object contain servic repositori inject one singl object instead inject various differ servic repositori eas develop sure still follow solid principl exampl typic di see exampl follow pure di approach problem argument get thing inject larger applic came differ pattern basic inject singl servic factori repositori factori contain pointer granular servic repositori class new code chang someth like approach still confirm solid principl make develop much quicker still use di see still test could mock repositori factori class way mock individu repositori class would recommend approach thank
handl error multipl state machin embed system c state machin run concurr super loop state machin might consist state machin tri figur way abl catch unexpect situat pars direct main mean error go state everi state deal error exampl microcontrol use atsam4 cortex m4 deal error might system reset reset watchdog timer print sad messag blink led board write someth extern memori disabl power suppli trigger variabl run anoth state machin forc state machin chang state ignor error state machin implement pointer function method state one might contain furthermor everi state give differ kind error differ kind error mean differ action also error might common state case error manag take similar decis instanc system reset
handl inconsist state domain object general would domain object custom contract etc alway consist state howev situat might inconsist state nevertheless want work load domain object databas inconsist state mayb someon chang field direct databas creat creation dialog need handl valid error best practic handl contradict requir
servic interfac extend dao write servic layer dao made extend dao interfac look bit like two method write servic layer think dao provid basic crud might well extend servic sinc foo dao foo servic interfac public reason expos dao servic
model sprint ticket ddd tri learn ddd cqrs hobbi project prior experi project use mongo db read db event store write db build simpl sprint board applic jira asana like model sprint ticket decid model two separ aggreg want keep aggreg small keep transact bounderi scalabl possibl refer vaughn vernon one featur like build system sprint close everi ticket close seem bad design load everi ticket memori decid sprint could close think system sprint keep track amount creat ticket close ticket creat ticket command front end creat ticket aggreg fire ticket creat event ticket creat event get handel process manag fire add ticket sprint command ad ticket sprint command get handel sprint aggreg retriev ticket id ad list ticket field sprint aggreg time goe close ticket command front end retriev ticket aggreg fire ticket status chang event ticket status chang get handel process manag fire close sprint ticket command commandhanld retriev sprint aggreg set integ field close ticket amount close sprint command fire front end check close ticket amount equal amount ticket ticket list case abl close sprint got everi logic want feel bit dirti futur want archiv status ticket check feel probabl correct load ticket aggreg memori trough domain servic idea good pattern load multipl aggreg except foreach repositori get id like hear experi peopl actual question think complet wrong invit anti pattern stop think start read book btw order red book ddd mayb give insight relat problem question stuck homework job current non finish code open sourc sincer brecht
strategi pattern inherit boilerpl function read use strategi pattern stick composit rather inherit mean inherit bad practic function share similar strategi anachronist implement base class encapsul function exampl could better hope illustr question abc import abc abstractmethod class addit strategi interfac abc abstractmethod def add self num1 num2 rais implement error class addit strategi addit strategi interfac def add self num1 num2 return num1 num2 class addit plus four strategi base addit strategi interfac abc def add four self num return num abstractmethod def add self num1 num2 rais implement error class addit plus four strategi addit plus four strategi base def add self num1 num2 return self add four num1 num2 class addit plus eight strategi addit plus four strategi base def add self num1 num2 return self add four self add four num1 num2
cqrs async queri command handler cqrs async microservic context command handler e g send order confirm email command handler implement communic servic depend inform order servic retriev via get order detail queri handler sequenc messag process send order confirm email command get order detail queri order detail retriev event sinc messag includ get order detail queri asynchron necess process execut send order email command handler would exit dispatch get order detail queri would somehow need resum left order detail retriev event handl sort pattern implement deal bridg gap fire queri respons messag receiv abl retain link back origin command messag instanc retriev order detail handl command handler elsewher instead
java fx differ string string properti model class tri follow mvc concept develop applic confus use string string properti model class exampl one exampl two use exampl one differ model
event collabor queri micro servic architectur read martin fowler descript event collabor pattern appear follow pattern entail away queri entir extern data span belong servic requir simpli replic control manner build maintain data servic articl appear explicit make wonder made incorrect infer use case issu queri messag explicit adopt event collabor pattern extern data servic need servic function fulli replic intern
recommend archictectur android communic main view recycl view adapt mvvm tri architect screen fragment contain date picker basic input list item input tri exemplifi imag screen like input field view model input field n list view model item calcul item list base general data know know implement adapt help anyon link final question best way make communic viewmodel separ screen client want thing think make global object would hate know els mayb appli mvvm correct
dto contain addit helper method dto like whenev need like count dto db entiti convert need check onlin profil dto get like null call onlin profil dto get like get count altern catch null pointer except ignor done complex field potenti null call common method like avoid repetit method defin one use get like count follow fashion question method ideal place specif ok move method dto class usual contain transfer object field along getter setter approach one also defin get like method way return count direct return datatyp int
mvc py qt reduc data queri view model current develop python program gui base qt use mvc templat found github let assum singl check box check uncheck model updat chang model caus view updat view observ model updat view done updat ui model self method within main view class aplic window contain lot widget text edit push button radio button queri state content model although one check box chang look effici possibl reach exampl checkbox queri new state model hope understood concept right way
react js mix data type one state properti spirit minimis state alway desir mix data type given state properti instanc creat react page render list item could either entir list item filter list item might want state properti call item list anoth one call filter item list filter item list might want differenti filter queri return result vs filter item list empti filter current set think could set filter item list string filter activ filter activ could also set array element filter activ return zero result last filter activ result would array length greater could test properti string valu array length determin render think one benefit would obvious minimis amount state properti wonder inevit drawback someth like
pass servic layer servic wcf servic want expos busi logic via wcf servic intranet environ n tier architectur pretti simpl databas data dal busi servic layer wcf far servic servic layer one wcf servic come problem wcf servic use servic use depend inject technic add servic wcf constructor alreadi paramet mapper logger db context factori think creat servic factori pass wcf servic wcf servic creat whatev servic need sure antipattern suggest
data layer abstract busi layer search regard design search api tier architectur use spring mvc communic via rest api implement faster search plan index data sql write data layer index es well search call plan make bl call es direct search gt bl gt elast search much faster compar sql search es tight coupl bl realli abstract data access direct call es bl call search gt bl gt dl gt es case lose advantag es need make one n w call one ideal approach
asp net mvc view model properti vs ajax call view appropri use asynchron call view get data vs prepopul server side creat instanc viewmodel instanc view dropdown menus need load valu user might better add list viewmodel vs make ajax call document readi obvious one time may prefer author list item dropdown e make call anoth web api outsid right approach feel like popul dropdown control bulki
cqrs write model initi popul system interact rest api data sourc system base ddd current model crud model one model rest api abl queri full aggreg abl write entiti within aggreg reason behind api design write entiti aggreg chang state rest entiti seem like good opportun tri deriv cqrs read aggreg popul queri rest api seri smaller write aggreg correspond entiti read aggreg use mediat pattern write would trigger event event turn caus read aggreg repositori queri rest api read model complex think understand cqrs break assert instanti write model must properti correspond entiti read aggreg use setter write model manipul state ultim send data mapper persist dispatch read model refresh event question use popul write model upon instanti immedi thought creat mapper translat correspond read aggreg entiti write model question sinc write model read model properti differ method getter read model setter write model constructor stay pretti much reus factori appropri decis
avoid dto client server applic would like use dri bean client server applic dri dont repeat problem high coupl know dto form databas bean entiti class jpa dto advantag loos coupl applic copi databas model first duplic screen use specif bean java fx bean screen use direct dto second duplic problem java depend problem differ dependeci client server could appear everi languag detail situat backend spring hibern depend http communic json frontend javafx observ object depend purpos archictectur databas request serial model bean databas client side deseri screen bean use json intermedi format want use common depend client server common project want defin common objet defin jackson format client server mani option use dto copi data entiti object databas structur copi data java fx bean attibut observ class repres entiti model dto copi backend dto transfer http dto screen copi frontend serial model bean deseri de screen bean ensur bean seril json format use junit test model backend transform model transfer http model screen deseri frontend json structur compat guarant like use common interfac implement model bean screen bean bean must implement interfac root object json structur duplic class duplic interfac model backend transform model transfer http model screen deseri frontend json structur garant interfac use model bean dto client hava jpa useless depend model backend transform model transfer http model screen copi frontend dependeci model impli depend jpa annot use screen bean dto server hava javafx depend could miss jdk futur releas post java model screen bean copi backend depend java fx observ screen bean transfer http screen bean deseri frotnedn transform respect pola principl would classic dto realli dri question dto expect solut futur developp want maintain solut admitt useless depend share object entiti screen bean reli json transform object anoth one common projet librari client server
lose reactiv natur servic simpli one servic reactiv late interest reactiv microservic design stream event driven architectur one write e manag servic paradigm work extrem well simpli respond publish event topic howev alway control implement servic interact exampl consid commerci servic expos black box endpoint asynchron work return id job also expos endpoint retriev status job id sake simplic assum two endpoint get result endpoint expos endpoint case left situat must necessarili poll servic check status work establish pattern guess supervisor poll timer publish job status might fine approach wonder battl test approach
data transfer modul layer creat applic compos use differ modul core cours grade news use clean architectur differ modul stuck tri pass data one modul anoth modul idea plug one applic app1 sever modul use anoth applic app2 modul decoupl modul depend core modul mayb anoth modul think use depend invers receiv data exampl grade modul need cours object grade modul expect cours interfac interfac creat core modul grade cours know cours modul implement want know good approach suggest thank
possibl add servic layer mvc pattern work java fx project use hibern h2 databas tri follow concept mvc design pattern creat packag model contain pojo class view fxml contain fxml file view control contain control class fxml file dao contain class interact databas everi thing well follow tutoriel found ad servic layer one role creat object send dao layer creat exampl confus true concept exampl model control servic dao privious creat fill object control layer call dao method control ad servic layer role object implement true
scope bean depend use proxi make depend prototyp scope regard overal perform use depend higher scope bean better downgrad bean scope prototyp depend instead use proxi consid scenario depend inject framework like cdi spring io c use bean immut lot concurr involv
content observ implement observ pattern observ pattern defin gang four design pattern book one mani depend object one object chang state depend notifi updat automat also say observ pattern use follow situat abstract two aspect one depend encapsul aspect separ object let vari reus independ chang one object requir chang other know mani object need chang object abl notifi object without make assumpt object word want object tight coupl adam stroud android databas best practic book state cursor class provid method expos observ pattern sourc data use method possibl respond data chang use observ pattern rather poll databas chang ineffici cursor regist content observ cursor unregist content observ cursor set notif uri similar use content provid use content resolv client object access data content provid regist content observ listen chang data behind uri observ regist subject object observ pattern content resolv method think almost regist content observ content resolv attach subject unregist content observ content resolv dettach subject notifi chang content resolv notifi subject question three compon content provid content provid content resolv content observ implement observ pattern
eventsourc cqrs replay project aggreg order eventsourc project want replay follow two event order told project asynchron replay product creat event project time price chang event thing sinc price chang event dispatch product creat databas queri updat fail deal kind problem without make price chang event keep check product alreadi creat read eventstor use rabbitmq dispatch event listen projector due async natur rabbitmq unsur orchestr common problem
ad busi logic typic mvc ef structur write net core mvc web applic think general program question typic structur use net core mvc web applic use depend inject seem work ok pattern straightforward data updat hit complic busi rule seem struggl flex unsur make model entiti framework public class referr key databas generat databas generat option ident public int id get set public long subject id get set public collect lt referr histori item gt referr histori get set foreign key state id public referr state state get set public referr state enum state id get set public class referr histori item public referr histori item key databas generat databas generat option ident public int id get set public int referr id get set foreign key referr id public referr referr get set public date time date time get set foreign key event id public referr event event get set public referr event enum event id get set public bool success get set exampl everytim updat state referr want make sure perform action x action plus also updat referr histori item entiti entri say chang audit structur could recommend utilis achiev goal similar one scale becom difficult rememb add thus avoid code duplic similar start add busi logic method referr model bad idea
singleton pattern without static heard static java sens basic static method call class instanc true oop howev would singleton pattern implement languag thought foo getter class call get foo method instanc foo getter store instanc foo without static variabl
signal event way modifi one view anoth need set mode one view differ view tri stay organ mvc look answer invok model logic one user control view model anoth user control without violat mvvm seem redund control updat view fire signal anyth els respond better view1 emit signal event model fire own signal signal especi danger come collabor softwar develop codebas becom chao quick peopl get lazi fire signal place solid pattern case code
graphic user interfac implement propertychangelisten object learn design pattern came across line domain object updat view use observ design pattern book appli uml design pattern say let gui object simpli apear object implement propertychangelisten question gui implement propertychangelisten shoud object resid gui object implement propertychangelisten concret exampl pictur differ shape also sourc domain suppos coordin shape chang domain sould shape get notif main gui gui window littl bit confus also exampl book
repositori unit work object type refer confus best use pattern project use devart entiti framework oracl context provid interfac repositori singl concret implement oracl repositori privat refer context question model class definit case entiti object need abstract well think client class must abl resolv return type access properti entiti object context would need access class definit need make interfac object type model motiv allow differ orm data storag option futur exampl provid client must know cours essenti cours instead
proxi binari data res tful servic applic web servic p act proxi intern servic extern servic es right make request es p respons contain binari data p store binari data temporari locat p send locat along rest respons es es communic res tful api histor reason temporari locat outsid network p henc expens time wise look possibl optim flow need advic follow option encod binari data es use base64 send pro easi code major chang need con encod take cpu resourc increas size respons use data format handl binari data natur bson cbor pro major chang code need con solut sound natur howev use cbor use bson littl most client code realli know pitfal keep thing e continu use temporari locat pro chang cpu overhead major chang con expens time wise somehow inclin alreadi time consum take much time per item process howev experi massiv base64 encod know pitfal might kinda last also proxi p realli cpu hungri might cpu space left thought advic
better choic use angular js asp net mvc develop ecommerc websit know mvc experi angular js control view develop like e commerc site good choic choos angular js filter brand color etc hope e commerc site use spa singl page applic read angular js also control asp net mvc differ angular js perform client side asp net mvc perform server side let take exampl site imag mobil user filter reload within page without reload entir page bring data server achiev user select filter asp net mvc view angular js call angularj control control call mvc control method bring record certain amount imag post back page good scenario give advic thank
inventori price product catalog communic imagin creat ecommerc applic sake simplic describ bound context product catalog respons maintain product descript characterist price respons product price inventori respons inventori manag product stock custom enter ecommerc site would like show product need price still need know product stock what best way approach product catalog make synchron request inventori price second approach maintain price inform product stock product catalog bc everi time price chang price context rais event product catalog updat inform way inventori context prefer second approach seem replic inform e g price stock thought
cqrs sub method use one place situat command use common method origin develop one command help command static self contain see exampl command2 call static method command1 howev suppos method command involv caveat littl chanc use mani time might aris also method concern hand full command common method sphere influenc wonder whether inject main command command access method make method static refer command direct static method make static helper class common method need easier find doesnt live depth cqrs make base class encapsul logic would becom littl unmanag composit need think seem like smell seem like hard find seem littl categoris e use helper valu seem limit hrmm mayb
popul view model insid creat sure softwareengin exchang right question need popul view model valu queri databas like get poc os need assign view model pass view pass databas instanc view model got think creator view model respons popul viewmodel could popul constructor right current
inject view model creat get model db current work pictur manag softwar follow pretti strict requir due specifi interfac allow chang therefor forc list lt pictur view model gt contain view model creat pictur model one view model would simpli switch pictur model refer keep view model part struggl convert list lt pictur model gt list lt pictur view model gt inject busi layer depend constructor pictur view model class public pictur view model pictur model model busi layer b layer tri break di pattern use ninject depend inject framework thought follow solut creat follow bind insid configur ninject modul inject view model contain list lt pictur view model gt func would act convert model view model similar creat convers class would inject view model contain list lt pictur view model gt goal save edit busi layer made pictur metadata could tri solv use event di base solut hope overlook simpl solut
depend depend code redact breviti connect class two depend get via constructor inject third depend respons factori properti inject avail default creat via line respons factori new respons factori serial constructor suppos view respons factori suitabl local default use mark seemann terminolog user connect class free provid altern respons factori wish revisit code time ambival creation local default constructor depend serial serial requir right connect class chain togeth respons factori seem wrong feel like connect class requir respons factori via constructor forego conveni local default depend serial happen also inject class think defin smell
data object layer dto vs entiti vs respons object let say build custom web applic spring boot also expos rest end point model applic layer ui custom dto b rest custom rest respons custom rest request servic custom dto data custom entiti everi layer need busi object represent entiti almost dto use
circular interfac refer heard circular refer general issu howev wonder true interfac refer interfac exampl case would issu seem resolv best guess issu interfac demand much term referenc thank advanc
circular depend problem singl item set depend whole set set depend item creat compil last stage intermedi code convert machin instruct repres intermedi code machin code class use visitor pattern visit element list intermedi code intermedi code emit one machin code work perfect big problem one instruct must generat depend whole result concret instruct need know index ordin anoth instruct generat yet word emit instruct mean push address label x label x emit yet address label known instruct emit illustr problem better similar creation tabl content document want abl creat toc want specifi page number given section first generat document know page given section pleas tell algoritmo pattern solv problem know emit pend fix instruct big thank
mvp architectur layer check content field present array contain field name valu precis valu object like user exampl model would like know present perform check content field done contain class
model view present pattern passiv view respons set label text tri work mvp passiv view pattern first time get basic small thing still understand exampl imagin simpl view contain textbox button two label user click button text insid textbox shall shown label possibl make small view interfac event button click method get text box content method set label content present subscrib event handl call describ method present know multipl label call set method done therefor view need know handl okay passiv view pattern make big interfac event button click method get text box content set label1 set label2 present would subscrib event call get text box content call set label method separ way view know multipl label present contain logic way correct better thank ob advanc
concern constructor depend inject logic kind rule depend inject literatur state declar argument constructor order constructor inject better approach first noth wrong come realiz rule appli realm let say mvc control control spawn certain job diverg purpos dispos general appli request base system let say block get data transform output transform data block various paramet must configur condit strategi equal greater etc configur block run applic want get result chang paramet block good exampl matlab simulink block dispos exist workspac done job transform data wait workspac rerun anoth job would expens let alon complic recreat possibl block workspac start chang paramet vari number various strategi must provid code behind certain concret implement block interfac need case would standard constructor depend inject fit unfortun get rid constructor chang paramet runtim get rid constructor abl ensur paramet alway valid provid kind default implement fall servic locat trap anoth thing alway bother understand danger null appear runtim constructor inject actual gain creat object constrain chang intern strategi paramet etc creation answer could chang dispos creat anoth one sure see techniqu fit domain request base system web app imagin neural network neuron intern strategi exampl chang transfer function runtim even identif learn process dispos neuron creat anoth one desir intern strategi maintain constructor inject cours various depend inject book type inject mention method inject got feel constructor inject use occas accord literatur given various applic estim way lower misunderstand someth would much appreci opinion matter exampl give follow snippet object need chang runtim constructor inject constrain public class transform privat readon condit strategi condit privat readon sourc input public transform condit strategi condit sourc input condit condit input input public sourc transform sourc sourc new sourc foreach var input condit check sourc add return sourc follow exampl chang paramet runtim dispos recreat anoth object desir paramet use classic depend inject practic public class transform public condit strategi condit get set public sourc input get set public transform could provid default implement avoid null public sourc transform sourc sourc new sourc foreach var input condit check sourc add return sourc
wpf di db context per form tri figur keep class method clean follow ef guidanc short live db context use di wpf issu implement transact di tri figur best way handl handl transact keep di better unit test inject need without inject factori everywher desktop wpf app want use di framework ef guidanc use one db context per form would handl composit root would assum would need type form factori would creat form inject requir depend includ db context
ext js design base class overrid tri defin base class overrid item differ inherit sub class follow mvvm pattern fetch record backend creat sever store formula within view model depend structur base class pseudocod special layout item draw could design css well valu bindabl changeabl inherit class valu bind view model bind config includ sever default config width height border inhetir class cours first call default base class defin view model config call one bindabl valu custom bind descriptor item config anoth way defin basic structur base class sampl inherit one current success render data screen mention code block sencha fiddl
use dynam singleton design creat simpl 2d game field element player move element game two view graphic imag textual print consol one time game logic must know actual view solv creat factori interfac startup time class implement interfac gui cmd factori creat store main class creat view model know perfect howev notic call mysteri window blah blah get actual view factori time look factori black box game model must realli instanc properti kind singleton could refactor exampl pretti trivial worth restructur whole project like know kind design good could call new class singleton oper vari bettween two run
enum chang behaviour entiti bad new domain driven design come across part domain sure model best way possibl membership entiti membership type membership busi max type type b type c ever busi type must busi requir end list lt busi gt within membership entiti follow method call add busi take array busi simpli put membership type enum chang behaviour membership entiti sure model best way possibl better way tackl membership type hard ever chang chang new membership type rather chang exist one help much appreci updat thank everyon take time answer question learn lot answer think omit part domain question mistak made sorri busi entiti mean without membership e construct busi without construct membership first invari busi depend membership membership type call busi type
model domain work domain model applic store inform provid seller good sell platform applic act data store inform inform call product fact may divers exampl repres one product fact instanc sell price item general public discount seller offer specif custom absolut amount percentag sell price minimum quantiti custom buy avail free ship case known might futur guarante share properti alreadi exist product fact differ client call applic one look specif type product fact use sql backend db schema issu problem applic layer sure model particular object tri model would ideal product fact data behavior could use interfac creat implement use case data inherit seem hacki approach anoth approach could client could check valu product fact type call getter appropri fact data type even approach seem hacki would good way model scenario edit seem problem statement could use clariti discount price two mani piec product fact applic could store could other futur includ inform express deliveri elig product say express deliveri product fact area avail minimum quantiti requir inform condit product use new would differ client queri applic look type product fact interest e g deliveri servic client would interest experss deliveri product fact seen piec inform seem anyth common pose problem domain model
domain model vs servic mvc context end articl martin fowler sentenc general behavior find servic like rob benefit domain model logic servic rob blind whole abstract articl tell exact goe servic layer undestand architectur would someth like control gt servic gt domain object gt repositori object kind code would go servic layer domain object implement busi logic would differ control servic layer servic implement busi logic
ddd creat domain model complex applic layer midway eric evan ddd book think question would answer book applic complic concept differ under domain creat anoth domain model repres applic exampl would make clear say core domain organ inform right manag encrypt inform control usag accord access right user one applic irm enabl e mail client like outlook encrypt outgo e mail use irm irm enabl e mail client complic applic may sever new busi rule regard irm e mail entiti oper case wise make anoth domain model repres e mail client within applic use core irm domain model e mail domain model togeth note irm e mail core busi organ nonetheless e mail client revolv around irm
pass meta info command aggreg event cqrs system develop pass command command handler get aggreg repositori call method properti command convert valu object method creat event intern regist hash object collect persist later meta data need come initi request persist result event loath pass method aggreg imo concern domain messag relat data problem everi singl public method domain accept meta object seem ridicul even method normal would paramet like toggl state method question someon provid decent exampl meta data bypass aggreg yet end event side updat explan meta data current two uuid use authent due natur domain multi tenant system uuid persist right way applic cours two later anoth reason want pass aggreg method also comment learn event produc immut could comfort allow system edit event persist add meta data one occas compromis would live
present potenti god object work project mvp architectur program revolv around form give right peopl x differ form depend profil x differ profil abstract class call basic form class form present inherit basic form class work project observ present becom fat especi basic form class lot functionn call execut question present potenti god object
maintain di pattern result writer differ result set note note sure phrase titl pseudo code project work concis left detail type consum class one inherit extra thing consum thread run queue task produc pass fire event consum listen add method doer queue result writer interfac write result doer right write file use csv helper would like allow option futur henc interfac rest sql etc tri keep api depend inject compliant possibl problem deriv consum class add extra properti result set result set produc doer chang ad consum right look like option away interfac pass differ concret class consum consum would get result writer consum extra would get result writer extra anoth approach take still maintain di result writer allow way write futur
pick concret type base configur paramet code base contain sever differ instanc follow pattern key point concret type class decid run time base string config file first realli sure factori right name pattern better name pattern select type base string instanti type second realli dislik manual registr type see way given c limit run time type inform anyon offer better solut automat find sub class foo compil time third manag disagre factori method live would prefer foo wherea like current pattern better neither us particular strong argument though substanti reason prefer one
implement logger make public field need specif implement logger other implement custom logger interfac log succes develop implement famous logger like serilog log4net want creat memori logger store log insid list memori sinc list exist memori logger logger think make part contract logger bad workaround need idea make list acces logger use assert unit test exampl idea work around thank guy
bad practic build larg web compon html helper understand html helper suppos singl element small snippet html howev realli sure think came abid practic find anyth microsoft cover topic either reason ask recent ask build fair larg web compon singl html helper build html use noth tag builder compon mani differ element multipl wrap div input select list refer address entri control support choos enter manual find via postcod select allow go back edit address total differ view feel like build entir tag builder go result unread markup small way task alreadi hard tell glanc markup produc wonder whether build larg amount html tag builder bad practic whether someth wrong bad practic
hexagon architectur databas concurr read alistair cockburn articl hexagon architectur one question occur handl situat databas concurr issu obvious exampl situat entiti retriev repositori integ attribut increment save back repositori web context possibl two request could attempt increment time familiar incorrect result obvious solut would increment sql queri orm equival django orm exampl howev hexagon architectur seem rule sinc would place busi logic repositori similar problem could take place differ request attempt modifi differ field exampl request comment retriev repo edit content request b comment retriev increment vote talli request b increment comment save repo request edit comment save repo includ old vote talli valu overwrit vote talli increment made request follow django orm exampl show one way solv obvious hexagon way busi logic meant take place pure code unadulter databas concern common solut sort problem
use dto pattern serial domain object colleagu mine use dt os rather feel return entiti domain object serial rest api feel dto anti pattern site articl data transfer object shame although articl site differ approach solv dto problem colleagu propos person alway prefer use dto three reason api tie domain layer flexibl domain layer chang without impact api vise versa use ms like jpa hibern accident issu ton queri build object graph serial put logic annot entiti layer control serial realli view concern domain concern easili control much inform goe wire ie send hand field client want rather field point big deal orm use still see issu though someth like follow let say client want list order care line item dto involv could popul order object leav line item empti list would awkward confus popul case other data could load transfer seem wast potenti perform impact everi appropri time skip dt os return domain object think wrong dto pattern use anoth approach
mvp pattern multithread write small applic use model view present pattern forgo model entir pretti basic start passiv view present interact logic well data process present held refer view interfac handl event view obtain data view via properti method interfac pretti normal far want spawn process thread could keep ui respons use answer guid rewir view hold refer present made public method present start process data essenti exist event handler view ok event set run task ok button click handler progress indic left supervisori stuff present initi event view work remov ok event view longer need instead taken care call process match present everyth work well seem like kludg process done separ thread answer se se indic view present hold refer problem also indic view respond event call method present one case design seem rough equal testabl multithread case view logic ok click handler set progress bar enabl disabl control set visibl etc like test certain major case test design overthink bad design accept given need asynchron process keep respons ui
api design observ vs callback team write c sdk communic server endpoint api till task base like task oper async recent across need api get intermedi updat file locat final one user opt someth bool interest intermedi file two option came tabl rx observ lt op result someth bool interest intermedi file task lt op result someth action lt string intermedi file op result enum complet reason enum file type string file loc file type intermedi final complet reason reason applic file type final want know expert would good api design note see new futur api would observ base case observ api ad addit note sinc might obvious complet reason contain valu final updat intermedi updat null intermedi updat final result though relat exact term popul field rais downsid observ genuin downsid thank advanc
ddd avoid overlap aggreg boundari recent start read evan book ddd decid tri appli principl book bound context project work context interest deal appoint appoint schedul present busi requir well current model employe appoint room appoint employe per role exampl counselor doctor employe start finish part appoint differ time exampl counselor present x1 till y1 doctor present x2 till y2 overlap disjoint appoint consid start earliest x end latest appoint also patient appoint must take place room employe cannot overlap appoint regard start finish time appoint cannot take place room room occupi differ appoint model came addit previous invari busi rule must upheld patient schedul appoint given time assum status attribut appoint model support follow use case schedul appoint updat appoint schedul start end time assign differ employe appoint ad remov appoint schedul appoint troubl defin aggreg root boundari given constraint think pretti obvious daili schedul aggreg need encompass avail appoint schedul valu object howev appoint also need encompass appoint schedul order maintain invari employe role per appoint furthermor room patient need encompass appoint order maintain invari suppos patient invari model busi rule polici object still leav daili schedul appoint share refer valu object without go aggreg root seem model allow clear defin aggreg boundari consid expos servic use case would span aggreg boundari maintain invari interest know possibl eleg simpl solut problem
io c use child contain creat scope depend number command handler defin work databas various server network wonder design command pass follow inform command object inject scope depend server inform server name access credenti etc name databas option pass info command note pass sql server info databas name everi method public interfac databas analyz databas state get databas state sql server info server info string databas name doubl get databas size sql server info server info string databas name note pass sql server info databas name everi method public interfac sql executor void execut sql server info server info string databas name string sql public class backup databas command public string databas name get set public sql server info sql server info get set public string destin folder get set public bool copi get set public class backup databas command handler lt backup databas command gt public backup databas databas analyz databas analyz sql executor sql executor databas analyz databas analyz sql executor sql executor public void execut backup databas command command var db state databas analyz get databas state command sql server info command databas name db state databas state onlin throw new command fail except string sql backup databas command databas name disk command destin folder command databas name date time bak command copi sql copi sql executor execut command sql server info command databas name sql public class backup databas command handler lt backup databas command gt public backup databas sql server servic sql server servic databas servic databas servic command handler lt backup databas command gt backup databas handler sql server servic sql server servic databas servic databas servic backup databas handler backup databas handler public void execut backup databas command command var databas databas servic get databas foreach databas info databas info databas var sql server info sql server servic get databas info sql server id backup databas handler execut new backup databas command databas name databas info databas name sql server info sql server info destin folder command destin folder copi command copi con everi method databas analyz sql executor servic requir server databas info pass obvious depend servic option option use factori servic note much cleaner method public interfac databas analyz databas state get databas state doubl get databas size public interfac databas analyz factori databas analyz creat sql server info server info string databas name note much cleaner method public interfac sql executor void execut string sql public interfac sql executor factori databas analyz creat sql server info server info string databas name public class backup databas command public string databas name get set public sql server info sql server info get set public string destin folder get set public bool copi get set public class backup databas command handler lt backup databas command gt public backup databas databas analyz factori databas analyz factori sql executor factori sql executor factori databas analyz factori databas analyz factori sql executor factori sql executor factori public void execut backup databas command command var db analyz databas analyz factori creat command sql server info command databas name var db state db analyz get databas state db state databas state onlin throw new command fail except string sql backup databas command databas name disk command destin folder command databas name date time bak command copi sql copi var sql executor sql executor factori creat command sql server info command databas name sql executor execut sql public class backup databas command handler lt backup databas gt public backup databas sql server servic sql server servic databas servic databas servic command handler lt backup databas command gt backup databas handler sql server servic sql server servic databas servic databas servic backup databas handler backup databas handler public void execut backup databas command var databas databas servic get databas foreach databas info databas info databas var sql server info sql server servic get databas info sql server id backup databas handler execut new backup databas command databas name databas info databas name sql server info sql server info destin folder command destin folder copi command copi pros helper servic look much cleaner con bit annoy creat instanc depend use factori option use child contain creat depend scope public interfac databas analyz databas state get databas state doubl get databas size public interfac sql executor void execut string sql public class backup databas command public string destin folder get set public bool copi get set public class backup databas command handler lt backup databas command gt note databas info depend public backup databas databas info databas info databas analyz databas analyz sql executor sql executor databas info databas info databas analyz databas analyz sql executor sql executor public void execut backup databas command command var db state databas analyz get databas state db state databas state onlin throw new command fail except string sql backup databas databas info databas name disk command destin folder databas info databas name date time bak command copi sql copi sql executor execut sql public class backup databas command handler lt backup databas gt public backup databas contain contain sql server servic sql server servic databas servic databas servic contain contain sql server servic sql server servic databas servic databas servic public void execut backup databas command var databas databas servic get databas foreach databas info databas info databas var sql server info sql server servic get databas info sql server id creat child contain inject depend need var child contain contain creat child contain child contain regist instanc lt sql server info gt sql server info child contain regist instanc lt databas info gt databas info var backup databas child contain resolv lt command handler lt backup databas command gt gt backup databas execut new backup databas command destin folder command destin folder copi command copi pros like helper servic databas command databas server info depend con backup databas command access contain feel godlik obvious happen creat child contain anyon altern advic
name function factori class invok static still factori let take follow javascript languag realli relev idea differ configur given object creat job factori tradit case system reus want busi logic decid configur built user object hidden away buis logic complic would worthwhil simpl contriv exagger bit still factori method would call factori method strict one method return output let caller select type want
implement strategi pattern combin behaviour strategi pattern solv necess appli certain algorithm behaviour depend object type iter bunch similar object call function expect differ algorithm execut one two object may special algorithm togeth list iter singl object behaviour exampl differ object type blue yellow red shine method implement strategi blue shine strategi yellow shine strategi red shine strategi combin blue yellow object order make shine okay problem come restrict ad red blue present combin cannot call shine method everyon must use two red blue shine strategi time ask decid use combin strategi moment execut moment decid consid model combin array special group includ model
implement domain model repositori without leak respons imagin test modul larg number question creat test contain exact question would usual howev mean anem domain model domain logic leak repositori know status must activ take limit number question etc expect ddd look like domain logic contain domain model howev mean question load memori eager filter enumer may ineffici larg question number implement persist ignor domain model make sql queri effici optim cannot understand design ddd without leak domain logic repositori
ddd work entiti variat let say entiti repres employe imagin websit page home page profil page home page name gender last employe regist like click employe name taken profil page show everi data select employe sinc need name home page make sens load entir model databas need gender hair color etc name imagin employe entiti much data handl situat ddd look like bound context problem creat differ variat entiti exampl
keep code new instanc object os project exampl king detail view control class follow code correct approach
abstract factori composit builder depend inject hope get help mixtur complex design pattern best simplifi issu use basic exampl modular big need system well extens goal creat dynam list composit object accord databas edit view requir certain level reflect well simplifi easili recogniz object let say button panel composit contain list button one object defin separ dll modular extens exampl button dll panel dll defin object necessari builder object instanti edit also includ would serial data bundl util object correspond builder help facilit requir reflect central abstract factori use creat date version object found use builder let say instanc client interfac would look like though final version hard code string replac databas repositori data exampl builder regist panel identifi later use creat entiti name central control panel abstract factori instruct creat panel question sinc panel need build list button attach part composit design pattern panel builder need know use button builder method best resolv issu instinct tell use depend inject pass central abstract factori builder regist builder type identifi howev creat bit ugli circular depend would hope avoid edit circular depend abstract factori would need know builder order regist panel builder instanc would specif need know abstract factori order creat button suppos true circular depend must go layer inherit depend prefer one direct possibl eg edit depend inject would like like bottom aggreg abstract compon factori composit compon factori repres inject edit exampl button would deriv compon panel would deriv composit compon uml name anyth builder truth implement fall slight factori builder depend upon context role exampl construct button work factori howev construct panel abstract factori act like builder parent factori transit director simplic use requir use term fulli verbatim better method avoid depend inject builder must awar central factori control order truli produc composit object altern see panel object fulli knowledg button object could problemat modular note code meant particular languag style pleas keep critic syntax format minimum also error check skip sake pseudo code
class design inject data inject repositori servic fetch data let say exampl develop fiction class call widget maker class depend point lookup data store databas better design class depend data servic fetch data make sens first way seem like right design inject class need make class easier unit test otherwis need pass mock repo test logic flip side seem like push fetch data somewher els mayb widget maker factori class whatev class need widget maker would instead get depend widget maker factori seem like repeat issu
depend inject chain command pattern chain command pattern implement modul implement interfac set chain modul modifi offset trip data object necessari guess exact chain command pattern get job done would like start use depend inject whenev possibl eas process write unit test question handl modul may need differ set servic go auryn let automat instanti depend modul least hope necessari theori updat build chain take name class config file instanti arrang queue control awar depend modul need right none modul creat need object want chang want inject modul contain turn servic locat pattern updat need get set data extern resourc need process get metric howev data may corrupt sent batch whatev script need fix much possibl type problem may depend extern resourc data come situat dynam mean new type problem new extern resourc may appear futur idea creat modul modul address specif problem arrang modul queue order modul may import execut inject incom data paramet solut heavili inspir articl site point instead creat instanc one one like exampl pull name class config file creat foreach loop problem creat instanc class like see modul need inject moment noth di appli modul instanti servic need see two option either switch manual creation modul flexibl start use reflect find modul need provid
author domain model enterpris system repres domain model part requir system limit access featur base privileg log user put privileg valid insid domain model problem know user log pass put privileg valid level present web applic
domain model represent formal ontolog vs code disclaim limit experi build domain model pure ask interest recent stumbl upon concept repres data model ontolog seem like would great method specifi domain model use organis softwar system question worth formal specifi domain model format like ontolog e g read complex knowledg system biomed catalogu softwar use would much extra work typic busi applicaiton general better practic represent domain model separ softwar e softwar singl sourc truth domain model
deal complex valu object work martin fowler definit work base class call condit troubl proper classifi make think might valu object given condit valid within context singl entiti condit never share address independ equal base valu ie singl entiti multipl condit never modifi ad remov given entiti howev characterist typic valu object well complex logic behavior potenti refer first class entiti make valu treat condit class entiti valu treat valu object justifi place data access code parent object data access code parent entiti repositori deal class differ valu object
static factori constructor design pattern prefer way remov object refer consid follow implement static factori pattern consid situat codebas use new name object temporarili say local variabl sinc map hold object refer seem manual clean map oppos reli garbag collect clean unus object refer regular constructor prefer way clean object refer without client use factori manual
effect way deal static analys warn caus incident use reflect normal use reflect direct program java use ap framework intern reli reflect annot provid custom point lot framework use annot set depend inject sort autom logic wire behalf result lot field method constructor access static code analyz follow result mani fals posit unus method field warn realist option continu suppress warn thing help analyz better understand real entri point class heard peopl discuss use test code purpos lot case could probabl write relev test case make warn disappear worri rather larg number case would involv test implement detail instead observ behavior code alreadi adequ branch coverag want write test regret write everi time mainten whitebox test realli sometim best altern way help minim downsid fragil implement leakag primari concern
php mvc singl action multipl similar view one action exampl databas tabl similar column attribut cat dog bunni tabl view consist html tabl list record tabl form add new record action display base page action add new record tabl action edit record tabl action delet record tabl per tabl seem like lot action control ever appropri instead action like action add dog action add cat action add bunni singl action action add pet use kind flag determin type pet add specif tabl alway better separ action sake clariti
avoid global state world map conceptu problem general difficulti like look exampl hope help clarifi use map repres alter game world simplic map two dimension array int approach c within uniti chang anyth global state bad least far ideal address global state evil conceptu understand issu pose see propos altern actual solv largest issu seem mutabl chang creat instabl code look map exampl number system might need access map render need look data determin sprite draw input need check data determin certain input valid data map may need chang tile destroy built upon etc instinctu approach creat map singleton easili referenc wherev need howev obvious creat global state thus becom problem depend inject seem common referenc way prevent global state see reduc elimin global state understand instead get refer map creat singleton instead pass refer constructor seem function ident case everyth end refer global state except di seem downsid requir extra pass paramet di suppos use copi state case relat signific perform memori impact duplic much data obvious sinc learn probabl ignor perform unless realli becom issu seem incred clunki ineffici miss di make viabl solut problem altern solut exist actual address problem
cqrs pattern exist without mediat pattern cqrs pattern exist work without mediat pattern mean alway command command dispatch somehow handler perform logic mean cqrs pattern depend mediat pattern order work everi exampl see cqrs use mediat pattern mean integr part pattern work without use mediat pattern make much sens
data mapper pattern ddd ist alreadi reflect domain entiti repositori get use ddd assum ddd pro yet tri implement hexagon architectur use cake php framework complet custom made applic util framework built someth base app skeleton cake php use data mapper pattern activ record peopl assum read lot seem tabl object cake php entiti repres alreadi domain layer appear entiti orm alreadi valu object want domain layer appear exampl tabl object implement alreadi repositori interfac also act aggreg defin associ tabl least think question assumpt true
design event event driven event sourc architectur manag duplic creat poc part system find troubl communic idea behind take idea event sourc event driven architectur tri learn step step thought reason motiv clear honest find good argument question get would great appreci opinion comment idea cours link materi may one part system need make sure would complet audit trail oper happen want abl see transit brought object state run verifi result made sens envis follow list immut event care craft express happen relev entiti must defin set field would work contract set aggreg could one would know reconstruct read partial stream event abil build current past state understand basic event sourc also want set first stone toward event driven architectur part applic even system could maintain pointer stream read new chang happen consum could interest part stream would reli signatur event interfac segreg principl client forc depend method use decoupl much possibl origin system get sever question duplic translat exact domain hope make partial sens let assum stream event app creat exam user take see store text question answer also exam question answer inform alreadi exam question creat event must say exampl make much sens want tie text user saw answer question even tri put minim inform defin busi event time busi mean also want abl system listen exam question answer incorpor text event know let imagin real time dashboard show question answer want show text duplic fundament wrong exampl bit weak bear understand event sourc truth ad text event make anyth incorrect exam aggreg understand respons given event name payload reconstruct state make whatev use need payload implement belong aggreg one would discard exampl text properti exam question answer wrong abil reconstruct state wrong data store would better store without duplic hydrat data extra info go given consum expect deep merg question also connect previous one point appear expect team aggreg could built replay event merg payload exampl although good exam question remov expect see id x delet true payload properti alreadi present part system know aggreg make sens expect merg payload event automat get return someth make sens interpret differ fact codifi immut busi fact event enabl build differ aggreg rebuild exam exampl payload conveni build analyt dashboard put one exampl mayb exam question remov mean go reduc counter need delet part payload make sens code event minim data give mean busi fact know need know name exam question remov data id need process repli event must respons know event toward final state want rebuild function f current state event name payload gt new state must implement f get complet wrong indic materi proper design event would great appreci support say great realli look forward find incorrect
deal complex depend graph ioc sever app witch build one code base use common modul question write composit root case let imagin simpl depend graph first guess one big composit root depend app second guess differ composit root app case care check depend regist e chang class base2 depend class base1 get runtim error approach better use case hundr depend
python properti decor use without setter delet class contain object set case set modifi standard function oper add sub also want explicit expos method get set properti decor use instead simpl get method even intent allow set delet exampl feel semant correct use properti right error messag rais attempt set delet properti occur attribut error set attribut also feel like bit con potenti user know properti exist may expect rest contract set delet fulfil anoth option might defin setter delet term add sub seem like less obvious breach contract
use pattern repositori tabl relat read repositori pattern use pattern dao data acess object implement tabl relat pattern creat entiti link tabl thank
best design pattern approach factori need multipl type input want develop factori notif problem notif factori readi get multipl type input multipl implement notif factori abl return instanc depend request see would differ type input paramet know design time would like creat method type notif factori enabl creat ho design factori need use generic code attach understand problem mani thank
need decor interfac go decor pattern wikipedia read pattern head first book one thing struck miss sourc may miss exact need decor interfac need put concret decor categor umbrella suppos lt decor cant simpli sublcass direct compon interfac term wikipedia uml thus decor store refer compon interfac type call behaviour direct concret compon ad thing per exampl head first book anoth reason think put decor interfac runtim support ad decor factori reason make ask wider audienc decorat interfac decor design pattern provid dynam support via factori
evalu http reqr vs websocket geoloc base broadcast use case real time broadcast app user get feed item base geoloc e user receiv post broadcast within user defin radius current resid backend implement want use cqrs procedur follow broadcast upload post tag geopoint messag sent produc place post kafka queue topic post read side consum read incom post store databas support geo indic user receiv updat new post within user defin radius broadcast post user realli requir broadcast post push client label number indic mani new post broadcast would suffici user click tap number ui new post would fetch regular http call order broadcast post number new post web socket would need evalu everi connect user whether geo radius defin contain current locat geo point new post broadcast big citi could theoret larg number user frank feel uncomfort solut use web socket use case term perform scalabl scale citi seem unmanag altogeth without advanc architectur somehow partit post per geo area want avoid least initi could give insight would advis architectur achiev expect result would consid bad use case web socket could viabl scalabl altern mani thank advic expect simpl app concept complex turn
high scale architectur use event sourc eventu consist want share know opinion improv regard solut task technic interview face exercis need creat api indic base dna person male femal api must two endpoint post genr receiv dna matrix nx n return ok woman forbidden man bodi look like algorithm decid whether woman one sequenc four equal charact exampl get stat return result way instruct build api persist dna analyz take account api could overwhelm unexpect burst one million request per second let suppos got best algorithm ever world analyz dn let focus architectur architectur request receiv dna valid analyz syncrhon respons sent client new messag push queue worker get messag execut two step asyncrhon decid dna alreadi store save requir push new messag stat event store new woman new man api genr written node js express js run vm behind load balanc servic abl auto scale base traffic request azur exampl request dna analyz new messag ad queue decoupl process respond client store process still possibl bottleneck content point sinc analysi taken place stat read event stat event store calcul requir use event sourc architectur must process respons creat snapshot period order avoid mani log store store elast search databas two index one store men women anoth one store stat worker process written node js run vm read messag queue check dna alreadi exist peopl save dna store exist yet push new log stat event store new person find complic point content blocker scale one instanc run problem messag read one one problem begin want creat instanc worker sinc consist problem chang add architectur consider take account accomplish target could take real advantag pattern like event sourc eventu consist cqrs appreci doc opinion experi guy share want add got posit want learn improv architectur skill thank
cqrs microservic pass inform one servic anoth build two microservic use cqrs event sourc order servic inventori servic order made inventori item must decreas amount order order also cancel case inventori must increas order servic store order creat event contain necessari detail inventori servic list item instanc ds amount sampl code event also sent inventori servic could map share contract inventori servic decreas stock item order cancel store order cancel event order servic need contain order id eg send item inventori servic option add item order cancel event seem strang us appli event ie hydrat serv purpos option creat event handler order cancel event retriev aggreg access item eg real life code weird thing retriev order instanc even though alreadi retriev command handler previous e user cancel order command sent system retriev aggreg twice option option instead retriev order event handler let event handler call read model retriev item articl read advis command side call queri side though often littl argument option send messag order id inventori servic listen necessari messag order servic build read model order mean would actual compon creat read model use instead read model other exampl inventori servic would build model order item advantag seem build read model pure use situat microservic fear compon might build mani differ read model differ microservic disadvantag could chang addit event order servic would requir chang read model generat inventori servic ask tackl issu event handler need inform microservic architectur mean need lot read model aka endpoint per client
mani unecessari event new eventsourc app sinc begin face issu unsur resolv work ecommerc alway tri convey meaning event aggreg like price increas event product deactiv event stock event etc mani time want simpl crud style aggreg instanc user chang product imag want mess aggreg imag upload event event sinc part domain suppos handl want simpli set new imag path databas sinc project suppos dispos would loos inform often happen type editori data like titl name someth want creat event titl chang know code smell matter domain titl chang want chang mayb eventsourc bad idea guy handl kind scenario
critic disadvantag depend inject depend inject di well known fashion pattern engin know advantag like make isol unit test possibl easi explicit defin depend class facilit good design singl respons principl srp exampl enabl switch implement quick db logger instead consol logger exampl reckon industri wide consensus di good use pattern much critic moment disadvantag mention communiti usual minor increas number class creation unnecessari interfac current discuss architectur design colleagu quit conserv open mind like question thing consid good mani peopl copi newest trend repeat advantag general think much analys deep thing like ask use depend inject one implement ban creat new object except languag framework one inject singl implement bad idea let say one implement want creat empti interfac plan unit test particular class
place poc os valid n layer architectur develop n layer app one layer busi layer consum set poc os defin core layer also present layer win form core layer poc os class properti repositori interfac use poc os paramet type exampl data access layer custom implement repositori exampl sql server data access present layer contain win form retriev inform generat poc os ideal want valid user input poc os latter store db busi layer businn logic want put valid poc os data sure right place deal sinc defin core layer question place valid b layer design enrich poc os defin core layer validaton guess valid fit better businesslay sinc repres busi rule c show design pattern design guidelin includ valdiat mani thank save day
mvp model layer architectur setup entiti dao code small applic use mvp pattern get data sql databas use orm box sake learn write simpl orm dao type setup util idea ormlit regard model layer databas object connect databas execut sql command return result sql queri dao bridg entiti databas build queri entiti execut databas object entiti busi thing properti repres column databas question lie dao entiti part right approach could dao inject entiti e g custom dao creat vs custom dao custom creat databas relationship e g custom order custom entiti custom contain array collect properti custom order affect question order dao nest custom right way present understand correct present heart design handl ui logic could busi logic call access data via model layer e g ui call save method present pseudo code save load action present good direct
platform independ way pass messag execut work data collector could call api sort base net core job receiv pull ask data data collector execut dll servic languag case let stick c collector api platform independ henc net core go chang data collector written languag run way see fit platform depend limit mani send data collector local machin possibl differ user account differ session due secur reason idea toward implement creat asp net core web api would self host kestrel local lightweight requir proper server sinc never deal outsid traffic run window linux mac transport collector data collector would web http base avail pretti much languag someth major develop known maintain overkil pass messag process machin altern come primari web develop background quit new short need collector c receiv ask data data collector event subscript messag pass call c data c process c call ask data call c data new call trigger ask data c platform independ platform depend must abl communic c mani c java c run window linux mac collector c alon alway receiv ask data platform independ messag framework apart http use implement
instanti class inject class b inject class c forth given configur file non object paramet need creat class like given file would need creat component2 first depend component3 component1 wonder solv problem order instanti object input function would file output function would instanti class thought two way construct dag depend case use bfs topolog sort figur class instanti use observ pattern case object compon respons subject observ use compon exampl object would observ paramet need instanti compon also subject get notifi compon creat compon instanti observ compon notifi though may caus loop feel may problem peopl face yet find solut advic could someon point relev resourc
store saga event sourc long run process collect togeth ds aggreg edit chang later command publish legaci model understand use kind saga listen certain event store addit ds later process question given event sourc environ use event store aggreg expect store actual saga data emit event saga record event store separ persist engin store data like sql instanc confus complic would option also creat anoth data schema singl tabl option two seem overkil also other communiti kind scenario
subclass singleton class need subclass singleton class word good subclass singleton general allow would pros con handl get instanc sub class would nice give exampl snippet java doesnt break singl respons princip make app less testabl lead complic state
invok one repositori anoth code smell recent came accross old webapp project use repositori layer domain persist layer howev repositori layer use weird one exampl blog section post comment persist post mani comment post comment resid seper tabl post comment map use intermedi tabl object persist post repositori save method may mistaken though seem violat srp post repositori assgin call comment repositori also make post repositori comment repositori awar exist code smell refactor would recommend
databas specif function increment decrement featur use ddd entiti dollar balanc properti whenev event occur caus balanc chang debit within transact balanc decrement amount debit sort summari valu db queri need perform retriev balanc everi time two way use lock updat function db prevent read balanc valu finish process way chang balanc entiti user gt lower balanc commit valu repositori downsid high load applic want stop anyon read valu option use databas decrement featur updat user set balanc balanc ensur even two updat made near time valu alway correct actual valu set known domain layer queri want use option model one way call repositori method within lower balanc method entiti class coupl domain entiti infrastructur layer plus want latest valu need ensur repositori fetch entiti mayb ok case blue book say layer depend layer suggest structur
add xml comment dto model entiti model model dt os databas model entiti map databas usual put xml comment properti describ put comment dt os entiti
creat central repositori repositori relat data build websit fruit compani databas list countri countri list distributor sell fruit product countri distributor relat via key implement solut dal implement repositori countri repositori distributor perform crud oper implement realiz need know distributor countri use repositori would requir inject repositori time want rather central place oper like best way implement class perform oper data multipl repositori implement new repositori distributor pr countri includ extra method countri repositori get distributor better one big repositori sinc releat
depend inject one method method param teammat mine wrote code follow way tri explain better assign depend privat protect class properti use function pollut method paramet depend argument much readabl way know depend method argument write method way rather made static someth good ever get extra method need depend need differ way retriev someon know code good way rewritten class properti fail find good reason come stack exchang hear opinion
ad addit layer domain model view model necessari work xamarin applic mvvm use prism also leverag data communic backend mobil applic structur mobil app follow view view model servic layer data proxi return model littl funki data domain dto model end expos direct view layer howev develop anymor abstract would cumbersom maintain least thought point face situat must perform addit logic model object present layer exampl model complex model data look someth like usual would bind view direct complex model present via list view want flatten sum vote properti present appropri map object new object direct view model anoth thought add facad pattern view model use expos would map servic layer howev code base would increas simpl way around problem symptom larger design issu
zero argument constructor alway valid entiti done lot read recent alway valid domain entiti come believ order ensur entiti alway valid need remov primit obsess put valid domain rule valu object constructor explain put valid domain rule constuctor entiti properti setter explain howev look open sourc project one understand author project advoc alway valid domain model yet look inventori item class notic abl mind mean entiti initialis invalid state seem case open sourc project look recent well e g one realis contextu valid open sourc project also realis ms need default empti constructor map domain model domain object valid state initialis default valu use zero arguement constructor initialis empti null valu
know use depend inject question might sound littl weird guess came question brows design pattern came notori state strategi pattern came code simplist product readi cours tri simpl exampl code actual show well problem basic account state interfac repres state strategi could consid depend allow account class know manufactur activ account state enabl account class respons could creat account state factori make depend account class would allow easili inject newli creat factori depend use account class constructor way well expos implement detail probabl interest account class none els guess would make unit test tad bit easier question would know someth depend sometim dead simpl ie servic factori provid etc time confus like state strategi exampl thank advanc
best way use tabl column name repositori pattern applic follow repositori pattern data access layer howev see repositori data retriev method column name tabl name hard code string think right way sinc becom boilerpl code mani method minor differ due one two column cours chang claus moreov new column may get ad tabl appreci help
put rowmapp insid domain class normal java row mapper place class instead design put row mapper insid domain object give consist name queri pro row mapper right next domain object easi er make sure field map con design know followup question first question main question could take step add use let avoid creat row mapper object time probabl big deal sinc hurt readabl perhap worthwhil con 2nd option
render action compat mvc architectur came across extens method built asp net mvc child action extens render action invok action method use given paramet render result inlin view surpris thought mvc architectur control set model pass view data need view would model time view call action let view turn around say way control need bunch inform render compat mvc architectur possibl asp net mvc built framework would suggest approv peopl know could someon tell make sens view
littl valu unit test databas compon compon repres databas wonder use busi logic read write data compon unit test would argu unit test test contract compon extern actor let take typic interfac databas compon method list util databas librari send appropri queri databas extern actor databas compon busi logic databas unit test would requir mock connect prepar statement result set object databas librari howev sinc entir databas compon consist interact databas librari test write end mirror compon code henc fragil test contract mean assert follow call insert user write user databas call fetch user retriev user databas call delet user delet user databas test interact databas librari lead fragil code lot equival sql statement creat chang statement equival one break contract break test one could use databas librari differ way eg use statement instead prepar statement object break contract chang order column select insert statement would yield equival result point assert resultset get string prepar statement set string bill databas librari use matter follow thought lead conclus unit test databas compon offer littl valu truli feel integr test requir actual databas way go pleas share thought subject could miss someth edit pleas suggest follow code unit test non fragil way feel free refactor code like
singleton java function interfac know million discuss singleton clean fair share terribl singleton code base one reason gun shi run situat feel like singleton reason solut want see other think quick setup set interfac extend java function interfac consum function etc make semant cleaner most one follow jaxb class pojo jaxb generat xml bind kb type enum use load data pretti much way wrap bind class logic class implement interfac keep track intern state abl multipl instanc class requir current class implement intern state reason ever instanti one object class object implement interfac usual inject depend would chang one class param signatur place inject happen someth along line function lt kb type gt would replac instanc like could turn static util type class inject static utilil function name would fit overal design would actual implement interfac think would confus see problem test class mock class sinc singl instanc still inject actual use complet wrong singleton perfect fine solut engin keep bunch new object instanti
cqrs need fire forget need read guarante command research phase cqrs es never done real world yet soon howev saw stack overflow project cqrs seem fire forget chain command need result anoth command first exampl reward manag account manag bound context applic layer send give reward command reward manag reward manag fire creat transact command account bound context get result transact id guid refer answer get transact id cqrs fire forget reward manag need use data transact queri account manag use transact id fire next event guarante account manag finish creat read model reward manag read second exampl rest api open gacha box user call api applic layer send open gacha command busi layer fire forget gacha open event rest api guarante open gacha event creat read model scenario lead question cqrs need fire forget need read guarante command other solut solv problem
handl share context repositori unit work use depend inject problem knock background insid devolp win form app layer almost event handl form class multipl repositori also unit work get close problem everi form get inject factori unit work sinc everi event need call factori get new instanc connect dispos use code see init connect consctruct unit work get readi connect db instanc problem want make respositori get inject composit root get control repositori use app know handl see line repositori need share connect object get follow situat pass instanc repositori constructor insid unit work use defer construct add databas object convert factori func leak implement sinc repo could web servic base futur mani help guy awesom
ddd domain identifi implement valu object ddd defin domain identifi valu object regard ever last project implement id like valu object howev project saw realli reli struct like instead use string direct differ benefit danger use one
circular depend composit root mdi mdi win form need instanc igui error hanlder error handl time igui error hanlder depend mdi mdi win form place launch pop up stuff want mdi win form instanc form gui error hanlder form gui error hanlder instanc mdi win form remov circular depend mani thank
handl limit resourc rest web api develop rest web api c net intern integr project api backend need use vendor dll order process provid input vendor dll written c limit cannot initi instanc time sinc rest api call multipl time concurr risk may hit instanc limit busi time api public littl chanc happen still need stay safe prevent plan keep current count run instanc thread safe singleton variabl maintain increment decrement logic initi c dll stay safe sinc rest api stateless good practic use static thread safe approach implement could better approach like use server cach applic state applic variabl name valu even flat file need add databas option situat
constructor complex initi logic alway bad recent read blog post regard constructor also read eric evan book domain driven design blog post book state constructor bare minimum amount logic bring object sane default state question immut object like one except rule think object contain sent pdf framework input report busi analyst ignor fact may duplic logic insid purpos class illustr complex initi sequenc immut object tell constructor could contain complex logic like filter sort group order bring input data shape requir report enterpris report mean serious work opinion much line oop state data behavior work togeth insid construct reach desir goal split class differ construct one hold data one assembl factori way eric evan suggest book would essenti leav realm oop ventur procedur function paradigm furthermor would lose benefit immut sinc moment report poco pojo initi moment factori done initi invalid state thus violat purpos constructor valid instanc object right call said miss someth els come immut object sane approach heavi lift insid constructor sinc initi state also final state p heavi lift determinist need comput properti made lazi
move price servic creation entiti save line item servic mvc design refactor question use control insid task get price object databas use repositori pattern creat line item object initi price data execut save databas command use save line item servic simpl servic save line item current action happen control howev wonder better move action save line item servic thus assign respons servic smaller control also bloat servic use servic dealt line item object deal get price object creat line item object save question refactor bloat servic assign respons outweigh keep bloat insid control
cqrs queri aggreg root use other field rather guid id mani cqrs framework event store librari use guid aggreg root id event store let queri guid realis mani time last project ddd crud need queri aggreg root use other field rather guid sometim use coupl field solv problem queri read model insid command handler need build anoth repositori map properti guid need solv problem redesign domain model queri thing get guid enter command ask
swap entiti orm repositori pattern let say follow repositori pattern applic let say gateway class thing happen databas stuff handl class user tabl user model class current use eloqu orm support maximum databas near futur need use doctrin new databas current orm doesnt support swap user entiti usermodel user model like eloqu special method expos direct insid user entiti make gateway within user model
unit test multipl depend base q understand obvious retrospect wrong howev given scenario unit test follow test dependency2 call base condit dependency1 guess import edit explain duplic import unit test test depend ask essenti given method get data cach servic unless empti case call anoth servic pass depend test 2nd servic call given null cach origin q detail
creat method classifi class factori current project find self make factori two distinct reason reason assist io c contain particular class need paramet known class creat might also includ read data config kind factori contain busi logic initi logic reason creation entiti need complex valid logic want keep logic constructor stay simpl kind factori busi logic around creation new entiti furthermor creat factori reason find tempt put delet logic well delet entiti often complex beyond scope entiti delet howev one would hard press call class delet method factori reason exampl reason exampl creat factori reason realli correct call factori better term kind class preexist terminolog describ two distinct case
proper implement repositori pattern mvvm wpf current refactor wpf applic built principl repositori pattern use entiti framework orm databas first entiti wrap repositori interfac use unit work unit work use view model howev singl transact like say creat invoic affect sever tabl exampl creat invoic would insert sale record sale tabl deduct avail stock stock tabl forth sampl code basic view model heavi lift proper insert data proper tabl databas problem sinc use entiti framework db first approach model generat anaem one simpl data class absolut behaviour could encapsul logic unit work even creat store procedur databas creat separ servic layer would consum unit work make view model use servic instead unit work correct place encapsul insert updat logic
correct way one present communic anoth present view mvp pattern android activ two fragment attach fragment view control present fragment view b control present b view top half screen chang life activ view b take lower half screen swap navig anoth fragment view problem present b need communic view present manipul ad object chang data repres done without present b know care view exist keep featur separ also everi present b need manipul view idea problem present b view b activ view present view problem duplic common method view b duplic method call activ call view bouc view present updat model present b model present view problem make sens data pass model inform present thing data relat need manipul view direct present b view present view problem two present control one view bouc view present updat model use bus post event present b present problem bus easi abus interfac easier follow flow idea exampl current code first idea describ
ejb servic inject requir specif subclass creat java ee guidelin suggest defin abstract ejb servic ap defin concret implement order conform oo design principl inject point either ejb local remot forc provid concret implement class eg therefor question earth inject maintain invers control one step may polymorph edit realiz question might clear tri give exampl let us system must calcul salari employe two salari type exist high possibl third come somewher system concret object creat system everyday work new employe creat final client code need use entiti run calcul payment client code know neither care specif implement salari calc servic import third salari calcul method come creat third salari calc servic subclass modifi point concret object creat client code modifi implement java ee environ servic perform db transact ejb
cqrs reason caus read model updat delay prevent user take inconsist data consid cqrs build realtim game server gameplay economi reason scale event log model chang howev realtim game player upgrad exampl charact mock client without need server feedback close game immedi upgrad quick reopen game must saw charact upgrad question wonder much read model delay reason caus delay littl preprocess process data read model experi scale cqrs still ok use case still ok option choos block user read read model finish updat block user read begin command reach server read model finish updat guarante read model updat time lesser applic open time ignor issu
use builder pattern standard return data would make sens use builder pattern return data api current creat array structur return detail exit place class account one empti result basic multidimension array php like sure creat global array struct like class builder would love input futur work updat tri like give detail use return data structur method want method return data
store bank account data use event sourc tri chang payment relat stuff current project still decid architectur small part hope share feedback flow state payment account use send money paypal swift iban account time user want add updat payment account store data updat confirm data tabl jsonb field request send email confirm confirm data fetch json store add payment account tabl user might multipl payment account current state problem let say b c payment account user edit account chang swift number current solut data replac new data mean lost histor data audit probabl send payment old account cannot prove referenc account edit think tabl id sequenc user id account let say jsonb probabl doesnt matter context confirm token random string uuid uuid4 uniqu identifi payment account start date delet flow user add payment account new row creat return token confirm let say uuid abcd efg user confirm token start date updat current date mean account activ user updat payment new row creat time old uuid abcd efg updat token return user confirm token start date set current date user delet account uuid abcd efg set delet current date ideal would like solut event sourc want issu updat queri see problem solut recommend solut inser ts data time requir play event requir sophist queri retriev data
cqrs bidirect aggreg refer suppos domain charact player charact own player busi logic requir side refer question direct refer caus redund truth manag consist side choos one refer side use repositori eventu consist help refer anoth one like updat found way eventu consist benefit bidirect build anoth helper repo
depend inject data encapsul let say game class game class get construct depend game timer timer point updat updat timer rais elaps updat calcul user current point timer store privat readon properti game class want glue togeth kind ui everi time point updat want refresh ui would okay subscrib direct timer altern could make timer properti game class public could subscrib game timer elaps direct seem data encapsul sinc would allow e start stop timer well could let game updat elaps event forward elaps event timer direct still leav encapsul intact line code write prefer solut util depend inject best practic thank advanc
codebas depend inject unit test catch regress let say build code inject depend everi class test replac depend test doubl let also say work class run test test given regress unexpect failur part codebas chang must due code say class x depend code chang broken chang behaviour code howev class x depend replac test doubl test chang therefor unit test x fail therefor unit test catch regress caus chang correct interest explan necessari unit test test depend assum case question consequ
condit depend inject base environ bad pattern bad design inject depend base run environ product test develop etc consid follow contain laravel exampl bind differ implement mailer interfac base applic environ bug els condit execut alway regardless environ find bug prone like execut condit also product anoth option know get around case use bind test run test suit append anoth contain part bootstrap test suit first usual code run test bootstrap make addit bind problem face solut chang mailer interfac bind test mailer also updat abstract depend mailer interfac updat let say also user servic interfac etc rebind chang propag case class singleton closur initi bind mailer interfac includ case need write test contain bind mailer anyth els depend thought solut suggest thank advanc
use dto instead entiti work rcp applic new applic spring bean use write busi logic save fetch entiti instead send entiti direct client convert dt os popul client save convert dto entiti save benefit convers someon explain
use depend inject test class parameterless constructor need want use power arg consol applic write offer nice featur like tri root look like pretti cool power arg creat instanc class pars given arg call correspond action defin attribut follow might alreadi seen problem power arg throw except sinc cannot instanti class say need paramet less constructor want creat hard code consol class someth like dep new depend method sinc would abl unit test way use depend inject parameterless constructor thank advanc
better use global variabl coroutin general better store state global variabl coroutin specif python understand best practic exampl consid simpl flask script short flask app two option outlin case like would better practic use coroutin use global variabl variabl repres hook coroutin exmpl variabl coroutin essenti global variabl sure ad complex help much project grow perhap valu ad know would
separ class dto helper class possibl good anti pattern exampl class usual class member method eg read singl respons principl open close principl prefer separ class dto helper class static method eg think fit singl respons principl respons cat data keep data care method also cat method also fit open close principl ad new method need chang cat data class question good anti pattern
implement onlin offlin data synchronis want creat desktop applic applic must abl accept databas transact even internet connect lost soon internet connect avail applic start synchron data web server automat would good architectur approach
ddd deleg busi rule domain object extern servic situat implement ddd first project would like clarifi correct implement strategi pattern case check api token activ busi rule api token instanc could various implement strategi would like deleg logic extern implement implement api token class token strategi contract usag concret api token class question ok respect principl ddd deleg check domain busi rule domain object
okay put error handl facad layer java spring boot backend project implement control facad servic pattern structur best put error handl facad layer servic throw error occur control receiv respons entiti produc facad imagin way becausa facad one place wrap respons entiti error success call leav also control cleaner code call receiv respons
creat bindabl input handler c span two separ modul wx widget applic first main modul second modul open gl engin model view control structur applic view control engin model problem need solv need take input applic engin chang base data move camera highlight select substitut one mesh textur anoth etc constraint system cannot key bind hardcod need edit user without restart applic figur far applic input handler class class contain map keycod key struct contain function pointer list pointer argument valu also singl method use data construct complet method call keycod receiv design make possibl chang key bind dynam remov need huge els tree giant switch case statement problem within engin method interfac engin applic mean would invok intern method actual work move camera method would access intern camera class invok translat command argument given way applic access engin design two level abstract first one receiv keycod use form call method second call method would realli interfac applic would call method real work point like note spent sever hour rewrit question modifi design notic new flaw tri explain best could come final question good way achiev written bold flaw see design way fix would anoth design altogeth better suit task would approach problem
partit tabl aggreg id effici eventsourc rdbms event store sql reach point ten million row thing start get sluggish pull aggreg read tabl partit wonder good option store aggreg event sinc aggreg stream event aggreg would partit doubt still need index aggreg id go partit also aggreg id guy ever use tabl partit solv issu
unit work creat repositori unit work class method take class type creat repositori look strang unit work di tri explain team alway say exampl unit work contain concret class properti method creat return repositori opinion unit work know repositori exist call savechang save entiti repositori servic contructor take unit work opinion take also repositori interfac unit work god class anyth good explan wrong right
check exist user id creat user user class creat user applic layer check exist user system id question check logic applic layer factori want creat domain layer call factori applic layer
adapt pattern proxi pattern common use adapt pattern support function actual support under class exampl use api interact samsung smart tv might want add function avail api necessit use wrapper object interact api rather interact api indirect use samsung api suggest proxi pattern territori wrong
pattern describ class symbolis instanc instanc anoth class current work project generat video templat templat collect json file asset seem natur templat class contain info specif templat structur e g part personalis asset requir etc issu hung model job job take particular templat allow assign valu personalis field render video use valu make sens job would instanc instanc templat solut imagin someth like pseudo typescript pattern describ relationship go wrong
best method account larg block variabl question sound retrograd variabl pass class basic array data call filter first pass prep filter method filter prep filter method thing set filter need method queri return larger subset data filter get addit thing etc edit control data type question tri clean question bit short ask handl larg input array class junk data pass along defici data tri manag ask big array come class would take extra step write new array ensur right data etc use control purpos weed key end etc say take filter array pick key want write new array use short wonder would help use builder peopl would handl noth work fine may risk later road overview say multi dimension array call filter filter pass class contain detail user request filter class goe prepar method add item filter array filter prepar check use build queri return result anoth method filter pass get inventori method look filter build queri return data db question stand filter array pass around grow shrink need anyth pass class gatekeep rectifi word method first prepar filter array copi variabl new array e g build new array someon pass fine enough need usabl pass b need care employ someth ensur input data complet builder pattern creat new array write worri let method ignor data need standard class get set global array class filter hate idea idea
prepar usag data separ ddd applic domain app prepar data anoth app serv prepar data data howev core domain caus confus model exampl ship cargo app one ui manag staff member add updat delet cargo voyag custom anoth ui part applic someon leverag prepar data heavi lift match cargo voyag depend request custom perhap expos api advertis applic ui staff advertis add updat delet ad includ bid restrict geo devic etc anoth app take inform use serv prepar data ton exampl share pattern prepar data serv data share inform ad restrict payout advertis domain use differ context prepar common crud base wherea serv involv one model singl bound context relat core domain entiti use consid entir separ context share kernel may includ entiti ds perhap share under databas look cqrs pattern might help use advertis domain prepar data could use command queri sort crud pattern serv could use dedic queri would obvious differ still cannot shake feel separ entir would creat lot duplic plus high coupl e g new restrict ad ad perhap oper system name would simultan need ad prepar usag stage
event sourc entir system big mistak consid anti pattern event sourc entir system big mistak consid anti pattern situat consid anti pattern refer refer updat question still understand build whole event sourc creat big monolith use process manag still monolith greg young mention cqrs top tier architectur actual top tier architectur scope entir system greg young mention see mistak entir system event seem consist use pure cqrs without mix other concept except
event sourc detail domain model studi ddd experi event sourc storag mechan prior most crud style applic anem data model store relat bs best practic tri keep mind decoupl data model persist concern howev struggl wrap head around event sourc seem domain model object need know event generat know reconstruct state stream event way around think repositori reconstruct domain object event elabor chang detect generat result event seem like would unnecessarili complic error prone well result domain logic live duplic repositori class think wrong consid event part domain model way domain object generat event reconstruct state event make lot sens storag amp retriev event would persist concern implement outsid domain layer
cqrs event sourc top level architectur anti pattern studi ddd along cqrs event sourc recent listen talk greg young gave coupl year ago said cqrs event sourc top level architectur use within confin specif bound context otherwis would anti pattern make lot sens general howev seem conflict perceiv one benefit event sourc system abl differ context specif aggreg root thing differ context reconstruct event stream exampl custom would differ implement differ context order market product recommend custom servic authent howev certain event would relev across multipl context eg custom email chang would relev market custom servic authent order place would relev order market prior listen talk plan differ context share event store ignor event relev still seem like reason way handl also kind see could anti pattern blur line various bound context would correct way go approach altogeth flaw
c best cleanest way singleton work small project decid move di singleton pattern although know way singleton first one everi non model class singleton mean singleton howev sinc model howev second way know one main singleton class use class program exampl class look someth like know main subject wonder best use
encod valu convers method mvc web app display valu differ unit system view use case intern data comput use english system due various precomput graph coeffici data alreadi use english system output need convert data metric system leav data english system use debug purpos follow comput debug inform stay long term use develop question within mvc make valu convers current choic convers control view convers insid control essenti need maintain two set variabl one comput one pass view convers view control leaner due know english system view acquir various convers coeffici convers code thus becom heavier perhap third option convers need essenti becom anoth layer control view wire info specif situat php web applic written zend express control call handler follow player system valu unit system english metric valu convert librari valu convers method data php array set english valu data use convers control updat valu use correct unit system send view view display extra complic differ system display also use case need show debug inform screen english unit show intern comput debug purpos show real inform convert metric unit differ unit system may need display time structur code handl use case
handl dispos depend inject struggl implement dispos object via depend inject depend inject constructor live long contain object wherea want dispos live scope singl method brief summari n inject use depend inject unit integr regress test whatsoev task improv code qualiti abl chang lack test project issu sell idea unit work sinc need transact behavior think skip unit work pattern live transat databas layer ef6 code first repositori foo repositori busi layer foo manag api layer foo control api consum mobil applic web applic possibl window servic creat later would direct depend busi layer explan repositori design dispos db context live repositori creation repositori dispos enabl thing like bulk upload entiti happen singl call reason go idea foo manag class busi logic use repositori use statement work play nice depend inject put applic think problem current manag repositori dbcontext object kept aliv scope singl request fine problem wait happen howev recent project compani end bug caus sever manweek work even find issu happen applic grown massiv proport decis made creat secondari window servic would autom work short ticket applic handl manual subset ticket could synchron servic open ticket b open relat ticket b resolv ticket resolv relat ticket creat window servic handl issu window servic live scope singl request caus ghost data appear step automat creat ticket b ticket updat refer b ticket step day later b resolv ticket servic updat ticket set resolv step occur dbcontext day old updat queri enter old data cach db context effect delet chang made ticket meanwhil awar combin circumst blind attach entiti context dispos resourc proper spaghetti code log document behavior mani thing contribut want prevent happen think first good step limit context singl busi method method return context dispos regardless whether web request part window servic think busi layer requir use web context creat depend defeat purpos separ busi layer api layer tri request inject object pseudocod exampl issu n inject project wrapper made regist depend depend busi project regist foo manag depend busi project depend n inject wrapper would creat circular refer inject repositori factori pseudocod exampl first thing thought howev sort defeat purpos depend inject factori would call new foo repositori creat new instanc use depend inject use depend inject run issu point would creat circular depend also somehow accept factori depend inject friend repositori need factor begin bring third option remov depend inject repositori level remov inject repositori manag inject stay use statement exact want begin counterintuit remov depend inject improv codebas plus would make futur test happen imposs cheati hack repositori act factori word technic violat depend sinc call new foo repositori insid foo repositori howev realli dirti hack get everyth work would also mean inject foo repositori realli use type particular object inject repositori context wast work certain good practic stuck seem like choos depend inject dispos repositori bad choic either way seen issu aris fail dispos repositori context team environ reoccurr issu realist expect middl ground allow keep depend inject dispos priorit dispos fix real life issu depend inject enabl possibl futur test guarante happen say chanc slim none
cqrs event sourc process event expect order insid read model look insight handl read model cqrs event sourc applic order best ensur data consist miss point sure actual sure reason sure project insid read model abl process event creat write model expect order order write model generat event let tri clarifi scenario exampl let suppos app write stack generat event aggreg call news read stack made singl project basic denorm tabl list news properti instanc titl summari author name way client app abl render user interfac list latest news publish editor infrastructur event sourc event store save event document insid mongo db collect publish correspond messag servic bus classic pub sub pattern interest project abl subscrib messag proper work respons familiar rabbit mq kind stuff could implement use fanout exchang azur servic bus instead use topic kind scenario write model read model deploy differ machin free scale independ base request load write stack read stack given scenario entir possibl given point time two instanc app host read model system instanc compet consum event publish write model imagin brief time interv two event say e1 e2 publish servic bus two run instanc say m1 m2 app host read model given scenario entir possibl event e1 process machin m1 event e2 concurr process machin m2 rememb two instanc compet messag publish servic bus point final state project unpredict one instanc could faster typic exampl event type titl set editor decid chang news titl twice brief time interv end process project contain wrong titl news wrong titl visibl final user client applic cours get data user interfac project best way handl kind scenario best possibl consist ensur read stack applic p event e1 e2 generat expect order write model store proper insid event store data inconsist talk read model
api design question builder class coupl question regard best way present builder api let say enum like user set builder exampl builder class two differ way provid set api comment benefit second approach make posit type enum intern user know care valu sure enum mani mani valu must becom cumbersom user read method know one choos sure one final given builder singl valu set posit type make sens check throw except alreadi set exampl would chang someth like end feel like matter much lean toward check throw forc user care want get thought would design scenario thank
dispos without final singleton scenario right expect c class deal unmanag resourc implement dispos also implement kind final logic vendor suppli util class use unmanag resourc sourc code know much implement detail apart fact implement dispos final safe handl without call dispos leak simplifi sampl code code creat facad around simplifi usag also ad singleton use dozen place complex legaci codebas exampl applic web site web servic consol app would use like problem sinc instanc static member never dispos via dispos util class dispos either sinc implement final leak unmanag resourc end applic process right choic vendor say call util dispos applic finish would requir extra code us e g hook applic end web app ad tri final block consol app determinist cleanup ad final facad class would keep code relat util one place least request vendor implement final sinc util class deal direct unmanag resourc add final logic accord articl net best practic recommend microsoft recommend
organ code base function use mvc servic class project project structur look like solut web asp net web applic project solut model store model class map direct databas use entiti framework solut servic keep busi rule retriev data databas solut web use solut servic get map data databas display e g control call custom servic get activ custom work well retriev databas relat entiti dilemma put class noth databas thing exampl need get coupl articl websit display inform could class articl repositori articl articl paragraph etc could put solut servic solut model quick clutter these project think creat new project call solut articl would referenc solut web class know make whole project good idea
antipattern introduc complex builder look various definit builder pattern whilst vari definit tend focus broad definit increment construct howev seem exampl builder ever seen essenti construct valu type method chain found howev occasion use use complet differ sort model builder accomplish addit task addit peopl general expect builder builder hide detail type creat embed complex build logic builder use builder creat multipl similar type put togeth simpl exampl builder variant creat java hope better demonstr idea note realli well demonstr sinc would take lot code illustr concern variant far classic builder pattern call builder may confus wonder recogniz design pattern techniqu accomplish similar task
alarm event driven systemev defin overal monitor event driven architectur compon talk compon via event consum react event within minut day base use case compon perform work updat databas generat event event consum perform work updat databas databas dynamo db persist data elast search well million record db instanc compon updat record x databas generat event consum compon b reach event within minut updat record x databas monitor generat event b listen ie x get updat within minut alarm trigger x get updat within minut use case record need updat within second minut day week
abstract abstract factori alway wonder abstract factori pattern actual call abstract understand abstract somehow fit imag abstract class think hear word abstract look mani articl guess anyth abstract confus design pattern name think still sure get right correct pleas wrong anyth abstract right mislead name real non abstract class simpli creat object
fluent valid integr busi object best practic involv develop price engin system set busi object like car engin wheel etc want valid use framework fluent valid exampl would like integr valid decoupl way thought use decor pattern mayb someon better idea mayb creat generic decor suitabl purpos decoupl suggest first time use fluent valid sure get idea integr proper way mani thank
structur symfoni code case lack model follow scenario develop crm symfoni take advantag microservic gather manag inform basic present inform come microservic reach librari call manag communic servic oper oper call well microservic return dto object wrap microservic librari symfoni servic call control need creat structur inform e inform built data come multipl microservic call microservic within symfoni servic creat entiti better said domain model use dt os return fill case need inform come singl servic return dto sinc see point creat anoth wrap sake clean architectur problem use dt os come infrastrtuctur pass class twig realli like seem separ concern super violat hand creat model layer mirror dt os duplic code copi dto inform return microservic look overcompl say would structur code would present data come servic pass dto come creat model
separ ui view control ui text field os os project set custom textfield e g password entri exampl textfield contain addit view logic exampl show hide password press button sinc logic use anywher outsid text field idea creat password text field control set text field view show hide password behavior goe password text field control control use child view control help view control contain relev logic encapsul could reus password text field control signup login drawback approach
php mvc control use ajax learn use mvc pattern design php softwar alway use ajax send request control often code structur like read various articl mvc pattern seem use control object interact view strang concept view design prefer creat standard html markup need includ php object interact relat data extract databas tri integr j queri ajax almost part project approach wrong need switch ajax use php oop
implement function return without use function keyword along line simul control flow without use control flow primit wonder simul return function given exampl setup like reimplement function without use function return someth seem like use stack somehow like tri learn think assembl sure return function work nest aspect function call function implement iter stack loop like
mvvm distinguish model view model model relashionship reactiv architectur simpl mvvm reactiv architectur question someth miss probabl start context exampl music track player applic model player track relat player track pretti obvious player contain track multipl track play simultan object orient architectur would store refer say list track object insid player instanc reflect relat mvvm reactiv app creat player model hold list track handl separ view model store player model detect chang track exampl progress track mayb view part player list track view model would know exampl player need know much track logic calcul view represent view side show exampl player state name status metadata everi track display current posit track etc thank
command handler separ aggreg root cqrs one hand invari protect make invalid state imposs earli prefer compil time rather run time hand pass domain knowledg domain wrong one hand valu object protect domain invari first place hand use command properti equal pass domain knowledg around solut protect invari avoid domain knowledg leak domain boundari encapsul domain model seem wrap aggreg command valu object mapper use cqrs along es ok wrapper command valu object mapper around aggreg root solut
distribut system prevent duplic servic act multipl time common data sourc current rewrit infrastructur monolith distribut system old system fit workload anymor one part distribut system entiti databas perspect n event associ servic handl access n event event get push servic event push specif n specif time add anoth event n want abl scale horizont need kind futur proof problem run multipl instanc databas two instanc might detect entri one n second add event time came differ approach solv problem lock databas check new event ad add unlock databas might scale well stop interact tabl implement master slave let master updat might scale elect new master old master avail anymor lot work shard say one instanc s1 take care n1 n500 s2 take care n501 n1000 etc need add logic take care shard reshard instanc goe option either hard implement may scale well general solut problem multipl servic look dataset must prevent act thing
clean way manag state angular compon updat use servic manag state angular compon html call servic updat bar valu init trigger compon chang instead also set field compon someth like trigger chang detect wonder best way handl state chang like set servic call detect chang subscrib set class field subscript set twice way realli simpl way
redux decoupl differ compon test separ unit test past saw big move tradit mvc mvvm user interfac one primari motiv mvvm view viemmodel compet indeped work stay aliv without sinc viewmodel care view also easi swap compon view mvc model quit often tight coupl view due say handler call direct button press new hot seem use redux approach approach whole idea model view control anoth thing hold logic thrown window one import featur idea data flow unidirect wonder influenc depend unidirect bind mean view becom tight coupl reduc one would use differ view reduc updat well case step back
inject thread sleeper depend make unit test easer repeat pattern code easi test class execut period simplifi thing let say assum someth like thread sleep static method hard chang matter inject custom clock schedul chang clock chang sleep time think solut may creat thread sleeper class thread sleeper may someth like reasibl good practic wonder never seen someth like may overkil mayb better altern
domain driven design factori cross cut concern recent task creat factori process webhook event author applic solut app per domain post meaning payload long event wire process abl handl two domain project core log secur amp common function let call app1 ideal app1 alway refer core core never refer app1 scalabl purpos mani thing refer core factori potenti call app1 app2 app3 etc therebi question one off typic handl domain driven design architectur
class method creat object also implement method delet exampl suppos class creat button specif style common app class howev feel uncomfort new delet class question also creat delet method button factori instead delet b keyword direct
base class common properti multipl class properti expos normal creat base class expos properti use descend class properti consid plain also complex properti inject constructor mean base class could dumb contain noth els approach correct
abstract code much bad use solid principl unresolv argument friend decid ask stack overflow communiti someth like abstract code much follow better option come differ code languag explain way would assum everyth summari respect languag would import condit alway exist tabl db get partial specif collect factori class helper class alway call togeth matter differ view solid principl appar believ class singl respons sens factori class respons get data db includ function requir achiev believ class singl respons sens factori class respons spin repositori call data helper class call data agre case differ variat data call data alway check creat null collect entir process function access data use singl class
fastest way persist append order event stream look persist stream event want fast latenc throughput look least 100k event per second order timestamp multipl event within millisecond need order consist event sent singl thread persist order sent replic abl fail way option seem append file send anoth server also append file wait respons consid persist use databas consid someth persist request return two node faster best databas use option
mvc use data model list recurs view tri learn web app mvc php articl discuss mvc pattern given bellow control get user request amp updat model model receiv order form control amp updat data view receiv updat data model amp display howev mvc project need creat hierarchi view display correspond data model layer like structur given note model view type differ type exist data amp list child model insid model layer like given howev problem occur view layer need send model data recurs view function generat hierarchi lt div gt observ code notic view call differ model data result recurs becom infinit think need transfer current view next view call function model moreov function move model layer direct creat html view display point know solv problem pleas pleas help fix problem pleas show code sampl thank
simpl factori method includ new oper exampl suppos class creat button specif style common app either return new modifi object public class button factori public static button creat app button string st int font size button b new button b set color b set text b play anim return b button b button factori creat app button test modifi exist button outsid public class button factori public static void modifi app button button b string st int font size b set color b set text b play anim button b new button button factori modifi app button b test one use
would ok mention actor command queri name use cqs pattern appli clean architectur ddd mayb project web applic rest api good thing learn clean architectur use interactor show busi use case code natur fit command pattern use command pattern project normal name command add new request command think chang agent add new request command natur fit user stori command show full context command everi use case need actor say user stori agent want add new deliveri request deliv good agent want list creat request manag creat request administr want list request system custom support easier result agent add new request command agent list creat request queri administr list creat request queri agent administr busi actor role permiss good command queri show user stori applic command queri show actor amp context use case get bigger pictur use case ask question like execut command convert user stori command queri easili develop amp ba pm say languag bad caus confus actor role administr amp want add new request think
extern depend class class includ depend constructor decid depend pass rule follow decid use paramet method instead constructor concret exampl servic perform oper db must class repositori inject via constructor two paramet l object db structur data input post put everyth constructor strong doubt decid ask question complet thank
aggreg root factori creat root intern class current aggreg valu object protect constructor creat static factori method insid aggreg descript name creat nice dsl pretti encapsul model make unit test pain domain model creation fail servic command handler mark fail well introduc factori method hand entiti valu object forc inject factori interfac per entiti valu object servic ok creat factori servic per aggreg root factori method per entiti valu object exampl factori servic creat compani aggreg root intern entiti v os way enforc level encapsul dsl clariti without make unit test depend one anoth
event sourc criteria base search done lot read event sourc spare time recent understand situat bound context busi interest entiti arriv current state classic exampl bank would store current balanc instead collect debit credit show balanc arriv look code recent pleas see ddl person offer mortgag base salari deposit term hous valu etc among other user could queri multipl time like notic user queri multipl time differ criteria time term arriv year deposit arriv therefor believ scenario would benefit event sourc event store understood correct
model passiv view present one mani relationship view present valid maintain applic refactor use mvp pattern use passiv view pattern mean view dumb possibl forward event via interfac present right present got relat big right like extract logic way would get multipl present singl view root would construct view inject sever present class e first present handl radio button second present textbox input valid third present color problem approach pass view around like sever present thought view present alway 1to1 relationship never knew thought right see reason pass view around split logic thought welcom thank b advanc
mvp model view present draw applic tri make simpl draw applic mvp pattern let consid want abl draw circl drag move circl around j panel drag model updat second panel center posit x circl updat well altough seem overkil like implement second panel also mvp task perform drag circl mous posit circl store model view draw model circl specif posit second mpv view show valu x posit circl text form point user click save button take model data store text file startup posit text file written model view refresh question read lot differ solut implement mvp pattern general specif jgoodi jgoodi seem perfect standard gui compon like text field far understood viewer passiv thus viewer visual valu hold model viewer call present drag method peresent call viewer get drag pane add listen method assum either implement valu model set tell view refresh base new valu model jgoodi view updat automat without jgoodi method viewer class like viewer set data model ask read view know noth model second mvp tabl center x center label need notifi someon read messagebuss common use person experi bit uncool debug messagebuss best practic
builder pattern multipl stage like use builder director pattern build complex object work realli well restrict mayb realli restrict see paramet construct object need present call builder come situat need build complex object one part time need support scenario exampl first scenario paramet need build complex object user call api end point build request dto contain paramet need pass request dto director build object exampl second scenario build object broken multipl stage user call api end point pass dto contain paramet build first part one whole object time user call api end point pass anoth dto contain paramet build part two forth best way handl creat multipl director build specif part
method load run user defin code net window applic pattern address applic load run user defin code run time look develop c librari user test execut applic app interact hw test mobil devic develop leverag defin test code current test defin xml rather cumbersom poor design ui request sort librari test code need load run applic propos approach distribut librari method user develop test distribut small framework interfac implement applic locat test code user compil test dl ls project refer dl ls applic load user suppli dl ls generat step locat test method defin framework via reflect dll applic run test code seri method call librari use reflect method call librari map seri call defin within run applic assembl user might write someth look like code user write compil dll made avail applic lib command command1 would illustr point number applic would run user code like well known design pattern better suit solv type problem wonder okay approach wrong easier eleg way solv type problem
mvc compon insid control communic develop level editor java design code mvc learn control direct refer field view model view direct refer model control interact control via design pattern observ model direct refer view control also use observ question control interact two way refer recommend afaik interact question also relev viewer thank
model view mvc concret generic mvc pattern model view concret tailor repres compon generic possibl easili reus specif case data list record frame frame consist multipl data blob exampl imag meta data approach could use generic tabl model repres record data generic tabl view display column repres frame row repres one kind data exampl one row imag one row imag descript enter user etc approach could creat specif record model mayb reus generic tabl model specif record view mayb reus generic tabl view latter seem prefer model view easili udpat specif chang request howev look like would end lot empti class like record model record view wrap generic tabl model tabl view pitfal import advantag disadvantag awar general consen like alway use generic model alway use concret view someth similar depend use mvc framework
kafka altern small iot busi small iot busi locat germani around instal sensor packag sensor measur sensor forward server analyz drool rule engin java instal produc measur everi second measur second max hope extend instal next year current architectur moment sever small go applic accept measur various messag format put redi server temporari queue anoth process take forward drool server goal want improv architectur make system stabl e g everyth load balanc replic run test environ googl cloud will use much cloud servic necessari price okay import measur get lost e g deploy keep order idea thoguth therefor think would make sens persist store measur pull base last process id instead push understand kafka fine instal process littl bit scari experi kafka worri happen someth goe wrong anoth solut could store databas e g host sql big queri pull new measur everi 500ms measur small could queri thousand measur approach think recommend
travers two similar object structur use pattern let say object structur like import data sourc whenev import data check chang object updat doc spec object within depend type chang chang correct ad data remov data split object filter correct remov data one object filter ad data second object written xml file sent author first glanc look like great opportun use visitor pattern updat report visitor filter report visitor also see major differ visitor travers one object structur oper work second object simultan accept method updat report visitor would look like filter report visitor need extra argument bit uncomfort solut argument accept method clear belong pattern would approach still consid visitor pattern differ name differ better pattern solv problem
serverless event sourc architectur use aw offer first post softwar engin stack exchang let know someth wrong look serverless offer amazon tri figur way go new project mind particular interest event sourc cqrs model find purport advantag model attract instanc littl bit troubl understand servic amazon offer pros con fit togeth give pretext first state question afterward use exampl applic illustr simpl static web applic host s3 serv cloudflar two action one command one queri cqrs term command post event onto event stream increment counter queri get current state counter e mani time increment implement use serverless aw technolog think far send command increment counter web applic send ajax request lambda l1 api gateway lambda l1 post event event stream anoth lambda l2 listen event stream store record event command replay later date need yet anoth lambda l3 listen event stream execut command word fetch current state counter increment persist new state atom send queri web applic send ajax request lambda l4 api gateway queri state return result seem like fair straight forward minim project concern far first event stream look like seen mani suggest float around one convolut contriv last various fan strategi mixtur sns sqs kinesi dynamo db stream name fear end mani move part cost ineffect system difficult scale sens complex make difficult develop second achiev atom event stream servic mention typic sort least deliveri properti need handl consum one suggest seen make everi event idempot seem feasibl exampl applic two client could increment counter time one increment could get lost command would say counter exampl could argu correct behavior client saw number want increment let say situat would like increment count toward total want command repres delta two state way achiev third lambda l3 l4 need abl access sort persist layer ideal would like relat databas sql perform advanc queri current applic state necessari increment counter exampl necessari project mind think leav one option want stay serverless serverless aurora fine understand aurora need run vpc lambda need run vpc access aurora concern perform l3 singl congest point exampl everyth els append read understand vp cs incur pretti hefti perform cost throughput number connect bandwidth lambda vp cs cold start upward second tackl problem alarm bell go head introduc problem solv would probabl ping l4 continu never cold start second load time unaccept point realli go serverless bad idea better altern persist state dynamo db well lose queri capabl post alreadi pretti lengthi leav three concern asid answer question direct could help clear misunderstand offer altern solut etc would grate
servic use view model servic inject control via depend inject either use control multipl time convert valu assign particular properti view model could pass instanc servic view model constructor use setter properti c would best way feel like setter way would maintain howev want pollut viw model sure break best practic
factori method stay true accept interfac return struct golang let us say packag contain differ type tv struct base paramet pass would like return specif tv type possibl return specif type without use interfac type tv return type anoth exampl let us say want implement differ kind io writer parallel network writer packag say network writer anoth interfac specif parallel writer come close accept interfac return struct hard time come good solut problem think also troubl whether make packag privat
event store deal domain event represent domain event start new ddd architectur dilemma domain event way retriev store event store databas first event store live domain layer applic layer moment make sens applic layer sinc domain realli care store event consum second let imagin domain event properti abstract class interfac someth cannot serial deseri without know concret implement allow domain event serializ deserializ imagin allow domain event meaning within busi logic care transfer mean domain event map represent event dt os transfer system e g place bus store e g persist event store place call integr event call event dt os leav applic layer place event store could live therefor event store charg store retriev event dt os perfect serializ deserializ correct import good link talk concern realli struggl decid layer thing leav
model two differ concept lot question answer model particular discuss busi logic belong mvc pattern seem two concept need sever hope question specif clarif valu option simpl data carrier think except mayb basic valid eg poj os poc os view model class map databas tabl eg entir layer even group layer compris busi logic data access eg model almost anyth term model seem suffer beyond recoveri peopl chang architectur without realiz term ambigu perhap perfect exampl ambigu microsoft architectur diagram mvc mvc pattern clear locat ui layer concept model clear span everi layer confus new comer experienc softwar engin would like point option correspond way definit word model help question miss someth import accur describ happen term model consid option unintuit better word differ layer like servic repositori etc
servic layer done android app work understand right dao servic ui layer decoupl ui databas problem decoupl like thing chang dao layer databas schema touch servic layer ui stay untouch allright still chang stuff layer adapt dao layer chang matter chang ui layer end still rewrit servic layer make one servic per dao client info screen display info client screen inform current current intervent id get client address need get intervent entiti order know client need client dao order retriev client entiti address need access dao call servic choos servic implement confus better servic per screen would client info screen servic would get client adress use intervent dao client dao thank
data repositori return simpl project control call servic servic call repositori order get need data assum domain model dto know correct wrong repositori return dto queri must done repositori select model amp b order build return contain mix properti complex request multipl join differ tabl real project model repositori return dto know dto alreadi prepar receiv mix properti
state select item view viewmodel colleagu discuss mvvm list select item store view viewmodel think viewmodel offer data allow view interpret like could display list select item could show complet differ therefor think viewmodel look like view like colleagu think chang data context make view code harder follow colleagu believ viewmodel contain state view allow easier manipul view futur e g control select via viewmodel therefor would look like view look like seem correct viewmodel select item properti mention anywher view view implement viewmodel
hierarch state machin term deepest nest state state configur flat state machin one activ state hierarch state machin hsm hsm child state also parent state activ state configur hsm consist multipl state form tree hsm orthogon region tree simplifi list accept term deepest nest state activ state configur help clarifi question exampl simpl hsm without orthogon region activ state configur shown thick outlin state chart perspect sourc state hierarchi perspect sourc
thing refactor first understand wild question total open end want know bark right tree inherit larg code base mani solut servic whilst learn program c asp mvc javascript notic load issu exist code encourag refactor exist code whilst also extend code base almost test limit document exampl one app tab tab individu partial view mass unfactor javascript decis made within view use cach store session tab wonder add test possibl refactor javascript benefit exist app whilst rewrit core app get point transfer rewritten javascript part new better written tab websit use test previous programm rang novic good code pressur compani far awar benefit good code good compani work worth effort anyon similar experi
repositori pattern whith complementari object agreg refactor old api new one sever tool use admin maintein script compat older version reason databas structur must remain tabl user anoth tabl user option relat user option bunch field extra option set user app current reflect user user option model thus use repositori pattern one repo user repositori user option repositori bit concern inject handl two differ repositori servic sinc user option exist relat user previous read seem fit domain driven develop concept known agreg still sure deal whith wonder appli pattern methodolog agrup mayb group uniqu model creat new repositori compos user repositori user option repositori mayb overthink
view model architectur two screen screen list item everi item list show detail updat button item detail screen show detail button navig item detail screen click updat button need take decis base item state navig either item updat screen ask user confirm proceed item detail screen updat button logic issu implement view model clean way updat logic duplic first creat view model screen share updat command see follow option item detail view model creat keep instanc item view model item detail view model deriv item view model use servic implement updat logic item view model item detail view model call note part updat logic navig ii navig servic inject view model pass item servic choos use know one best concern option seem weird deriv item view model option use item servic servic seem appeal differenti servic anoth item servic actual save storag look servic updat method think navig logic appreci advic reason articl book could find mvvm simpl talk complic scenario
cqrs exact busi logic coordin aggreg exact put busi logic everyon said put aggreg yes busi logic need data multipl aggreg busi logic need updat multipl aggreg accept command handler need saga first approach room id capac destroy user room session id room id user id status idl away leav creat user room session command command use join room command handler creat user room session valid whether room full get user valid room destroy valid user alreadi room invalid call method user room session join room fail room id valid call method join room room id save es exampl need reli room creat user room session tri think differ approach end busi logic valid within aggreg
data store sequenti key valu time limit event journal design system key compon act like journal sens store list sequenti event chang state entir system upon request compon system ask compon full list event happen sinc event xxx one think sequenti event id key event json encod object kb valu system need keep histori coupl day worth data altern million record may need scale 10s million past event easi automat remov storag prefer easi scale storag multipl node use master master even master replica replic suggest storag would help
use jwt web servic log login twice good day everybodi capston project partner stump logic question jwt mvc amp web servic alreadi built web app signup signin featur use mvc framework capston need secur access data web servic build yet consid use jwt json web token exampl see requir login one interact web servic compar login info servic data base theorem flow user would need login mvc app alreadi data base set within mvc app log send anoth login regist request web servic connect b order establish jwt us seem like much work way communic mvc app use b login alreadi servic web could servic store user key way thank much nativ english pleas forgiv misspel
far go depend inject mock say follow class public class public void execut someth third parti api method would like test particular execut method want assur path cover work expect howev issu would run abl mock third parti api provid depend easi fix provid third parti api depend like public class privat third parti api api public third parti api api api api public void execut someth api method would get function want everyon would happi howev like fact need provid intern depend constructor set method order make class fulli testabl independ extern depend android api librari util etc becom problem depend direct need accomplish use case class mere tool e g unit convers tool way request user class provid depend intern creat make api harder use user must know class need make exampl specif say thid parti api huge extern unit convers librari would user need provid class librari constructor someth mere side tool use accomplish use case direct relat use case requir depend constructor would make api confus see follow class public class storag privat convers tool api public storag convers tool api api api public void store integ int store string api convert string vs public class storag privat convers tool api public storag api new convers tool public void store integ int store string api convert string would prefer approach provid side depend constructor make testabl mockabl api lose mean provid side depend constructor keep mean class lose abil mock everyth insid class fulli test class
practic encapsul collect aggreg root exact add someth method aggreg root look like construct object call method construct insid method exampl public void add order item int product id string product name decim unit price decim discount string pictur url int unit taken versus public void add order item order item order item see second pattern common wonder prefer one anoth
architectur design pattern login signup multi seller ecommerc platform deriv opencart chang quit bit core code opencart add custom includ featur seller dashboard seller check order generat invoic etc etc repetit code lack basic oo ps principl like abstract opencart discuss quit detail scale look rewrit current start login signup modul custom seller login signup use form use cooki base token valid login also maintain differ token differ devic browser android app custom remain log one place log depend whether custom seller log redirect appropri page think follow class structur login control creat object signup class call login signup valid method depend login valid result return appropri object custom seller think right line design pattern achiev sorri question look broad convolut kind let know happi elabor specif detail case thank advanc
multipl facad class must combin facad class rule multipl facad class must combin facad class exampl hospit system differ class like appoint patient doctor medicin creat differ facad class like opd facad pharmaci facad visit facad independ intern use class expos simpl method ui client facad class use appropri facad perform differ task need creat central facad class facad class must link togeth whole scheme actual facad pattern exampl see internet usual central facad class
c separ onlin store differ solut nuget creat onlin shop cart store built net mvc core front end view websit html css razor backend code design custom includ shop cart search buy order submit order final backend vendor vendor submit inventori product suppli quantiti sent onlin shop place done api call flat file current everyth solut general recommend practic split differ solut refrain separ custom backend vendor backend general practic differ solut nuget packag start learn c look basic guidelin sure start perhap differ flavor method
approach construct view model complex mvvm applic struggl design wpf mvvm applic cours taken say lot paramet constructor code smell never address deal recent project mine use depend inject provid servic follow data adapt pattern class focus type vendor employe detail quot request quot etc applic high level view model much host sever view model detail file attach note vendor select vendor requir constructor unprocess detail view model take almost everi servic constructor use paramet construct child view model make sens main view model would know detail view model main view model respons top level navig approach use compos high level view model without lot constructor paramet bad practic case high level view model respons compos low level view model
function process file busi layer servic layer anyth els read repositori refer repositori method process file refer multipl repositori pars file insert mani tabl model differ databas process file cannot part repositori contain class call word layer belong process file servic process file busi layer
abstract account transact balanc applic updat account balanc tabl without log credit debit line transact sure pretti much sql statement order get structur log transact propos follow way recommend make design optim abstract review last method current structur applic embed sql updat databas balanc better structur applic repositori c linq updat databas balanc abstract structur applic servic layer incl transact line repositori account balanc repositori updat transact account balanc tabl
entiti properti repres valu object read somewher one generous creat valu object entiti properti part class api project entiti aggreg still look weird entiti properti getter like get status mean relev servic repositori make effort creat valu object case line somewher exampl seem like overkil
pattern use instead statement starbuzz head first design pattern decor pattern read head first design pattern came chapter decor pattern decor pattern clear one sharpen pencil friend starbuzz introduc size menu order coffe tall grand venti size translat small medium larg starbuzz saw intrins part coffe class ad two method beverag class set size get size also like condiment charg accord size instanc soy cost respect tall grand venti coffe would alter decor class handl chang requir end chapter ad code snippet solv part code snippet ad everi condiment decor concret class first add size enum beverag class els check differ size think code snippet extens futur starbuzz ask add size lead chang everi singl condiment decor concret class mainten nightmar think refactor part also design pattern still new topic proper pattern appli solv size issu full class hierarchi found
dilemma design domain model class document document status dilemma solv alon document method like cancel complet domain event like document cancel document complet would also fine make status setter public domain event like document status chang case better use method like sorri sound trivial stupid new ddd tri follow best practic
deal eventu consist persist publish event current work ddd applic use event sourc redi main persist store unfortun built rollback someth fail applic monolith separ aggreg root follow servic method creat trip aggregr call store repo persist event associ creat aggreg call snapshot repo persist aggreg snapshot publish event updat aggreg monolith maintain loos coupl use c languag irrelav question servic thing associ creat trip would violat srp method think appear level abstract store event event store succeed sudden infrastructur outag updat snapshot deal inconsist think schedul background task replay event associ trip recreat aggreg come back onlin persist howev let say exceed set max retri count work monolith use mediat r nuget packag fire forget pub sub event dispatch handler error publish one event handler aggreg inconsist state know enterpris level servic buse messag queue automat retri store except howev find anyth integr esb monolith perhap esb would overkil case
use paramet c applic use mvvm pattern take user id return tabl user bookmark tri decid better practic includ paramet model method view model model question best practic okay use class properti non privat method pass method paramet way wrote time seem keep everyth clean method use instanc properti outsid materi basic want abl call user instanc get user bookmark random int call instanc user id drawback someon els use code go call method may know need defin instanc user id sinc pass paramet happen coupl time alreadi although bug easi enough catch worri thought use depend inject forc whoever use class defin user id upon construct still solv everyth properti line may need certain method calcul retriev cannot defin differ method call one exampl might user rank would first need find user score someth inject upon construct rather retriev db construct feedback appreci
singleton like design pattern feasibl framework build post question determin topic stackoverflow hypothet codereview experi differ singleton style design pattern app compon app wide sound effect speech theori often frown upon make type object global static singleton like advantag memori use stabl constant predict baselin make oom error easier forese expens initi within object tts engin larg audio buffer happen sound cut short activ transit memori leak caus constant laggi de initi object exampl googl tts engin avoid singl global instanc question design pattern shown code sampl feasibl accept solid mean opinion mean someon experi hard find see reason code would bug prone main use help articl manifest applic class goss main activ set activ
okay transport dto insid dto let suppos entiti x part x want transport data servic differ modul data reli x entiti creat dto howev x list entiti insid simpl data use repres okay creat dto transport insid x dto thank advanc
mvc mvvm principl current work updat old project inherit stuff keep run various small issu architectur name monolith class tight coupl one exampl current giant result object look someth like fair deep medium larg class object view use field total principl best describ code smell pick solid real reason approach pattern way anti pattern want know scrutin code write path want extract refactor signific mvvm patter class minim inform expos need
exampl give differ domain model data model seen mani articl describ differ domain model data model howev none articl pictur represent show differ someon provid pictur exampl show differ mayb simpl exampl custom order anyth saw one exampl resourc howev exampl differ seem littl box red someon provid exampl show larger differ domain data way reader understand note seen articl exampl list thing question get close yet read concis exampl internet show larg differ domain data model anyth would help
privat global mutabl state ever appropri name use prevent api misus write type checker ml dialect involv generat fresh new uniqu type variabl valu repres unknown strategi strategi seem use tutori identifi type variabl uniqu integ keep counter increment whenev fresh type variabl generat previous kept counter mutabl field record type repres state type checker program need compar type variabl compar integ ds differ type checker state keep counter one could potenti compar type variabl generat two differ type checker state equal api misus ever happen better enforc correct decid move counter type checker state global privat member type variabl modul distinct type variabl never equal code outsid modul cannot access counter id type variabl compar two type variabl global mutabl state consid harm especi function program sure new code good global mutabl state justifi context first design better general may enforc invari valu generat physic separ state use togeth anoth exampl violat c would compar iter differ contain type checker state actual singleton behav like global state name use caml way languag specif idiom affect answer question
uniti inject mani constructor paramet question choos appropri design scenario describ repost suggest put question question seem caus sever controversi even among best known c gurus fact far beyond c fall pure comput scienc question base well known battl servic locat pattern pure depend inject pattern vs subsequ updat remedi situat depend inject becom complic read everyth could find subject even contact sever well known c gurus direct yet still unclear would best choic develop setup requir use uniti di ioc never creat class direct inject interfac constructor use moq mock behavior strict unit test ensur alway get expect behavior hidden surpris use partial mock integr test extern servic mock way almost intern servic real use singl composit root interfac regist want simplifi design decreas mainten time cost busi setup larg collect rule call micro servic rule wrap singl servic better name pleas appli read oper singl object let call quot howev tupl context quot seem appropri quot busi object get process serial databas context support inform necessari quot process save databas support inform may actual come databas third parti servic irrelev assembl line come mind real world exampl assembl worker micro servic receiv input instruct context part quot process someth part accord instruct modifi instruct pass success discard rais except case issu micro servic eventu get bundl small number high level servic approach linear process complex busi object allow test micro servic separ other give input state test produc expect output get interest number step involv high level servic start depend mani micro servic depend natur reflect complex under busi object top micro servic ad remov near constant basi basic busi rule almost fluid water somebodi may state high level servic violat singl respons principl well appli let say rule order creat quot implement quot creat servic creat quot appli perform singl task creat quot sever clash mark recommend effect independ rule appli quot high level servic accord third blog aggreg logic group let say instead inject via constructor logic group rule loos depend artifici bundl togeth harm good throw rule chang frequent becom mainten nightmar real mock call must updat everi time rule chang even mention rule us state depend theori collect rule one collect per state per workflow rule share among state like save quot databas lot state specif rule simplifi exampl quot busi object get save databas micro servic perform small updat quot higher level servic also built lower level micro servic well high level micro servic inherit interfac conveni low level implement quot processor provid common task like call data valid perform final task necessari etc irrelev question explain micro servic also inherit interfac one high level workflow servic actual implement use mani low level micro servic issu two main way achiev di standard approach inject depend constructor regist type uniti uniti magic resolv servic run time problem current micro servic number expect increas subsequ constructor alreadi get servic inject inconveni maintain mock etc sure possibl use idea howev micro servic realli relat bundl togeth artifici process without justif addit also defeat purpos make whole workflow linear independ micro servic take current state preform action quot move none care micro servic altern idea seem creat singl servic repositori servic locat regist uniti chang constructor relev servic someth like benefit approach comparison previous one follow micro servic higher level servic creat unifi form new micro servic easili ad remov without need fix constructor call servic unit test subsequ mainten complex decreas due interfac servic repositori easi creat autom unit test iter properti valid servic instanti mean nasti run time surpris problem approach start look lot like servic locat peopl consid anti pattern peopl start argu depend must made explicit hidden servic repositori yet idea provid answer origin question link center around idea use enumer pass paramet array collect rule appli person feel use paramet array pass servic constructor harm good due need maintain constructor call sync without compil rescu question want decreas complex associ inject mani paramet constructor rule paramet fair independ logic reason bundl decreas number paramet top class es side busi setup requir mani near independ rule must appli level top busi object quot exampl
event sourc reconstitut aggreg wrong event stream work project help learn ddd tri cqrs event sourc code c exampl let say aggreg custom product aggreg repositori get method get lt aggreg gt guid id load event id creat blank aggreg instanc replay event instanc aggreg ignor event know work expect aggreg reconstitut event event store howev tri reconstitut aggreg collect event differ aggreg current throw error aggreg instanc ignor event know left clean state zero event pass see two way solv problem aggreg check make sure valid state prior allow domain opper event type explicit associ specif aggreg type event pass wrong aggreg type result except aggreg ensur valid state ex could work feel like get hand quick result bulki awkward code event type explicit associ specif aggreg type similar setup exampl approach make sens potenti smell see someth els consid edit one idea perhap command handler need valid command queri read model ensur aggreg expect type exist specifi id even end correct approach anyth wrong associ event specif aggreg type
unit work repositori pattern depend inject process refactor improv codebas one major miss featur transact safeti certain error aris repositori db context current setup follow bll foo manag connect mani repositori foo repositori bar repositori want repositori db context ninject use constructor inject want creat follow bll foo manag inject unit work unit work class hold refer repositori note awar possibl repositori regist unit work later unit work repositori use db context must ensur db context dispos even foo manag kept aliv method call encount issu initi want post separ question suspect relev answer need take consider account found individu answer question mention relev found solut tick box ensur db context share repositori current db context inject repositori constructor see option fulli solv could set n inject treat db context singleton howev two unit work also share db context could inject db context unit work constructor unsur pass context under repositori set public properti feel dirti use constructor would mean uow construct repositori instead n inject feel like antipattern repositori point context uow requir uow inject repositori question remain regardless whether choos pass context uow under repositori ensur context get close want stay away use n inject request scope featur compani past shown reus librari differ form past encount issu bll never dispos context initi develop rest web api context dispos end request bll later reus part window servic context never dispos request never finish sinc servic activ time took us mani week work trace bug caus kept see ghost data enter databas want avoid new project propos solut need work web servic window servic alreadi reli factori inject provid n inject extens goal ensur call busi logic get uniqu uow therefor uniqu context mean window servic foo manag may kept aliv extend time under context still refresh everi time foo manag call upon connect uow repositori first attempt simpli inject everi repositori via uow constructor technic possibl apprehens bloat constructor use differ repositori go hell maintain futur inject kernel uow di bll dal separ project di alreadi depend bll dal bll dal depend di project well would creat circular depend come across solut repositori regist unit work unsur actual improv thing case repositori lt gt repositori inherit almost repositori heavili reli addit foo repositori consider extend avail method foo manag use repositori lt foo gt use foo repositori understand correct would also still requir bll instanti repositori need specif tri prevent behavior want bll work uow direct awar bll still awar repositori uow wish use want bll respons instanti repositori one last mention want make complex matter fought long hard opportun refactor codebas manag liabl cancel whole chang take long becom complex current develop understand proper work mean probabl abl implement perfect design main requir transact behavior ensur uow use singl db context repositori ensur everi bll method use uow context correct dispos end method concern need chang current setup minim found solut problem list cannot find one align need requir miss someth tri go wrong way
servic locat lead straightforward code situat assum class like public interfac servic get data possibl websit databas list lt string gt get string public class item view model base view model view relat data depend privat readon servic servic properti bind someth view need dynam date data exampl combo box public list lt string gt string gt servic get string constructor inject public item view model servic servic servic servic let assum need list view model instanc let class item list view model take care model fill data remov need etc class creat think solut deal item list view model refer servic use refer creat instanc item view model item list view model refer abstract factori communic di contain creat instanc mean chang item view model public class item view model base view model view relat data depend privat readon servic servic properti bind someth view need dynam date data exampl combo box public list lt string gt string gt servic locat get lt servic gt get string opinion solut case class depend actual need anyth pass approach could lead super class refer noth pass case need anoth level unnecessari abstract class creat anoth class abstract way need anoth abstract class readabl straightforward code seem like best solut would solv best solut
futur promis object control best practic mvc go articl relat futur callabl today think best practic work mvc base environ wonder one creat futur object control forc servic class return futur object case one particular api need get data two differ servic futur control block second third call anoth third parti servic seem right idea sensibl choic look messi think bit thought creat common servic hide futur object creation third parti api call seem good make everyth non block control feel like servic path follow
build rest call dynam interfac differ ap let say build applic client book bus ticket thing select origin destin type servic express standard system book ticket right bus compani api user need chose servic provid alreadi negoti hotel manag differ bus compani main purpos avoid chang exist code new hotel manag want add remov chang bus compani servic provid instanc provid api book need generat call payload run time thought option store rest call detail templat databas tabl string placehold contract hotel name type servic api call url payload payload would store text placehold exampl contrat tabl info option store rest call detail templat databas tabl instanti rest call use class reflect contract hotel name type servic api call url api class name class api creat instanti instanti reflect use tabl class name valu exampl creat class api instanti object demand reflect use class name store databas bus compani api either option valid way design pattern could use note use java
dto vs read model understand concept read model correct simpl queri return use case specif data set dto seem purpos complex way map aggreg specif use case build search function feel like use simpl read model would enough use use read model simpl data queri dt os complex situat like rich user interfac
event sourc cqrs request event end request es cqrs treat request event consid follow flow guest visit url post data creat new account one way implement martin fowler clear state persist domain event state chang consid creat new user request event intent chang state later replay event creat new user request event count event take part state updat new user ctreat event howev look system extern request someth creat new user request event also event take exampl use case made request request got save server goe instant next time server goe pick left continu creat user
move task specif element loop exampl loop element addit function run compar element question addit function place insid loop handl separ loop one use
factori event bind factori use creat object wonder purpos factori would bind coupl object togeth factori let illustr exampl let say factori produc modal dialog factori instanti view display screen also need button present view provid function let say call servic via deleg depend type modal dialog want abl provid differ button differ behaviour bind tap event happen factori good practic would suggest kind dynam modal creation bind thank
domain model featur crypter project must implement featur encrypt inform written databas decrypt inform reload concept implement domain model cleaner maintain oper repositori
view config inherit hierarchi view need help hierarchi view config popul view templat mayb view config correct term one use mayb view state make sens anyway everi page header footer popul base view config element page popul other like part view config b part view config etc part b part major part page initi inherit everyth base view config thought parent base view config could popul call super need everi page howev logic make sens eg part view config base view config infact thing common amongst various view config view config creat proper inherit hierarchi kind thing rememb read deleg would help know exact sorri thing absolut wrong relat begin softwar design
model request respons domain driven design say class user user id amp name request respons model would make request name respons id name therebi domain model would soa web api ever slight wast make request alway null id let scale someth complex go detail say user properti complex object http request go increas make fun let say properti cannot expos ui ex hash amp salt recommend approach handl common scenario soa architectur use domain driven design edit question deal request respons convert domain dto think takeaway request dto amp respons dto
aggreg given bad event usual done aggreg ask appli imposs event state exampl shop cart aggreg alreadi appli custom ack rec custom acknowledg receiv ship item event ask appli ad item event question confus one hand make sens appli event ad item would creat imposs state would swallow event leav state seem like error thrown mean simpl applic event failabl action need handl failur hand event suppos sourc truth valid current state aggreg guess philosoph entir differ busi rule valid whether command success valid data come anoth machin practic essenti alway duplic part valid command would caus creation event precis assum event would never exist first place realli pretend chanc event come pretend cast know event arriv state event meaning appli neither blind jam event aggreg without thought possibl hard track undefin behavior would result corrupt event storag duplic valid sit well
command handl fail feedback cqrs develop context use cqrs approach end command handler emit event seem good idea us howev find altern approach struggl two particular group scenario creat new aggreg creat aggreg may result success fail case success straightforward aggreg keep event aggreg creat build within constructor case fail aggreg emit publih anyth even exist case command handler emti creat aggreg fail perciev domain leak resourc found second scenario regard found particular resourc exampl remov non exist resourc implement repositori find rais found except excetpinon turn get catch handler emit aggreg found event base event build process manag respons look bit awkward domain applic event emit outsid aggreg although cumbersom event appli non exist aggreg let consid simplest scenario dispatch command add team member team guid user guid role team user role exist command violat aggreg invari aggreg may regist member reject event far good neither user team given role may dont even exist aggreg abl regist event need feedback failur take appropri action either process manag inform command issuer consid membership request aggreg command reciev alway valid aggreg publish event event meaning within agreg introduc addit compelx need intermedi aggreg handl resourc found possibl command come new idea ilustr code sampl old handler version new idea obvious drawback first servic layer affect aggreg design also reinvent creat object languag concept enforc check within method aggregt creat state mayb good point differenti object creation aggreg creation approach assum except rais constructor constructor alway would get valid gurante command guid noth els alway aggreg guid solv also exist referenc aggreg use doubl dispatch possibl rais found except sourc agreg maks aggreg api ugli compar
unit work multipl databas context creat applic net core amp ef core unit work generic repositori pattern use one databas context due busi logic creat second databas entiti sake simplic use one entiti product entiti use repositori method get id busi logic must abl retriev product two context stuff updat context clean uo w design repositori implement like implement uow one db context use default framework net core di startup cs file follow solv problem creat second unit work hardcod context use entiti repositori implement two db context busi object follow startup cs modifi question best practic design databas
secur perform consider creat chat system flask backend build websit flask framework one function site user send messag creat prototyp use flask wtf form basic implement follow user land messag page choos recipi javascript detect recipi user chosen user send messag via form form handl endpoint messag store backend databas limit consider think system live e user refresh page see new messag user see user type massiv deal breaker use case figur recipi js could secur violat massiv influx messag bring whole backend sinc messag system decoupl notifi user new messag mark messag read done via js could secur implic see most worri use js handl familiar way malici manipul e g user attempt access messag intend send messag user allow etc concern system decoupl build prototyp actual began consid pay servic like twilio handl part websit would like see build problem might face address concern
decoupl design use static interfac first want mention quit sure term describ issu hand hope illustr code problem share class librari defin interfac applic referenc librari provid implement interfac insid share librari want call actual implement method tri solv problem imagin simpl scenario platform specif applic window android share code except platform specif function need implement separ system runtim need transpar call implement know alreadi provid implement three consol applic creat share window android share project defin interfac share android implement share window implement share order share project abl call platform specif speak function decid declar assign new implement insid window android project like window anrdoid way share project call program share definit speak depend run platform get differ implement speak question correct way solv problem servic locat pattern anyth read problem name pattern best deal
ui sync case bulk oper api cqrs system convent follow render detail view aggreg e get id use write model view contain multipl aggreg like dashboard use read model henc sale crm model lead list dashboard ui use read model lead detail page use write model perform oper detail view lead sinc render page use write model chang reflect immedi ui eg chang countri lead chang reflect ui immedi need provid api dashboard chang visibl immedi read model eventu consist similar perform bulk oper like updat countri lead list page eventu consist delay updat 1s worst case consum subscrib read model poll base poll interv 1s way make real time check cr ms provid seem immedi consist even perform bulk oper delay 1s list page give good custom experi
correct granular event context design rule base decis system introduct need design system given set event happen sourc applic react condit met action trigger user abl express workflow ui configur graphic event chang state workflow action trigger happen question main input event system type seem disagr team granular use codifi inform come oop background part team come fp background languag lisp famili although look forward hear option cours two basic approach discuss fine grain event reflect busi fact basic event definit given event sourc follow materi read seen greg young main event immut fact written past tens captur someth import domain applic name payload inform infer previous state ad applic event sourc place event record along current model persist db cours need design characterist event name payload etc advoc chang current solut typic e r model event sourc say event would ad store would follow design guidelin event sourc typic exampl coars grain event generic oper other propos wider event captur generic oper creation modif delet would basic captur new inform diff go save current entiti assum cart order model app tabl associ db databas row save also extra row event store like actual point discuss appear context although realli sure sometim feel differ interpret rich hickey sentenc much better time use class data thing use hash instead system could simpler could write generic data process util know class class understand point reus feel write generic data process play role colleagu view ad extra piec inform event name payload data previous chang shape key discuss point part critic get idea fine grain event use store everyth want lose inform recod everyth need think custom event fact ad new event code insert requir design decid payload go look like seen danger reinterpret data follow argument record differ old new state databas row better see differ inform send databas today also interpret user design someon time ago field send persist storag sometim leav implicit thing import domain db schema perfect magic canon data domain someth design feel like obvious point databas intern detail current implement usual someth want keep hidden system grow isol applic import want keep review system whenev chang intern represent data sourc system cours want broken event act boundari sourc system system treat payload contract isol import point understand would less import function context neither record inform ad row let code infer happen way power fact design new event seen constraint true requir design code etc see power fact alway reinterpret origin data get mean oppos interpret opinion interpret avoid duplic differ part infrastructur go listen process event exampl perfect goe let assum payment system attempt pay partial amount requir credit check coars grain fine grain coars grain exampl differ part applic want oper fact recurr payment accept must understand current amount less total know talk recur payment look field accept indic accept although way fix time factor request happen accept also lost need know payload execut logic know happen get replic code potenti system everi place want consum event process accept recurr payment small thing system get bigger duplic get everywher make sens consum reli inform need interfac segreg principl make sens constant reinterpret data conclus least goal tri achiev event use input rule base system act boundari sourc system new one other come expos intern detail sourc system consum reli specif event avoid logic process event duplic differ place use fact need input new system creat event make explicit busi fact left implicit databas model solut fine grain event win think miss someth lot thing colleagu seem intuit want get right learn much possibl background static type languag oop make blind better approach overcompl solut mayb specif event limit workflow system want creat thank much
altern reflect direct come current work flow understand problem clear pictur attach laboratori autom system analyz machin perform medic test send data host autom system everi analyz assign uniqu id machin id save databas relev control complet path control simpl java class keep connect analyz host control java class instanti run time user turn softwar user provid machin id base machin id relev control instanti control instanti use reflect problem look solut avoid use reflect ad complex multipl analyz type mean control everi analyz type word analyz program use reflect creat instanc hope made point clear approach best altern reflect pleas note know design pattern stuff probabl none solv problem still reli reflect thank let know inform requir
handl transact oper event driven architectur tri flesh e commerc system use microservic net core kubernet event sourc kafka cqrs particular use case think follow inventori microservic design use cqrs updat fed kafka event inventori microservic consum updat materi view read execut direct materi view issu tri work handl order current design order creat order microservic emit event inventori microservic would consum deduct inventori part order howev race condit possibl anoth buyer buy product inventori previous order deduct one handl type transact oper span microservic read one verifi stock stream instead materi view stream actual sourc truth littl fuzzi would practic stream might huge go even materi view trust
correct method handl edit updat scenario repositori pattern repositori pattern employ net core project implement edit updat scenario doubt domain repositori method thought two altern method repo check id exist use method reject edit request api level let repo handl edit case entir think rais except mayb record found except except rais api deal error emit bad request standard procedur case
factori pattern good situat im develop compani softwar client request app deploy upgrad request status valid start close everi type request deploy upgrad everi status applic logic execut use factori design pattern handl pictur good bad way add new applic databas need edit code add new applic interfac bad practic
use di without di framework reason complex project edit ask question opinion tri understand someon els person prefer io c via di specif case simpl injector everybodi share opinion tri get insight maintain code would without di end edit wonder week seem find decent answer develop write maintain code adher solid principl without use di framework exampl code make somewhat less abstract class imag processor imag processor public imag processor class imag upload imag upload public imag upload imag processor processor class imag servic public imag servic imag upload upload class imag control public imag control var imag servic new imag servic new imag upload new imag processor class use di get depend inject via constructor except endpoint case imag control creat everyth suppos imag processor requir new depend exampl config determin imag dimens class imag processor public imag processor config config class imag control public imag control var imag servic new imag servic new imag upload new imag processor new config main problem see complex depend bubbl everi endpoint everi control use imag processor everi consum e g batch process coupl inner depend would skyrocket everyon know miss someth write maintain code without di framework still tri use di
put togeth ddd cqrs web api need expert guidanc tri learn concept well implement possibl might engin ok want learn gain experi keep simpl like appli concept ddd cqrs project troubl figur put togeth need design implement item manag bound context part larger system first go mvc web applic user use manag item inventori basic use case creat item edit check check next want extern web api site use queri data respond command also avail bound context put two thing togeth need guidanc especi command side way imagin send command object respect url api e api v1 item creat api v1 item id edit api v1 item id checkin api v1 item id checkout get stuck receiv command api step follow appli command domain entiti valid busi rule ultim persist chang imagin api action would handl command creat edit checkout none exampl domain invari violat would result except thrown domain model ultim come back client form error right path way proper form practic thank much time
pass around larg valu object vs convert smaller valu object let say project need follow multipl call read databas call differ queri return back valu object getter setter let say end receiv valu object perform logic data valu object tri brainstorm best practic paramet method second bullet point given valu object might field method need let say want accomplish second bullet point mani class portion work let say one class happen need field one valu object field anoth valu object valu object field think way class take two valu object need paramet class call getter someth field take approach rest class take valu object need code new valu object store valu need somewher applic map convers two valu object new valu object class call getter someth field take approach rest class code huge valu object store data need entir second bullet point basic take valu object convert data need huge valu object class take huge valu object class call getter someth field class portion logic take huge valu object best approach seem like easiest approach howev feel weird class ask inform need someon look class might want know ask field go use seem far complic mani differ map individu class end ask need
implement cqrs insid microservic consid cqrs refactor process learn exercis spare time use case similar price comparison websit user enter detail mortgag present mortgag option servic provid exampl user enter minimum deposit term hous valu present option e g mortgag hsbc mortgag nat west etc user could make one request adjust criteria time exampl believ two option regard option use case even suitabl event sourc classic exampl event sourc bank account would abl see balanc date x date replay event howev case busi would want know valu deposit date x user search new independ last regard option believ messag queue servic buse suitabl communic requir anoth microservic case publish subscrib event would microservic analysi tell neither option suitabl reason state two paragraph correct analysi
strategi domain object respons assum world car rental applic let say type car categori price valu high low chang time separ entiti represent db everi car type price calcul strategi e g rent sport car cost high x time rent high constant factor current approach one calcul strategi polici per car type encapsul know requir calcul price follow respons determin constant factor use fetch appropri price repo final calcul total price appli right calcul formula exampl sport car price calcul polici use hardcod high constant factor fetch find price low car know noth price constant factor good approach car awar price pass high low argument polici avoid polici depend repositori
handl complex dynam queri laravel develop project use laravel workflow rout direct control control call eloqu model eloqu model perform queri tipic crud find control return either view json string late realis queri get complex complex enough find write part queri hand exampl queri control mean control two thing generat dynam queri redirect request respons furthermor queri might put function reus also control two place databas queri control model though eloqu generat look like queri abstract enough thought two solut put queri insid eloqu present problem chose use normal queri builder instead eloqu queri builder creat anoth object handl queri generat exampl employe repositori contain queri concern employe fix problem first solut use queri builder freeli seem like creat much abstract much work trivial task e g eloqu save method creat save method repositori control call solut seem ideal right yes better way
access multipl entiti repositori clean architectur api call return list payment payment contain user need call save result databas fetch payment user return present ui payment row also contain info user payment user entiti high coupl case idea creat payment repositori get payment use case repositori case access payment user tabl queri insert howev correct wrong clean architectur principl state everi repositori respons one entiti case realli make sens separ call repo decid payment repositori user repositori access use case would call pass data map back forth look terribl opinion solut accept break clean architectur principl suggest implement
consum rest dao servic layer feel like dumb question goe consum rest get data transform pojo sit dao servic layer research believ servic layer find definit answer explan thank
emit event idempot servic consum event type emit event type b make sure event b emit everi event servic also subscrib event type b see event b correl id refer event written yet seem like lot extra respons servic
repositori pattern vs dal object creation far learn repositori contain crud inherit repositori interfac like product implement product concret class product repositori method like get product top5product could also n tier architectur like creat dal class librari defin class product method like get product top5product dal product repo product repositori class initi db context entiti framework queri relev data call similar repo product repositori dal product method bll view similar question benefit repo much eas use n tier architectur control bll class librari dal class librari
n layer architectur mvp present layer present layer interact busi layer pretti new softwar architectur tri understand basic concept n layer architectur mvp specif passiv view current understand n layer architectur point n layer architectur n tier architectur physic separ layer separ present busi logic data manag present layer respons visual aspect softwar common implement use mvc deriv design pattern mvp case busi layer repres real world context via domain model class repres aspect context data layer respons handl relationship databas contain data access class repositori current understand mvp passiv view mvp design pattern present layer view respons show visual inform user model specif domain relat class hold data show view present respons handl present logic view x view chang label color pass view data model let say form show basic employe inform inform want show id name month salari comput year salari view look someth like model look someth like present look someth like busi layer would employe class question assum code fine hard believ would link form busi logic put inform id cannot negat exampl wire send button eventu map employe model employe regist databas interact layer look like
perplex depend inject principl runtim depend object creat antipattern plagu game creat use asp net core mani case requir use depend inject new counter intuit manag limit use depend inject strict requir framework write mechan game old way lot explicit object creation var blah new class arg1 arg2 etc without creat interfac one class would implement read bit depend inject framework document recom use everywher perplex find call constructor explicit creat object instead request object would like class ever creat constructor class let framework provid skim code mani case see could accomplish simpli move new constructor seem work one exampl seem runtim depend object creat specif let provid exampl exampl p mani move charact use etc client web browser typic send server command name move player would like execut omit mani necessari valid simplic code relev method server right server look class whose name equival string sent client well depend inject violat instead way come mind class whose contructor accept current count move method gargantuan switch select proper move somehow feel right way go especi sinc ad new move would get rather tedious fix code violat rule suppos avoid new keyword
connect control control connect exampl suppos shop app user info page show user info purchas record page show purchas record reach user info problem need get data internet show data use purchas record control question start connect user info control start connect purchas record control one use
best way implement model properti author asp mvc mvc applic granular configur author current use author attribut control control function next project work requir us support state control state access read access full access access requir control render read access requir render label full access render control textbox dropdown etc first work approach add dictionari model contain key identitfi properti valu access user said properti first name enum access full access item would pass html extens html textbox gt first name model access dictionari first name extens would render accord access level access would render hidden read access would render label hidden full access would render textbox second approach would decor model properti attribut would specifi key textboxfor extens would check attribut verifi access http context log user second approach would work creat save button tie model search onlin exampl complex configur view model come across anyth yet mention first approach current work feel eleg develop requir popul dictionari everi model view lot hidden could lead malici updat advic direct would much appreci
n tier layer architectur mvc n tier layer architectur realli help mvc project use n tier architectur mvc avail layer entiti layer data layer busi layer present layer servic layer layer like common helper etc layer provid major function entiti layer object map databas schema data layer ado net provid connect version databas busi layer top layer interact data entiti layer appli busi rule present layer mvc work mvc way view model creat group entiti entiti layer control interact busi layer incom request servic layer web api project make project avail servic use entiti object request respons object interact busi layer layer realli need mvc address separ concern exact make differ mvc
mvp view expos control valu let say text box view passiv view approach expos text box object present expos text properti object furthermor case present need text properti also properti seem like approach pros con expos specif text box properti give present control precis properti want control hand lot code lot text box properti want expos expos control save lot code give present power chang properti intend chang common way approach issu
manag web servic differ version vendor log master manag system system manag multipl subscript saa system b system b host separ isol server system system b communic rest api vendor hold decis updat system b lead multipl version system b side situat problem design system manag version system b sinc communic api think add adapt layer translat differ version model system b howev model share system system b exampl system abil push new record model z system b model z system b version extra attribut releas system b version system get latest model z system need push system b translat match model z system b question correct practic manag differ version server good practic manag model z manag singl sourc differ version sourc differ system achiev separ concern
correct usag enumer interfac c deal collect work asp net mvc web api often find creat view return data structur includ list lt object mean list data object want return part view know best practic properti list enumer interfac often creat list time creat view model okay initi list lt best constructor view best call method code review
save high frequenc event connect limit constrain databas got situat deal massiv influx event come server event per second averag peak could problem system host heroku use relat expens heroku postgr db allow maximum db connect use connect pool connect server db event come faster db connect pool handl problem event come faster connect pool handl time one connect finish network roundtrip server db get releas back pool n addit event come eventu event stack wait get save avail connect pool time whole system render non oper solv emerg emit offend high frequenc event slower pace client still want know handl scenario event need handl high frequenc event constraint client might want read event concurr client continu request read event particular key even save db yet client queri get api v1 event client id get event sent client even event done save db yet classroom exampl deal possibl solut enqueu event server could enqueu event server queue maximum concurr connect pool run bad idea eat avail server memori stack enqueu event consum massiv amount ram server restart everi hour hard limit impos heroku server restart event enqueu caus us lose enqueu event introduc state server thus hurt scalabl multi server setup client want read enqueu save event know server enqueu event live use separ messag queue assum could use messag queue like rabbit mq pump messag end anoth server deal save event db sure messag queue allow queri enqueu event save yet anoth client want read messag anoth client get save messag db pend messag queue concaten togeth send back read request client use multipl databas save portion messag central db coordin server manag anoth solut though use multipl databas central db coordin load balanc upon receiv event coordin would choos one databas write messag allow us use multipl heroku databas thus up connect limit x number databas upon read queri coordin could issu select queri databas merg result send back client request read bad idea idea sound like ahem engin would nightmar manag well backup etc complic build maintain unless absolut necessari sound like kiss violat sacrific consist transact across multipl db go go idea
json relat db column custom data present web page creat generic telemetri system record data client app usag technolog use asp net mvc ef code first host azur requir abl store program custom data along generic usag statist one program custom telemetri data might process time number file process wherea anoth count letter b file name button click complet random control idea send serial json store tabl db tabl would contain pk fk generic usag data detail custom usag detail json string generic data contain timestamp etc develop use telemetri system want view custom data form statist exampl want see total number file process total process time last week wonder make present generic way tabl graph suppos develop would specifi poco repres custom data model perhap base poco properti could figur name column data display seem pretti complic especi custom data model contain nest complex type perhap establish way guy idea implement
layer dt os store cqrs domain domain model infrastructur layer command queri form cqrs command return domain model queri return dt os api dt os store applic layer never domain queri return dt os must dt os store domain good idea
separ domain object data model look lot articl blog topic separ domain object data model almost everi answer said separ class domain data persist understand good found even pseudo exampl solv problem follow thought mayb everyon know implement way one solut use automapp achiev map domain db model domain dto would like compar approach mention find good exampl mayb word good practic exist real work applic easier use domain class data model use form give lot benefit like cach chang track current work applic data store old databas scheme suck lot use db model domain model case caus domain suck think orm featur amp amp faster develop process separ domain data model amp amp slower develop process
repositori perform api call intern ddd pleas note although question relat ddd also interest architectur oo design perspect question may also simpl case cqrs interfac segreg code exampl swift first languag come head right second unimport domain concept panorama download display user implement wise panorama download googl street view api cach memori store local devic read fine hide whatev repositori need achiev goal behind public api matter save read databas api endpoint mind creat follow interfac belong domain layer first problem call save googl street view api call delet first thought read write model interfac segreg would creat follow concret implement infrastructur layer howev think miss someth panorama domain concern queryabl modifi technic common pattern would name differ improv edit make matter wors intern store panorama file databas load repositori load data via orm file path store databas need read file return entiti databas contain filepath valu requir second step read file memori memori load repositori load imag memori api load repositori read file api call issu repositori suppos return valid entiti case need save imag file store other need load api call think mess data model pleas help
good idea let databas surrog key valu spill aspect code html control model repositori layer accept use id html form subsequ code process control view model repositori layer exampl need show someth like web page html done radio control line valu attribut shown text shown screen encod databas like use id valu html radio control use id intern well control process input lookup motor sinc id surrog key mean anyth better instead avoid use instead perhap use user meaning inform motor descript field look data tabl process relat busi need concern even though use surrog key databas tabl continu use well rest applic best avoid word let databas surrog key spill aspect code avoid
help understand implement mvp architectur android tri deciph understand best way implement model view present architectur follow android exampl app app attempt implement basic weather app use mvp hopeless lost best way implement pattern app consist two activ main activ weather activ main activ edit text user input locat manual button user press get devic current locat button fetch weather data locat weather data fetch view weather activ launch data display user here think implement alreadi see problem end think might either complic thing general get horribl wrong view know debat decid make main activ view know framework handl ui etc view valid user input e g check enter locat etc ask present via interfac fetch weather data view also implement interfac receiv data come back present non activ class implement two interfac one receiv request view one receiv data back model present exampl ask model get raw json data given locat weather api receiv present format data consumpt view hand view via view interfac model model implement interfac handl incom request present exampl respond request pass way view via present get devic current locat also respons communic weather api fetch request data data fetch model pass back present via interfac quick basic diagram illustr locat conundrum problem alreadi identifi implement util use handl locat funtion wrapper around googl play servic fuse locat provid client api mean need activ context locat function handl model would requir refer call activ held potenti result nasti memori leak move locat function view instanc would kind defeat object ui logic view circumst accept altern way handl locat function fit mvp paradigm succinct think bark wrong tree complet merit plan implment improv made effici less complic etc advic construct critic great appreci thank
perform serial communic constructor initi object class unit info repres collect unit inform method get unit inform structur way specif encod etc unit info consist inform must read unit via serial port communic constructor class given serial number cannot queri unit instanc serial communic interfac use queri unit inform brows googl understand usual okay work constructor yet find exampl perform communcat via serial gpib etc constructor also think may violat depend inject principl class depend upon implement interfac initi better pass unit inform class
crud system learn event sourc spare time see lot refer crud type system onlin understand crud type system databas driven system websit applic e system support creat read updat delet domain model need case system bit opinion domain model howev domain logic contain insid applic servic e domain model anem howev recent read refer system use event sourc crud exampl implement cqrs reltion databas write side event log mongo db read side crud system exact meant crud system depend talk
differ mvc ec follow read thoma owen respons mani thank reason build applic game use compon entiti system architectur explan ec compar other architectur design pattern use angular5 uniti lot ask differ ec mvc seem similar also differ hard time wrap head around
wrap wcf client stream dispos need consum data wcf servic pipe stream data content archiv file need addit logic split separ class normal would use coupl nest use statement like want retriev class depend class actual work data stream mean need somehow pass open stream method without close connect solut came simpli make decor like simpli pass client origin stream decor dispos later insid dispos time member inherit stream pass onto stream wrap bad design decis issu see
construct entiti via depend inject framework need help settl disagr co worker work pretti huge angular project process look incorpor domain driven design principl project look pictur discuss depend inject framework would factor stanc depend inject framework use applic servic domain servic repositori factori domain object hand basic newabl though typic new except insid factori constructor depend stanc imposs di framework use fear huge monolith class argu class mani method perfect normal split smaller class srp bundl sort instrumentor class would chore without depend inject claim di framework normal use everi bigger project use much possibl foolish hard convinc work tabl lot class less repres model tabl ignor second project tabl realli part problem domain accept premis might first even data tabl simpl class repres tabl would dozen method ad remov row resiz column get set state like row select highlight column addit even thing convent simpl like ad row often differ side effect part tabl actual requir think agre line tabl class unaccept consequenti move function smaller class one thing even part one thing impass think still need class without depend inject know adam imagin problem want finagl servic class job convent crazi crazi addit agre get bonus point link reput sourc anyon write anyth stackoverflow
imlpement command design pattern like tri learn command design pattern alreadi know work use littl bit confus implement know need set context pass object constructor argument execut function understand need defin command separ class nest class class want execut sinc alreadi need know object creat command set context constructor point mani separ class exampl typic implement usual see tutori simplifi littl bit like answer probabl obvious beginn ask stupid question complet understand someth instead go help lot
valu passiv set receiv timeout persist actor without read store experienc akka assumpt may complet wrong far understand aggreg root may manag entiti either keep state intern restor recoveri phase creat child persist actor repres entiti latter case requir communic actor root need queri entiti check invari prefer former approach ok let discuss passiv whole aggreg benefit lower memori pressur howev immedi consequ refer aggreg id address separ read model make complex queri like get disabl user actual user actor memori listen messag cannot repli simpli imposs enumr child actor case akka action book contain mani exampl queri furthemor even system queri layer read store dont feel like use command layer performa cross aggreg valid word passiv seem bring troubl benefit right miss someth importn
get aggreg id base data aggreg root call size rang aggreg hold rang size cloth piec dimens price rang creat post rest api creat new size rang aggreg follow cqrs es mean creat creat size command publish creat size command command handler generat size rang creat event persist event eventstor publish event size rang creat event handler read model generat call size rang read model want add simpl domain logic api creat new size rang aggreg rang alreadi defin size rang aggreg current use read model rang filter someth like get rang api control get size rang read model exist creat creat size command think wrong domain logic that control could suggest best option way implement
give viewmodel access applic wide model mvvm practic build applic use mvvm wpf c make financ applic applic contain sever view view model view hierarchi defin user control view model specifi xaml one main model contain differ financi inform would present view differ way techniqu use make sure view model access main model come three way use static class view model use use mef share creation polici use singleton model view model get creat view model properti main model let parent view model propag chain solut recommend mvvm
repositori pattern call anoth api updat sor servic repositori class work api call api inevit retriev updat system record like sql sql databas sometim layer api sor hit normal would use repositori class execut function system record direct via entiti framework ado net etc case interact sor direct instead anoth api logic sit servic rather repositori rather real benefit separ code repositori class knowledg repositori class contain busi logic purpos main benefit repositori abil decoupl dal rest code e g swap e g sql sql databas
keep sight busi flow event driven architectur plan set event driven architectur use spring boot app publish read messag kafka broker let suppos e commerc applic usual event order place payment process fail item reserv inventori avail order ship busi context fear could happen problem hard see flow explicit program text often way figur flow monitor live system make hard debug modifi flow danger easi make nice decoupl system event notif without realiz lose sight larger scale flow thus set troubl futur year pattern still use care trap martin fowler articl mean event driven question keep global view busi flow happen decoupl event rich architectur
design issu deleg inherit depend inject question relat usag deleg togeth inherit depend inject mailer servic class requir deleg order job furthermor hierarchi deleg abstract mailer servic deleg togeth number implement amongst other email reset deleg spring class use deleg implement deleg client troubl current design set deleg manual use set mailer servic deleg method client also mix depend inject manual instanti someon suggest better design edit diagram current design
domain event servic achiev domain model consist recent began implement domain event domain layer realli allow decoupl applic domain eventu would like get full scale cqrs w event sourc infrastructur question account class one use case abl renam howev domain constraint say two account name base quick design assum implement domain servic check account name alreadi taken renam account thought mayb could get away domain servic use domain event domain event handler resid applic layer domain layer obvious want busi logic applic layer understand differ domain servic domain event correct seem base read domain event allow decoupl applic layer domain layer come ensur consist multipl aggreg need use domain servic possibl domain event keep everyth isol domain layer account class look like
cross cut concern packag featur structur suggest put cross cut concern packag featur structur app aspect seem miss pro packag featur articl read consid exampl java rest api would put global user object dao use featur authent db connect use da os would handl cross dao transact think mayb start transact end transact method dao reli nest transacion thought anoth option could global dao manag servic layer would request writeabl readabl da os commit result done case put class thought feel like common start point app make also get stuck quick
denormalis crud es bound context rich queri small snapshot product bound context one rich domain defin event invari oper file implement cqrs es crud store correspond file data use custom supplier relationship exclus context product ui would like queri across two far built read model use event stream repopul databas would also like retriev inform crud context domain event contain inform need queri file size addit data incident inform requir rich domain model would one approach denormalis inform moment entiti refer file store use uuid event denormalis queri file store get relev addit inform creat local copi expect also subscrib event issu crud store updat local read model later date question whether approach appropri proven implement creat project multipl context differ infrastructur
add method classic singleton implement seen singleton design pattern repres like alway get instanc method doubt get instanc object need would like modifi need add method singleton class like set field type someth pattern case right way get singl instanc modifi
mvp passiv view depend inject factori pattern test behaviour whilst ignor state enough write applic use model view present passiv view pattern view contain multipl item list model type audio drama filter list class implement interfac audio drama filter might see enum filter mode sever implement filter interfac passiv view multipl event rais soon user request click new filter e user might click favorit button event favorit click rais present view subscrib kind event filter chang method set filter field present correct filter creat new filter via factori given depend present want test logic sinc give factori present via depend inject simpli mock verifi correct creat method call e work great problem test whether correct factori method call never test whether valu actual set privat field audio drama filter make field intern test would hurt encapsul design flaw see would alway case soon use factori instead static depend want abl chang implement dynam write question happen anoth time implement sorter sorter factori thank advanc help idea
better implement copi cut past mvvm work project use c wpf follow mvvm pattern project design touch screen major object program follow program contain channel contain function abl copi cut past implement copi cut past functionn wonder best idea implement view model seem bizarr functionn model howev model contain full busi logic would logic implement doubt best practic implement thank advanc
model either relationship work project user send email either contact directori intern type email address explicit extern contact mix also show read stat mail read mani time object somewhat look follow domain text content sent count number mani time contact read would contact read contact intern extern two differ object could someon help model clean way could superclass intern extern use superclass class x bit reluct intern extern one field common e email address extern contact field anoth way intern extern contact field would clean time one object would present pleas let know clean way model relationship
guarante http messag deliveri fault toler way applic communic extern 3rd parti system b alway chanc b say rais event sent messag b via http best way guarante messag deliv one possibl cours retri logic resend messag time messag deliveri fail mani time crash mayb due mani messag wait sent need way persist messag abl resum messag deliveri recov first idea store event dedic tabl databas mark sent colleagu argu alway reli databas instead store messag local filesystem latter approach look like implement messag queue better real full fledg messag queue current applic colleagu argu even messag queue sure messag deliv queue still need implement queue filesystem realli seem overkil would mean realli sure need implement local store messag queue communic even differ microservic context low volum system messag 100s per day high valu use bill want miss thought
happen media file what app user recal messag what app delet everyon featur make easi delet messag intend send user text messag recal easi video photo messag resourc android whatsapp messag resourc get save devic delet use unlink function avail mani nix platform anyon static analysi care comment
domain persist model isol usual awkward dive concept domain driven design ddd found principl strang especi regard isol domain persist model basic understand servic applic layer provid featur set request domain object repositori need carri function concret implement repositori fetch data storag implement servic tell domain object encapsul busi logic perform certain task modifi state servic tell repositori persist modifi domain object repositori need map domain object back correspond represent storag given assumpt follow seem awkward ad domain model seem load entir domain object includ field refer even need function request load entir might even possibl domain object referenc unless load domain object well object refer turn forth lazi load come mind howev mean start queri domain object respons repositori first place given problem correct way load domain object seem dedic load function use case dedic function would load data requir use case design awkward come play first would maintain consider amount load function implement repositori domain object would end incomplet state carri null field latter technic problem valu load requir function request anyway still awkward potenti hazard ad would domain object verifi uniqu constrain upon construct notion repositori instanc want creat new user uniqu social secur number given earliest conflict would occur upon ask repositori save object uniqu constraint defin databas otherwis could look user given social secur report error case exist creat new one constraint check would live servic domain object belong realis domain object well allow use inject repositori valid ad perceiv map domain object storag backend work intens process comparison domain object modifi underlay data direct cours essenti prerequisit decoupl concret storag implement domain code howev inde come high cost appar option use orm tool map would often requir design domain model accord orm restrict howev even introduc depend domain infrastructur layer use orm annot domain object instanc also read ms introduc consider comput overhead case sql databas hard orm like concept exist keep track properti chang domain model upon save edit also order repositori access domain object state e valu field domain object need reveal intern state break encapsul general would transact logic go certain persist specif storag infrastructur might even support transact like memori mock repositori bulk oper modifi multipl object would load modifi store object individu order go object encapsul valid logic oppos execut singl queri direct onto databas would appreci clarif topic assumpt correct correct way tackl problem
implement general method could use across sever view model current implement method model take screen shot like e g interfac model implement interfac want execut screen shot one multipl view model would need instanti call function like feel wrong instanti instanc object order call function take screenshot suppos could go view model captur screenshot method would lead code duplic across view model featur mayb static util class sure would expens app feel interfac implement base class view model could inherit base class implement base implement view model desir sum question want implement method captur screen shot like mvvm would implement
best approach write chronolog entri certain action asp net core mvc work softwar product entail user open case take action process case chang status creat task etc like provid histori action taken process case form chronolog entri tri avoid control get fat tri use approach leverag action filter decor action need chronolog entri howev tri chronolog entri relat back case case id current case id store anywher action filter could use case id typic paramet mvc action along need process data question even use action filter creat servic class handl write chronolog entri databas make call end action method action complet success action filter right approach best practic make case id avail action filter chronolog action filter factori action titl nameof task chronolog action enum task creat action note make case id avail decor typic local scope action method appproach thought popul session variabl case open set variabl control level set variabl base control level look recommend best approach would implement sort function
custom messag ui dal asp net mvc applic sometim want give descript error messag user condit discov data access layer dal exampl condit search function base form field input user dal fetch result store return list model object result want object return object creat break loop would like give feedback user row result cap met way handl sort condit error inform messag dal would pass list dal work would throw custom except error code busi layer control mayb singleton store error three layer
rabbit mq achiev scalabl one one communic tri use rabbit mq two way one one communic client server client abl communic server vice versa server stay alway connect rabbit mq wherea client start shut demand server receiv messag client server send messag client client present ok messag lost furthermor must client server pair user system first idea implement creat new rabbit mq user vhost client server pair two queue vhost one consum server one consum client howev scalabl exampl 10k user system would 10k rabbit mq user 10k vhost 10k perman queue connect channel consum server larg number queue connect perform problem rabbit mq would best way implement behaviour rabbit mq differ technolog amqp rabbit mq better suit use case
model domain event denorm fill high denorm read model work softwar strong reli event sourc cqrs pattern time tri figur proper model domain event relat need read model let tri describ question ask formal way event sourc applic domain event object repres someth happen domain relev applic definit domain event self contain sens contain relev inform happen domain immedi usabl without ask inform sourc usual event sourc use along cqrs event publish use sort event bus could simpl memori event bus complex full fledg servic bus interest denorm abl subscrib updat sort read model accord exampl seen denorm code simpli read properti contain event oper sort crud read model usual relat document databas sourc truth event sourc truth queri order get inform need updat read model make sens way read model independ rebuild freeli depend other read read model handl event order updat read model b consid anti pattern provid previous statement correct pleas let know doubt proper design taxonomi domain event mean properti know advanc possibl read model system general due chang requir instanc better clarifi point imagin e commerc domain user abl purchas book one import domain event follow imagin point time need support mobil client aris scenario need high denorm read model client singl call rest api abl get data need render detail page purchas ideal would like fast api read data singl queri singl read model without need aggreg data retriev multipl queri case previous design event well suit denorm charg fill new read model inform like full name user book titl instanc miss better shape event new scenario could follow correct way go kind scenario model fat event contain possibl inform even strict need known applic use case advanc support high denorm read model case need put anoth way fine includ properti domain event class serv need singl specif read model mayb opt small focus read model thinner domain event rebuild process faster use sort smart aggreg like graph ql need creat high denorm view current state system
simplifi design remov duplic java layer architectur follow project structur simplifi domain dto view domain model kept dto class use pass data domain view view control hand req res class pass data via http class model dto view express thing problem sale entri purchas entri model class exact two entiti one entri dto along entri req entri res good turn need add field purchas entri ad abstract doubl class everi layer big cost go wrong done correct languag java probabl pass map java particular need concret class everi layer simplifi
store event stream state frequent chang entiti build cqrs base applic kafka stream entiti applic entail event sourc captur state mutat event transform state queri event store forev process state howev one entiti frequent chang messag type end user make chang messag draft ui chang transmit backend patch ui auto save second user inact user edit messag mani patch event generat imagin messag may involv hundr thousand mutat wonder store event easili store mutat state entiti save space altern store patch event store event probabl go use ever replay least think reason want replay know imagin care messag evolv time wonder regret store mutat event store event state
static initi python equival exist python default closest thing python seem creat decor initi creat new decor class thing make sens thought creat standard decor say initializestat let decor call given method name say init static like way alway use decor whenev need static initi would put follow method class would put initializestat decor top class given simpl built solut static initi python know sound like rant rather question curious possibl motiv exclud static initi python
shard applic rout cross region aw current simpl multi tenant monolith sql server backend self host ec2 aw multipl applic servic talk one db behind classic aw elb databas grown point consid split tenant per region due growth differ region latenc concern plus downtim mainten window consider also want keep dns www domain com exampl region due exist link etc consid use cloudfront geo base rout well basic cdn cach front servic edg proxi sort shard sql server main region name australia north america base tenant locat applic servic exist region seper db shard tabl mayb dynamodb global tabl s3 somewher less hundr tenant most immut cach long time main grey area rout goe wrong region db exampl say tenant australia tenant usa tenant went usa holiday tri access www domain com base geo rout rout usa datacent databas usa contain data think base login user determin tenant applic servic log wrong region base look shard tabl repli redirect mayb cooki sort cloudfront mayb lambda edg read extra redirect logic still clear possibl good solut best practic around reckon would solv problem cannot seem find anyth practic exampl bad googl skill like theori shard tabl etc advic would much appreci
choic put separ request chang crud base ui make http api asp net core ident basic want remot version method like chang password async chang phone number async etc easiest way would separ request model method like chang user password request chang user phone number request separ endpoint chang like post user chang password post user chang phone number much easier implement put user id slight complic client side form everyth save button would much easier model like user dto endpoint edit everyth like put user id compar much easier client bind user dto form send back server one method like updat user user dto compar action singl respons look slight better server action explicit howev seem harder client comfort like model send method like updat user user dto also advantag send unnecessari properti instead send mani request properti want chang like send chang user password request send chang user email request ui task base crud base henc harder ui look like kind ui seem natur someth like put less natur implement server want chang ui approach take thank advanc
clean architectur view model book clean architectur uncl bob say present put data receiv someth call view model thing view model model view view model mvvm design pattern simpl data transfer object dto simpl dto relat view view get updat observ relationship guess like view model mvvm chapter book robert martin say present job accept data applic format present view simpli move screen exampl applic want date display field hand present date object present format data appropri string place simpl data structur call view model view find impli view somehow connect view model oppos simpli reciev function argument exampl would case dto anoth reason think look imag present use view model view wherea present use output boundari output data dto neither dto view model mvvm pleas elabor
design scalabl solut queue assum follow scenario web applic receiv input user process input algorithm take minut depend input provid differ result differ result mean user wait result behind ui notifi email calcul done algorithm part process input scalabl applic host premis request came paid user front queue tri design high level architectur new world scalabl softwar contain microservic rough basic design came far front end app respons receiv user input need scalabl time publish request messag server messag server server host softwar like rabbit mq queue manag softwar need develop subscrib messag alloc request unalloc instanc algorithm runner avail also respons order queue depend plan user subscrib paid user request prioritis algorithm runner instanc insid contain exampl docker scale increas number instanc question architectur design make sens overkil way around may simpl biggest doubt need queue manag app let contain subscrib messag direct case prioritis would work
repositori delet remov valu object db without orm let say entiti compos multipl valu object instanc wander might leav footprint behind imagin load wander repositori delet footstep north canadian border sinc footstep valu object without ident id would repositori know one need delet databas suppos delet write back one held domain object given similar consid mileston hold sever issu either open close abl modifi issu state independ whether group mileston howev close issu progress toward mileston defin ratio close total issu contain chang represent mileston like updat reflect new progress domain event come play suppos handl case context ddd
event context event sourc differ command context domain driven design event usual describ someth alreadi happen domain event integr event command hand direct may may execut futur distinct also given anoth answer howev event sourc event describ delta chang event exist even object appli persist event store sens characterist domain integr event command suppos name distinguish kind event real domain event command translat event sourc event
need builder class implement builder pattern seen mani implement builder pattern main java entiti class let say person class builder class person builder builder stack varieti field return new person argument pass explicit need builder class instead put builder method person class exampl simpli say person john new person name john need person builder class benefit see declar person field final thus ensur immut
exact term model defin context domain driven develop read pattern principl practic domain driven design scott millett nick tune far great read first chapter read one term seem use lot appear fair abstract mean term model talk develop model use domain knowledg captur thing like event storm impact map exact model best guess realli aggreg busi model rule process busi stakehold see requir busi analysi model logic process softwar along probabl even conceptu thing unsur could someon give exampl defin model would mean world ddd also author say model assum mean domain model could wrong clarif degre would help thank
unit work contain everi repositori tri get repositori unit work pattern figur work project entiti framework db context contain tabl right approach inject whatev repositori requir servic way servic call method pass repositori servic easi test easi fake inject repositori use unit work pattern unit work contain everi singl repositori project would ok multipl differ unit work contain differ repositori differ part applic
ok repositori pattern contain unusu method name exampl need find user status name john besid usual method repositori pattern e g find creat decid creat method user repositori call find john status zero generic method call find user status name user repositori php control php want know use custom method repositori violat repositori pattern principl edit provid generic method name instead find john status zero
propag data multipl view model c bit new mvvm dilemma model model let keep simpl want show model data multipl differ view ok view model view get creat user control get creat view usercontrol get view model question handl propag model viewmodel desktop dev web dev get stuck idea make sure model viewmodel normal handl control parent class propag inform view model start get complex applic one model need propag multipl model viewmodel might need call servic would need info well get bit confus exact best practic proceed thorough quick exampl view1 view2 view3 view4 exist view1 view2 need model m1 m2 m3 view3 need model m1 m3 m4 view4 need model m2 m3 m4 m5 view correspond view model vm1 creat propag m1 correspond v ms
factori method creator class alway need abstract go book head first design pattern factori method pattern chapter came across follow question answer pp print public date book q factori method creator alway abstract defin default factori method produc concret product alway mean creat product even subclass creator time book defin factori method pattern factori method pattern defin interfac creat object let subclass decid class instanti factori method let class defer instanti subclass pp question subclass creator pattern let subclass decid class instanti edit see downvot explain reason
factori pattern creator softwar abl draw shape draw save draw load draw ad new shape limit effect exist code user case clue possibl evolut chose factori pattern shape creation use creator class clear class respons regist said creator factori usual done kind situat
valid command execut aggreg valid need queri data ddd design applic cqrs principl handl case command need valid execut aggreg valid need queri exist data instanc system custom project ticket aggreg project belong specif custom ticket open specif project creat ticket command issu current custom system popul command payload custom id project id command execut ticket aggreg need valid command project inde belong command custom anoth case command creat new depart system issu depart titl properti depart creat need verifi depart titl system aggreg repositori queri data fetch id store aggreg handl case
cascad drop list exampl need keep applic state page three cascad dropdownlist exampl control state web applic assum part larger applic want make sure understand state manag need system like vuex redux store pattern one singleton run reduc complex know react redux folk said like wear glass know need addit could done quit easili framework general usag cascad dropdownlist exampl albeit incred simpl keep track state refer dropdownlist see think clear ask dropdownlist scenario exampl state frontend mean best way good candid exampl albeit incred simpl anoth way button chang color base choic page state tri understand constitut state realli question vuex redux like
use messeng mediat pattern mvvm design got confus role messeng mvvm see contradictori articl articl msdn communic view model view observ reader notic figur one arrow miss figur way view model communic view mention earlier view model ideal knowledg view attach fact common given view model attach multipl view instanc one view might becom complex split two page guarante flexibl view model must abstract knowledg view multipl way solv issu two solut propos use mvvm light messeng class use view servic general say messag view model view case need also articl warn use messeng wide caus code less readabl agre anoth articl use differ communic messag view model scenario get vm cant refer anoth vm referenc view model easili mock test
softwar pattern one simpli assembl thing creat array certain type data tl dr call section code use assembl graph object fair larg section code duplic area wish extract class call class question section contain code like control view part model servic repositori noth seem fit think code repres look like assembl graph object object later use view graph plot
structur problem relat dependeci inject asynchron oper implement onion architectur webapi servic layer repositori unit work domain class use also di use simpl injector issu implement specif use case webapi abil receiv batch file ui receiv pars databas updat pars data ui wait request user go thing sinc use entiti framework context access databas set lifetim depend http request di contain abl process file store request alreadi dead look eleg solut came none help would appreci
respons app frequent condit check devic size indic code smell antipattern join team work larg matur respons websit use javascript mvc framework one thing frequent see codebas branch code control compon check whether desktop mode mobil mode action way feel like two separ app forc togeth real anti pattern base
relat depend mean element reusabl object orient softwar erich gamma friend intent abstract factori pattern say provid interfac creat famili relat depend object without specifi concret class anyon explain clearer term author mean relat depend new prior percept confus read first go
thin control make control servic wrap servic say homepag control suppos show blog user galleri member info log user normal look like thing arguabl fat alreadi get fat point futur case better wrap insid control servic e g control look like logic first control e user log sinc control busi logic guess make sens good practic overkil note simplic depend inject omit exampl
decoupl busi logic support logic prevent busi logic function bloat support logic share concern e g authent author log profil ingress rate limit mani backend framework allow put support logic middlewar interceptor exampl express spring rail flask laravel gin middlewar factor support logic cost coupl logic http transport app cli command g rpc addit work requir appli support logic medium e n number medium requir n implement middlewar argu support logic independ possibl busi logic best approach intercept invoc busi logic intercept http request intercept call busi logic function implement interceptor regardless mani medium think either non http middlewar decor solv problem commit ask aforement argument uphold worthwhil solv problem solv pleas point right direct recommend better term support logic pleas lmk comment
model recur event process write web app track expens multius everyth fine singl expens struggl find best way repres recur expens e expens amount categori repeat regular cancel think model recur expens instanc generic expens generat properti start date frequenc pattern automat creat one expens begin start date generat given approach correct pleas suggest option unsur trigger creation expens creat someth like cronjob creat new expens soon occur check generat status everi time user login solut concern point cronjob creat job exist expens exist user plus deal differ time zone daylight save time creation login user log long period might lot expens creat go right direct effici approach model recur event solv problem
ddd factori servic new ddd confus start ddd project setup context build user manag part app build account entiti contain id usernam password entiti interfac forc type id like come problem creat account stuff like check usernam uniqu requir hit repositori hash password use domain servic hash password come mind creat entiti put logic seem right read creat object complex goe factori creation object quit complex logic checkabl entiti inject repo entiti tend think check usernam repo hash password hash servic done domain servic instead factori ok factori like check usernam yet show current situat check usernam amp hash password done domain servic scratch factori factori
pass di contain factori alway antipattern general would alway answer yes question point di contain becom servic locat lose benefit di howev wonder accept follow specif scenario applic di contain di contain respons construct instanc compon upon compon construct contain resolv compon constructor argument reflect inject applic depend either cach instanc construct anew construct instanc return caller cach contain next time instanc compon request current exist one return realli contain two role enforc singleton pattern depend manag realli relev question comfort contain oper job well comfort use direct interact applic bootstrap creat instanc core compon depend feel correct way thing see gt di contain anywher els applic except higher level orchestr compon excus preambl want make thing clear one except sentenc applic support plugin natur cannot anticip depend plugin ahead time idea plugin came compon need job initi problem di contain built job call gt di contain gt instanc plugin problem solv tricki turn plugin built special plugin factori take care lot boilerpl oper around get plugin instanc load definit filesystem check valid api version ensur permit enabl get static configur data inject plugin etc factori entrypoint consum want get instanti plugin problem factori instanti plugin need direct access di contain call gt di contain gt plugin mean construct plugin factori instanc requir pass di contain instanc level feel wrong entir approach see advantag disadvantag good obvious go get plugin instanc plugin factori need go two place plugin factori could consid higher level compon entir di might push bit cannot possibl anticip depend plugin way plugin factori job access everi possibl depend turn di contain compon fulfil requir bad di contain pass around longer kept secur applic root compon could said plugin factori much perhap consum call factori load plugin filesystem boilerpl stuff defer di contain get instanc afterward like request factori make someth go store get actual get di contain plugin factori depend potenti troublesom assum plugin factori construct di depend besid contain di contain probabl go inject resolv back come pars factori di contain argument seem extrem fragil like often write alreadi help along way look consider point perhap plugin factori much mayb factori need get piec place higher level compon get plugin instanc di nonetheless interest hear thought feel like time might ok make di contain avail non top level compon clear still concern
valid site architectur legaci site written back use mvc valid mvc part except data access layer site model view control howev instead use entiti framework use web servic use ado execut store procedur exampl say page display user user cshtml view user control cs class user view model cs class get user method user control would call web servic method call web servic get user web servic would call store procedur name dbo get user would contain someth like select user activ true never seen type approach wonder someth made whoever made site architectur style past would also like know good architectur use
mvvm wpf appropri place code question mvvm design put code would like add applic queri activ directori comput display list user select comput display general activ directori wmi inform specif comput current main window view model applic main window comput get comput view model comput view model communic data servic turn use activ directori wmi repositori get inform would like indic whether machin ping consid ok mvvm practic put ping code comput view model put somewher els
depend inject via constructor vs abstract class past day research relationship abstract class depend inject via constructor class appear time depend inject class point provid instanc say instanc instanc b abstract class concret class use instanc assum know concret class eg test releas configur releas code know concret instanc test code simpli implement appropri interfac abstract class forward bottom layer via constructor manag plumb miss someth crucial tri appli di embed firmwar written c must everyth static alloc mean need know concret instanc pass anoth object depend current use callback instead accept interfac constructor basic singl method interfac look abstract class seem use sinc usual need lower level compon write higher level one
pros con keep applic state singl struct applic class mani class share common state like refer logger exampl exampl b requir common state get job done anoth exampl pattern applic c hold instanc c need perform task order perform task c c basic store logger common thing twice actual state c could well construct place everi time need access interfac fan depend inject object requir perform oper pass howev result function constructor take mani paramet frequent wrap paramet list multipl line damn long oper perform requir lot state natur oper could function would less depend realli option idea solv mention problem stumbl apon code snippet c compil rememb detail saw number function take pointer context object paramet could put common state singl struct pass around refer struct neither c need class anymor group function take context reason class function would long paramet list use context struct seem solv problem bring along set problem essenti make god class except member function group togeth multipl file nolong obvious function access could access anyth although function sudden need access someth nolong need updat paramet list bunch function context struct better realli hope topic tri keep generic answer could help one person want ask make major chang codebas rewrit whole lot stuff
industri standard gender model male femal model databas use generic non function requisit servic startup compani like person user servic commerci data like coupon signatur packag etc think gender model modern day differ law across countri subject ident take consider model person entiti male femal option option undefin answer transgend industri standard unawar offend lgbt peopl say truli male femal
singleton applic clarif accord gof design pattern book singleton pattern use must exact one instanc class must access client well known access point sole instanc extens subclass client abl use extend instanc without modifi code could someon clarifi second point
model entiti compani invoic manag softwar make softwar store compani invoic infer statist idea compani issu invoic client compani receiv invoic supplier made class model problem look realis may best model sinc compani supplier client time would forc tax payer instanc client supplier time easi implement persist layer hard manag domain layer suggest improv model edit may relev question use php symfoni framework doctrin persist layer sql thank
name multi instanc singleton pattern return refer valu object task write assembl c lend suffici well certain design pattern scenario pars phase token need fill certain inform previous ignor token skip detail way thought solv sole instanc object concret structur equal anoth exampl given b pointer memori locat instanti ident valu techniqu go benefici impact space algorithm perform code know call instanti primit like inspir alleg design pattern know exist make one
angular inject state context snapshot requir argument sake global applic state interest inject compon candid compon receiv immut snapshot state exist time constructor invok absolut clariti state snapshot inject compon constructor must chang global state chang constraint cannot wish use root level servic global constant compon request state snapshot solut would requir compon must explicit request state snapshot inject servic global constant within constructor attempt retriev later lifecycl state might chang longer relev want avoid declar inject servic local within client compon provid array unnecessarili burdensom client abl simpli inject type inject token receiv state snapshot problem although inject factori method seem surfac obvious solut would copi global state return injector would turn pass compon constructor factori invok level inject hierarchi provid configur understand design howev think good use case function describ would potenti work inject factori implement similar concept angular pure impur pipe factori potenti inject configur could declar impur would result new instanc inject everi depend compon sure way
decor facad face issu use decor facad pattern accomplish need imagin client want play video use interfac client concern prepar interfac method summari state prepar done play method prepar may includ differ thing like connect internet log servic differ prepar step differ system facad pattern could implement video player use facad pattern follow dislik approach prepar connect log seem like addit actual play algorithm lead decor pattern rather understand facad pattern compos equal level step achiev common goal like creat car deleg creat engin creat car bodi face name issu interfac type actual video player implement could also name video player actual video player also guid decor pattern would need two almost ident interfac one one without prepar quit similar name cannot imagin moment decor pattern video player could implement actual play algorithm follow prepar could done decor follow dislik approach actual video player violat lsp conform interfac prepar play method rather lead facad pattern violat lsp alway decor prepar video player inject system anoth client want play video without prepar client know everyth prepar prepar everyth abl let video player inject alway result get prepar video player would lead facad pattern conclus pattern appropri pattern appropri concern valid
mvc soa architectur rational place busi logic model write web applic place busi logic control work well small app dev team applic run reliabl perform well code easi maintain see explan design contrari architectur advic find program forum usual advoc place busi logic model like understand base experi build mvc soa applic would caution place logic control advoc place logic model rational pro con tradeoff compar design admit design influenc use refit type safe rest proxi c one reason want place busi logic model entiti defin servic interfac entiti contract dll share servic web api client mvc websit consol applic want data persist detail leak client via load save approv reject etc method entiti anoth influenc come desir resolv contradict familiar design principl entiti persist agnost unawar save databas content manag system cms mvc place busi logic model busi logic includ sql cms statement principl contradictori busi logic includ sql cms statement impli introduc yet anoth layer data transfer object dto oh god anoth layer also feel inertia last popular paradigm caus object orient oo design object everyth creep mvc soa world henc advic place busi logic model object ok enough introduct mvc soa architectur microsoft stack mvc soa design mvc model view control soa servic orient architectur model transfer data ui valid rule picklist choic etc control view view receiv model render html use razor syntax control receiv model via asp net model bind run busi logic either local tier architectur extern tier architectur local control communic direct data store databas file extern control communic extern servic use refit proxi servic communic direct data store minim busi logic view model view thin henc name razor maxim busi logic control note differ soa oo soa emphas encapsul logic servic control separ data expos via http json refit interfac model entiti use valid data transfer oo emphas encapsul logic object near data busi entiti similar model minim busi logic entiti separ model entiti model transfer data ui control view see model transfer data control data store servic prevent post hacker add addit form field overrid model default valu facilit multi page step step form differ field requir page defin model page union field model set properti entiti entiti transfer data control data store servic entiti contain ui valid rule picklist choic etc entiti may refer model model may refer entiti constructor accept entiti paramet map entiti properti model properti entiti method creat entiti map model properti entiti properti depend flow one direct mvc websit depend entiti local data store tier architectur mvc websit depend orm dapper entiti framework core extern data store tier architectur mvc websit depend refit servic proxi rational prevent post attack flexibl ui present complex form split form across multipl page independ entiti separ concern model specifi valid rule transfer data ui entiti transfer data servic control sequenc task enforc busi logic chang back servic data store affect model view control logic servic control reusabl expos via http endpoint callabl client written languag use refit c proxi way prevent ajax fact plenti ui updat via j queri call servic control secur jwt token
depend inject loop suppos loop python syntax make sens use depend inject class situat yes proper way use di context pleas provid exampl mayb replac class factori creat class use depend inject situat leav class j
cqrs across bound context generat report possibl busi logic draw line much logic go read model exampl b cs inventori sale need generat report regard inventori level specif date perfect read model simpl select inventori item order line tabl base product sku use current state inventori item comput inventori would date use date order place howev seem lot logic read model class also want chang get report base order status e g pend vs ship forc even busi logic read model tl dr draw line calcul logic read model
c problem happen use static class access databas mani place read static method said pleas use static method access databas use depend inject inject servic use servic write logic problem happen inject servic b servic inject servic c servic mani month pass busi logic grow make need inject b servic c servic make problem caus servic alreadi inject two place tri someth like fix solut servic use sure problem happen someon show problem etc perform data conflict happen use
clean architectur cqrs authent work implement first clean architectur cqrs applic stumbl across bit logic leav bit stump work integr author authent applic troubl tri figur architect portion applic handl command valid system multiten current share databas across client need implement sort system enabl perform verif way straightforward tight coupl system implement user client user belong number client user also vari level permiss grant manag role system most irrelev web api design way limit author base fix number role claim larg remain static need much flexibl main sourc headach determin user client interact permiss name want determin user access client attempt updat record one approach would add user id command individu check permiss command queri seem tedious prone issu anoth approach consid defin interfac base class mere ad client user id object requir advers affect expos implement web ap via swagger user id client id portion request command object one final approach would make under command still implement interfac control contain minim logic map api request one command object would tedious would start leak logic control overal need addit structur applic pipe object contain client id keep authent author logic core app howev most stump look way simplifi applic minim overhead ad client depend command queri relev core tool technolog leverag net core mediatr entiti framework core applic implement command similar fashion
net core class librari regist implement team recent big struggl decid whether good practic net core class librari regist implement fact provid servic collect extens method like add servic point good top level applic need know detail under librari go use top level applic usual startup class pollut refer namespac requir regist implement top level applic want provid custom implement interfac defin referenc librari still net core depend inject allow multipl registr applic referenc class librari would need copi past block e g add transient line applic counterargu exampl applic use approach regist implement top level startup method approach use featur creat semant doubt around call featur still class librari name featur implement provid separ add featur xyz method servic collect extens class use add servic extens method regist implement may provid may impact perform di contain make sens case certain class librari provid mani impement use develop still freedom call add servic want ask experienc net core develop approach pros mayb miss strong argument use second approach list would realli love get acquaint ps question move stack overflow mark opinion base opinion touch core pricipl object orient program question find major develop choos somebodi favour one approach thank radek
inject depend tree depend pattern antipattern inject depend tree depend exampl exampl could made even deeper tree exampl depend could contain even depend depend aa depend ab etc someon might use method minim code duplic multipl place set servic need inject code end look like contain depend depend aa method mani case make verbos less dri use method good bad idea pattern antipattern good idea bad one
c class name convent singl item item list c project domain class name user class contain user id firstnam last name b home address phone etc also typic rest web api e api user read creat updat delet user creat method class user control return singl user detail make return type user user dto user vm whatev class repres detail user user detail view edit also anoth method return list user simplifi inform id name phone number view list user find import inform e name phone number user creat new class repres simplifi user detail question name convent class list item xxxxx show colleagu use name convent blow user dto detail singl user user list dto singl user return user list person view class name like someth repres whole list instead singl item list like know class name convent project scenario updat scenario pretti similar amazon websit e search mechan keyboard amazon com search result page show list product import detail one product name product price product imag rate etc click one product page show detail product e product specif detail etc product detail page name class product product detail proper class name product product list page simplifi import product detail updat anoth similar exampl would class name question repres inform page detail question answer comment etc class name convent inform highlight question summari
restor correct state run process may get shut thus miss event requir real case simpli version sort promot last week select user may benefit promot fix begin everyday select user get bonus say credit point system think implement state pattern schedul refresh event delay hour upon receiv event schedul anoth refresh event delay hour finish problem process server run program get shut restart day would like system behav correct redeliv promis bonus miss day real question model someth relat these kind problem time relat event natur problem may describ recogn well thank advanc
cqrs command perform queri custom order product aggreg root order creat take custom list lt sale item gt look someth like use cqrs creat order creat handler look someth like question command handler okay perform queri get data build aggreg root need pass ever store aggreg root refer need want pass id primit everywher want follow solid oo pass actual object violat cqrs
cqrs use queri read servic discuss cqrs implement team agre point concern queri side commad side actual command clase command dispatch schedul command defin unit work scope dispatch command handler handler contain busi logic crud oper use repositori queri side team split two one part team say simpl read servic layer enough servic access direct data sourc repositori call direct caller queri class queri dispatch part team say build queri side symmetr command side queri class queri dispatch fetch data repositori need synchron schedul system queri queri dispatch queri handler must most class return data fetch repositori would add potenti unnecessari extra layer sake symmetri thought
advantag proxi class learn proxi class c realli see advantag use proxi class better conceal inform privat member advantag disadvantag proxi class offer compar normal privat member note use proxi definit found
opposit pattern templat method pattern opposit templat method mean base class defin part algorithm abstract method implement algorithm deriv class abstract method mix part want
combin composit decor visitor pattern current work project need manipul tree like data structur implement composit pattern want abl differ action data structur implement visitor pattern start see code duplic visitor decid implement decor pattern visitor decor implement visitor interfac constructor accept visitor paramet idea decor execut code execut base visitor one pass paramet execut code bit like decor visitor stuff setup like problem call visit composit decor exampl decor stuff call child visitor visit composit sinc visit composit recurs method call concret visitor method recurs call lose decor decor appli first visit node thought differ solut like use inherit instead decor want abl reus decor differ visitor viabl option also thought use kind strategi pattern strategi would visit leaf visit leaf visit composit visit composit method problem implement filter decor abort visit certain node manag hack solut make work keep hook child visitor method substitut child visitor instanc method decor method manual java script solut super hacki wonder guy design idea fix
better scale read websit cqrs cqrs compani work rewrit legaci web applic evalu better architectur get job done busi domain quit simpl entiti relationship simpl busi rule expect low number concurr write huge number read expect read workload much greater expect write workload web applic meant allow number editor creat entiti call blog compos post differ type post textual post photo link youtub video link twitter post expect workflow editor follow live sport event charg edit dedic blog basic stream post event editor creat one post interest fact event main concern post avail mobil web client soon possibl peopl around world abl follow event evalu two possibl architectur cqrs architectur two differ databas one command stack one queri stack simpler architectur one domain model support write read one databas main advantag cqrs approach possibl distribut content client optim way use dedic read model order simpl fast read read model databas way read write side scale independ exploit differ write read workload highlight main advantag singl domain model approach much simpler architectur scenario command editor process synchron command success process editor know sure work save insid databas avail client eventu consist write model read model need handl asynchron updat read model perspect backoffic ui user editor need kind messag system involv mission critic task opinion consid requir best way go use singl domain model architectur scale read use aggress cach strategi idea use redi cach order limit databas access tri updat cach layer time write someth insid databas use stream approach probabl use mongo db first idea exploit chang stream featur think proper size databas wise cach strategi redi could enough order handl read need convers scenario read load much greater write load best way go use cqrs architectur even cost bigger overal complex note better clarifi question mention redi exampl smart distribut memori cach overal idea kind effici cach mechan order minim databas access read awar cach mechan also use adopt cqrs architectur solv differ problem highlight usag cach singl databas architectur think scenario mandatori order cope lock concurr singl databas use write read question intend cqrs architectur approach whole bound context explain design principl origin present bertrand meyer see thought cqrs possibl architectur good choic want independ scale write read side want denorm data readi read singl queri read fast effici time alreadi experienc complex cqrs lead sure domain worth effort goal question get tip feedback base real world project experienc peopl relat problem abl scale effici read side thing
mvp architectur activ fragment must view compon team separ ui logic activ fragment creat new class view let activ fragment manag life cycl good practic decid base articl
make sens implement class factori design rpg charact creation modul self taught engin beginn java tri creat dungeon dragon charact creation modul bigger game solidifi understand core concept learn best practic given scenario implement outlin believ better design choic could make tri follow solid composit inherit think plan follow concept make implement design better implement would contain interfac charact contain getter setter name age height etc interfac charact race encapsul racial trait portabl templat multipl class implement charact interfac race interfac goal creat charact class rpg charact via class factori may lot class defin due possibl combin better way instanti charact object abstract class race one object class factori class would argument one race one class creat charact object switch case statement would take race class determin race class combin return race class object charact bottl neck execut main class would take user input charact race charact class call class factori return charact object might worth creat charact abstract class use extend uniqu class combin class easier understand handl charact object like would prompt user charact name use call setter method charact prompt size specif tini small medium larg extra larg also call setter dependen race size choic limit via condit flow base attribut stat give stat point alloc hard cap call setter input provid may tricki implement consol applic would cool find call charact object method abil test summari concern better way stick everyth main would better creat charact creation class instanti main call user creation method prompt user input creat charact object prompt input set charact info current ui framework use prompt input instead consol interest transform api later store valu databas creat web applic work method thank feedback
intent command pattern element reusabl object orient softwar erich gamma intent command design pattern say encapsul request object therebi let parameter client differ request queue log request support undoabl oper author mean undoabl oper hard make actual want refer would appreci clarif
good idea share repositori across microservic spring boot applic migrat desktop applic web base spring boot micro servic applic client impos mandat use exist sql databas micro servic share common databas sinc sql databas chose spring jpa hibern project setup architectur team generat entiti via hibern tool db common project also ad spring jpa repositori share librari cite reusabl code although share entiti sound harmless vehement oppos idea share repositori violat solid micro servic see amp oper data own develop pressur would direct user repositori servic modifi data own micro servic lead duplic code possibl miss valid could lead concurr amp data issu scale concern wrong right miss possibl negat impact present futur
implement class exposur fine depend invers basic depend abstract instead concret class depend invers main principl alway class implement interfac case team could still make bad use implement class instead desir approach would implement depend invers dictatori everyon use abstract huge chanc someth misus interfac implement class way avoid misus interfac implement class
pseudo factori abstract class requir someth like client awar actual class implement construct class implement common interfac use factori class cater abstract class implement second point henc came someth like simplif class design best approach design requir exist design pattern alreadi cover requir lacuna code make bad design
logic creat updat valu maintain uniqu multi thread environ assum dumb repositori store number sake exampl dumb may creat new record updat specifi record list exist record logic includ want implement busi logic allow store new record safe know store duplic record also want updat exist record know lead duplic let start creation new record naiv approach tell need two step add record read exist record repositori b check exist record alreadi contain record need store c exist record free duplic store record work fine long everyth run singl thread multi thread anoth naiv approach tell introduc lock around step b c safe side let ignor perform consider let consid record updat step similar creation read record b check duplic occur updat c check favor updat record problem multi thread use lock situat one thread creat record anoth thread updat record valu pass check step b perform step c ant end duplic lead us conclus whole design wrong right design
depend inject design situat one composit root articl say composit root prefer uniqu locat applic modul compos togeth applic composit root librari framework di contain referenc composit root modul refer contain question like consol app anoth project librari perform algorithm class algorithm factori take algorithm input paramet creat algorithm runner fact consol want call io c algorithm factori creat algorithm runner input run algorithm input contain run time data librari class need configur exampl round precis indic number decim place round connect string type credenti algorithm input also contain data indic implement particular interfac use exampl interfac sorter two implement merg sorter radix sorter class depend sorter care one use inform part input algorithm runner intern depend non trivial number class complex suggest act separ sub applic realli configur algorithm outsid librari need run time data suppos refer contain librari compon scenario usual solv believ must well known case
mvp adapt softwar framework resid insid android mani differ implement mvp favor use activ fragment view would make present even less would separ activ fragment mvp class relat model view present resid insid activ fragment class first option seem adapt android framework becom mvp third option appli correct creat layer insid android framework andorid mvp view almost alway recommend passiv view present middl man model view either activ fragment seem give respons hand mvp insid activ fragment three layer would need communic activ fragment get access system get context get resourc navig trigger event base life cycl event pros con would adher rule mvp
better approach implement depend inject use mvvm architectur need use dispatch queue within control pass depend tri far work two solut need ask better common use develop first solut second solut question better approach avoid tight coupl code use mvvm archtectur proper use first solut second solut realli like first solut know think
observ pattern circular refer check exampl observ pattern seem circular refer observ pattern use post code initi look seem design almost alway circular refer misunderstand anyth thank
inject packag protect intern class runtim refer robert c martin book clean architectur top page state port adapt approach order servic order interfac inbound depend packag need made public implement class made packag protect depend inject runtim fulli understand intent make compon packag protect rather public question implement made packag protect intern c depend inject composit root access type regist io c contain differ packag protect java intern c mayb misinterpret statement
reconcil mvc strategi pattern work rail applic employ classic mvc fundament structur structur control suppos respons view render read design pattern book learn design pattern inspir start look way use improv code qualiti coupl month ago start write code render collect book realli simplifi book rubi class instanc type properti depend type properti book look drastic differ one anoth whole differ view partial use differ book choic someth like statement control view choos partial render book associ partial book type properti direct like strategi pattern think second way seem much better got rid statement went simpli someth like render book view book render correct base type seem beauti howev start think whether mvc model way code written control decid anyth render particular book confirm fear potenti weird design work brought attent usual look rail view layer respons write html structur could easili follow partial render book logic view form easili read statement find partial render type book go way model layer feel wrong go wrong thing put partial render logic model
use pass god servic bad right team develop new servic layer applic creat bunch servic implement interfac e g custom servic user servic etc pretti good far thing get bit strang class call core servic look like team reason control consum applic easili instanti core servic use servic caus perform problem sinc everyth lazi tri explain bad design violat depend invers principl lazi instanti everi singl depend depend result elimin testabl servic longer mock depend servic inject unit test core servic seem like god object anti pattern even instanti anyth control inject requir depend control e g custom control requir five differ servic inject via constructor argument valid violat best practic miss input would high appreci edit updat titl sinc question get mark duplic servic necessarili god object actual passthrough facad servic apolog mistak
ok duplic program memori avoid inlin reset time critic function need execut multipl time sequenti use relat larg amount memori figur alloc begin free end would speed task sequenc memori reset memori set task slow alloc sinc memori usag critic figur could duplic program state use thread reset one use work well find ineleg ok eleg solut also even memori critic solut without time memori trade
two ident class two differ aggreg root applic modifi xml file two file similar structur similar busi logic need implement realiz ident near ident file domain aggreg root file valu type see chang independ could wors duplic code much small class put common directori aggreg root share yes project engin fun
view model communic someon explain concret desir view model communic direct view model seem virtual ux applic root view view model view somehow initi view view model sub view view model recommend seem communic view model take place via messag bus event aggreg help think overkil exampl say applic let user defin differ profil action base current profil exampl main window depend someth handl profil manag obvious want hard core profil manag view model depend main view model seem simpli creat interfac e g profil manag isomorph send messag bus aggreg isomorph interfac much easier implement maintain even complet isomorph strike yngni situat scenario gain someth extra use event aggreg interfac like applic ever encount scenario expect lifetim would expect common case interfac must chang somehow whether interfac c interfac event use signal view model requir modif anyway miss case think addit view model interest e g profil manag exampl start expect common situat applic cours one see use event aggreg ad complex whole question probabl make much sens think peopl would see standard interfac solut radic easier follow reason
maintain order event multipl consum typic pub sub scenario use kafka develop simpl e commerc solut non scalabl catalog admin portal product categori attribut variant product channel etc updat updat event fire sent kafka multipl consum deploy differ machin scale per load consum consum process event save chang scalabl effici databas order event import exampl get product creat event product p creat lie categori c import event creation categori c process product creat event product p two consum one consum pick product creat event product p consum pick event creation categori c may happen product creat event process first lead data inconsist multipl depend ensur order process altern ensur data consist two solut right mind queue event depend event success process wait depend event get process tri process event interv say second maximum retri requeu issu event stale longer requir exampl initi order creat event depend event x event x delet event requeu order event x delet event creat event depend event x creat event process delet event lead inconsist data issu applic second solut wait retri issu solv maintain version event ignor event target object go modifi event higher version event unsur pitfal challeng solut might obvious right ps stale data work inconsist
decor pattern generat complet html tri figur best way decor html mean replac specif syntax string actual content kind like razor syntax asp net mvc use lt current html page design need replac tag ex lt historict actual content tag html need replac origin html might add new remov tag behaviour html think decor pattern trick would think overkil
http rest chain process protocol convent protocol convent support rest ok mayb use http instead process chain neat featur help let explain mean let assum public rest servic avail use http get multipl static pictur gi fs movi clip avail general would like take data send anoth rest endpoint along addit data recogn visual element content exampl imag contain steve ballmer drink tea descript steve ballmer drink tea normal expect endpoint howev imag process recognit servic avail servic avail somewher internet happi even one work exclus static imag anoth one movi applic let call app follow call servic let call src retriev pictur gif video whatev resourc pictur send pictur recognit servic let call prs retriev pictur descript resourc video send video recognit servic let call vrs retriev descript video combin pictur video content descript pack insid archiv send endpoint expect result let call end mean data flow app src app prs vrs app end app confirm look solut data flow app src prs vrs end app mean say src get whatev video resourc want forward prs vrs depend content forward end src take pictur send prs say process forward along result process end see want app orchestr everyth addit creat extra network traffic along way oh btw sinc want neat archiv need zip servic chain solut look like app src prs vrs zip end app one thing want app inform percentag process error expect asynchron process somewher along path e g vrs good candid everyth work correct condit well someth like exist someth mayb similar unix linux pipe like web pipe someth find edit look protocol convent whatev fit need neither tie exist framework e g spring net mvc web api proprietari part exist technolog java net etc someth work via exist http technolog use mayb concept proper term someth widespread alreadi exampl basic authent work technolog rule dont web socket work need someth context
anem domain model cqrs command bus consid pattern use support cqrs messag bus exampl buslan python messag bus php use command chang domain model publish domain event look great provid separ encapsul domain write oper class make anem domain model domain model thought collect servic object even result domain model entiti data contain busi logic implement command handler contrari command chang model implement class kind god class violat srp
inject behaviour abstract class tri modifi opensourc project json serial one gson want let serial deseri object circular refer allow chang abstract class wide extend want chang behaviour class strategi object everi child class use without need know add strategi object abstract class draft done circular strategi p e let fail throw stack overflow except actual behaviour substitut circular refer null null object done jackson anoth serial librari mark object id add refer id serial json serial deseri object circular refer whatev point mani strategi one must select start serial question tell factori strategi must use would set info strategi must use gson builder inject abstract class type adapt static field class instanc someth stop spider alert ok inject thing class would main builder librari build gson object json json method use
run multipl mvc project one site develop platform mvc site hold main data well generic api use microsoft authent creat account employe mvc add data databas allow user start consum api custom api one custom use differ mvc handl api custom ap well also work employe mvc use activ directori authent abl add ii use port wonder go wrong ultim goal multipl project need make chang one project would affect anoth project think tri ditch port method instead set mv cs postfix addit defin would someth like compani name put initi rout templat main two question split much solut share librari applic duplic code possibl without dynam code area run tri issu sure start figur someon experi suggest ear
sourc control sql server multipl shard minim differ one databas system work call databas essenti shard schema ident copi easi sourc control chang made copi would go copi month ago chang made new databas creat shard call databas b view creat databas refer databas b problem view three instanc databas databas b schema one match instanc databas differ view three instanc point differ schema use tfs2015 sourc control big undertak chang db structur sure sourc control view differ instanc databas way sourc control without three copi tfs
write databas differ field read databas tri learn cqrs spare time say class like think scenario would benefici persist person class write databas sql server person order class read databas mongodb reason need persist person class write side benefit chang track normal write databas differ field read databas e case order persist write side class field persist side realis relat databas differ sql databas benefit limitr specif ask normal inform avail read databas avail write databas realis answer question yes technic point view ask think principl least astonish updat sampl code write side domain model databas lookup tabl look like test code write side read model map mongo db databas notic product code even persist read side therefor need lookup tabl read side never lookup descript product code therefor plan exclud product descript lookup tabl read side work perfect technic point view howev wander frown upon read databas differ write databas
add behaviour without chang exist code data access layer current communic databas would like also add persist xml exampl goal replac dao new object implement dao chang call code littl possibl dao massiv use use depend injector golden goos would switch databas xml persist chang inject interfac concret type bind problem write xml case would need inform would need folder path exampl also folder path determin runtim program argument type interfac contract data access object satisfi take enumer option first idea make depend injector awar filepath paramet inject constructor paramet suppos folder path context local field injector use ninject howev feel bit wrong inject framework reflect hood feel oop way solv anoth idea write bit mayb xml dao write may call provid object inject would give detail lack file path provid know program argument make decis base type seem way simpl opinion idea idea
use view servic mvvm design pattern use mvvm design pattern applic compris xamarin os project view layer net standard project common layer xamarin android project futur view layer xamarin os project deleg class notif center deleg extend un user notif center deleg trigger method present notif receiv notif method inform view model base page view model method invok base page view model inject deleg class coupl approach use inject view model control view model invok method view model present notif method control view model invok event captur handl base page view model implement interfac deleg view servic deleg class event handler trigger event present notif method captur handl event base page view model prefer first approach use interfac invok someth view model feel use view servic reduc abil share code among differ platform feel view servic use approach avail anyon comment two design approach would like get theori involv one better complet differ design much better
static factori method vs constructor one follow way recommend also provid exampl behind reason
differ event driven event sourc studi domain driven design ddd came across term event driven event sourc know publish event produc consum store log question differ event driven event sourc
architect os app multipl view model must know model chang use mvvm app ui tab bar control main tab list public search screen search public search return list public imagin public first item list main tab let say user goe search tab perform search public search result user tap public mark read shade certain color search result list user goe back main tab public also shade indic read plenti mvvm tutori subject seem assum one model one view one view model believ need understand wire singl model two view two view model found sever thread softwar engin like one real guidanc answer somebodi pleas point right direct thank
messag broker client server applic current plan architectur system consist multipl microservic definit want make use messag broker probabl rabbit mq simplifi diagram current approach look like see diagram ad respons queue use servic send respons back rest server reason bad feel expos messag broker frontend plan combin access differ exchang singl rest api instead client communic direct messag broker would map like first question common way work messag broker better address direct client applic second question would handl get request follow pattern use follow map put json user payload respons messag far good talk rabbit mq said keep messag lightweight possibl wonder lightweight mean context talk kilobyt megabyt even altern soon rest server address databas one servic e g via http direct loos advantag messag broker
interfac expos async function leaki abstract read book depend inject principl practic pattern read concept leaki abstract well describ book day refactor c code base use depend inject async call use instead block one consid interfac repres abstract code base need redesign async call use exampl consid follow interfac repres repositori applic user accord book definit leaki abstract abstract design specif implement mind implement detail leak abstract question follow consid interfac design async mind user repositori exampl leaki abstract cours possibl implement someth asynchroni process implement sql implement memori repositori requir asynchroni actual implement memori version interfac probabl difficult interfac expos async method instanc probabl return someth like task complet task task result user method implement think
cach use within messag app actual studi web develop ask lot web app chat whatsapp telegram discord lot lot use cach mean learn cach system like redi memcach ask could use practic exampl redi cach entir page limit time expir store login session mani chat web desktop mobil app use cach know store messag cach common databas enough also messag sort cach seem difficult understand cach
domain driven design model organ user relat new domain driven design decid tri saa app current develop refactor refactor ident part context class librari net came follow domain model organ entiti aggreg root user system part organ user ad organ ar user entiti referenc list user organ user part organ one import constraint user alway part organ point mani busi rule domain entiti reali simpl point multipl design cannot figur design best term encapsul perform know optim prematur design organ implement user child entiti object refer way user ad organ ar give full encapsul design also make explicit user context alway delet organ delet exact need done want add user load whole organ ar keep invari includ user within organ check user exist alreadi within organ see problem approach larg organ hundr user resourc intens anoth approach within design ensur uniqu updat read model uniqu user user ad organ api tri regist user login ensur organ use case user first valid uniqu user readmodel repositori design organ user ar user referenc organ organ id use case implement constraint leav us encapsul whatsoev current develop app biggi prevent develop ad orphan user misus user repositori specif use case sure make trade encapsul complex perform
xamarin form prism navig paramet implement develop xamarin form project use prism librari tool implement mvv pattern two view person view model summari edit button person edit view model detail cancel save delet button propos concept handl result person edit view model navig back person view model make decis base upon navig paramet question concept way handl dialog result ok given tri follow mvv principl make good use prism librari navig funtion exampl code left privat field error handl etc readabilti
design pattern object ask question anoth object look design pattern might work class work main class entiti use domain driven design would like ask question function time card object determin could edit howev busi rule timecard edit realli base idea ask question via interfac could higher level class creat user add method time card like question type logic live direct timecard object think class unto get larg edit suggest king side slide renam interfac time card creater question design pattern remov logic domain model exclus use model answer question
defin queri data mutat singleton use graph ql net core defin queri data mutat singleton use graph ql net core doc depend inject page begin doc librari resolv graph type cach type lifetim schema understand like dt os hold valu class content chang specifi singleton instead let get instanti
builder pattern verifi requir field runtim languag agnost approach sinc see problem compil interpret languag builder pattern let say model requir field option field cours ad field constructor would mess constructor would allow us easili check failur verifi type field field provid use builder pattern make code much cleaner read write far see hard compil ide know requir field provid instanc let say email requir compil form check see email provid fail sinc constructor defin email requir paramet compil far know cannot tell email call order defin email lead runtim except one instanc builder miss requir field unavoid pattern use solv problem beyond make sure everi instanc use builder test coverag abl come solut runtim except problem seem present model new requir field ad builder instanc implement across applic
json wrapper adapt pleas let illustr simpl exampl suppos weather object end got weather forecast web app access weather get forecast method direct render output browser howev creat json rest wrapper access weather get forecast method serv output json string mean make request json rest layer web app instead access weather get forecast method direct good decoupl suppos question json rest wrapper refer adapt softwar design pattern put anoth way use adapt design pattern
unit test method class use constructor di prism class use constructor di event aggreg anoth method class execut logic use event aggreg need creat unit test method differ test project type class librari creat mock object use moq requir ad prism refer test project right way creat object view model without use moq event aggreg
domain event cqrs depend resolut handler current asp net core quit extens research topic domain driven design use togeth clean architectur ddd place domain event handler seen coupl ddd clean architectur repo better understand topic domain servic rais event manag non domain applic behaviour cqrs plus mani resourc even skim vaughn vernon book tri keep thing simpl possibl someth understand aggreg one suppos rais domain event suppos resolv depend event handler need order execut success let explain complet understand welcom correct aggreg one charg rais event would event bus subscrib publish event handler accord far good problem start go resolv handler depend understand aggreg zero extern depend applic layer respons therefor forc use static method rais event insid aggreg rais dispatch respect handler happen handler depend repositori servic processor need instanti creat sort factori creat depend mean abl use io c librari make depend right thought use mediat r handl tier domain dispatch wire depend resolv automat inject depend achiev mediat r would need inject aggreg break principl extern depend one git hub link ametista project event rais applic layer command stack insid aggreg would violat aggreg principl would solv depend issu yet would introduc anoth problem domain event duplic would reimplement event time criteria met event rais put think deep made come follow untest solut high hope go work implement servic locat pattern wrap mediat r static class would inject via static method properti startup cs servic provid know share static properti across entir applic good idea also know servic provid would get dispos inaccess certain part app also know creat consist mediat r instanc abl publish event transact wise bound context event rais domain would work transact within bound context startup cs tri code yet mind edit tri code effect dispos edit x2 wait remov use dispos object made chang
full valu cqs principl system implement cqrs pattern troubl grasp valu proposit command half cqs principl system implement command queri respons segreg cqs principl state method return valu queri never affect state method affect state never return valu principl queri affect state make perfect sens queri system chang state hard reason logic code forget code reli state chang provid queri call easi introduc bug even system noth cqrs strive never chang state method return valu understand valu proposit return valu command pitfal method let say return result contain inform success command call benefit follow principl bring applic
languag featur affect use depend inject look depend inject work use neat system understand bit better go implement small demo app use system primarili write java script come natur look inspir ecosystem unfortun whole lot resourc di java script di appear thing languag look languag java see di spring php see di symfoni laravel drupal type script see di angular x great emphasi di popular framework tool dive immedi greet thing like servic compon plugin annot fun stuff js closest di js angular js x mainstream framework seem use tool librari exist mainstream either someth languag make di practic practic implement someth languag featur need order di type app built e data ish vs ui ish js framework librari actual use di mode familiar
event base architectur multipl produc singl consum discuss work event base architectur use scenario multipl produc singl consum compani mani extern integr view would allow send event queue propos follow integr receiv info 3rd part fire foo discov event consum main system listen foo discov event process ingest databas sever integr kind let say colleagu propos integr fire dedic event like integration1 foo discov process way basic want produc stream idea feel necessari sinc integr work normal payload send standard event consum problem approach refer enrich discuss
structur microservic repositori assign project micro servic separ repositori without refer apart one nuget packag maintain generic code like math function servic refer other endpoint advantag servic high independ realiti point discuss chang api one servic like effect multipl other best practic accord peopl talk disadvantag code use dto object defin multipl time mayb 10ish servic communic helper class wrap endpoint servic eas use duplic multipl time repo api chang hard keep track often see failur test product think follow better way structur project one repo micro servic provid server communic helper class wrap endpoind select server dto type server communic class return api call servic whish use includ hope explain problem well enough better solut address issu end creat unforeseen problem
refactor mvc scalabl architectur month ago began new web project beggin seem like small applic virtual user began project use awesom hackathon starter web app boilerpl sahat initi requir seem fit boilerpl may expect project requir evolv sinc right larg scale saa applic front end code complet decoupl initi project order use react stripe everyth origin project leav back end rest api servic right need implement bunch featur project codebas seem becom full bolognes spaghetti code need refactor asap past month dive architectur design book post video app keep grow without abl make decis refactor back end code right plain mvc mongoos model express server everyth busi logic authent valid data present insid control tri liter thousand differ back end boilerpl multipl langug spec would like keep code node js type script welcom question newbi experi larg scale app refactor rewrit code robust architectur use node js use ms use ddd servic repositori authent jwt middlewar use rbac accept also databas design mongo db becam difficult liter yesterday switch postgr sql data began becom relat anticip expect project grow big panick afford rewrit refactor code least next month develop involv back end side thank advanc sorri aw english
combin visitor iter pattern studi visitor design pattern found phrase use visitor along iter travers complex data structur execut oper element even differ class visitor design pattern search internet good idea found differ opinion said combin two pattern perfect combin use iter move item data structur pass visitor item extern respons perform oper item iter vs visitor other said depend complex oper visitor unneed iter depend complex oper want appli item iter iter visitor wonder situat use combin pattern kind oper consid complex
ddd aggreg chang owner mid process evalu cqrs es high volum subsystem app order take advantag distribut system ensur uptim team first time implement architectur struggl final aggreg design core entiti chang transact subsystem consist various endpoint e g web form physic kiosk devic sms authent user allow log activ context concept session track thing user execut interact point interact user identifi allow log activ challeng session belong user unless valid user authent process interest session user troubleshoot also interest session result success user authent feel right session part transact get move user authent user activ import thing get transact activ own user also referenc session unclear whether activ aggreg root whether user whether keep focus session context use event listen build relationship read model interest interact activ differ context sometim want view perspect endpoint time want view perspect user often troubleshoot infer user base metadata avail session caller id sms exampl let us view user use incorrect syntax messag even authent get cqrs es handl much read model still unclear entiti entiti serv aggreg root command construct one hand make sens session aggreg root command exist log interact user endpoint bind user session authent log activ event listen construct read model project interest session user session endpoint activ user etc hand make sens session aggreg root interest interact user endpoint authent user aggreg root interest log activ sort command place one connect session user hope get outsid perspect perhap other gone similar road
releas collecti assembl cannot null belong type document state must releas object repres part assembl modul builder defin keep refer type builder assembl builder object keep refer modul builder refer object must releas even exist local builder il generat use construct prevent unload prepar method could said work least creat type type builder setter avail type option null back field reflect find uncom code get except option get back field option set prop without setter mean type cannot null retain refer assembl could collect question wrong achiev document wrong collect assembl collect doubt tri comment foreach call null valu get except also thread git
use io c data class good practic usual use io c framework inject depend servic ok mark class data object io c compon clear give exampl abstract data class one assembl expect assembl refer assembl defin class deriv custom io c concret attribut use mark class type want inject later paramet name version implement one name differ namespac want gather type data class holder class use io c want holder class creat instanc class hold type collect inject metadata type type bind io c base type object mark custom io c concret type method creat instanc creat instanc desir type sum use io c gather type inherit certain base class mark certain attribut use class hold type creat concret instanc one type hold definit creat user librari way would use factori user would creat factori data class
prevent measur stop develop forget updat cach valu point result need cach make applic respons experi previous project countless say least bug occur lot cach data never updat correct one mental capac rememb everyth someon end user notic report bug charg time around want avoid mistak happen much possibl also deal inexperienc peopl would like safeguard mistak happen much reason strategi design pattern use mitig risk someon forget updat cach valu hypothet exampl suppos list client first last name suppos suffix tree help look name quick someon add updat client name may forget updat suffix tree first thought unit test cover everyth modular thing beyond scope unit test thought cover integr test level someon might updat integr test chang especi forgot cach valu first place next thought wrap everyth encapsul class expos mutat method setter method might becom verbos exampl howev downsid amount code repetit make specif class mutat under person expos method yet repeat code combin multipl cach valu one class may proceed toward kind monstrous god class sinc issu deal one set cach valu like exampl read thought make data observ class exampl viabl solut go ugli rabbit hole exist better way method pros con one best long endur code base
repositori return graph entiti violat srp work scenario post entiti mani imag entiti also repositori entiti post repositori imag repositori sinc entiti tight relat get post want return list imag also possibl way orchest case post servic call indep one repositori fecth data pr os sure violat srp co ns creat extra depend post servic might need depend imag repositori unnecesari call databas post repositori return whole graph post imag pr os reduc depend simplifi databas queri co ns might violat srp case writ scenario clear prefer 1st option sinc want keep valid entiti complet segregg read scenario thinkg 2nd option could optim howev find good argument read option better read scenario
c equival log facad java current write librari c wonder log within googl issu came across question make refer log facad anyth equival c
event sourc use databas cdc consid good architectur talk sourc event simpl dual write architectur write databas write event queue like kafka downstream system read event act use accord problem occur tri make db event sync order event requir make sens solv problem peopl encourag use databas commit log sourc event tool build around like airbnb spinal tap redhat debezium oracl golden gate etc solv problem consist order guaranti problem use databas commit log event sourc tight coupl db schema db schema micro servic expos break chang db schema like datatyp chang col name chang actual break downstream system use db cdc event sourc good idea talk problem use debezium event sourc
track state entiti break unit work pattern web app long run oper process entiti background state process visibl client process ui show someth like entiti process finish entiti process first idea model entiti state enum someth like servic method trigger process would someth like typic call control also take care unit work howev store entiti make state known caller seem problemat seem break unit work pattern tackl idea model two distinct unit work updat state commit actual work commit put logic control level need repeat somehow feel part respons servic updat state servic allow bypass unit work direct store chang db probabl would work feel hackish p control simplifi process happen background task conceptu make differ
php mvc approach right one next semest learn mvc pattern web develop sinc look pretti interest decid learn problem surf trough page found two approach mvc pattern php question one right approach guid poin thank
angular provid servic parent child compon recent start dive deeper angular ionic written lot code far child amp parent compon relationship never like tri write good angular code problem face provid child compon need access set provid parent compon question inject set provid child parent constructor inject parent pass child via input
put busi constraint tier architectur web busi model use mvc pattern model code first use ef6 current access db context direct control queri save chang defin relationship constraint model howev mani addit constraint model spread control busi layer part process cleaner way accomplish wherebi busi constraint model enforc use repositori layer past project becom inflex tedious go everyth best world approach wherebi use db context direct queri thing save db ensur busi constraint enforc violat pass back caller edit explain succint want use repositori pattern
migrat anem model rich model look improv overal applic architectur think understand issu anem model caus current architectur control inject servic control action accept dto servic inject repositori servic function take dto call repositori whatev need entiti let say updat properti entiti save wrong setup entiti properti public getter setter encapsul oop code usabl need updat entiti anoth servic method matter write code fix obvious ideal decid would make sens make entiti rich ad updat method allow reus code throughout servic confus confus rich entiti communic servic updat method entiti take entiti repositori paramet call repositori save entiti repositori save call servic need call http api servic specif action happen updat entiti call http api entiti updat method thank ton direct deal
cqrs event log without event sourc tri understand differ event log event store context event sourc realli nice explan found event store singl sourc truth write model event log singl sourc truth read model therefor say want use cqrs without event sourc way understand would event log write model domain object serialis sql databas sql mongo db read model two databas could separ api project communic use rabbit mq basi bad idea use event log use cqrs without event sourc e busi interest replay histor event case system one event accept event log write databas e would contain serial domain object understood correct
ddd modifi multipl entiti multipl aggreg root domain concept billabl activ get log user model pretti straightforward user aggreg root activ collect user activ make sens outsid user rule enforc level process redesign evalu move cqrs es model make sens anoth action happen activ challeng activ sequenc assign auto increment integ sequenc id eventu get batch bill usual base date rang activ sinc sequenc id x due number transact 10k user 20k activ per batch batch base properti intrins activ make sens batch user ar howev act batch activ need record activ impact busi rule user action e g activ edit batch without cqrs es queri activ batch flip status properti possibl user ar manag access activ seem like candid separ bound context still sure right way share activ user batch uncommon use case hope someon tackl offer pointer
c iter iter base class iter inherit learn exam question struggl give answer iter base class exist iter inherit guess teacher refer hierarch structur cpp refer provid reason know iter sort use work contain understand differ possibl under datastructur differ contain differ iter random access array exampl link list differ contain requir differ way move probabl special templat depend contain right
confus command domain event extern event event sourc littl confus command role event sourc distinct domain extern event understand right command repres action initi actor term domain domain event event consum produc aggreg root extern event like dto data contract need translat either domain event command exampl product aggreg root product multipl activ special offer order manag special offer product accept domain event special offer activ special offer deactiv public interfac overload appli method 1st case request come form front end api control first line basic translat caller intent data contract dto domain languag command command sent need command handler event publish time event handler done 2nd case process initi extern event publish servic bus time new promot extern event data contract extern event need translat domain languag command fall back activ special offer command handler fist case case first one basic 3rd case skip domain event layer variat either 1st 2nd case either api extern event command produc simpli creat domain event order appli aggreg root publish event servic bus done 4th case skip command layer variat 1st case easili skip command layer fallback special offer activ domain event handler 5th case aggreg root creation either api extern event command creat new product command produc need anoth handler case realli place stick domain event layer 6th case domain event produc product aggreg root question event layer cool allow us distribut job across multipl instanc microservic howev point command layer could easili produc domain event right away control extern event handler 4th case 3rd case legit creat domain event appli aggreg root without publish command layer make sens 5th case give us benefit deleg product creation anoth microservic domain event layer applic line extern domain event new promot extern event 2nd realli extern event rather domain event produc domain event aggreg root command handler domain event handler extern event handler anoth microservic domain event dispatch anoth micro servic would becom extern event proper way handl product creation special offer activ request come form control extern event
factori design pattern implement multipl interfac base class know lot code tri understand concept factori pattern interfac base class base class car implement interfac implement everi deriv class anoth interfac implement deriv class implement bmw deriv class inherit base class also implement interfac want use factori pattern creat instanc bmw car factori pattern cs work fine return instanc bmw object abl call function base class call bmw function1 c1 object creat factori pattern code base class interfac deriv class new interfac factori pattern class main program call bmw function1 c1 object creat factori pattern c1 object bmw type object function defin class bmw includ interfac function implement bmw
circuit breaker retri repositori applic layer current web app use asp net core domain driven design clean architectur cqrs use mongo db persist develop repositori pattern abstract mongo db implement research prepar applic outag timeout discrep network latenc found circuit breaker retri pattern work well scenario plan use polli librari abstract implement detail implement exponenti back strategi question implement pattern circuit breaker retri use polli applic layer command queri stack repositori direct think repositori applic becom cleaner command queri stack pollut librari case except catch rethrow case mongo except repositori fact one make connectiom databas applic layer command queri stack would need handl except implement detail
migrat demo version project live version net mvc applic applic current use client base feedback client normal fix bug live applic parallel ad new modul demo project plan migrat new modul live test issu fix mani bug live version old modul tri migrat demo live conflict chanc loos code technolog net framework mvc agil methodolog team foundat server
mvc put valid start use mvc week wonder input valid go model data cs control one game control genr control platform control need input valid creat view method control creat method put valid view model control
provid user access credit card transact sorri correct type question ask form even know name concept lack understand basic databas user access model call institut design admin nodej use strapi headless cms wrote logic restrict user access institut model assoic work fine admin one access add remov institut associ user frontend thing transact credit card transact complet succes frontend applic send request server associ institut specif user word frontend privillig first place privillig websit secur anyon could wish broad concept could pleas direct relav name studi know start thank lot advanc
valu object wordi valu object domain use one builder look like method seem wordi tast written method would first one seem descript today id es also mark variabl name would shown like approach use
pass key instead messag recent stood redi server test idea store applic state exist applic never store databas know ultim first time inform avail extern applic notic els speed thru redi crazi idea wonder anyon ever toy point experi paper relat idea system requir messag pass say cqrs exampl store messag data record redi pass key realiz physic boundari affect situat everyth front middl backend access inform anyon ever tri pass key messag think normal object like write fail fail deliveri problem also exist pass fulli flesh messag crazi
entiti includ technic busi relat inform want follow clean architectur rule domain architectur layer problem properti entiti let say user domain busi relat properti like first name last name email mobil phone number etc also properti specif user indirect busi relat exampl busi may want send email custom base os user use interact servic make os version properti user entiti creat applic servic retriev os version base provid user entiti updat supplementari use case use extern provid assign uniqu id user exampl stripe order updat user credit card info need provid strip uniqu id get user regist card stripe id becom part user entiti
asp net core use servic attribut bad practic control asp core mvc tri trim depend inject servic constructor start build unit test easili howev servic inject use one two control action exampl inject locat servic coupl action need lookup countri id number get iso alpha countri code use databas eg map id number ca map us etc asp core support servic attribut option inject locat servic direct two action instead inject control constructor advantag need alway mock inject locat servic control everi unit test clear write unit test servic function depend obvious disadvantag complet obvious clear servic control depend sinc group constructor use servic bad practic strong indic code smell
entiti framework use repositori pattern ask read follow use repositori pattern entiti framework seem larg split peopl say yay say nay seem miss answer concret exampl whether code good reason whatev issu keep read peopl respond say well ef alreadi abstract well great probabl true would use without repositori pattern say otherwis would say otherwis person run made necessari
make lambda concis use enumer general look creat log framework target human readabl output well various structur data format goal minim code duplic packag format function creat librari function use format log entri client iter list process log record order build output string base arbitrari recip discuss lambda seem declar class extend function interfac lot overhead javadoc notwithstand go problem lambda instead collect enumer way reduc number class must ultim defin said way organ lambda e g via name convent packag organ etc avoid verbos see post use lambda process enumer enumer control dynam link lambda strategi object far seen one address viabil use enumer purpos reduc clutter
singleton use accept static singl respons read possibl design pattern found use singleton alway refer anti pattern current use singleton sole purpos gather configur detail base current build environ ini file singleton one public static endpoint variad function take key reach valu intern config class maintain protect instanc setup first time use reus get call intern state class setup intern use instanc unit work find ini file target creat new instanc everi time feel unwis find design fast use everyth read extern seem warn consid bad realli call singleton
decor pattern java object orient design question specif spring boot extend spring boot applic interfac extend use insid anoth servic interfac use depend inject choos implement want chang think inherit design nice spring boot interfac give necessari method implement think decor pattern mix anoth interfac interfac extend implement alreadi work alreadi make sens interfac like interfac give need implement im go mix anoth decor like concret class would class would use decor see unsupport oper except thrown look littl messi howev realli want use adapt pattern deleg abl use spring depend inject author intend hand except look pretti messi recommend also intent use column famili data strategi decor new method could work replac interfac method want touch call code possibl want implement design pattern wrong thing way leav call code alon least thing interfac method still need data base data strategi servic implement data base data strategi servic use data strategi servic continu servic properti data strategi servic aka call code also call column famili data strategi servic also want touch call code decor pattern basic touch littl code possibl
event sourc access refer event sourc architectur typic pattern pass inform relat object aggreg exampl order process system order creat event publish order servic contain product id product assum also product servic first option receiv event call product servic get product second option inform need alreadi event quit clear pros con two approach someon shed light
sometim okay intent violat depend invers principl work refactor class current god class contain differ logic oper sole class one solut extract differ part logic class result orchestr class call separ class execut logic exampl refactor logic place one god class without builder class question first reason approach go problem second bad violat dip exampl trip fee object concret class trip fee builder implement concret abstract interfac thought may okay builder class stabl rare logic function chang chang minor one dip state line trip fee interfac trip fee builder one possibl implement like state like anoth implement trip fee would love thought opinion experi java still novic design thank
messag engin architectur front end orm layer spring look push first quick fix j messag engin product would like know best way bear gist respons follow quick fix j socket initi fix engin connect remot fix server listen incom messag base busi logic choos respond either case save part messag databas initi simpl java applic made spring boot applic take advantag depend inject orm compon spring boot applic basic run engin startup reason chose spring hibern integr easi use engin pars incom messag entiti persist repositori furthermor futur like add front end user abl select busi paramet mean front end direct interact engin hardcod list repres handl front end like angular js suggest welcom help think better way decoupl engin spring applic best way throw front end reason littl confus everi spring applic see layer mean repositori persist data servic busi logic control connect front end case entir fix engin run implement quick fix j applic interfac found make doubt choic spring boot misus way first full stack applic deploy thank
pattern use implement messag rout mechan hope someon give guidanc issu web socket servic singl method server handl traffic lot differ kind messag messag type select handler class use base valu http world would differ method messag type creat messag rout configur e would assum url would contain rout correct method use messag send e g get servic com servic name method websocket world luxuri afford singl websocket per client messag client sent singl method case post still want abl specifi method class handl messag know pattern use achiev best come far use servic locat pattern wherebi would locat correct handler fli someth similar pseudo code top head would use locat post method like fellow comrad thrown fire consid servic locat serious anti pattern hide depend howev desir remov current handler class depend inject servic constructor lead grasp pretti much anyth solv issu plugin messag rout webocket miss would love abl send messag url path handl uniqu method automag main question well known pattern miss would solv woe servic locat pattern wors messag rout seem rout messag method servic base path valu exact servic locat pattern wrong edit believ question differ one ask specif scenario prefer pattern use wherea link question ask make decis pattern use much much broader sens
object composit static function class provid basic function modal window differ situat need provid differ modal differ number button titl etc kind factori compos modal window like exampl approach work howev feel right especi fact need bind callback button static function accept approach compos object fashion static function elabor littl altern solut think creat subclass modal window static function would someth like accept modal window creat modal window etc
generic method transfer dto differ packag contain field servic servic b c put get data servic current servic b c exact dto dto differ packag exampl class packag dto contain thought best keep differ dto futur case chang servic implement differ put get differ dto better way without produc much duplic code
reduc depend ioc framework framework general watch present uncl bob end present last min argu abstract everyth even framework busi logic java ee great job ui abstract jsf technolog databas abstract persist layer jpa even ioc contain framework abstract use standard annot cdi far good framework complet ignor cdi introduc annot bad sign tri coupl framework code prevent uncl bob advic limit use depend inject code use pattern factori method think feasibl approach exampl depend inject need implement servic locat pattern invent well function framework provid life cycl callback thought
pass repositori constructor four project applic ui data model factori past year taught multipl experienc develop pass repositori constructor class especi factori need use repositori call method need ui control pass result factori scenario need valid insid factori valid fail need call method repositori method perform valid check need return string return boolean perform valid check case bite bullet pass repositori miss someth
inform present sub view main window global data chang mvc mvp gui app suppos writ gui desktop applic main window correspond present main window may host one multipl panel also present main window input field user set global option panel sub view need react chang global option user chang global option main present call store valu notifi view main window data chang question inform panel sub view respect control chang global plot durat clean way respect pattern see multipl option none realli feel like clean solut view notifi panel sub view chang gobal option call present problem view handl logic inform panel even though main window control alreadi know sub panel specif main window control object refer panel view object control object id reduc testabl opinion work feel clean could share model main present present panel sub view new panel creat refer main model would pass panel present model would also need observ approach inform present data chang thought typic model emit event data chang mvp present inform panel present chang present would need refer panel present current need would complic data flow bit moment pass panel present main present would unclear panel view creat present panel view creat reaction present notifi view creat new panel may miss approach idea structur better way
benefici softwar engin principl invok use request handler instead control context mvc softwar pattern request handler control singl action control class one action benefici softwar engin principl util use request handler approach build softwar applic compar use control detriment anti pattern principl becom appar use request handler place control
rest model share client server consid two fact typic organ entiti common e g order pos system entiti might complex relat e g order might list item payment method address custom say organ lot rest json micro servic requir data similar kind transfer e g servic might receiv order client send order servic cours fulfil request return payment methdod client mean opportun share model various parti client servic involv case languag obvious languag least under platform might doabl e g java scala possibl java java script might might incur addit cost use common descriptor let assum share easili share would signific decreas time need creat maintain exact model multipl place potenti includ surround code e g valid well let know consid valid assumpt reason question negat share model parti model share mean practic duplic exact entiti least requir subset parti better approach
build mvc framework get instanc databas extend general model class alreadi instanc db tri get databas instanc via model class use databas ideal opinion use depend inject team refus use depend inject option better option get instanc databas direct model need databas option general base class extend model forc use databas must model right
schedul oper micro servic tri realiz servic execut oper certain time oper specifi anoth servic messag scenario servic receiv request creat object servic store object databas everi object oper must execut given time specifi object tri estabilish busi boundari servic b respons execut mention oper role oper creat session access client think like chat room start x time end time attempt follow coreograph architectur would like servic b know oper execut execut accord servic send messag servic b oper execut need execut problem best strategi servic b achiev receiv messag thought solut servic b receiv messag store inform dedic databas servic check everi x time oper execut db affect perform sinc requir continu access queri databas servic b receiv messag start timer execut oper given time reduc oper minimum requir servic fall reason timer would gone would impli write logic restor timer gone alreadi start one know best solut anoth strategi use thank
would command sourc fit better event sourc case follow case regist data sensor let say valu report everi second one hour day 3k valu valu process tri elimin sensor faulti behavior end perform indic calcul base process set data moment step pre process stage handl dedic class act like command elimin unrealist read fill miss read etc command load execut order defin configur file final step calcul perform indic store db like project far understand concept would like start store step pre process stage replay check affect project perform indic fine tune command chang lot data quit expens store chang like done event sourc idea store command instead perhap paramet specif command good approach still event sourc
factori return multipl implement interfac develop attempt refactor class grown larg current class around 3k line long goal refactor make logic maintain class hold valid logic perform various check make sure thing good move next step process current valid function valid class method signatur one idea creat class valid factori give us list valid need run simpl implement valid interfac implement look like factori class accept valid type depend current plan abus ioc contain handl dirti work name regist one concern implement new valid creat develop would need regist factori also ioc contain also smell abus ioc contain get work anti pattern better way thank
cqrs command need work multipl aggreg root busi process receiv order request also includ full custom inform case extern custom id order request found db need process piec creat order command actual save order custom case find match custom id address record db differ one order request need insert new address record custom id mani custom address custom note address also get save part order ship address valu object well chang order point time origin design order aggreg order entiti aggreg root note id properti defin base entiti class aggreg root abstract class also extend omit breviti separ aggreg name custom custom aggreg root custom address entiti time manag add new updat custom data via ui context order howev time custom info actual arriv part order request api sent intern command handler need check alreadi exist mention suspect may aggreg boundari design incorrect sure keep go back forth mind achiev busi requir state use proper cqrs ddd pattern sure treat command handler sort process manag app servic creat multipl transact work w differ aggreg command seem go tenet ddd would appreci guidanc thank
